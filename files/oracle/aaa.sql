CREATE OR REPLACE EDITIONABLE TRIGGER "MDMAPPL"."ACCOUNT_GROUPS_LOCAL_IOF" INSTEAD OF
    INSERT OR DELETE OR UPDATE ON MDMAPPL.MDM_V_ACCOUNT_GROUPS_LOCAL_MTN REFERENCING OLD AS OLD NEW AS NEW
DECLARE
    ERR_UPD_PK EXCEPTION;
    V_SAPINST_NO V_BPA_SAP_USAGES.SAPINST_NO %TYPE;
    CNTR         PLS_INTEGER;
BEGIN
    IF (UPDATING) THEN
        IF :NEW.SAPINST_NO != :OLD.SAPINST_NO OR :NEW.ACCOUNT_GROUP_CD != :OLD.ACCOUNT_GROUP_CD THEN
            RAISE ERR_UPD_PK;
        END IF;
    END IF;

    IF INSERTING THEN
        INSERT INTO CORE.V_ACCOUNT_GROUPS_LOCAL (
            SAPINST_NO,
            ACCOUNT_GROUP_CD,
            ACCOUNT_GROUP_DESC,
            ONE_TIME_ACCOUNT_IND,
            EMPLOYEE_IND,
            NUMBER_RANGE_CD,
            IGNORE_FOR_DNB,
            VALID_IND
        ) VALUES (
            :NEW.SAPINST_NO -- ,v_sapinst_no
,
            :NEW.ACCOUNT_GROUP_CD,
            :NEW.ACCOUNT_GROUP_DESC,
            :NEW.ONE_TIME_ACCOUNT_IND,
            :NEW.EMPLOYEE_IND,
            :NEW.NUMBER_RANGE_CD,
            :NEW.IGNORE_FOR_DNB,
            :NEW.VALID_IND
        );
    ELSIF UPDATING THEN
        UPDATE CORE.V_ACCOUNT_GROUPS_LOCAL
        SET
            EMPLOYEE_IND = :NEW.EMPLOYEE_IND,
            ACCOUNT_GROUP_DESC = :NEW.ACCOUNT_GROUP_DESC,
            ONE_TIME_ACCOUNT_IND = :NEW.ONE_TIME_ACCOUNT_IND,
            IGNORE_FOR_DNB = :NEW.IGNORE_FOR_DNB,
            VALID_IND = :NEW.VALID_IND
        WHERE
            ACCOUNT_GROUP_CD = :NEW.ACCOUNT_GROUP_CD
            AND SAPINST_NO = :NEW.SAPINST_NO;
    ELSIF DELETING THEN
        DELETE FROM CORE.V_ACCOUNT_GROUPS_LOCAL
        WHERE
            ACCOUNT_GROUP_CD = :OLD.ACCOUNT_GROUP_CD
            AND SAPINST_NO = :OLD.SAPINST_NO;
    END IF;
EXCEPTION
    WHEN ERR_UPD_PK THEN
        RAISE_APPLICATION_ERROR(-20112, 'account_groups_local_IOF');
END;

/ ALTER TRIGGER "MDMAPPL"."ACCOUNT_GROUPS_LOCAL_IOF" ENABLE;