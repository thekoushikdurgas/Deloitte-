{
    "on_insert": [
        {
            "type": "sql",
            "sql": "DO $$\nDECLARE\n  V_TRIGGER_NAME varchar(100) := 'COMPANY_ADDRESSES_IOF';\n  CNTR integer;\n  V_USERID varchar(100);\n  V_COUNTRY_CD TEXT;\n  V_COMPANY_TYPE_CD TEXT;\n  V_VALID_FROM TEXT;\n  ERR_UPD EXCEPTION;\n  ERR_INS EXCEPTION;\n  ERR_CTRY_CHG EXCEPTION;\n  ERR_NOT_ALLOWED_TO_INVALIDATE EXCEPTION;\n  TEST_ERR EXCEPTION;\n  ERR_INS_LEGAL_ADDR EXCEPTION;\nBEGIN\n  BEGIN\n    V_USERID := TXO_UTIL.GET_USERID;\n    EXCEPTION\n      WHEN OTHERS THEN\n        V_USERID := USER;\n  END;\n  CNTR := 0;\n  SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = COALESCE(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);\n  IF TRUE THEN\n    IF (CNTR > 0) THEN\n      RAISE EXCEPTION 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button';\n    END IF;\n  END IF;\n  IF ( OR ) THEN\n    SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = COALESCE( :NEW.COMPANY_CD, :OLD.COMPANY_CD);\n    IF (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) THEN\n      RAISE EXCEPTION 'The legal address cannot be inserted for this type of company';\n    END IF;\n    IF (COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) THEN\n      IF (COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) = COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN\n        RAISE EXCEPTION 'The company country modified but not the Valid From Date. Please update also the Valid From Date';\n      END IF;\n      IF (CNTR = 0) THEN\n        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT' );\n      ELSE\n        IF (COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) <> COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN\n          MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'CTRY_CHANGE' );\n          CNTR := 0;\n          SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD AND VALID_IND = 'Y' AND CBC_GBE_SCOPE = 'Y' AND COMPANY_TYPE_CD IN ('B', 'L');\n          IF (:NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0) THEN\n            SELECT COUNTRY_CD INTO V_COUNTRY_CD FROM MDM_V_COUNTRIES WHERE COUNTRY_ID = :NEW.COUNTRY_ID;\n            IF (TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01') THEN\n              V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy');\n            ELSE\n              V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy');\n            END IF;\n            MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_VALID_FROM, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT' );\n            IF (V_COMPANY_TYPE_CD = 'L') THEN\n              FOR V_REC IN (SELECT COMPANY_CD FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND VALID_IND = 'Y' AND CBC_GBE_SCOPE = 'Y' AND COMPANY_TYPE_CD IN ('O', 'V');) LOOP\n                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => V_REC.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_VALID_FROM, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT' );\n              END LOOP;\n            END IF;\n          END IF;\n        ELSE\n          MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'UPDATE' );\n        END IF;\n      END IF;\n    END IF;\n    IF (COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) THEN\n      IF (CNTR = 0) THEN\n        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT' );\n      ELSE\n        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'UPDATE' );\n      END IF;\n    END IF;\n  END IF;\n  IF TRUE THEN\n    IF (COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) THEN\n      RAISE EXCEPTION 'It is not allowed to invalidate/delete this type of address';\n    END IF;\n    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');\n  END IF;\n  EXCEPTION\n    WHEN ERR_UPD THEN\n      RAISE_APPLICATION_ERROR(-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD);\n    WHEN ERR_INS THEN\n      RAISE_APPLICATION_ERROR(-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.');\n    WHEN ERR_CTRY_CHG THEN\n      RAISE_APPLICATION_ERROR(-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.');\n    WHEN TEST_ERR THEN\n      RAISE_APPLICATION_ERROR(-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR);\n    WHEN ERR_INS_LEGAL_ADDR THEN\n      RAISE_APPLICATION_ERROR(-20113, 'The legal address cannot be inserted for this type of company');\n    WHEN ERR_NOT_ALLOWED_TO_INVALIDATE THEN\n      RAISE_APPLICATION_ERROR(-20113, 'It is not allowed to invalidate/delete this type of address');\nEND;\nEND $$;"
        }
    ],
    "on_update": [
        {
            "type": "sql",
            "sql": "DO $$\nDECLARE\n  V_TRIGGER_NAME varchar(100) := 'COMPANY_ADDRESSES_IOF';\n  CNTR integer;\n  V_USERID varchar(100);\n  V_COUNTRY_CD TEXT;\n  V_COMPANY_TYPE_CD TEXT;\n  V_VALID_FROM TEXT;\n  ERR_UPD EXCEPTION;\n  ERR_INS EXCEPTION;\n  ERR_CTRY_CHG EXCEPTION;\n  ERR_NOT_ALLOWED_TO_INVALIDATE EXCEPTION;\n  TEST_ERR EXCEPTION;\n  ERR_INS_LEGAL_ADDR EXCEPTION;\nBEGIN\n  BEGIN\n    V_USERID := TXO_UTIL.GET_USERID;\n    EXCEPTION\n      WHEN OTHERS THEN\n        V_USERID := USER;\n  END;\n  CNTR := 0;\n  SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = COALESCE(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);\n  IF TRUE THEN\n    IF (CNTR > 0) THEN\n      RAISE EXCEPTION 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button';\n    END IF;\n  END IF;\n  IF ( OR ) THEN\n    SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = COALESCE( :NEW.COMPANY_CD, :OLD.COMPANY_CD);\n    IF (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) THEN\n      RAISE EXCEPTION 'The legal address cannot be inserted for this type of company';\n    END IF;\n    IF (COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) THEN\n      IF (COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) = COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN\n        RAISE EXCEPTION 'The company country modified but not the Valid From Date. Please update also the Valid From Date';\n      END IF;\n      IF (CNTR = 0) THEN\n        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT' );\n      ELSE\n        IF (COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) <> COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN\n          MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'CTRY_CHANGE' );\n          CNTR := 0;\n          SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD AND VALID_IND = 'Y' AND CBC_GBE_SCOPE = 'Y' AND COMPANY_TYPE_CD IN ('B', 'L');\n          IF (:NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0) THEN\n            SELECT COUNTRY_CD INTO V_COUNTRY_CD FROM MDM_V_COUNTRIES WHERE COUNTRY_ID = :NEW.COUNTRY_ID;\n            IF (TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01') THEN\n              V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy');\n            ELSE\n              V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy');\n            END IF;\n            MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_VALID_FROM, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT' );\n            IF (V_COMPANY_TYPE_CD = 'L') THEN\n              FOR V_REC IN (SELECT COMPANY_CD FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND VALID_IND = 'Y' AND CBC_GBE_SCOPE = 'Y' AND COMPANY_TYPE_CD IN ('O', 'V');) LOOP\n                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => V_REC.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_VALID_FROM, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT' );\n              END LOOP;\n            END IF;\n          END IF;\n        ELSE\n          MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'UPDATE' );\n        END IF;\n      END IF;\n    END IF;\n    IF (COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) THEN\n      IF (CNTR = 0) THEN\n        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT' );\n      ELSE\n        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'UPDATE' );\n      END IF;\n    END IF;\n  END IF;\n  IF TRUE THEN\n    IF (COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) THEN\n      RAISE EXCEPTION 'It is not allowed to invalidate/delete this type of address';\n    END IF;\n    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');\n  END IF;\n  EXCEPTION\n    WHEN ERR_UPD THEN\n      RAISE_APPLICATION_ERROR(-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD);\n    WHEN ERR_INS THEN\n      RAISE_APPLICATION_ERROR(-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.');\n    WHEN ERR_CTRY_CHG THEN\n      RAISE_APPLICATION_ERROR(-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.');\n    WHEN TEST_ERR THEN\n      RAISE_APPLICATION_ERROR(-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR);\n    WHEN ERR_INS_LEGAL_ADDR THEN\n      RAISE_APPLICATION_ERROR(-20113, 'The legal address cannot be inserted for this type of company');\n    WHEN ERR_NOT_ALLOWED_TO_INVALIDATE THEN\n      RAISE_APPLICATION_ERROR(-20113, 'It is not allowed to invalidate/delete this type of address');\nEND;\nEND $$;"
        }
    ],
    "on_delete": [
        {
            "type": "sql",
            "sql": "DO $$\nDECLARE\n  V_TRIGGER_NAME varchar(100) := 'COMPANY_ADDRESSES_IOF';\n  CNTR integer;\n  V_USERID varchar(100);\n  V_COUNTRY_CD TEXT;\n  V_COMPANY_TYPE_CD TEXT;\n  V_VALID_FROM TEXT;\n  ERR_UPD EXCEPTION;\n  ERR_INS EXCEPTION;\n  ERR_CTRY_CHG EXCEPTION;\n  ERR_NOT_ALLOWED_TO_INVALIDATE EXCEPTION;\n  TEST_ERR EXCEPTION;\n  ERR_INS_LEGAL_ADDR EXCEPTION;\nBEGIN\n  BEGIN\n    V_USERID := TXO_UTIL.GET_USERID;\n    EXCEPTION\n      WHEN OTHERS THEN\n        V_USERID := USER;\n  END;\n  CNTR := 0;\n  SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = COALESCE(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);\n  IF TRUE THEN\n    IF (CNTR > 0) THEN\n      RAISE EXCEPTION 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button';\n    END IF;\n  END IF;\n  IF ( OR ) THEN\n    SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = COALESCE( :NEW.COMPANY_CD, :OLD.COMPANY_CD);\n    IF (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) THEN\n      RAISE EXCEPTION 'The legal address cannot be inserted for this type of company';\n    END IF;\n    IF (COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) THEN\n      IF (COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) = COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN\n        RAISE EXCEPTION 'The company country modified but not the Valid From Date. Please update also the Valid From Date';\n      END IF;\n      IF (CNTR = 0) THEN\n        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT' );\n      ELSE\n        IF (COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) <> COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN\n          MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'CTRY_CHANGE' );\n          CNTR := 0;\n          SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD AND VALID_IND = 'Y' AND CBC_GBE_SCOPE = 'Y' AND COMPANY_TYPE_CD IN ('B', 'L');\n          IF (:NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0) THEN\n            SELECT COUNTRY_CD INTO V_COUNTRY_CD FROM MDM_V_COUNTRIES WHERE COUNTRY_ID = :NEW.COUNTRY_ID;\n            IF (TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01') THEN\n              V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy');\n            ELSE\n              V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy');\n            END IF;\n            MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_VALID_FROM, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT' );\n            IF (V_COMPANY_TYPE_CD = 'L') THEN\n              FOR V_REC IN (SELECT COMPANY_CD FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND VALID_IND = 'Y' AND CBC_GBE_SCOPE = 'Y' AND COMPANY_TYPE_CD IN ('O', 'V');) LOOP\n                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => V_REC.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_VALID_FROM, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT' );\n              END LOOP;\n            END IF;\n          END IF;\n        ELSE\n          MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'UPDATE' );\n        END IF;\n      END IF;\n    END IF;\n    IF (COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) THEN\n      IF (CNTR = 0) THEN\n        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT' );\n      ELSE\n        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'UPDATE' );\n      END IF;\n    END IF;\n  END IF;\n  IF TRUE THEN\n    IF (COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) THEN\n      RAISE EXCEPTION 'It is not allowed to invalidate/delete this type of address';\n    END IF;\n    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');\n  END IF;\n  EXCEPTION\n    WHEN ERR_UPD THEN\n      RAISE_APPLICATION_ERROR(-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD);\n    WHEN ERR_INS THEN\n      RAISE_APPLICATION_ERROR(-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.');\n    WHEN ERR_CTRY_CHG THEN\n      RAISE_APPLICATION_ERROR(-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.');\n    WHEN TEST_ERR THEN\n      RAISE_APPLICATION_ERROR(-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR);\n    WHEN ERR_INS_LEGAL_ADDR THEN\n      RAISE_APPLICATION_ERROR(-20113, 'The legal address cannot be inserted for this type of company');\n    WHEN ERR_NOT_ALLOWED_TO_INVALIDATE THEN\n      RAISE_APPLICATION_ERROR(-20113, 'It is not allowed to invalidate/delete this type of address');\nEND;\nEND $$;"
        }
    ]
}