{
    "on_insert": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE V_COUNTER integer; V_CODE VARCHAR2(2); V_ODG_NO VARCHAR2(2); V_RESGRP_CD VARCHAR2(2); V_RESLIN_CD VARCHAR2(2); V_STATUS_CD VARCHAR2(1); V_DBA_CD integer; V_PORTF_PROJ_CD VARCHAR2(1); V_DESCRIPTION VARCHAR2(500); V_RESLIN_DESC VARCHAR2(60); V_THEME_DESC_LENGTH integer; V_D_REGISTRAT_DATE date; V_D_INS_DATE date; V_FUTURE_REGISTRAT date; V_VALID_TO date; V_USERID VARCHAR2(30); V_IS_ADMIN_CNT integer := '0'; V_SEC_MOL_CNT integer := '0'; V_MOLECULE_ID VARCHAR2(5); V_MOLECULE_RG_NO VARCHAR2(20); V_MOLEC_IN_LIC_PRTNR VARCHAR2(15); V_NEW_RG_NO V_THEME_MOLECULES.RG_NO%TYPE; V_COMPARATOR_IND V_THEME_MOLECULES.COMPARATOR_IND%TYPE; V_THEME_DESC_PROPOSAL MDM_V_THEMES_MTN.THEME_DESC_PROPOSAL%TYPE; V_SHORT_NAME VARCHAR2(30); V_EVOLVED_NMP_CNT integer; V_TRADEMARK_NO V_THEMES.TRADEMARK_NO%TYPE; V_MOLECULE_TYPE_ID V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE; V_PHARMACOLOGICAL_TYPE_ID V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE; BEGIN SELECT COALESCE(TXO_SECURITY.GET_USERID, current_user) INTO V_USERID FROM DUAL; SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID; SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT CAST(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1; IF (:NEW.IN_PREP_IND = 'Y') THEN IF (:NEW.PORTF_PROJ_CD <> 'Y') THEN RAISE EXCEPTION IN_PREP_NOT_PORTF_PROJ; END IF; IF (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) THEN RAISE EXCEPTION IN_PREP_NOT_CLOSED; END IF; IF (:NEW.MOLECULE_ID IS NULL) THEN TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'); END IF; END IF; IF (:NEW.MOLECULE_ID IS NOT NULL) THEN SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y'; IF (V_MOLECULE_RG_NO IS NULL) THEN IF (V_COMPARATOR_IND = 'Y') THEN NULL; END IF; END IF; END IF; V_ODG_NO := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 1, 2); V_RESGRP_CD := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 4, 2); V_RESLIN_CD := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 7, 2); V_RESLIN_DESC := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT)); IF (:NEW.STATUS_DESC IS NOT NULL) THEN SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC; END IF; IF (:NEW.DBA_DESC_CONCAT IS NOT NULL) THEN SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT; END IF; V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID); IF (:NEW.OFFICIAL_IND = 'N') THEN V_TRADEMARK_NO := :NEW.TRADEMARK_NO; END IF; V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N'); IF (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) THEN RAISE EXCEPTION THEME_DESC_PROPOSAL_TOO_LONG; END IF; V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL); IF TRUE THEN IF (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) THEN RAISE EXCEPTION ADMIN_UPDATE_ONLY; END IF; V_MOLECULE_ID := :NEW.MOLECULE_ID; IF (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) THEN IF (COALESCE(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) THEN RAISE EXCEPTION PORTF_PROJ_MOL_CRE_ERR; END IF; END IF; CASE LENGTH(:NEW.THEME_NO) WHEN 4 THEN IF (SUBSTRING(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTRING(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTRING(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTRING(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) THEN RAISE EXCEPTION INVALID_THEME_NO; END IF; WHEN 5 THEN IF (SUBSTRING(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTRING(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTRING(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTRING(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTRING(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) THEN RAISE EXCEPTION INVALID_THEME_NO; END IF; ELSE RAISE EXCEPTION INVALID_THEME_NO; END CASE; V_COUNTER := NULL; SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SELECT THEME_NO FROM V_THEMES UNION ALL SELECT THEME_NO FROM GMD.THEMES_ARCHIVE )                  T WHERE T.THEME_NO = :NEW.THEME_NO; IF (V_COUNTER > 0) THEN RAISE EXCEPTION THEME_NO_CANNOT_BE_INSERTED; END IF; V_COUNTER := NULL; V_D_REGISTRAT_DATE := CURRENT_TIMESTAMP; IF (:NEW.OFFICIAL_IND = 'N') THEN RAISE EXCEPTION INSERTSMUSTBEOFFICIAL; END IF; IF (UPPER(:NEW.PORTF_PROJ_CD) = 'N') THEN IF (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) THEN RAISE EXCEPTION THEMEDESCRIPTIONMANDATORY; END IF; END IF; IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') THEN V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' ); IF (LENGTH(V_DESCRIPTION) > 90) THEN RAISE EXCEPTION DESCRIPTION_TOO_LONG; END IF; V_DESCRIPTION := TRIM(V_DESCRIPTION); V_PORTF_PROJ_CD := 'Y'; END IF; V_COUNTER := NULL; SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION; IF (V_COUNTER > 0) THEN RAISE EXCEPTION THEME_DESC_NOT_UNIQUE; END IF; V_COUNTER := NULL; V_VALID_TO := TO_TIMESTAMP('09.09.9999', 'DD.MM.YYYY'); V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, SUBSTRING(V_DESCRIPTION, 1, 30)); INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ODG_NO, RESGRP_CD, RESLIN_CD, THEME_DESC, SHORT_NAME, STATUS_CD, DBA_CD, IN_PREP_IND, PROD_SHORT_CD, TRADEMARK_NO, BIO_ACTIVITY, APPLICANT, CONTACT, REGISTRAR, LINE_EXT_INFO, PORTF_PROJ_CD, CO_DEV_PRTNR, TECHNOLOGY_PRTNR, OFFICIAL_IND, CO_MAR_PRTNR, VALID_TO, PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC ) VALUES ( :NEW.THEME_NO, V_D_REGISTRAT_DATE, V_ODG_NO, V_RESGRP_CD, V_RESLIN_CD, V_DESCRIPTION, V_SHORT_NAME, V_STATUS_CD, V_DBA_CD, :NEW.IN_PREP_IND, :NEW.PROD_SHORT_CD, :NEW.TRADEMARK_NO, :NEW.BIO_ACTIVITY, :NEW.APPLICANT, :NEW.CONTACT, TXO_UTIL.GET_USERID, :NEW.LINE_EXT_INFO, V_PORTF_PROJ_CD, :NEW.CO_DEV_PRTNR, :NEW.TECHNOLOGY_PRTNR, :NEW.OFFICIAL_IND, :NEW.CO_MAR_PRTNR, V_VALID_TO, :NEW.PORTF_DA_GROUP_ID, :NEW.MANUAL_SHORT_DESC ); IF (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) THEN INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' ); END IF; END IF; IF ( OR ) THEN IF (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) THEN SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E'; IF (V_EVOLVED_NMP_CNT = 0) THEN UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID; END IF; END IF; IF (COALESCE(:NEW.PROPOSAL_ID, 0) = COALESCE(:OLD.PROPOSAL_ID, 0) AND COALESCE(:OLD.SHORT_NAME, '-') <> COALESCE(V_SHORT_NAME, '-')) THEN SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E'; IF (V_EVOLVED_NMP_CNT > 0) THEN UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E'; END IF; END IF; END IF; IF ( AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y') THEN IF (:NEW.PROPOSAL_ID IS NOT NULL) THEN SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E'; END IF; IF (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) THEN IF (:NEW.MOLECULE_ID IS NOT NULL) THEN SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y'; END IF; INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, COALESCE(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), COALESCE(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' ); END IF; END IF; FOR I1 IN ( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= DATE_TRUNC(CURRENT_TIMESTAMP) ) LOOP END LOOP; END; $$ LANGUAGE plpgsql;"
        }
    ],
    "on_update": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE V_COUNTER integer; V_CODE VARCHAR2(2); V_ODG_NO VARCHAR2(2); V_RESGRP_CD VARCHAR2(2); V_RESLIN_CD VARCHAR2(2); V_STATUS_CD VARCHAR2(1); V_DBA_CD integer; V_PORTF_PROJ_CD VARCHAR2(1); V_DESCRIPTION VARCHAR2(500); V_RESLIN_DESC VARCHAR2(60); V_THEME_DESC_LENGTH integer; V_D_REGISTRAT_DATE date; V_D_INS_DATE date; V_FUTURE_REGISTRAT date; V_VALID_TO date; V_USERID VARCHAR2(30); V_IS_ADMIN_CNT integer := '0'; V_SEC_MOL_CNT integer := '0'; V_MOLECULE_ID VARCHAR2(5); V_MOLECULE_RG_NO VARCHAR2(20); V_MOLEC_IN_LIC_PRTNR VARCHAR2(15); V_NEW_RG_NO V_THEME_MOLECULES.RG_NO%TYPE; V_COMPARATOR_IND V_THEME_MOLECULES.COMPARATOR_IND%TYPE; V_THEME_DESC_PROPOSAL MDM_V_THEMES_MTN.THEME_DESC_PROPOSAL%TYPE; V_SHORT_NAME VARCHAR2(30); V_EVOLVED_NMP_CNT integer; V_TRADEMARK_NO V_THEMES.TRADEMARK_NO%TYPE; V_MOLECULE_TYPE_ID V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE; V_PHARMACOLOGICAL_TYPE_ID V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE; BEGIN SELECT COALESCE(TXO_SECURITY.GET_USERID, current_user) INTO V_USERID FROM DUAL; SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID; SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT CAST(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1; IF (:NEW.IN_PREP_IND = 'Y') THEN IF (:NEW.PORTF_PROJ_CD <> 'Y') THEN RAISE EXCEPTION IN_PREP_NOT_PORTF_PROJ; END IF; IF (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) THEN RAISE EXCEPTION IN_PREP_NOT_CLOSED; END IF; IF (:NEW.MOLECULE_ID IS NULL) THEN TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'); END IF; END IF; IF (:NEW.MOLECULE_ID IS NOT NULL) THEN SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y'; IF (V_MOLECULE_RG_NO IS NULL) THEN IF (V_COMPARATOR_IND = 'Y') THEN NULL; END IF; END IF; END IF; V_ODG_NO := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 1, 2); V_RESGRP_CD := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 4, 2); V_RESLIN_CD := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 7, 2); V_RESLIN_DESC := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT)); IF (:NEW.STATUS_DESC IS NOT NULL) THEN SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC; END IF; IF (:NEW.DBA_DESC_CONCAT IS NOT NULL) THEN SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT; END IF; V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID); IF (:NEW.OFFICIAL_IND = 'N') THEN V_TRADEMARK_NO := :NEW.TRADEMARK_NO; END IF; V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N'); IF (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) THEN RAISE EXCEPTION THEME_DESC_PROPOSAL_TOO_LONG; END IF; V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL); IF TRUE THEN IF (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 THEN RAISE EXCEPTION ADMIN_UPDATE_ONLY; END IF; IF (:NEW.THEME_NO <> :OLD.THEME_NO) THEN RAISE EXCEPTION THEME_NO_ONLY_INSERT; END IF; IF (:NEW.OFFICIAL_IND = 'N') THEN V_D_REGISTRAT_DATE := TO_TIMESTAMP(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy'); END IF; IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) THEN V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' ); V_DESCRIPTION := TRIM(V_DESCRIPTION); V_PORTF_PROJ_CD := 'Y'; END IF; IF (LENGTH(V_DESCRIPTION) > 90) THEN RAISE EXCEPTION DESCRIPTION_TOO_LONG; END IF; V_COUNTER := NULL; SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO; IF (V_COUNTER > 0) THEN RAISE EXCEPTION THEME_DESC_NOT_UNIQUE; END IF; V_COUNTER := NULL; IF (:NEW.OFFICIAL_IND = 'N') THEN UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_TIMESTAMP(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE; END IF; CASE WHEN :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL THEN INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' ); WHEN :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL THEN UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y'; WHEN :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL THEN SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y'; IF (V_SEC_MOL_CNT > 0) THEN RAISE EXCEPTION SEC_MOL_LIST_NOT_EMPTY; END IF; ELSE NULL; END CASE; END IF; IF ( OR ) THEN IF (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) THEN SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E'; IF (V_EVOLVED_NMP_CNT = 0) THEN UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID; END IF; END IF; IF (COALESCE(:NEW.PROPOSAL_ID, 0) = COALESCE(:OLD.PROPOSAL_ID, 0) AND COALESCE(:OLD.SHORT_NAME, '-') <> COALESCE(V_SHORT_NAME, '-')) THEN SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E'; IF (V_EVOLVED_NMP_CNT > 0) THEN UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E'; END IF; END IF; END IF; FOR I1 IN ( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= DATE_TRUNC(CURRENT_TIMESTAMP) ) LOOP END LOOP; END; $$ LANGUAGE plpgsql;"
        }
    ],
    "on_delete": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE V_COUNTER integer; V_CODE VARCHAR2(2); V_ODG_NO VARCHAR2(2); V_RESGRP_CD VARCHAR2(2); V_RESLIN_CD VARCHAR2(2); V_STATUS_CD VARCHAR2(1); V_DBA_CD integer; V_PORTF_PROJ_CD VARCHAR2(1); V_DESCRIPTION VARCHAR2(500); V_RESLIN_DESC VARCHAR2(60); V_THEME_DESC_LENGTH integer; V_D_REGISTRAT_DATE date; V_D_INS_DATE date; V_FUTURE_REGISTRAT date; V_VALID_TO date; V_USERID VARCHAR2(30); V_IS_ADMIN_CNT integer := '0'; V_SEC_MOL_CNT integer := '0'; V_MOLECULE_ID VARCHAR2(5); V_MOLECULE_RG_NO VARCHAR2(20); V_MOLEC_IN_LIC_PRTNR VARCHAR2(15); V_NEW_RG_NO V_THEME_MOLECULES.RG_NO%TYPE; V_COMPARATOR_IND V_THEME_MOLECULES.COMPARATOR_IND%TYPE; V_THEME_DESC_PROPOSAL MDM_V_THEMES_MTN.THEME_DESC_PROPOSAL%TYPE; V_SHORT_NAME VARCHAR2(30); V_EVOLVED_NMP_CNT integer; V_TRADEMARK_NO V_THEMES.TRADEMARK_NO%TYPE; V_MOLECULE_TYPE_ID V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE; V_PHARMACOLOGICAL_TYPE_ID V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE; BEGIN SELECT COALESCE(TXO_SECURITY.GET_USERID, current_user) INTO V_USERID FROM DUAL; SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID; SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT CAST(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1; IF (:NEW.IN_PREP_IND = 'Y') THEN IF (:NEW.PORTF_PROJ_CD <> 'Y') THEN RAISE EXCEPTION IN_PREP_NOT_PORTF_PROJ; END IF; IF (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) THEN RAISE EXCEPTION IN_PREP_NOT_CLOSED; END IF; IF (:NEW.MOLECULE_ID IS NULL) THEN TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'); END IF; END IF; IF (:NEW.MOLECULE_ID IS NOT NULL) THEN SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y'; IF (V_MOLECULE_RG_NO IS NULL) THEN IF (V_COMPARATOR_IND = 'Y') THEN NULL; END IF; END IF; END IF; V_ODG_NO := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 1, 2); V_RESGRP_CD := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 4, 2); V_RESLIN_CD := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 7, 2); V_RESLIN_DESC := SUBSTRING(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT)); IF (:NEW.STATUS_DESC IS NOT NULL) THEN SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC; END IF; IF (:NEW.DBA_DESC_CONCAT IS NOT NULL) THEN SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT; END IF; V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID); IF (:NEW.OFFICIAL_IND = 'N') THEN V_TRADEMARK_NO := :NEW.TRADEMARK_NO; END IF; V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N'); IF (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) THEN RAISE EXCEPTION THEME_DESC_PROPOSAL_TOO_LONG; END IF; V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL); IF TRUE THEN IF ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) THEN RAISE EXCEPTION ADMIN_UPDATE_ONLY; END IF; IF (DATE_TRUNC(TO_TIMESTAMP(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = DATE_TRUNC(CURRENT_TIMESTAMP)) THEN DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND DATE_TRUNC(A.REGISTRAT_DATE) = DATE_TRUNC(CURRENT_TIMESTAMP); END IF; END IF; FOR I1 IN ( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= DATE_TRUNC(CURRENT_TIMESTAMP) ) LOOP END LOOP; END; $$ LANGUAGE plpgsql;"
        }
    ]
}