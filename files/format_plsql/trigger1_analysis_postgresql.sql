CREATE OR REPLACE FUNCTION trigger_function()
RETURNS TRIGGER AS $$
DECLARE
   INVALID_THEME_NO EXCEPTION;
   DELETE_NO_MORE_POSSIBLE EXCEPTION;
   THEME_NO_ONLY_INSERT EXCEPTION;
   DESCRIPTION_TOO_LONG EXCEPTION;
   THEME_DESC_PROPOSAL_TOO_LONG EXCEPTION;
   THEME_DESC_ALT_TOO_LONG EXCEPTION;
   THEME_NO_CANNOT_BE_INSERTED EXCEPTION;
   ONLYONEOFFICIALCHANGEPERDAY EXCEPTION;
   INSERTSMUSTBEOFFICIAL EXCEPTION;
   THEMEDESCRIPTIONMANDATORY EXCEPTION;
   THEME_DESC_NOT_UNIQUE EXCEPTION;
   IN_PREP_NOT_PORTF_PROJ EXCEPTION;
   IN_PREP_NOT_CLOSED EXCEPTION;
   INVALID_MOLECULE_ID EXCEPTION;
   SEC_MOL_LIST_NOT_EMPTY EXCEPTION;
   ADMIN_UPDATE_ONLY EXCEPTION;
   PORTF_PROJ_MOL_CRE_ERR EXCEPTION;
   DEBUGGING EXCEPTION;

   C_MOLECULE_TYPE_ID CONSTANT TEXT := 99;
   C_PHARMACOLOGICAL_TYPE_ID CONSTANT TEXT := 19;

   V_COUNTER INTEGER;
   V_CODE VARCHAR(2);
   V_ODG_NO VARCHAR(2);
   V_RESGRP_CD VARCHAR(2);
   V_RESLIN_CD VARCHAR(2);
   V_STATUS_CD VARCHAR(1);
   V_DBA_CD INTEGER;
   V_PORTF_PROJ_CD VARCHAR(1);
   V_DESCRIPTION VARCHAR(500);
   V_RESLIN_DESC VARCHAR(60);
   V_THEME_DESC_LENGTH INTEGER;
   V_D_REGISTRAT_DATE TIMESTAMP;
   V_D_INS_DATE TIMESTAMP;
   V_FUTURE_REGISTRAT TIMESTAMP;
   V_VALID_TO TIMESTAMP;
   V_USERID VARCHAR(30);
   V_IS_ADMIN_CNT INTEGER := 0;
   V_SEC_MOL_CNT INTEGER := 0;
   V_MOLECULE_ID VARCHAR(5);
   V_MOLECULE_RG_NO VARCHAR(20);
   V_MOLEC_IN_LIC_PRTNR VARCHAR(15);
   V_NEW_RG_NO TEXT;
   V_COMPARATOR_IND TEXT;
   V_THEME_DESC_PROPOSAL TEXT;
   V_SHORT_NAME VARCHAR(30);
   V_EVOLVED_NMP_CNT INTEGER;
   V_TRADEMARK_NO TEXT;
   V_MOLECULE_TYPE_ID TEXT;
   V_PHARMACOLOGICAL_TYPE_ID TEXT;
BEGIN
BEGIN
   SELECT COALESCE(CURRENT_USER, CURRENT_USER) INTO V_USERID ;
   SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID;
   SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROW_NUMBER() OVER() AS NEW_RG_NO  WITH RECURSIVE 1 = 1 AND ROW_NUMBER() OVER() <= 6999 ) WHERE NEW_RG_NO > 5999 EXCEPT SELECT CAST(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROW_NUMBER() OVER() = 1;
   IF  (:NEW.IN_PREP_IND = 'Y')  THEN
      IF  (:NEW.PORTF_PROJ_CD <> 'Y')  THEN
         RAISE EXCEPTION 'IN_PREP_NOT_PORTF_PROJ';
      END IF;
      IF  (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0)  THEN
         RAISE EXCEPTION 'IN_PREP_NOT_CLOSED';
      END IF;
      IF  (:NEW.MOLECULE_ID IS NULL)  THEN
         RAISE WARNING 'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!';
      END IF;
   END IF;
   IF  (:NEW.MOLECULE_ID IS NOT NULL)  THEN
      BEGIN
         SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            RAISE EXCEPTION 'INVALID_MOLECULE_ID';
      END;
      IF  (V_MOLECULE_RG_NO IS NULL)  THEN
         IF  (V_COMPARATOR_IND = 'Y')  THEN
            NULL;
         ELSE
            UPDATE V_THEME_MOLECULES SET RG_NO = V_NEW_RG_NO WHERE MOLECULE_ID = :NEW.MOLECULE_ID;
            V_BONUS := CASE WHEN :NEW.salary > 50000 THEN :NEW.salary * 0.1 ELSE 0 END;
         END IF;
      END IF;
   END IF;
   V_ODG_NO := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);
   V_RESGRP_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);
   V_RESLIN_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);
   V_RESLIN_DESC := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));
   IF  (:NEW.STATUS_DESC IS NOT NULL)  THEN
      SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;
   ELSE
      V_STATUS_CD := NULL;
   END IF;
   IF  (:NEW.DBA_DESC_CONCAT IS NOT NULL)  THEN
      SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;
   ELSE
      V_DBA_CD := NULL;
   END IF;
   V_MOLEC_IN_LIC_PRTNR := get_molec_in_lic_prtnr(:NEW.MOLECULE_ID);
   IF  (:NEW.OFFICIAL_IND = 'N')  THEN
      V_TRADEMARK_NO := :NEW.TRADEMARK_NO;
   ELSE
      V_TRADEMARK_NO := :OLD.TRADEMARK_NO;
   END IF;
   V_THEME_DESC_PROPOSAL := get_theme_short_name(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');
   IF  (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30)  THEN
      RAISE EXCEPTION 'THEME_DESC_PROPOSAL_TOO_LONG';
   END IF;
   V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);
   IF  (INSERTING)  THEN
      IF  (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0)  THEN
         RAISE EXCEPTION 'ADMIN_UPDATE_ONLY';
      END IF;
      V_MOLECULE_ID := :NEW.MOLECULE_ID;
      IF  (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL)  THEN
         IF  (COALESCE(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL)  THEN
            RAISE EXCEPTION 'PORTF_PROJ_MOL_CRE_ERR';
         ELSE
            INSERT INTO MDM_V_THEME_MOLECULES_MTN( MOLECULE_DESC, VALID_IND, RG_NO, CANCER_IMMUNOTHERAPY_IND, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID ) VALUES ( COALESCE(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL), 'Y', V_NEW_RG_NO, 'N', C_MOLECULE_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID );
            SELECT MOLECULE_ID INTO V_MOLECULE_ID FROM V_THEME_MOLECULES WHERE MOLECULE_DESC = COALESCE(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) AND VALID_IND = 'Y' AND RG_NO = V_NEW_RG_NO AND CANCER_IMMUNOTHERAPY_IND = 'N' AND MOLECULE_TYPE_ID = C_MOLECULE_TYPE_ID AND PHARMACOLOGICAL_TYPE_ID = C_PHARMACOLOGICAL_TYPE_ID;
            INSERT INTO THEME_MOLECULE_MAP TMMAP( TMMAP.THEME_NO, TMMAP.MOLECULE_ID, TMMAP.MOLECULE_SEQ_NO, TMMAP.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );
         END IF;
      END IF;
      CASE  LENGTH(:NEW.THEME_NO)
      WHEN 4 THEN
         IF  (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9)  THEN
            RAISE EXCEPTION 'INVALID_THEME_NO';
         END IF;
      WHEN 5 THEN
         IF  (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9)  THEN
            RAISE EXCEPTION 'INVALID_THEME_NO';
         END IF;
      ELSE
         RAISE EXCEPTION 'INVALID_THEME_NO';
      END CASE;
      V_COUNTER := NULL;
      SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SELECT THEME_NO FROM V_THEMES UNION ALL SELECT THEME_NO FROM GMD.THEMES_ARCHIVE )                  T WHERE T.THEME_NO = :NEW.THEME_NO;
      IF  (V_COUNTER > 0)  THEN
         RAISE EXCEPTION 'THEME_NO_CANNOT_BE_INSERTED';
      END IF;
      V_COUNTER := NULL;
      V_D_REGISTRAT_DATE := CURRENT_TIMESTAMP;
      IF  (:NEW.OFFICIAL_IND = 'N')  THEN
         RAISE EXCEPTION 'INSERTSMUSTBEOFFICIAL';
      END IF;
      IF  (UPPER(:NEW.PORTF_PROJ_CD) = 'N')  THEN
         IF  (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0)  THEN
            RAISE EXCEPTION 'THEMEDESCRIPTIONMANDATORY';
         END IF;
      END IF;
      IF  (UPPER(:NEW.PORTF_PROJ_CD) = 'Y')  THEN
         V_DESCRIPTION := get_theme_desc_portfolio( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );
         IF  (LENGTH(V_DESCRIPTION) > 90)  THEN
            RAISE EXCEPTION 'DESCRIPTION_TOO_LONG';
         END IF;
         V_DESCRIPTION := TRIM(V_DESCRIPTION);
         V_PORTF_PROJ_CD := 'Y';
      ELSE
         V_DESCRIPTION := :NEW.THEME_DESC;
         V_PORTF_PROJ_CD := 'N';
      END IF;
      V_COUNTER := NULL;
      SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION;
      IF  (V_COUNTER > 0)  THEN
         RAISE EXCEPTION 'THEME_DESC_NOT_UNIQUE';
      END IF;
      V_COUNTER := NULL;
      V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY');
      V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));
      INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ODG_NO, RESGRP_CD, RESLIN_CD, THEME_DESC, SHORT_NAME, STATUS_CD, DBA_CD, IN_PREP_IND, PROD_SHORT_CD, TRADEMARK_NO, BIO_ACTIVITY, APPLICANT, CONTACT, REGISTRAR, LINE_EXT_INFO, PORTF_PROJ_CD, CO_DEV_PRTNR, TECHNOLOGY_PRTNR, OFFICIAL_IND, CO_MAR_PRTNR, VALID_TO, PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC ) VALUES ( :NEW.THEME_NO, V_D_REGISTRAT_DATE, V_ODG_NO, V_RESGRP_CD, V_RESLIN_CD, V_DESCRIPTION, V_SHORT_NAME, V_STATUS_CD, V_DBA_CD, :NEW.IN_PREP_IND, :NEW.PROD_SHORT_CD, :NEW.TRADEMARK_NO, :NEW.BIO_ACTIVITY, :NEW.APPLICANT, :NEW.CONTACT, TXO_UTIL.GET_USERID, :NEW.LINE_EXT_INFO, V_PORTF_PROJ_CD, :NEW.CO_DEV_PRTNR, :NEW.TECHNOLOGY_PRTNR, :NEW.OFFICIAL_IND, :NEW.CO_MAR_PRTNR, V_VALID_TO, :NEW.PORTF_DA_GROUP_ID, :NEW.MANUAL_SHORT_DESC );
      IF  (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL)  THEN
         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );
      END IF;
   ELSIF (UPDATING) THEN
      IF  (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0  THEN
         RAISE EXCEPTION 'ADMIN_UPDATE_ONLY';
      END IF;
      IF  (:NEW.THEME_NO <> :OLD.THEME_NO)  THEN
         RAISE EXCEPTION 'THEME_NO_ONLY_INSERT';
      END IF;
      IF  (:NEW.OFFICIAL_IND = 'N')  THEN
         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');
      ELSE
         V_D_REGISTRAT_DATE := CURRENT_TIMESTAMP;
      END IF;
      IF  (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD)  THEN
         V_DESCRIPTION := get_theme_desc_portfolio( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );
         V_DESCRIPTION := TRIM(V_DESCRIPTION);
         V_PORTF_PROJ_CD := 'Y';
      ELSE
         IF  (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0)  THEN
            RAISE EXCEPTION 'THEMEDESCRIPTIONMANDATORY';
         ELSE
            V_DESCRIPTION := :NEW.THEME_DESC;
            V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD;
         END IF;
      END IF;
      IF  (LENGTH(V_DESCRIPTION) > 90)  THEN
         RAISE EXCEPTION 'DESCRIPTION_TOO_LONG';
      END IF;
      V_COUNTER := NULL;
      SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO;
      IF  (V_COUNTER > 0)  THEN
         RAISE EXCEPTION 'THEME_DESC_NOT_UNIQUE';
      END IF;
      V_COUNTER := NULL;
      IF  (:NEW.OFFICIAL_IND = 'N')  THEN
         UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;
      ELSE
         V_COUNTER := NULL;
         SELECT COUNT(*) INTO V_COUNTER FROM V_THEMES T WHERE TRUNC(T.REGISTRAT_DATE) = TRUNC(CURRENT_TIMESTAMP) AND T.THEME_NO = :NEW.THEME_NO;
         IF  (V_COUNTER > 0)  THEN
            RAISE EXCEPTION 'ONLYONEOFFICIALCHANGEPERDAY';
         END IF;
         V_COUNTER := NULL;
         UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, REGISTRAT_DATE = CURRENT_TIMESTAMP, REGISTRAR = V_USERID, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO;
      END IF;
      CASE
      WHEN :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL THEN
         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );
      WHEN :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL THEN
         UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';
      WHEN :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL THEN
         SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';
         IF  (V_SEC_MOL_CNT > 0)  THEN
            RAISE EXCEPTION 'SEC_MOL_LIST_NOT_EMPTY';
         ELSE
            UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.VALID_IND = 'N' WHERE A.MOLECULE_ID = :OLD.MOLECULE_ID AND A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';
         END IF;
      ELSE
         NULL;
      END CASE;
   END IF;
   IF  (INSERTING OR UPDATING)  THEN
      IF  (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL)  THEN
         SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';
         IF  (V_EVOLVED_NMP_CNT = 0)  THEN
            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;
         END IF;
      ELSE
         IF  (:NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL)  THEN
            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'A', EVOLVED_THEME_NO = NULL WHERE PROPOSAL_ID = :OLD.PROPOSAL_ID;
         ELSE
            IF  (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID)  THEN
               UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'A', EVOLVED_THEME_NO = NULL WHERE PROPOSAL_ID = :OLD.PROPOSAL_ID;
               UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;
            END IF;
         END IF;
      END IF;
      IF  (COALESCE(:NEW.PROPOSAL_ID, 0) = COALESCE(:OLD.PROPOSAL_ID, 0) AND COALESCE(:OLD.SHORT_NAME, '-') <> COALESCE(V_SHORT_NAME, '-'))  THEN
         SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';
         IF  (V_EVOLVED_NMP_CNT > 0)  THEN
            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';
         END IF;
      END IF;
   END IF;
   IF  (INSERTING AND :NEW.THEME_NO IS NOT NULL AND get_themes_range_automatic_nmp(:NEW.THEME_NO) = 'Y')  THEN
      IF  (:NEW.PROPOSAL_ID IS NOT NULL)  THEN
         SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';
      END IF;
      IF  (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0))  THEN
         IF  (:NEW.MOLECULE_ID IS NOT NULL)  THEN
            BEGIN
               SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';
            EXCEPTION
               WHEN NO_DATA_FOUND THEN
                  RAISE EXCEPTION 'INVALID_MOLECULE_ID';
            END;
         END IF;
         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, COALESCE(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), COALESCE(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );
      END IF;
   END IF;
EXCEPTION
   WHEN ADMIN_UPDATE_ONLY THEN
      RAISE EXCEPTION -20115, 'MDM_V_THEMES_IOF';
   WHEN IN_PREP_NOT_PORTF_PROJ THEN
      RAISE EXCEPTION -20116, 'MDM_V_THEMES_IOF';
   WHEN IN_PREP_NOT_CLOSED THEN
      RAISE EXCEPTION -20117, 'MDM_V_THEMES_IOF';
   WHEN INVALID_MOLECULE_ID THEN
      RAISE EXCEPTION -20118, 'This is not a valid Molecule ID';
   WHEN SEC_MOL_LIST_NOT_EMPTY THEN
      RAISE EXCEPTION -20119, 'MDM_V_THEMES_IOF';
   WHEN INVALID_THEME_NO THEN
      RAISE EXCEPTION -20101, 'This is not a valid Theme No';
   WHEN DELETE_NO_MORE_POSSIBLE THEN
      RAISE EXCEPTION -20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted';
   WHEN THEME_NO_ONLY_INSERT THEN
      RAISE EXCEPTION -20400, 'Theme No cannot be updated';
   WHEN DESCRIPTION_TOO_LONG THEN
      RAISE EXCEPTION -20400, 'The automatically generated Theme Description "' || V_DESCRIPTION || '" is too long';
   WHEN THEME_DESC_PROPOSAL_TOO_LONG THEN
      RAISE EXCEPTION -20400, 'The automatically generated Short Description Proposal "' || :OLD.THEME_DESC_PROPOSAL || '" is too long';
   WHEN THEME_DESC_ALT_TOO_LONG THEN
      RAISE EXCEPTION -20400, 'The automatically generated Downstream Theme Description "' || :OLD.THEME_DESC_ALT || '" is too long';
   WHEN THEME_NO_CANNOT_BE_INSERTED THEN
      RAISE EXCEPTION -20400, 'This Theme No already exists';
   WHEN ONLYONEOFFICIALCHANGEPERDAY THEN
      RAISE EXCEPTION -20400, 'Official Change for this Theme No and Day already exists';
   WHEN INSERTSMUSTBEOFFICIAL THEN
      RAISE EXCEPTION -20400, 'New Themes can only be inserted by Official Changes';
   WHEN THEMEDESCRIPTIONMANDATORY THEN
      RAISE EXCEPTION -20400, 'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled';
   WHEN THEME_DESC_NOT_UNIQUE THEN
      RAISE EXCEPTION -20400, 'This Theme Description already exists';
   WHEN PORTF_PROJ_MOL_CRE_ERR THEN
      RAISE EXCEPTION -20120, 'MDM_V_THEMES_IOF';
   WHEN DEBUGGING THEN
      RAISE EXCEPTION -20900, 'Debug in Themes IOF standard';
END;
END;
$$ LANGUAGE plpgsql;

-- Create the trigger
CREATE TRIGGER trigger_name
    BEFORE INSERT OR UPDATE OR DELETE ON table_name
    FOR EACH ROW
    EXECUTE FUNCTION trigger_function();