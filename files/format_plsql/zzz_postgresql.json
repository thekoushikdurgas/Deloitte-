{
    "on_insert": [
        {
            "type": "sql",
            "sql": "DO $$\nDECLARE\n  V_TRIGGER_NAME varchar(100) := 'COMPANY_ADDRESSES_IOF';\n  CNTR integer;\n  V_USERID varchar(100);\n  V_COUNTRY_CD TEXT;\n  V_COMPANY_TYPE_CD TEXT;\n  V_VALID_FROM TEXT;\n  ERR_UPD EXCEPTION;\n  ERR_INS EXCEPTION;\n  ERR_CTRY_CHG EXCEPTION;\n  ERR_NOT_ALLOWED_TO_INVALIDATE EXCEPTION;\n  TEST_ERR EXCEPTION;\n  ERR_INS_LEGAL_ADDR EXCEPTION;\nBEGIN\n  BEGIN\n    EXCEPTION\n      WHEN OTHERS THEN\n  END;\n  SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = COALESCE(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);\n  IF TRUE THEN\n    IF CNTR > 0 THEN\n      RAISE EXCEPTION 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button';\n    END IF;\n  END IF;\n  IF TRUE THEN\n    SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = COALESCE( :NEW.COMPANY_CD, :OLD.COMPANY_CD);\n    IF V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L') THEN\n      RAISE EXCEPTION 'The legal address cannot be inserted for this type of company';\n    END IF;\n    IF COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L') THEN\n      IF COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) = COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID THEN\n        RAISE EXCEPTION 'The company country modified but not the Valid From Date. Please update also the Valid From Date';\n      END IF;\n      IF CNTR = 0 THEN\n        PERFORM mdm_util_addresses.modify_company_address();\n      ELSE\n        IF COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) <> COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID THEN\n          PERFORM mdm_util_addresses.modify_company_address();\n          SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD AND VALID_IND = 'Y' AND CBC_GBE_SCOPE = 'Y' AND COMPANY_TYPE_CD IN ('B', 'L');\n          IF :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0 THEN\n            SELECT COUNTRY_CD INTO V_COUNTRY_CD FROM MDM_V_COUNTRIES WHERE COUNTRY_ID = :NEW.COUNTRY_ID;\n            IF TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01' THEN\n            ELSE\n            END IF;\n            PERFORM mdm_util_companies.modifycompanymapping_ce_ju();\n            IF V_COMPANY_TYPE_CD = 'L' THEN\n              FOR V_REC IN (SELECT 1;) LOOP\n              END LOOP;\n            END IF;\n          END IF;\n        ELSE\n          PERFORM mdm_util_addresses.modify_company_address();\n        END IF;\n      END IF;\n    END IF;\n    IF COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L') THEN\n      IF CNTR = 0 THEN\n        PERFORM mdm_util_addresses.modify_company_address();\n      ELSE\n        PERFORM mdm_util_addresses.modify_company_address();\n      END IF;\n    END IF;\n  END IF;\n  IF TRUE THEN\n    IF COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P') THEN\n      RAISE EXCEPTION 'It is not allowed to invalidate/delete this type of address';\n    END IF;\n    PERFORM mdm_util_addresses.modify_company_address();\n  END IF;\n  EXCEPTION\n    WHEN ERR_UPD THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_INS THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_CTRY_CHG THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN TEST_ERR THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_INS_LEGAL_ADDR THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_NOT_ALLOWED_TO_INVALIDATE THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\nEND;\nEND $$;"
        }
    ],
    "on_update": [
        {
            "type": "sql",
            "sql": "DO $$\nDECLARE\n  V_TRIGGER_NAME varchar(100) := 'COMPANY_ADDRESSES_IOF';\n  CNTR integer;\n  V_USERID varchar(100);\n  V_COUNTRY_CD TEXT;\n  V_COMPANY_TYPE_CD TEXT;\n  V_VALID_FROM TEXT;\n  ERR_UPD EXCEPTION;\n  ERR_INS EXCEPTION;\n  ERR_CTRY_CHG EXCEPTION;\n  ERR_NOT_ALLOWED_TO_INVALIDATE EXCEPTION;\n  TEST_ERR EXCEPTION;\n  ERR_INS_LEGAL_ADDR EXCEPTION;\nBEGIN\n  BEGIN\n    EXCEPTION\n      WHEN OTHERS THEN\n  END;\n  SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = COALESCE(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);\n  IF TRUE THEN\n    IF CNTR > 0 THEN\n      RAISE EXCEPTION 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button';\n    END IF;\n  END IF;\n  IF TRUE THEN\n    SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = COALESCE( :NEW.COMPANY_CD, :OLD.COMPANY_CD);\n    IF V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L') THEN\n      RAISE EXCEPTION 'The legal address cannot be inserted for this type of company';\n    END IF;\n    IF COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L') THEN\n      IF COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) = COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID THEN\n        RAISE EXCEPTION 'The company country modified but not the Valid From Date. Please update also the Valid From Date';\n      END IF;\n      IF CNTR = 0 THEN\n        PERFORM mdm_util_addresses.modify_company_address();\n      ELSE\n        IF COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) <> COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID THEN\n          PERFORM mdm_util_addresses.modify_company_address();\n          SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD AND VALID_IND = 'Y' AND CBC_GBE_SCOPE = 'Y' AND COMPANY_TYPE_CD IN ('B', 'L');\n          IF :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0 THEN\n            SELECT COUNTRY_CD INTO V_COUNTRY_CD FROM MDM_V_COUNTRIES WHERE COUNTRY_ID = :NEW.COUNTRY_ID;\n            IF TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01' THEN\n            ELSE\n            END IF;\n            PERFORM mdm_util_companies.modifycompanymapping_ce_ju();\n            IF V_COMPANY_TYPE_CD = 'L' THEN\n              FOR V_REC IN (SELECT 1;) LOOP\n              END LOOP;\n            END IF;\n          END IF;\n        ELSE\n          PERFORM mdm_util_addresses.modify_company_address();\n        END IF;\n      END IF;\n    END IF;\n    IF COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L') THEN\n      IF CNTR = 0 THEN\n        PERFORM mdm_util_addresses.modify_company_address();\n      ELSE\n        PERFORM mdm_util_addresses.modify_company_address();\n      END IF;\n    END IF;\n  END IF;\n  IF TRUE THEN\n    IF COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P') THEN\n      RAISE EXCEPTION 'It is not allowed to invalidate/delete this type of address';\n    END IF;\n    PERFORM mdm_util_addresses.modify_company_address();\n  END IF;\n  EXCEPTION\n    WHEN ERR_UPD THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_INS THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_CTRY_CHG THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN TEST_ERR THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_INS_LEGAL_ADDR THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_NOT_ALLOWED_TO_INVALIDATE THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\nEND;\nEND $$;"
        }
    ],
    "on_delete": [
        {
            "type": "sql",
            "sql": "DO $$\nDECLARE\n  V_TRIGGER_NAME varchar(100) := 'COMPANY_ADDRESSES_IOF';\n  CNTR integer;\n  V_USERID varchar(100);\n  V_COUNTRY_CD TEXT;\n  V_COMPANY_TYPE_CD TEXT;\n  V_VALID_FROM TEXT;\n  ERR_UPD EXCEPTION;\n  ERR_INS EXCEPTION;\n  ERR_CTRY_CHG EXCEPTION;\n  ERR_NOT_ALLOWED_TO_INVALIDATE EXCEPTION;\n  TEST_ERR EXCEPTION;\n  ERR_INS_LEGAL_ADDR EXCEPTION;\nBEGIN\n  BEGIN\n    EXCEPTION\n      WHEN OTHERS THEN\n  END;\n  SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = COALESCE(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);\n  IF TRUE THEN\n    IF CNTR > 0 THEN\n      RAISE EXCEPTION 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button';\n    END IF;\n  END IF;\n  IF TRUE THEN\n    SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = COALESCE( :NEW.COMPANY_CD, :OLD.COMPANY_CD);\n    IF V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L') THEN\n      RAISE EXCEPTION 'The legal address cannot be inserted for this type of company';\n    END IF;\n    IF COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L') THEN\n      IF COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) = COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID THEN\n        RAISE EXCEPTION 'The company country modified but not the Valid From Date. Please update also the Valid From Date';\n      END IF;\n      IF CNTR = 0 THEN\n        PERFORM mdm_util_addresses.modify_company_address();\n      ELSE\n        IF COALESCE(:OLD.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) <> COALESCE(:NEW.VALID_FROM, DATE_TRUNC(CURRENT_TIMESTAMP)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID THEN\n          PERFORM mdm_util_addresses.modify_company_address();\n          SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD AND VALID_IND = 'Y' AND CBC_GBE_SCOPE = 'Y' AND COMPANY_TYPE_CD IN ('B', 'L');\n          IF :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0 THEN\n            SELECT COUNTRY_CD INTO V_COUNTRY_CD FROM MDM_V_COUNTRIES WHERE COUNTRY_ID = :NEW.COUNTRY_ID;\n            IF TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01' THEN\n            ELSE\n            END IF;\n            PERFORM mdm_util_companies.modifycompanymapping_ce_ju();\n            IF V_COMPANY_TYPE_CD = 'L' THEN\n              FOR V_REC IN (SELECT 1;) LOOP\n              END LOOP;\n            END IF;\n          END IF;\n        ELSE\n          PERFORM mdm_util_addresses.modify_company_address();\n        END IF;\n      END IF;\n    END IF;\n    IF COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L') THEN\n      IF CNTR = 0 THEN\n        PERFORM mdm_util_addresses.modify_company_address();\n      ELSE\n        PERFORM mdm_util_addresses.modify_company_address();\n      END IF;\n    END IF;\n  END IF;\n  IF TRUE THEN\n    IF COALESCE(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P') THEN\n      RAISE EXCEPTION 'It is not allowed to invalidate/delete this type of address';\n    END IF;\n    PERFORM mdm_util_addresses.modify_company_address();\n  END IF;\n  EXCEPTION\n    WHEN ERR_UPD THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_INS THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_CTRY_CHG THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN TEST_ERR THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_INS_LEGAL_ADDR THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\n    WHEN ERR_NOT_ALLOWED_TO_INVALIDATE THEN\n      RAISE_APPLICATION_ERROR(-20000, '');\nEND;\nEND $$;"
        }
    ]
}