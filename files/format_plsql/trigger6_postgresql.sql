-- PostgreSQL Trigger for trigger6_postgresql.json
-- Generated on: 2025-08-28 03:15:43

-- ON INSERT
DO $$
DECLARE
  V_TRIGGER_NAME varchar(100) := 'MDM_V_NEW_MEDICINE_PROPOSALS_IOF';
  V_EVOLVED_THEME_NO TEXT;
  V_PROPOSAL_ID numeric;
  C_PROPOSAL_STATUS_ACTIVE varchar(1) := 'A';
  C_PROPOSAL_STATUS_EVOLVED varchar(1) := 'E';
  C_PROPOSAL_STATUS_TERMINATED varchar(1) := 'T';
  V_NO_UPDATE_TO_EVOLVED EXCEPTION;
  V_NO_UPDATE_TERMINATED_TO_ACTIVE EXCEPTION;
  V_NO_UPDATE_EVOLVED_TO_TERMINATED EXCEPTION;
  V_EXPLORATORY_THEMENO_NOT_NULL EXCEPTION;
BEGIN
  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) THEN
    RAISE EXCEPTION 'V_NO_UPDATE_TO_EVOLVED';
  END IF;
  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) THEN
    RAISE EXCEPTION 'V_NO_UPDATE_EVOLVED_TO_TERMINATED';
  END IF;
  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) THEN
  END IF;
  IF (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) THEN
    RAISE EXCEPTION 'V_EXPLORATORY_THEMENO_NOT_NULL';
  END IF;
  IF TRUE THEN
    INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );
    IF :NEW.PARTNER_ID IS NOT NULL THEN
      PERFORM mdmappl.mdm_load_npm_partner_data.load_npm_partner_data();
    END IF;
  END IF;
  EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
      RAISE_APPLICATION_ERROR(-20000, '');
    WHEN V_NO_UPDATE_EVOLVED_TO_TERMINATED THEN
      RAISE_APPLICATION_ERROR(-20000, '');
    WHEN V_NO_UPDATE_TO_EVOLVED THEN
      RAISE_APPLICATION_ERROR(-20000, '');
    WHEN V_EXPLORATORY_THEMENO_NOT_NULL THEN
      RAISE_APPLICATION_ERROR(-20000, '');
END;
END $$;

-- ON UPDATE
DO $$
DECLARE
  V_TRIGGER_NAME varchar(100) := 'MDM_V_NEW_MEDICINE_PROPOSALS_IOF';
  V_EVOLVED_THEME_NO TEXT;
  V_PROPOSAL_ID numeric;
  C_PROPOSAL_STATUS_ACTIVE varchar(1) := 'A';
  C_PROPOSAL_STATUS_EVOLVED varchar(1) := 'E';
  C_PROPOSAL_STATUS_TERMINATED varchar(1) := 'T';
  V_NO_UPDATE_TO_EVOLVED EXCEPTION;
  V_NO_UPDATE_TERMINATED_TO_ACTIVE EXCEPTION;
  V_NO_UPDATE_EVOLVED_TO_TERMINATED EXCEPTION;
  V_EXPLORATORY_THEMENO_NOT_NULL EXCEPTION;
BEGIN
  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) THEN
    RAISE EXCEPTION 'V_NO_UPDATE_TO_EVOLVED';
  END IF;
  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) THEN
    RAISE EXCEPTION 'V_NO_UPDATE_EVOLVED_TO_TERMINATED';
  END IF;
  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) THEN
  END IF;
  IF (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) THEN
    RAISE EXCEPTION 'V_EXPLORATORY_THEMENO_NOT_NULL';
  END IF;
  IF TRUE THEN
    INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );
    IF :NEW.PARTNER_ID IS NOT NULL THEN
      PERFORM mdmappl.mdm_load_npm_partner_data.load_npm_partner_data();
    END IF;
  END IF;
  EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
      RAISE_APPLICATION_ERROR(-20000, '');
    WHEN V_NO_UPDATE_EVOLVED_TO_TERMINATED THEN
      RAISE_APPLICATION_ERROR(-20000, '');
    WHEN V_NO_UPDATE_TO_EVOLVED THEN
      RAISE_APPLICATION_ERROR(-20000, '');
    WHEN V_EXPLORATORY_THEMENO_NOT_NULL THEN
      RAISE_APPLICATION_ERROR(-20000, '');
END;
END $$;

-- ON DELETE
DO $$
DECLARE
  V_TRIGGER_NAME varchar(100) := 'MDM_V_NEW_MEDICINE_PROPOSALS_IOF';
  V_EVOLVED_THEME_NO TEXT;
  V_PROPOSAL_ID numeric;
  C_PROPOSAL_STATUS_ACTIVE varchar(1) := 'A';
  C_PROPOSAL_STATUS_EVOLVED varchar(1) := 'E';
  C_PROPOSAL_STATUS_TERMINATED varchar(1) := 'T';
  V_NO_UPDATE_TO_EVOLVED EXCEPTION;
  V_NO_UPDATE_TERMINATED_TO_ACTIVE EXCEPTION;
  V_NO_UPDATE_EVOLVED_TO_TERMINATED EXCEPTION;
  V_EXPLORATORY_THEMENO_NOT_NULL EXCEPTION;
BEGIN
  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) THEN
    RAISE EXCEPTION 'V_NO_UPDATE_TO_EVOLVED';
  END IF;
  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) THEN
    RAISE EXCEPTION 'V_NO_UPDATE_EVOLVED_TO_TERMINATED';
  END IF;
  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) THEN
  END IF;
  IF (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) THEN
    RAISE EXCEPTION 'V_EXPLORATORY_THEMENO_NOT_NULL';
  END IF;
  IF TRUE THEN
    INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );
    IF :NEW.PARTNER_ID IS NOT NULL THEN
      PERFORM mdmappl.mdm_load_npm_partner_data.load_npm_partner_data();
    END IF;
  END IF;
  EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
      RAISE_APPLICATION_ERROR(-20000, '');
    WHEN V_NO_UPDATE_EVOLVED_TO_TERMINATED THEN
      RAISE_APPLICATION_ERROR(-20000, '');
    WHEN V_NO_UPDATE_TO_EVOLVED THEN
      RAISE_APPLICATION_ERROR(-20000, '');
    WHEN V_EXPLORATORY_THEMENO_NOT_NULL THEN
      RAISE_APPLICATION_ERROR(-20000, '');
END;
END $$;
