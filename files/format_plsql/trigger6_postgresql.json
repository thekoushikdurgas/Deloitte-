{
    "on_insert": [
        {
            "type": "sql",
            "sql": "DO $$\nDECLARE\n  V_TRIGGER_NAME varchar(100) := 'MDM_V_NEW_MEDICINE_PROPOSALS_IOF';\n  V_EVOLVED_THEME_NO TEXT;\n  V_PROPOSAL_ID numeric;\n  C_PROPOSAL_STATUS_ACTIVE varchar(1) := 'A';\n  C_PROPOSAL_STATUS_EVOLVED varchar(1) := 'E';\n  C_PROPOSAL_STATUS_TERMINATED varchar(1) := 'T';\n  V_NO_UPDATE_TO_EVOLVED EXCEPTION;\n  V_NO_UPDATE_TERMINATED_TO_ACTIVE EXCEPTION;\n  V_NO_UPDATE_EVOLVED_TO_TERMINATED EXCEPTION;\n  V_EXPLORATORY_THEMENO_NOT_NULL EXCEPTION;\nBEGIN\n  V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO;\n  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) THEN\n    RAISE EXCEPTION 'V_NO_UPDATE_TO_EVOLVED';\n  END IF;\n  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) THEN\n    RAISE EXCEPTION 'V_NO_UPDATE_EVOLVED_TO_TERMINATED';\n  END IF;\n  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) THEN\n    V_EVOLVED_THEME_NO := NULL;\n  END IF;\n  IF (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) THEN\n    RAISE EXCEPTION 'V_EXPLORATORY_THEMENO_NOT_NULL';\n  END IF;\n  IF TRUE THEN\n    V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;\n    INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );\n    IF :NEW.PARTNER_ID IS NOT NULL THEN\n      MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);\n    END IF;\n  ELSIF TRUE THEN\n    UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO, PROPOSAL_NAME = :NEW.PROPOSAL_NAME, PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD, EVOLVED_THEME_NO = V_EVOLVED_THEME_NO, MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID = :NEW.FIREWALL_ID WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;\n    IF COALESCE(:OLD.PARTNER_ID, 'NULL') <> COALESCE(:NEW.PARTNER_ID, 'NULL') THEN\n      MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);\n    END IF;\n  END IF;\n  EXCEPTION\n    WHEN DUP_VAL_ON_INDEX THEN\n      RAISE_APPLICATION_ERROR(-20600, V_TRIGGER_NAME);\n    WHEN V_NO_UPDATE_EVOLVED_TO_TERMINATED THEN\n      RAISE_APPLICATION_ERROR(-20800, V_TRIGGER_NAME);\n    WHEN V_NO_UPDATE_TO_EVOLVED THEN\n      RAISE_APPLICATION_ERROR(-20900, V_TRIGGER_NAME);\n    WHEN V_EXPLORATORY_THEMENO_NOT_NULL THEN\n      RAISE_APPLICATION_ERROR(-20940, V_TRIGGER_NAME);\nEND;\nEND $$;"
        }
    ],
    "on_update": [
        {
            "type": "sql",
            "sql": "DO $$\nDECLARE\n  V_TRIGGER_NAME varchar(100) := 'MDM_V_NEW_MEDICINE_PROPOSALS_IOF';\n  V_EVOLVED_THEME_NO TEXT;\n  V_PROPOSAL_ID numeric;\n  C_PROPOSAL_STATUS_ACTIVE varchar(1) := 'A';\n  C_PROPOSAL_STATUS_EVOLVED varchar(1) := 'E';\n  C_PROPOSAL_STATUS_TERMINATED varchar(1) := 'T';\n  V_NO_UPDATE_TO_EVOLVED EXCEPTION;\n  V_NO_UPDATE_TERMINATED_TO_ACTIVE EXCEPTION;\n  V_NO_UPDATE_EVOLVED_TO_TERMINATED EXCEPTION;\n  V_EXPLORATORY_THEMENO_NOT_NULL EXCEPTION;\nBEGIN\n  V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO;\n  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) THEN\n    RAISE EXCEPTION 'V_NO_UPDATE_TO_EVOLVED';\n  END IF;\n  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) THEN\n    RAISE EXCEPTION 'V_NO_UPDATE_EVOLVED_TO_TERMINATED';\n  END IF;\n  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) THEN\n    V_EVOLVED_THEME_NO := NULL;\n  END IF;\n  IF (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) THEN\n    RAISE EXCEPTION 'V_EXPLORATORY_THEMENO_NOT_NULL';\n  END IF;\n  IF TRUE THEN\n    V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;\n    INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );\n    IF :NEW.PARTNER_ID IS NOT NULL THEN\n      MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);\n    END IF;\n  ELSIF TRUE THEN\n    UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO, PROPOSAL_NAME = :NEW.PROPOSAL_NAME, PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD, EVOLVED_THEME_NO = V_EVOLVED_THEME_NO, MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID = :NEW.FIREWALL_ID WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;\n    IF COALESCE(:OLD.PARTNER_ID, 'NULL') <> COALESCE(:NEW.PARTNER_ID, 'NULL') THEN\n      MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);\n    END IF;\n  END IF;\n  EXCEPTION\n    WHEN DUP_VAL_ON_INDEX THEN\n      RAISE_APPLICATION_ERROR(-20600, V_TRIGGER_NAME);\n    WHEN V_NO_UPDATE_EVOLVED_TO_TERMINATED THEN\n      RAISE_APPLICATION_ERROR(-20800, V_TRIGGER_NAME);\n    WHEN V_NO_UPDATE_TO_EVOLVED THEN\n      RAISE_APPLICATION_ERROR(-20900, V_TRIGGER_NAME);\n    WHEN V_EXPLORATORY_THEMENO_NOT_NULL THEN\n      RAISE_APPLICATION_ERROR(-20940, V_TRIGGER_NAME);\nEND;\nEND $$;"
        }
    ],
    "on_delete": [
        {
            "type": "sql",
            "sql": "DO $$\nDECLARE\n  V_TRIGGER_NAME varchar(100) := 'MDM_V_NEW_MEDICINE_PROPOSALS_IOF';\n  V_EVOLVED_THEME_NO TEXT;\n  V_PROPOSAL_ID numeric;\n  C_PROPOSAL_STATUS_ACTIVE varchar(1) := 'A';\n  C_PROPOSAL_STATUS_EVOLVED varchar(1) := 'E';\n  C_PROPOSAL_STATUS_TERMINATED varchar(1) := 'T';\n  V_NO_UPDATE_TO_EVOLVED EXCEPTION;\n  V_NO_UPDATE_TERMINATED_TO_ACTIVE EXCEPTION;\n  V_NO_UPDATE_EVOLVED_TO_TERMINATED EXCEPTION;\n  V_EXPLORATORY_THEMENO_NOT_NULL EXCEPTION;\nBEGIN\n  V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO;\n  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) THEN\n    RAISE EXCEPTION 'V_NO_UPDATE_TO_EVOLVED';\n  END IF;\n  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) THEN\n    RAISE EXCEPTION 'V_NO_UPDATE_EVOLVED_TO_TERMINATED';\n  END IF;\n  IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) THEN\n    V_EVOLVED_THEME_NO := NULL;\n  END IF;\n  IF (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) THEN\n    RAISE EXCEPTION 'V_EXPLORATORY_THEMENO_NOT_NULL';\n  END IF;\n  IF TRUE THEN\n    V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;\n    INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );\n    IF :NEW.PARTNER_ID IS NOT NULL THEN\n      MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);\n    END IF;\n  ELSIF TRUE THEN\n    UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO, PROPOSAL_NAME = :NEW.PROPOSAL_NAME, PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD, EVOLVED_THEME_NO = V_EVOLVED_THEME_NO, MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID = :NEW.FIREWALL_ID WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;\n    IF COALESCE(:OLD.PARTNER_ID, 'NULL') <> COALESCE(:NEW.PARTNER_ID, 'NULL') THEN\n      MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);\n    END IF;\n  END IF;\n  EXCEPTION\n    WHEN DUP_VAL_ON_INDEX THEN\n      RAISE_APPLICATION_ERROR(-20600, V_TRIGGER_NAME);\n    WHEN V_NO_UPDATE_EVOLVED_TO_TERMINATED THEN\n      RAISE_APPLICATION_ERROR(-20800, V_TRIGGER_NAME);\n    WHEN V_NO_UPDATE_TO_EVOLVED THEN\n      RAISE_APPLICATION_ERROR(-20900, V_TRIGGER_NAME);\n    WHEN V_EXPLORATORY_THEMENO_NOT_NULL THEN\n      RAISE_APPLICATION_ERROR(-20940, V_TRIGGER_NAME);\nEND;\nEND $$;"
        }
    ]
}