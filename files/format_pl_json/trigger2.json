{
  "declarations": {
    "variables": [
      {
        "name": "V_COUNT_T_MAPPINGS",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_COUNT_T_MOL_MAP",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_MOLECULE_SEQ_NO",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_SEQ_NO_DUPLICATE_CNT",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "INVALID_MAPPING_EXISTS",
        "data_type": "BOOLEAN",
        "default_value": "FALSE"
      },
      {
        "name": "V_MANUAL_SHORT_DESC",
        "data_type": "THEMES.MANUAL_SHORT_DESC%TYPE",
        "default_value": null
      }
    ],
    "constants": [],
    "exceptions": [
      {
        "name": "ERR_MAP_EXISTS",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_MOLEC_ID_MISSING",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_NO_PORTF_MOLECULE_LEFT",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_UPD_INV_MAP",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_INS_INV_MAP",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_INV_MOL_SEQUENCE",
        "type": "EXCEPTION"
      },
      {
        "name": "UPDATE_UPD",
        "type": "EXCEPTION"
      }
    ]
  },
  "on_insert": [
    {
      "sql_statement": "SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
      "type": "select_statement",
      "statement_indent": 4,
      "statement_line_no": 21
    },
    {
      "type": "if_else",
      "condition": "(DELETING)",
      "then_statements": [
        {
          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
          "type": "update_statement",
          "statement_indent": 8,
          "statement_line_no": 33
        },
        {
          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
          "type": "update_statement",
          "statement_indent": 8,
          "statement_line_no": 41
        },
        {
          "statement": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );",
          "type": "unknown_statement",
          "indent": 8,
          "line_no": 52
        }
      ],
      "else_if": [],
      "else_statements": [],
      "if_line_no": 27,
      "if_indent": 4,
      "else_if_line_nos": [],
      "else_line_no": null,
      "end_if_line_no": 58
    },
    {
      "type": "if_else",
      "condition": "(INSERTING OR UPDATING)",
      "then_statements": [
        {
          "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';",
          "type": "select_statement",
          "statement_indent": 8,
          "statement_line_no": 61
        },
        {
          "type": "if_else",
          "condition": "(:NEW.MOLECULE_ID IS NULL)",
          "then_statements": [
            {
              "sql_statement": "RAISE ERR_MOLEC_ID_MISSING;",
              "type": "raise_statement",
              "statement_indent": 12,
              "statement_line_no": 69
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 68,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 87
        },
        {
          "type": "if_else",
          "condition": "(UPDATING)",
          "then_statements": [
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS)",
              "then_statements": [
                {
                  "sql_statement": "RAISE ERR_UPD_INV_MAP;",
                  "type": "raise_statement",
                  "statement_indent": 16,
                  "statement_line_no": 91
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 90,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 92
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 89,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 93
        },
        {
          "type": "if_else",
          "condition": "(:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1'))",
          "then_statements": [
            {
              "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';",
              "type": "select_statement",
              "statement_indent": 12,
              "statement_line_no": 99
            },
            {
              "type": "if_else",
              "condition": "(V_COUNT_T_MOL_MAP > 0)",
              "then_statements": [
                {
                  "sql_statement": "RAISE ERR_MAP_EXISTS;",
                  "type": "raise_statement",
                  "statement_indent": 16,
                  "statement_line_no": 108
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 107,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 109
            },
            {
              "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';",
              "type": "select_statement",
              "statement_indent": 12,
              "statement_line_no": 111
            },
            {
              "type": "if_else",
              "condition": "(V_COUNT_T_MOL_MAP > 0)",
              "then_statements": [
                {
                  "variable": "INVALID_MAPPING_EXISTS",
                  "value": "TRUE",
                  "type": "assignment_statement",
                  "statement_indent": 16,
                  "statement_line_no": 120
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 119,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 121
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 98,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 122
        },
        {
          "type": "if_else",
          "condition": "(INSERTING)",
          "then_statements": [
            {
              "type": "case_when",
              "case_expression": "",
              "when_clauses": [
                {
                  "when_value": ":NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1",
                  "then_statements": [
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 130
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 24,
                          "statement_line_no": 139
                        }
                      ],
                      "if_line_no": 127,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 137,
                      "end_if_line_no": 152
                    }
                  ],
                  "when_line_no": 126
                },
                {
                  "when_value": ":NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 158
                    },
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 170
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 24,
                          "statement_line_no": 179
                        }
                      ],
                      "if_line_no": 167,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 177,
                      "end_if_line_no": 192
                    }
                  ],
                  "when_line_no": 156
                }
              ],
              "else_statements": [
                {
                  "sql_statement": "RAISE ERR_INS_INV_MAP;",
                  "type": "raise_statement",
                  "statement_indent": 20,
                  "statement_line_no": 199
                }
              ],
              "case_line_no": 125,
              "case_indent": 12,
              "when_line_nos": [
                126,
                156
              ],
              "else_line_no": 196,
              "end_case_line_no": 200
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 124,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 201
        },
        {
          "type": "if_else",
          "condition": "(UPDATING)",
          "then_statements": [
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 205
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 204,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 211
                },
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 222
                    },
                    {
                      "type": "if_else",
                      "condition": "(:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 231
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 242
                        }
                      ],
                      "if_line_no": 228,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 239,
                      "end_if_line_no": 250
                    },
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 257
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 24,
                          "statement_line_no": 267
                        }
                      ],
                      "if_line_no": 254,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 265,
                      "end_if_line_no": 280
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 213,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 285
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 203,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 289
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
              "then_statements": [
                {
                  "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                  "type": "update_statement",
                  "statement_indent": 16,
                  "statement_line_no": 302
                },
                {
                  "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                  "type": "update_statement",
                  "statement_indent": 16,
                  "statement_line_no": 310
                },
                {
                  "type": "if_else",
                  "condition": "(INVALID_MAPPING_EXISTS)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 323
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                      "type": "insert_statement",
                      "statement_indent": 20,
                      "statement_line_no": 333
                    }
                  ],
                  "if_line_no": 320,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": 331,
                  "end_if_line_no": 346
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 291,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 351
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO",
              "then_statements": [
                {
                  "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;",
                  "type": "update_statement",
                  "statement_indent": 16,
                  "statement_line_no": 355
                },
                {
                  "type": "if_else",
                  "condition": "(INVALID_MAPPING_EXISTS)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 366
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR );",
                      "type": "insert_statement",
                      "statement_indent": 20,
                      "statement_line_no": 376
                    }
                  ],
                  "if_line_no": 363,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": 374,
                  "end_if_line_no": 387
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 352,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 392
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 202,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 393
        },
        {
          "statement": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );",
          "type": "unknown_statement",
          "indent": 8,
          "line_no": 395
        }
      ],
      "else_if": [],
      "else_statements": [],
      "if_line_no": 60,
      "if_indent": 4,
      "else_if_line_nos": [],
      "else_line_no": null,
      "end_if_line_no": 401
    },
    {
      "sql_statement": "SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );",
      "type": "select_statement",
      "statement_indent": 4,
      "statement_line_no": 403
    },
    {
      "type": "if_else",
      "condition": "(V_SEQ_NO_DUPLICATE_CNT > 0)",
      "then_statements": [
        {
          "sql_statement": "RAISE ERR_INV_MOL_SEQUENCE;",
          "type": "raise_statement",
          "statement_indent": 8,
          "statement_line_no": 420
        }
      ],
      "else_if": [],
      "else_statements": [],
      "if_line_no": 419,
      "if_indent": 4,
      "else_if_line_nos": [],
      "else_line_no": null,
      "end_if_line_no": 421
    }
  ],
  "on_update": [
    {
      "sql_statement": "SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
      "type": "select_statement",
      "statement_indent": 4,
      "statement_line_no": 21
    },
    {
      "type": "if_else",
      "condition": "(DELETING)",
      "then_statements": [
        {
          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
          "type": "update_statement",
          "statement_indent": 8,
          "statement_line_no": 33
        },
        {
          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
          "type": "update_statement",
          "statement_indent": 8,
          "statement_line_no": 41
        },
        {
          "statement": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );",
          "type": "unknown_statement",
          "indent": 8,
          "line_no": 52
        }
      ],
      "else_if": [],
      "else_statements": [],
      "if_line_no": 27,
      "if_indent": 4,
      "else_if_line_nos": [],
      "else_line_no": null,
      "end_if_line_no": 58
    },
    {
      "type": "if_else",
      "condition": "(INSERTING OR UPDATING)",
      "then_statements": [
        {
          "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';",
          "type": "select_statement",
          "statement_indent": 8,
          "statement_line_no": 61
        },
        {
          "type": "if_else",
          "condition": "(:NEW.MOLECULE_ID IS NULL)",
          "then_statements": [
            {
              "sql_statement": "RAISE ERR_MOLEC_ID_MISSING;",
              "type": "raise_statement",
              "statement_indent": 12,
              "statement_line_no": 69
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 68,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 87
        },
        {
          "type": "if_else",
          "condition": "(UPDATING)",
          "then_statements": [
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS)",
              "then_statements": [
                {
                  "sql_statement": "RAISE ERR_UPD_INV_MAP;",
                  "type": "raise_statement",
                  "statement_indent": 16,
                  "statement_line_no": 91
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 90,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 92
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 89,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 93
        },
        {
          "type": "if_else",
          "condition": "(:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1'))",
          "then_statements": [
            {
              "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';",
              "type": "select_statement",
              "statement_indent": 12,
              "statement_line_no": 99
            },
            {
              "type": "if_else",
              "condition": "(V_COUNT_T_MOL_MAP > 0)",
              "then_statements": [
                {
                  "sql_statement": "RAISE ERR_MAP_EXISTS;",
                  "type": "raise_statement",
                  "statement_indent": 16,
                  "statement_line_no": 108
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 107,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 109
            },
            {
              "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';",
              "type": "select_statement",
              "statement_indent": 12,
              "statement_line_no": 111
            },
            {
              "type": "if_else",
              "condition": "(V_COUNT_T_MOL_MAP > 0)",
              "then_statements": [
                {
                  "variable": "INVALID_MAPPING_EXISTS",
                  "value": "TRUE",
                  "type": "assignment_statement",
                  "statement_indent": 16,
                  "statement_line_no": 120
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 119,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 121
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 98,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 122
        },
        {
          "type": "if_else",
          "condition": "(INSERTING)",
          "then_statements": [
            {
              "type": "case_when",
              "case_expression": "",
              "when_clauses": [
                {
                  "when_value": ":NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1",
                  "then_statements": [
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 130
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 24,
                          "statement_line_no": 139
                        }
                      ],
                      "if_line_no": 127,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 137,
                      "end_if_line_no": 152
                    }
                  ],
                  "when_line_no": 126
                },
                {
                  "when_value": ":NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 158
                    },
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 170
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 24,
                          "statement_line_no": 179
                        }
                      ],
                      "if_line_no": 167,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 177,
                      "end_if_line_no": 192
                    }
                  ],
                  "when_line_no": 156
                }
              ],
              "else_statements": [
                {
                  "sql_statement": "RAISE ERR_INS_INV_MAP;",
                  "type": "raise_statement",
                  "statement_indent": 20,
                  "statement_line_no": 199
                }
              ],
              "case_line_no": 125,
              "case_indent": 12,
              "when_line_nos": [
                126,
                156
              ],
              "else_line_no": 196,
              "end_case_line_no": 200
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 124,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 201
        },
        {
          "type": "if_else",
          "condition": "(UPDATING)",
          "then_statements": [
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 205
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 204,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 211
                },
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 222
                    },
                    {
                      "type": "if_else",
                      "condition": "(:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 231
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 242
                        }
                      ],
                      "if_line_no": 228,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 239,
                      "end_if_line_no": 250
                    },
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 257
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 24,
                          "statement_line_no": 267
                        }
                      ],
                      "if_line_no": 254,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 265,
                      "end_if_line_no": 280
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 213,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 285
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 203,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 289
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
              "then_statements": [
                {
                  "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                  "type": "update_statement",
                  "statement_indent": 16,
                  "statement_line_no": 302
                },
                {
                  "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                  "type": "update_statement",
                  "statement_indent": 16,
                  "statement_line_no": 310
                },
                {
                  "type": "if_else",
                  "condition": "(INVALID_MAPPING_EXISTS)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 323
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                      "type": "insert_statement",
                      "statement_indent": 20,
                      "statement_line_no": 333
                    }
                  ],
                  "if_line_no": 320,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": 331,
                  "end_if_line_no": 346
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 291,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 351
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO",
              "then_statements": [
                {
                  "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;",
                  "type": "update_statement",
                  "statement_indent": 16,
                  "statement_line_no": 355
                },
                {
                  "type": "if_else",
                  "condition": "(INVALID_MAPPING_EXISTS)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 366
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR );",
                      "type": "insert_statement",
                      "statement_indent": 20,
                      "statement_line_no": 376
                    }
                  ],
                  "if_line_no": 363,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": 374,
                  "end_if_line_no": 387
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 352,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 392
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 202,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 393
        },
        {
          "statement": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );",
          "type": "unknown_statement",
          "indent": 8,
          "line_no": 395
        }
      ],
      "else_if": [],
      "else_statements": [],
      "if_line_no": 60,
      "if_indent": 4,
      "else_if_line_nos": [],
      "else_line_no": null,
      "end_if_line_no": 401
    },
    {
      "sql_statement": "SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );",
      "type": "select_statement",
      "statement_indent": 4,
      "statement_line_no": 403
    },
    {
      "type": "if_else",
      "condition": "(V_SEQ_NO_DUPLICATE_CNT > 0)",
      "then_statements": [
        {
          "sql_statement": "RAISE ERR_INV_MOL_SEQUENCE;",
          "type": "raise_statement",
          "statement_indent": 8,
          "statement_line_no": 420
        }
      ],
      "else_if": [],
      "else_statements": [],
      "if_line_no": 419,
      "if_indent": 4,
      "else_if_line_nos": [],
      "else_line_no": null,
      "end_if_line_no": 421
    }
  ],
  "on_delete": [
    {
      "sql_statement": "SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
      "type": "select_statement",
      "statement_indent": 4,
      "statement_line_no": 21
    },
    {
      "type": "if_else",
      "condition": "(DELETING)",
      "then_statements": [
        {
          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
          "type": "update_statement",
          "statement_indent": 8,
          "statement_line_no": 33
        },
        {
          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
          "type": "update_statement",
          "statement_indent": 8,
          "statement_line_no": 41
        },
        {
          "statement": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );",
          "type": "unknown_statement",
          "indent": 8,
          "line_no": 52
        }
      ],
      "else_if": [],
      "else_statements": [],
      "if_line_no": 27,
      "if_indent": 4,
      "else_if_line_nos": [],
      "else_line_no": null,
      "end_if_line_no": 58
    },
    {
      "type": "if_else",
      "condition": "(INSERTING OR UPDATING)",
      "then_statements": [
        {
          "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';",
          "type": "select_statement",
          "statement_indent": 8,
          "statement_line_no": 61
        },
        {
          "type": "if_else",
          "condition": "(:NEW.MOLECULE_ID IS NULL)",
          "then_statements": [
            {
              "sql_statement": "RAISE ERR_MOLEC_ID_MISSING;",
              "type": "raise_statement",
              "statement_indent": 12,
              "statement_line_no": 69
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 68,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 87
        },
        {
          "type": "if_else",
          "condition": "(UPDATING)",
          "then_statements": [
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS)",
              "then_statements": [
                {
                  "sql_statement": "RAISE ERR_UPD_INV_MAP;",
                  "type": "raise_statement",
                  "statement_indent": 16,
                  "statement_line_no": 91
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 90,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 92
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 89,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 93
        },
        {
          "type": "if_else",
          "condition": "(:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1'))",
          "then_statements": [
            {
              "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';",
              "type": "select_statement",
              "statement_indent": 12,
              "statement_line_no": 99
            },
            {
              "type": "if_else",
              "condition": "(V_COUNT_T_MOL_MAP > 0)",
              "then_statements": [
                {
                  "sql_statement": "RAISE ERR_MAP_EXISTS;",
                  "type": "raise_statement",
                  "statement_indent": 16,
                  "statement_line_no": 108
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 107,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 109
            },
            {
              "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';",
              "type": "select_statement",
              "statement_indent": 12,
              "statement_line_no": 111
            },
            {
              "type": "if_else",
              "condition": "(V_COUNT_T_MOL_MAP > 0)",
              "then_statements": [
                {
                  "variable": "INVALID_MAPPING_EXISTS",
                  "value": "TRUE",
                  "type": "assignment_statement",
                  "statement_indent": 16,
                  "statement_line_no": 120
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 119,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 121
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 98,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 122
        },
        {
          "type": "if_else",
          "condition": "(INSERTING)",
          "then_statements": [
            {
              "type": "case_when",
              "case_expression": "",
              "when_clauses": [
                {
                  "when_value": ":NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1",
                  "then_statements": [
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 130
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 24,
                          "statement_line_no": 139
                        }
                      ],
                      "if_line_no": 127,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 137,
                      "end_if_line_no": 152
                    }
                  ],
                  "when_line_no": 126
                },
                {
                  "when_value": ":NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 158
                    },
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 170
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 24,
                          "statement_line_no": 179
                        }
                      ],
                      "if_line_no": 167,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 177,
                      "end_if_line_no": 192
                    }
                  ],
                  "when_line_no": 156
                }
              ],
              "else_statements": [
                {
                  "sql_statement": "RAISE ERR_INS_INV_MAP;",
                  "type": "raise_statement",
                  "statement_indent": 20,
                  "statement_line_no": 199
                }
              ],
              "case_line_no": 125,
              "case_indent": 12,
              "when_line_nos": [
                126,
                156
              ],
              "else_line_no": 196,
              "end_case_line_no": 200
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 124,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 201
        },
        {
          "type": "if_else",
          "condition": "(UPDATING)",
          "then_statements": [
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 205
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 204,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 211
                },
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 222
                    },
                    {
                      "type": "if_else",
                      "condition": "(:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 231
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 242
                        }
                      ],
                      "if_line_no": 228,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 239,
                      "end_if_line_no": 250
                    },
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 24,
                          "statement_line_no": 257
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 24,
                          "statement_line_no": 267
                        }
                      ],
                      "if_line_no": 254,
                      "if_indent": 20,
                      "else_if_line_nos": [],
                      "else_line_no": 265,
                      "end_if_line_no": 280
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 213,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 285
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 203,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 289
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
              "then_statements": [
                {
                  "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                  "type": "update_statement",
                  "statement_indent": 16,
                  "statement_line_no": 302
                },
                {
                  "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                  "type": "update_statement",
                  "statement_indent": 16,
                  "statement_line_no": 310
                },
                {
                  "type": "if_else",
                  "condition": "(INVALID_MAPPING_EXISTS)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 323
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                      "type": "insert_statement",
                      "statement_indent": 20,
                      "statement_line_no": 333
                    }
                  ],
                  "if_line_no": 320,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": 331,
                  "end_if_line_no": 346
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 291,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 351
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO",
              "then_statements": [
                {
                  "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;",
                  "type": "update_statement",
                  "statement_indent": 16,
                  "statement_line_no": 355
                },
                {
                  "type": "if_else",
                  "condition": "(INVALID_MAPPING_EXISTS)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 20,
                      "statement_line_no": 366
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR );",
                      "type": "insert_statement",
                      "statement_indent": 20,
                      "statement_line_no": 376
                    }
                  ],
                  "if_line_no": 363,
                  "if_indent": 16,
                  "else_if_line_nos": [],
                  "else_line_no": 374,
                  "end_if_line_no": 387
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 352,
              "if_indent": 12,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 392
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 202,
          "if_indent": 8,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 393
        },
        {
          "statement": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );",
          "type": "unknown_statement",
          "indent": 8,
          "line_no": 395
        }
      ],
      "else_if": [],
      "else_statements": [],
      "if_line_no": 60,
      "if_indent": 4,
      "else_if_line_nos": [],
      "else_line_no": null,
      "end_if_line_no": 401
    },
    {
      "sql_statement": "SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );",
      "type": "select_statement",
      "statement_indent": 4,
      "statement_line_no": 403
    },
    {
      "type": "if_else",
      "condition": "(V_SEQ_NO_DUPLICATE_CNT > 0)",
      "then_statements": [
        {
          "sql_statement": "RAISE ERR_INV_MOL_SEQUENCE;",
          "type": "raise_statement",
          "statement_indent": 8,
          "statement_line_no": 420
        }
      ],
      "else_if": [],
      "else_statements": [],
      "if_line_no": 419,
      "if_indent": 4,
      "else_if_line_nos": [],
      "else_line_no": null,
      "end_if_line_no": 421
    }
  ]
}