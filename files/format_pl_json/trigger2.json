{
  "on_insert": {
    "declarations": {
      "variables": [
        {
          "name": "V_COUNT_T_MAPPINGS",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_COUNT_T_MOL_MAP",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_MOLECULE_SEQ_NO",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_SEQ_NO_DUPLICATE_CNT",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "INVALID_MAPPING_EXISTS",
          "data_type": "BOOLEAN",
          "default_value": "FALSE"
        },
        {
          "name": "V_MANUAL_SHORT_DESC",
          "data_type": "THEMES.MANUAL_SHORT_DESC%TYPE",
          "default_value": null
        }
      ],
      "constants": [],
      "exceptions": [
        {
          "name": "ERR_MAP_EXISTS",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_MOLEC_ID_MISSING",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_NO_PORTF_MOLECULE_LEFT",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_UPD_INV_MAP",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INS_INV_MAP",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INV_MOL_SEQUENCE",
          "type": "EXCEPTION"
        },
        {
          "name": "UPDATE_UPD",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_line_no": 18,
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "select_statement",
          "sql_statement": "SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
          "statement_line_no": 21,
          "statement_indent": 4
        },
        {
          "condition": "( OR )",
          "type": "if_else",
          "if_line_no": 60,
          "then_line_no": 60,
          "if_indent": 4,
          "end_if_line_no": 401,
          "then_statements": [
            {
              "type": "select_statement",
              "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';",
              "statement_line_no": 61,
              "statement_indent": 8
            },
            {
              "condition": "(:NEW.MOLECULE_ID IS NULL)",
              "type": "if_else",
              "if_line_no": 68,
              "then_line_no": 68,
              "if_indent": 8,
              "end_if_line_no": 87,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE ERR_MOLEC_ID_MISSING;",
                  "statement_line_no": 69,
                  "statement_indent": 12
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1'))",
              "type": "if_else",
              "if_line_no": 98,
              "then_line_no": 98,
              "if_indent": 8,
              "end_if_line_no": 122,
              "then_statements": [
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';",
                  "statement_line_no": 99,
                  "statement_indent": 12
                },
                {
                  "condition": "(V_COUNT_T_MOL_MAP > 0)",
                  "type": "if_else",
                  "if_line_no": 107,
                  "then_line_no": 107,
                  "if_indent": 12,
                  "end_if_line_no": 109,
                  "then_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE ERR_MAP_EXISTS;",
                      "statement_line_no": 108,
                      "statement_indent": 16
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                },
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';",
                  "statement_line_no": 111,
                  "statement_indent": 12
                },
                {
                  "condition": "(V_COUNT_T_MOL_MAP > 0)",
                  "type": "if_else",
                  "if_line_no": 119,
                  "then_line_no": 119,
                  "if_indent": 12,
                  "end_if_line_no": 121,
                  "then_statements": [
                    {
                      "type": "assignment",
                      "variable_name": "INVALID_MAPPING_EXISTS",
                      "assignment_operator": ":=",
                      "expression": "TRUE;",
                      "assignment_line_no": 120,
                      "assignment_indent": 16
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "TRUE",
              "type": "if_else",
              "if_line_no": 124,
              "then_line_no": 124,
              "if_indent": 8,
              "end_if_line_no": 201,
              "then_statements": [
                {
                  "condition": "",
                  "type": "case_when",
                  "case_line_no": 125,
                  "case_indent": 12,
                  "end_case_line_no": 200,
                  "when_clauses": [
                    {
                      "type": "when_statement",
                      "when_line_no": 126,
                      "when_indent": 16,
                      "condition": ":NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1",
                      "then_line_no": 126,
                      "then_statements": [
                        {
                          "condition": "(INVALID_MAPPING_EXISTS)",
                          "type": "if_else",
                          "if_line_no": 127,
                          "then_line_no": 127,
                          "if_indent": 20,
                          "end_if_line_no": 152,
                          "then_statements": [
                            {
                              "type": "update_statement",
                              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                              "statement_line_no": 130,
                              "statement_indent": 24
                            }
                          ],
                          "if_elses": [],
                          "else_statements": []
                        }
                      ]
                    },
                    {
                      "type": "when_statement",
                      "when_line_no": 156,
                      "when_indent": 16,
                      "condition": ":NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1",
                      "then_line_no": 156,
                      "then_statements": [
                        {
                          "type": "update_statement",
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                          "statement_line_no": 158,
                          "statement_indent": 20
                        },
                        {
                          "condition": "(INVALID_MAPPING_EXISTS)",
                          "type": "if_else",
                          "if_line_no": 167,
                          "then_line_no": 167,
                          "if_indent": 20,
                          "end_if_line_no": 192,
                          "then_statements": [
                            {
                              "type": "update_statement",
                              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                              "statement_line_no": 170,
                              "statement_indent": 24
                            }
                          ],
                          "if_elses": [],
                          "else_statements": []
                        }
                      ]
                    }
                  ],
                  "else_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE ERR_INS_INV_MAP;",
                      "statement_line_no": 199,
                      "statement_indent": 20
                    }
                  ]
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "type": "function_calling",
              "function_name": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC",
              "parameters": {
                "parameter_type": "named",
                "positional_params": [],
                "named_params": {
                  "P_THEME_NO": ":NEW.THEME_NO",
                  "P_MOLECULE_ID": "0",
                  "P_DATE": "SYSDATE",
                  "P_MANUAL_SHORT_DESC": "V_MANUAL_SHORT_DESC"
                },
                "raw_text": "P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC"
              }
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );",
          "statement_line_no": 403,
          "statement_indent": 4
        },
        {
          "condition": "(V_SEQ_NO_DUPLICATE_CNT > 0)",
          "type": "if_else",
          "if_line_no": 419,
          "then_line_no": 419,
          "if_indent": 4,
          "end_if_line_no": 421,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE ERR_INV_MOL_SEQUENCE;",
              "statement_line_no": 420,
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "ERR_MAP_EXISTS",
          "when_line_no": 440,
          "when_indent": 4,
          "then_line_no": 440,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20110",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20110, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_MOLEC_ID_MISSING",
          "when_line_no": 442,
          "when_indent": 4,
          "then_line_no": 442,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20111",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20111, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_UPD_INV_MAP",
          "when_line_no": 444,
          "when_indent": 4,
          "then_line_no": 444,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20112",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20112, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INS_INV_MAP",
          "when_line_no": 446,
          "when_indent": 4,
          "then_line_no": 446,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INV_MOL_SEQUENCE",
          "when_line_no": 448,
          "when_indent": 4,
          "then_line_no": 448,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20120",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20120, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        }
      ],
      "exception_line_no": 439,
      "end_line_no": 465
    },
    "conversion_stats": {
      "select_statement": 5,
      "insert_statement": 0,
      "update_statement": 3,
      "delete_statement": 0,
      "raise_statement": 4,
      "assignment": 1,
      "for_loop": 0,
      "if_else": 9,
      "case_when": 1,
      "begin_end": 1,
      "exception_handler": 5,
      "function_calling": 6,
      "when_statement": 2,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 0,
      "return_statement": 0
    }
  },
  "on_update": {
    "declarations": {
      "variables": [
        {
          "name": "V_COUNT_T_MAPPINGS",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_COUNT_T_MOL_MAP",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_MOLECULE_SEQ_NO",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_SEQ_NO_DUPLICATE_CNT",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "INVALID_MAPPING_EXISTS",
          "data_type": "BOOLEAN",
          "default_value": "FALSE"
        },
        {
          "name": "V_MANUAL_SHORT_DESC",
          "data_type": "THEMES.MANUAL_SHORT_DESC%TYPE",
          "default_value": null
        }
      ],
      "constants": [],
      "exceptions": [
        {
          "name": "ERR_MAP_EXISTS",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_MOLEC_ID_MISSING",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_NO_PORTF_MOLECULE_LEFT",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_UPD_INV_MAP",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INS_INV_MAP",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INV_MOL_SEQUENCE",
          "type": "EXCEPTION"
        },
        {
          "name": "UPDATE_UPD",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_line_no": 18,
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "select_statement",
          "sql_statement": "SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
          "statement_line_no": 21,
          "statement_indent": 4
        },
        {
          "condition": "( OR )",
          "type": "if_else",
          "if_line_no": 60,
          "then_line_no": 60,
          "if_indent": 4,
          "end_if_line_no": 401,
          "then_statements": [
            {
              "type": "select_statement",
              "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';",
              "statement_line_no": 61,
              "statement_indent": 8
            },
            {
              "condition": "(:NEW.MOLECULE_ID IS NULL)",
              "type": "if_else",
              "if_line_no": 68,
              "then_line_no": 68,
              "if_indent": 8,
              "end_if_line_no": 87,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE ERR_MOLEC_ID_MISSING;",
                  "statement_line_no": 69,
                  "statement_indent": 12
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "TRUE",
              "type": "if_else",
              "if_line_no": 89,
              "then_line_no": 89,
              "if_indent": 8,
              "end_if_line_no": 93,
              "then_statements": [
                {
                  "condition": "(:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS)",
                  "type": "if_else",
                  "if_line_no": 90,
                  "then_line_no": 90,
                  "if_indent": 12,
                  "end_if_line_no": 92,
                  "then_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE ERR_UPD_INV_MAP;",
                      "statement_line_no": 91,
                      "statement_indent": 16
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1'))",
              "type": "if_else",
              "if_line_no": 98,
              "then_line_no": 98,
              "if_indent": 8,
              "end_if_line_no": 122,
              "then_statements": [
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';",
                  "statement_line_no": 99,
                  "statement_indent": 12
                },
                {
                  "condition": "(V_COUNT_T_MOL_MAP > 0)",
                  "type": "if_else",
                  "if_line_no": 107,
                  "then_line_no": 107,
                  "if_indent": 12,
                  "end_if_line_no": 109,
                  "then_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE ERR_MAP_EXISTS;",
                      "statement_line_no": 108,
                      "statement_indent": 16
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                },
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';",
                  "statement_line_no": 111,
                  "statement_indent": 12
                },
                {
                  "condition": "(V_COUNT_T_MOL_MAP > 0)",
                  "type": "if_else",
                  "if_line_no": 119,
                  "then_line_no": 119,
                  "if_indent": 12,
                  "end_if_line_no": 121,
                  "then_statements": [
                    {
                      "type": "assignment",
                      "variable_name": "INVALID_MAPPING_EXISTS",
                      "assignment_operator": ":=",
                      "expression": "TRUE;",
                      "assignment_line_no": 120,
                      "assignment_indent": 16
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "TRUE",
              "type": "if_else",
              "if_line_no": 202,
              "then_line_no": 202,
              "if_indent": 8,
              "end_if_line_no": 393,
              "then_statements": [
                {
                  "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
                  "type": "if_else",
                  "if_line_no": 203,
                  "then_line_no": 203,
                  "if_indent": 12,
                  "end_if_line_no": 289,
                  "then_statements": [
                    {
                      "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR)",
                      "type": "if_else",
                      "if_line_no": 204,
                      "then_line_no": 204,
                      "if_indent": 16,
                      "end_if_line_no": 211,
                      "then_statements": [
                        {
                          "type": "update_statement",
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "statement_line_no": 205,
                          "statement_indent": 20
                        }
                      ],
                      "if_elses": [],
                      "else_statements": []
                    },
                    {
                      "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
                      "type": "if_else",
                      "if_line_no": 213,
                      "then_line_no": 213,
                      "if_indent": 16,
                      "end_if_line_no": 285,
                      "then_statements": [
                        {
                          "type": "update_statement",
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                          "statement_line_no": 222,
                          "statement_indent": 20
                        },
                        {
                          "condition": "(:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO)",
                          "type": "if_else",
                          "if_line_no": 228,
                          "then_line_no": 228,
                          "if_indent": 20,
                          "end_if_line_no": 250,
                          "then_statements": [
                            {
                              "type": "update_statement",
                              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;",
                              "statement_line_no": 231,
                              "statement_indent": 24
                            }
                          ],
                          "if_elses": [],
                          "else_statements": []
                        },
                        {
                          "condition": "(INVALID_MAPPING_EXISTS)",
                          "type": "if_else",
                          "if_line_no": 254,
                          "then_line_no": 254,
                          "if_indent": 20,
                          "end_if_line_no": 280,
                          "then_statements": [
                            {
                              "type": "update_statement",
                              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                              "statement_line_no": 257,
                              "statement_indent": 24
                            }
                          ],
                          "if_elses": [],
                          "else_statements": []
                        }
                      ],
                      "if_elses": [],
                      "else_statements": []
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                },
                {
                  "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
                  "type": "if_else",
                  "if_line_no": 291,
                  "then_line_no": 291,
                  "if_indent": 12,
                  "end_if_line_no": 351,
                  "then_statements": [
                    {
                      "type": "update_statement",
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                      "statement_line_no": 302,
                      "statement_indent": 16
                    },
                    {
                      "type": "update_statement",
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                      "statement_line_no": 310,
                      "statement_indent": 16
                    },
                    {
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "type": "if_else",
                      "if_line_no": 320,
                      "then_line_no": 320,
                      "if_indent": 16,
                      "end_if_line_no": 346,
                      "then_statements": [
                        {
                          "type": "update_statement",
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "statement_line_no": 323,
                          "statement_indent": 20
                        }
                      ],
                      "if_elses": [],
                      "else_statements": []
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                },
                {
                  "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO",
                  "type": "if_else",
                  "if_line_no": 352,
                  "then_line_no": 352,
                  "if_indent": 12,
                  "end_if_line_no": 392,
                  "then_statements": [
                    {
                      "type": "update_statement",
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;",
                      "statement_line_no": 355,
                      "statement_indent": 16
                    },
                    {
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "type": "if_else",
                      "if_line_no": 363,
                      "then_line_no": 363,
                      "if_indent": 16,
                      "end_if_line_no": 387,
                      "then_statements": [
                        {
                          "type": "update_statement",
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "statement_line_no": 366,
                          "statement_indent": 20
                        }
                      ],
                      "if_elses": [],
                      "else_statements": []
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "type": "function_calling",
              "function_name": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC",
              "parameters": {
                "parameter_type": "named",
                "positional_params": [],
                "named_params": {
                  "P_THEME_NO": ":NEW.THEME_NO",
                  "P_MOLECULE_ID": "0",
                  "P_DATE": "SYSDATE",
                  "P_MANUAL_SHORT_DESC": "V_MANUAL_SHORT_DESC"
                },
                "raw_text": "P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC"
              }
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );",
          "statement_line_no": 403,
          "statement_indent": 4
        },
        {
          "condition": "(V_SEQ_NO_DUPLICATE_CNT > 0)",
          "type": "if_else",
          "if_line_no": 419,
          "then_line_no": 419,
          "if_indent": 4,
          "end_if_line_no": 421,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE ERR_INV_MOL_SEQUENCE;",
              "statement_line_no": 420,
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "ERR_MAP_EXISTS",
          "when_line_no": 440,
          "when_indent": 4,
          "then_line_no": 440,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20110",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20110, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_MOLEC_ID_MISSING",
          "when_line_no": 442,
          "when_indent": 4,
          "then_line_no": 442,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20111",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20111, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_UPD_INV_MAP",
          "when_line_no": 444,
          "when_indent": 4,
          "then_line_no": 444,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20112",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20112, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INS_INV_MAP",
          "when_line_no": 446,
          "when_indent": 4,
          "then_line_no": 446,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INV_MOL_SEQUENCE",
          "when_line_no": 448,
          "when_indent": 4,
          "then_line_no": 448,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20120",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20120, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        }
      ],
      "exception_line_no": 439,
      "end_line_no": 465
    },
    "conversion_stats": {
      "select_statement": 5,
      "insert_statement": 0,
      "update_statement": 9,
      "delete_statement": 0,
      "raise_statement": 4,
      "assignment": 1,
      "for_loop": 0,
      "if_else": 18,
      "case_when": 0,
      "begin_end": 1,
      "exception_handler": 5,
      "function_calling": 6,
      "when_statement": 0,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 0,
      "return_statement": 0
    }
  },
  "on_delete": {
    "declarations": {
      "variables": [
        {
          "name": "V_COUNT_T_MAPPINGS",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_COUNT_T_MOL_MAP",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_MOLECULE_SEQ_NO",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_SEQ_NO_DUPLICATE_CNT",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "INVALID_MAPPING_EXISTS",
          "data_type": "BOOLEAN",
          "default_value": "FALSE"
        },
        {
          "name": "V_MANUAL_SHORT_DESC",
          "data_type": "THEMES.MANUAL_SHORT_DESC%TYPE",
          "default_value": null
        }
      ],
      "constants": [],
      "exceptions": [
        {
          "name": "ERR_MAP_EXISTS",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_MOLEC_ID_MISSING",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_NO_PORTF_MOLECULE_LEFT",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_UPD_INV_MAP",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INS_INV_MAP",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INV_MOL_SEQUENCE",
          "type": "EXCEPTION"
        },
        {
          "name": "UPDATE_UPD",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_line_no": 18,
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "select_statement",
          "sql_statement": "SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
          "statement_line_no": 21,
          "statement_indent": 4
        },
        {
          "condition": "TRUE",
          "type": "if_else",
          "if_line_no": 27,
          "then_line_no": 27,
          "if_indent": 4,
          "end_if_line_no": 58,
          "then_statements": [
            {
              "type": "update_statement",
              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
              "statement_line_no": 33,
              "statement_indent": 8
            },
            {
              "type": "update_statement",
              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
              "statement_line_no": 41,
              "statement_indent": 8
            },
            {
              "type": "function_calling",
              "function_name": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC",
              "parameters": {
                "parameter_type": "named",
                "positional_params": [],
                "named_params": {
                  "P_THEME_NO": ":OLD.THEME_NO",
                  "P_MOLECULE_ID": ":OLD.MOLECULE_ID",
                  "P_DATE": "SYSDATE",
                  "P_MANUAL_SHORT_DESC": "V_MANUAL_SHORT_DESC"
                },
                "raw_text": "P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC"
              }
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );",
          "statement_line_no": 403,
          "statement_indent": 4
        },
        {
          "condition": "(V_SEQ_NO_DUPLICATE_CNT > 0)",
          "type": "if_else",
          "if_line_no": 419,
          "then_line_no": 419,
          "if_indent": 4,
          "end_if_line_no": 421,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE ERR_INV_MOL_SEQUENCE;",
              "statement_line_no": 420,
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "ERR_MAP_EXISTS",
          "when_line_no": 440,
          "when_indent": 4,
          "then_line_no": 440,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20110",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20110, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_MOLEC_ID_MISSING",
          "when_line_no": 442,
          "when_indent": 4,
          "then_line_no": 442,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20111",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20111, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_UPD_INV_MAP",
          "when_line_no": 444,
          "when_indent": 4,
          "then_line_no": 444,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20112",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20112, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INS_INV_MAP",
          "when_line_no": 446,
          "when_indent": 4,
          "then_line_no": 446,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INV_MOL_SEQUENCE",
          "when_line_no": 448,
          "when_indent": 4,
          "then_line_no": 448,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20120",
                  "'MDM_THEME_MOLECULE_MAP_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20120, 'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        }
      ],
      "exception_line_no": 439,
      "end_line_no": 465
    },
    "conversion_stats": {
      "select_statement": 2,
      "insert_statement": 0,
      "update_statement": 2,
      "delete_statement": 0,
      "raise_statement": 1,
      "assignment": 0,
      "for_loop": 0,
      "if_else": 2,
      "case_when": 0,
      "begin_end": 1,
      "exception_handler": 5,
      "function_calling": 6,
      "when_statement": 0,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 0,
      "return_statement": 0
    }
  },
  "metadata": {
    "parse_timestamp": "2025-09-03T04:34:14.232923",
    "parser_version": "1.0",
    "file_details": {
      "filename": "trigger2.sql",
      "filepath": "D:\\DELOITTE\\ORACALE_to_json\\files\\oracle\\trigger2.sql",
      "filesize": 19269,
      "file_extension": ".sql",
      "last_modified": 1754641881.299394,
      "created_time": 1754566723.5840232,
      "is_file": true,
      "is_readable": true
    }
  }
}