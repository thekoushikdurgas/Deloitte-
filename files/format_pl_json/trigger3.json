{
  "on_insert": {
    "declarations": {
      "variables": [
        {
          "name": "V_TRIGGER_NAME",
          "data_type": "VARCHAR2(100)",
          "default_value": "'COMPANY_ADDRESSES_IOF'"
        },
        {
          "name": "CNTR",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_USERID",
          "data_type": "VARCHAR2(100)",
          "default_value": null
        },
        {
          "name": "V_COUNTRY_CD",
          "data_type": "CORE.COUNTRIES.COUNTRY_CD%TYPE",
          "default_value": null
        },
        {
          "name": "V_COMPANY_TYPE_CD",
          "data_type": "CFG.CFG_COMPANIES.COMPANY_TYPE_CD%TYPE",
          "default_value": null
        },
        {
          "name": "V_VALID_FROM",
          "data_type": "CFG.CFG_COMPANY_ADDRESSES.VALID_FROM%TYPE",
          "default_value": null
        }
      ],
      "constants": [],
      "exceptions": [
        {
          "name": "ERR_UPD",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INS",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_CTRY_CHG",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_NOT_ALLOWED_TO_INVALIDATE",
          "type": "EXCEPTION"
        },
        {
          "name": "TEST_ERR",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INS_LEGAL_ADDR",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_line_no": 14,
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "begin_end",
          "begin_line_no": 15,
          "begin_indent": 4,
          "begin_end_statements": [
            {
              "type": "assignment",
              "variable_name": "V_USERID",
              "assignment_operator": ":=",
              "expression": "TXO_UTIL.GET_USERID;",
              "assignment_line_no": 16,
              "assignment_indent": 8
            }
          ],
          "exception_handlers": [
            {
              "type": "exception_handler",
              "exception_name": "OTHERS",
              "when_line_no": 18,
              "when_indent": 8,
              "then_line_no": 18,
              "exception_statements": [
                {
                  "type": "assignment",
                  "variable_name": "V_USERID",
                  "assignment_operator": ":=",
                  "expression": "USER;",
                  "assignment_line_no": 19,
                  "assignment_indent": 12
                }
              ]
            }
          ],
          "exception_line_no": 17,
          "end_line_no": 20
        },
        {
          "type": "assignment",
          "variable_name": "CNTR",
          "assignment_operator": ":=",
          "expression": "0;",
          "assignment_line_no": 22,
          "assignment_indent": 4
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);",
          "statement_line_no": 23,
          "statement_indent": 4
        },
        {
          "condition": "TRUE",
          "type": "if_else",
          "if_line_no": 30,
          "then_line_no": 30,
          "if_indent": 4,
          "end_if_line_no": 34,
          "then_statements": [
            {
              "condition": "(CNTR > 0)",
              "type": "if_else",
              "if_line_no": 31,
              "then_line_no": 31,
              "if_indent": 8,
              "end_if_line_no": 33,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE ERR_INS;",
                  "statement_line_no": 32,
                  "statement_indent": 12
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "( OR )",
          "type": "if_else",
          "if_line_no": 36,
          "then_line_no": 36,
          "if_indent": 4,
          "end_if_line_no": 243,
          "then_statements": [
            {
              "type": "select_statement",
              "sql_statement": "SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);",
              "statement_line_no": 37,
              "statement_indent": 8
            },
            {
              "condition": "(V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L'))",
              "type": "if_else",
              "if_line_no": 43,
              "then_line_no": 43,
              "if_indent": 8,
              "end_if_line_no": 45,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE ERR_INS_LEGAL_ADDR;",
                  "statement_line_no": 44,
                  "statement_indent": 12
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L'))",
              "type": "if_else",
              "if_line_no": 47,
              "then_line_no": 47,
              "if_indent": 8,
              "end_if_line_no": 196,
              "then_statements": [
                {
                  "condition": "(NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID)",
                  "type": "if_else",
                  "if_line_no": 48,
                  "then_line_no": 48,
                  "if_indent": 12,
                  "end_if_line_no": 50,
                  "then_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE ERR_CTRY_CHG;",
                      "statement_line_no": 49,
                      "statement_indent": 16
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                },
                {
                  "condition": "(CNTR = 0)",
                  "type": "if_else",
                  "if_line_no": 52,
                  "then_line_no": 52,
                  "if_indent": 12,
                  "end_if_line_no": 195,
                  "then_statements": [
                    {
                      "type": "function_calling",
                      "function_name": "MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS",
                      "parameters": {
                        "parameter_type": "named",
                        "positional_params": [],
                        "named_params": {
                          "P_COMPANY_CD": ":NEW.COMPANY_CD",
                          "P_ADDRESS_TYPE_CD": ":NEW.ADDRESS_TYPE_CD",
                          "P_ADDITIONAL_NAME": ":NEW.ADDITIONAL_NAME",
                          "P_STREET": ":NEW.STREET",
                          "P_HOUSE_NO": ":NEW.HOUSE_NO",
                          "P_BUILDING": ":NEW.BUILDING",
                          "P_ADDITIONAL_INFO": ":NEW.ADDITIONAL_INFO",
                          "P_ZIP_CODE": ":NEW.ZIP_CODE",
                          "P_CITY": ":NEW.CITY",
                          "P_DISTRICT_NAME": ":NEW.DISTRICT_NAME",
                          "P_COUNTRY_ID": ":NEW.COUNTRY_ID",
                          "P_LATITUDE": ":NEW.LATITUDE",
                          "P_LONGITUDE": ":NEW.LONGITUDE",
                          "P_ADDRESS_REMARK": ":NEW.ADDRESS_REMARK",
                          "P_VALID_FROM": ":NEW.VALID_FROM",
                          "P_ACTION_TYPE": "'INSERT'"
                        },
                        "raw_text": "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"
                      }
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L'))",
              "type": "if_else",
              "if_line_no": 198,
              "then_line_no": 198,
              "if_indent": 8,
              "end_if_line_no": 242,
              "then_statements": [
                {
                  "condition": "(CNTR = 0)",
                  "type": "if_else",
                  "if_line_no": 199,
                  "then_line_no": 199,
                  "if_indent": 12,
                  "end_if_line_no": 241,
                  "then_statements": [
                    {
                      "type": "function_calling",
                      "function_name": "MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS",
                      "parameters": {
                        "parameter_type": "named",
                        "positional_params": [],
                        "named_params": {
                          "P_COMPANY_CD": ":NEW.COMPANY_CD",
                          "P_ADDRESS_TYPE_CD": ":NEW.ADDRESS_TYPE_CD",
                          "P_ADDITIONAL_NAME": ":NEW.ADDITIONAL_NAME",
                          "P_STREET": ":NEW.STREET",
                          "P_HOUSE_NO": ":NEW.HOUSE_NO",
                          "P_BUILDING": ":NEW.BUILDING",
                          "P_ADDITIONAL_INFO": ":NEW.ADDITIONAL_INFO",
                          "P_ZIP_CODE": ":NEW.ZIP_CODE",
                          "P_CITY": ":NEW.CITY",
                          "P_DISTRICT_NAME": ":NEW.DISTRICT_NAME",
                          "P_COUNTRY_ID": ":NEW.COUNTRY_ID",
                          "P_LATITUDE": ":NEW.LATITUDE",
                          "P_LONGITUDE": ":NEW.LONGITUDE",
                          "P_ADDRESS_REMARK": ":NEW.ADDRESS_REMARK",
                          "P_VALID_FROM": ":NEW.VALID_FROM",
                          "P_ACTION_TYPE": "'INSERT'"
                        },
                        "raw_text": "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"
                      }
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "ERR_UPD",
          "when_line_no": 253,
          "when_indent": 4,
          "then_line_no": 253,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20111",
                  "'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"
                ],
                "named_params": {},
                "raw_text": "-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INS",
          "when_line_no": 255,
          "when_indent": 4,
          "then_line_no": 255,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20112",
                  "'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"
                ],
                "named_params": {},
                "raw_text": "-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_CTRY_CHG",
          "when_line_no": 257,
          "when_indent": 4,
          "then_line_no": 257,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "TEST_ERR",
          "when_line_no": 259,
          "when_indent": 4,
          "then_line_no": 259,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"
                ],
                "named_params": {},
                "raw_text": "-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INS_LEGAL_ADDR",
          "when_line_no": 261,
          "when_indent": 4,
          "then_line_no": 261,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'The legal address cannot be inserted for this type of company'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'The legal address cannot be inserted for this type of company'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_NOT_ALLOWED_TO_INVALIDATE",
          "when_line_no": 263,
          "when_indent": 4,
          "then_line_no": 263,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'It is not allowed to invalidate/delete this type of address'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'It is not allowed to invalidate/delete this type of address'"
              }
            }
          ]
        }
      ],
      "exception_line_no": 252,
      "end_line_no": 265
    },
    "conversion_stats": {
      "select_statement": 2,
      "insert_statement": 0,
      "update_statement": 0,
      "delete_statement": 0,
      "raise_statement": 3,
      "assignment": 3,
      "for_loop": 0,
      "if_else": 9,
      "case_when": 0,
      "begin_end": 2,
      "exception_handler": 7,
      "function_calling": 8,
      "when_statement": 0,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 0,
      "return_statement": 0
    }
  },
  "on_update": {
    "declarations": {
      "variables": [
        {
          "name": "V_TRIGGER_NAME",
          "data_type": "VARCHAR2(100)",
          "default_value": "'COMPANY_ADDRESSES_IOF'"
        },
        {
          "name": "CNTR",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_USERID",
          "data_type": "VARCHAR2(100)",
          "default_value": null
        },
        {
          "name": "V_COUNTRY_CD",
          "data_type": "CORE.COUNTRIES.COUNTRY_CD%TYPE",
          "default_value": null
        },
        {
          "name": "V_COMPANY_TYPE_CD",
          "data_type": "CFG.CFG_COMPANIES.COMPANY_TYPE_CD%TYPE",
          "default_value": null
        },
        {
          "name": "V_VALID_FROM",
          "data_type": "CFG.CFG_COMPANY_ADDRESSES.VALID_FROM%TYPE",
          "default_value": null
        }
      ],
      "constants": [],
      "exceptions": [
        {
          "name": "ERR_UPD",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INS",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_CTRY_CHG",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_NOT_ALLOWED_TO_INVALIDATE",
          "type": "EXCEPTION"
        },
        {
          "name": "TEST_ERR",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INS_LEGAL_ADDR",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_line_no": 14,
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "begin_end",
          "begin_line_no": 15,
          "begin_indent": 4,
          "begin_end_statements": [
            {
              "type": "assignment",
              "variable_name": "V_USERID",
              "assignment_operator": ":=",
              "expression": "TXO_UTIL.GET_USERID;",
              "assignment_line_no": 16,
              "assignment_indent": 8
            }
          ],
          "exception_handlers": [
            {
              "type": "exception_handler",
              "exception_name": "OTHERS",
              "when_line_no": 18,
              "when_indent": 8,
              "then_line_no": 18,
              "exception_statements": [
                {
                  "type": "assignment",
                  "variable_name": "V_USERID",
                  "assignment_operator": ":=",
                  "expression": "USER;",
                  "assignment_line_no": 19,
                  "assignment_indent": 12
                }
              ]
            }
          ],
          "exception_line_no": 17,
          "end_line_no": 20
        },
        {
          "type": "assignment",
          "variable_name": "CNTR",
          "assignment_operator": ":=",
          "expression": "0;",
          "assignment_line_no": 22,
          "assignment_indent": 4
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);",
          "statement_line_no": 23,
          "statement_indent": 4
        },
        {
          "condition": "( OR )",
          "type": "if_else",
          "if_line_no": 36,
          "then_line_no": 36,
          "if_indent": 4,
          "end_if_line_no": 243,
          "then_statements": [
            {
              "type": "select_statement",
              "sql_statement": "SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);",
              "statement_line_no": 37,
              "statement_indent": 8
            },
            {
              "condition": "(V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L'))",
              "type": "if_else",
              "if_line_no": 43,
              "then_line_no": 43,
              "if_indent": 8,
              "end_if_line_no": 45,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE ERR_INS_LEGAL_ADDR;",
                  "statement_line_no": 44,
                  "statement_indent": 12
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L'))",
              "type": "if_else",
              "if_line_no": 47,
              "then_line_no": 47,
              "if_indent": 8,
              "end_if_line_no": 196,
              "then_statements": [
                {
                  "condition": "(NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID)",
                  "type": "if_else",
                  "if_line_no": 48,
                  "then_line_no": 48,
                  "if_indent": 12,
                  "end_if_line_no": 50,
                  "then_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE ERR_CTRY_CHG;",
                      "statement_line_no": 49,
                      "statement_indent": 16
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                },
                {
                  "condition": "(CNTR = 0)",
                  "type": "if_else",
                  "if_line_no": 52,
                  "then_line_no": 52,
                  "if_indent": 12,
                  "end_if_line_no": 195,
                  "then_statements": [
                    {
                      "type": "function_calling",
                      "function_name": "MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS",
                      "parameters": {
                        "parameter_type": "named",
                        "positional_params": [],
                        "named_params": {
                          "P_COMPANY_CD": ":NEW.COMPANY_CD",
                          "P_ADDRESS_TYPE_CD": ":NEW.ADDRESS_TYPE_CD",
                          "P_ADDITIONAL_NAME": ":NEW.ADDITIONAL_NAME",
                          "P_STREET": ":NEW.STREET",
                          "P_HOUSE_NO": ":NEW.HOUSE_NO",
                          "P_BUILDING": ":NEW.BUILDING",
                          "P_ADDITIONAL_INFO": ":NEW.ADDITIONAL_INFO",
                          "P_ZIP_CODE": ":NEW.ZIP_CODE",
                          "P_CITY": ":NEW.CITY",
                          "P_DISTRICT_NAME": ":NEW.DISTRICT_NAME",
                          "P_COUNTRY_ID": ":NEW.COUNTRY_ID",
                          "P_LATITUDE": ":NEW.LATITUDE",
                          "P_LONGITUDE": ":NEW.LONGITUDE",
                          "P_ADDRESS_REMARK": ":NEW.ADDRESS_REMARK",
                          "P_VALID_FROM": ":NEW.VALID_FROM",
                          "P_ACTION_TYPE": "'INSERT'"
                        },
                        "raw_text": "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"
                      }
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L'))",
              "type": "if_else",
              "if_line_no": 198,
              "then_line_no": 198,
              "if_indent": 8,
              "end_if_line_no": 242,
              "then_statements": [
                {
                  "condition": "(CNTR = 0)",
                  "type": "if_else",
                  "if_line_no": 199,
                  "then_line_no": 199,
                  "if_indent": 12,
                  "end_if_line_no": 241,
                  "then_statements": [
                    {
                      "type": "function_calling",
                      "function_name": "MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS",
                      "parameters": {
                        "parameter_type": "named",
                        "positional_params": [],
                        "named_params": {
                          "P_COMPANY_CD": ":NEW.COMPANY_CD",
                          "P_ADDRESS_TYPE_CD": ":NEW.ADDRESS_TYPE_CD",
                          "P_ADDITIONAL_NAME": ":NEW.ADDITIONAL_NAME",
                          "P_STREET": ":NEW.STREET",
                          "P_HOUSE_NO": ":NEW.HOUSE_NO",
                          "P_BUILDING": ":NEW.BUILDING",
                          "P_ADDITIONAL_INFO": ":NEW.ADDITIONAL_INFO",
                          "P_ZIP_CODE": ":NEW.ZIP_CODE",
                          "P_CITY": ":NEW.CITY",
                          "P_DISTRICT_NAME": ":NEW.DISTRICT_NAME",
                          "P_COUNTRY_ID": ":NEW.COUNTRY_ID",
                          "P_LATITUDE": ":NEW.LATITUDE",
                          "P_LONGITUDE": ":NEW.LONGITUDE",
                          "P_ADDRESS_REMARK": ":NEW.ADDRESS_REMARK",
                          "P_VALID_FROM": ":NEW.VALID_FROM",
                          "P_ACTION_TYPE": "'INSERT'"
                        },
                        "raw_text": "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"
                      }
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "ERR_UPD",
          "when_line_no": 253,
          "when_indent": 4,
          "then_line_no": 253,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20111",
                  "'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"
                ],
                "named_params": {},
                "raw_text": "-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INS",
          "when_line_no": 255,
          "when_indent": 4,
          "then_line_no": 255,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20112",
                  "'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"
                ],
                "named_params": {},
                "raw_text": "-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_CTRY_CHG",
          "when_line_no": 257,
          "when_indent": 4,
          "then_line_no": 257,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "TEST_ERR",
          "when_line_no": 259,
          "when_indent": 4,
          "then_line_no": 259,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"
                ],
                "named_params": {},
                "raw_text": "-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INS_LEGAL_ADDR",
          "when_line_no": 261,
          "when_indent": 4,
          "then_line_no": 261,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'The legal address cannot be inserted for this type of company'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'The legal address cannot be inserted for this type of company'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_NOT_ALLOWED_TO_INVALIDATE",
          "when_line_no": 263,
          "when_indent": 4,
          "then_line_no": 263,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'It is not allowed to invalidate/delete this type of address'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'It is not allowed to invalidate/delete this type of address'"
              }
            }
          ]
        }
      ],
      "exception_line_no": 252,
      "end_line_no": 265
    },
    "conversion_stats": {
      "select_statement": 2,
      "insert_statement": 0,
      "update_statement": 0,
      "delete_statement": 0,
      "raise_statement": 2,
      "assignment": 3,
      "for_loop": 0,
      "if_else": 7,
      "case_when": 0,
      "begin_end": 2,
      "exception_handler": 7,
      "function_calling": 8,
      "when_statement": 0,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 0,
      "return_statement": 0
    }
  },
  "on_delete": {
    "declarations": {
      "variables": [
        {
          "name": "V_TRIGGER_NAME",
          "data_type": "VARCHAR2(100)",
          "default_value": "'COMPANY_ADDRESSES_IOF'"
        },
        {
          "name": "CNTR",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_USERID",
          "data_type": "VARCHAR2(100)",
          "default_value": null
        },
        {
          "name": "V_COUNTRY_CD",
          "data_type": "CORE.COUNTRIES.COUNTRY_CD%TYPE",
          "default_value": null
        },
        {
          "name": "V_COMPANY_TYPE_CD",
          "data_type": "CFG.CFG_COMPANIES.COMPANY_TYPE_CD%TYPE",
          "default_value": null
        },
        {
          "name": "V_VALID_FROM",
          "data_type": "CFG.CFG_COMPANY_ADDRESSES.VALID_FROM%TYPE",
          "default_value": null
        }
      ],
      "constants": [],
      "exceptions": [
        {
          "name": "ERR_UPD",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INS",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_CTRY_CHG",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_NOT_ALLOWED_TO_INVALIDATE",
          "type": "EXCEPTION"
        },
        {
          "name": "TEST_ERR",
          "type": "EXCEPTION"
        },
        {
          "name": "ERR_INS_LEGAL_ADDR",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_line_no": 14,
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "begin_end",
          "begin_line_no": 15,
          "begin_indent": 4,
          "begin_end_statements": [
            {
              "type": "assignment",
              "variable_name": "V_USERID",
              "assignment_operator": ":=",
              "expression": "TXO_UTIL.GET_USERID;",
              "assignment_line_no": 16,
              "assignment_indent": 8
            }
          ],
          "exception_handlers": [
            {
              "type": "exception_handler",
              "exception_name": "OTHERS",
              "when_line_no": 18,
              "when_indent": 8,
              "then_line_no": 18,
              "exception_statements": [
                {
                  "type": "assignment",
                  "variable_name": "V_USERID",
                  "assignment_operator": ":=",
                  "expression": "USER;",
                  "assignment_line_no": 19,
                  "assignment_indent": 12
                }
              ]
            }
          ],
          "exception_line_no": 17,
          "end_line_no": 20
        },
        {
          "type": "assignment",
          "variable_name": "CNTR",
          "assignment_operator": ":=",
          "expression": "0;",
          "assignment_line_no": 22,
          "assignment_indent": 4
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);",
          "statement_line_no": 23,
          "statement_indent": 4
        },
        {
          "condition": "TRUE",
          "type": "if_else",
          "if_line_no": 245,
          "then_line_no": 245,
          "if_indent": 4,
          "end_if_line_no": 251,
          "then_statements": [
            {
              "condition": "(NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P'))",
              "type": "if_else",
              "if_line_no": 246,
              "then_line_no": 246,
              "if_indent": 8,
              "end_if_line_no": 248,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;",
                  "statement_line_no": 247,
                  "statement_indent": 12
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "type": "function_calling",
              "function_name": "MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS",
              "parameters": {
                "parameter_type": "named",
                "positional_params": [],
                "named_params": {
                  "P_COMPANY_CD": "NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)",
                  "P_ADDRESS_TYPE_CD": "NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD)",
                  "P_ACTION_TYPE": "'DELETE'"
                },
                "raw_text": "P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE'"
              }
            }
          ],
          "if_elses": [],
          "else_statements": []
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "ERR_UPD",
          "when_line_no": 253,
          "when_indent": 4,
          "then_line_no": 253,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20111",
                  "'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"
                ],
                "named_params": {},
                "raw_text": "-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INS",
          "when_line_no": 255,
          "when_indent": 4,
          "then_line_no": 255,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20112",
                  "'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"
                ],
                "named_params": {},
                "raw_text": "-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_CTRY_CHG",
          "when_line_no": 257,
          "when_indent": 4,
          "then_line_no": 257,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "TEST_ERR",
          "when_line_no": 259,
          "when_indent": 4,
          "then_line_no": 259,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"
                ],
                "named_params": {},
                "raw_text": "-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_INS_LEGAL_ADDR",
          "when_line_no": 261,
          "when_indent": 4,
          "then_line_no": 261,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'The legal address cannot be inserted for this type of company'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'The legal address cannot be inserted for this type of company'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ERR_NOT_ALLOWED_TO_INVALIDATE",
          "when_line_no": 263,
          "when_indent": 4,
          "then_line_no": 263,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20113",
                  "'It is not allowed to invalidate/delete this type of address'"
                ],
                "named_params": {},
                "raw_text": "-20113, 'It is not allowed to invalidate/delete this type of address'"
              }
            }
          ]
        }
      ],
      "exception_line_no": 252,
      "end_line_no": 265
    },
    "conversion_stats": {
      "select_statement": 1,
      "insert_statement": 0,
      "update_statement": 0,
      "delete_statement": 0,
      "raise_statement": 1,
      "assignment": 3,
      "for_loop": 0,
      "if_else": 2,
      "case_when": 0,
      "begin_end": 2,
      "exception_handler": 7,
      "function_calling": 7,
      "when_statement": 0,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 0,
      "return_statement": 0
    }
  },
  "metadata": {
    "parse_timestamp": "2025-09-03T04:34:14.816007",
    "parser_version": "1.0",
    "file_details": {
      "filename": "trigger3.sql",
      "filepath": "D:\\DELOITTE\\ORACALE_to_json\\files\\oracle\\trigger3.sql",
      "filesize": 13249,
      "file_extension": ".sql",
      "last_modified": 1754799723.2007897,
      "created_time": 1754566723.595678,
      "is_file": true,
      "is_readable": true
    }
  }
}