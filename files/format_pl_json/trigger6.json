{
  "on_insert": {
    "declarations": {
      "variables": [
        {
          "name": "V_TRIGGER_NAME",
          "data_type": "VARCHAR2(100)",
          "default_value": "'MDM_V_NEW_MEDICINE_PROPOSALS_IOF'"
        },
        {
          "name": "V_EVOLVED_THEME_NO",
          "data_type": "V_NEW_MEDICINE_PROPOSALS.EVOLVED_THEME_NO%TYPE",
          "default_value": null
        },
        {
          "name": "V_PROPOSAL_ID",
          "data_type": "NUMBER",
          "default_value": null
        },
        {
          "name": "C_PROPOSAL_STATUS_ACTIVE",
          "data_type": "VARCHAR2(1)",
          "default_value": "'A'"
        },
        {
          "name": "C_PROPOSAL_STATUS_EVOLVED",
          "data_type": "VARCHAR2(1)",
          "default_value": "'E'"
        },
        {
          "name": "C_PROPOSAL_STATUS_TERMINATED",
          "data_type": "VARCHAR2(1)",
          "default_value": "'T'"
        }
      ],
      "constants": [],
      "exceptions": [
        {
          "name": "V_NO_UPDATE_TO_EVOLVED",
          "type": "EXCEPTION"
        },
        {
          "name": "V_NO_UPDATE_TERMINATED_TO_ACTIVE",
          "type": "EXCEPTION"
        },
        {
          "name": "V_NO_UPDATE_EVOLVED_TO_TERMINATED",
          "type": "EXCEPTION"
        },
        {
          "name": "V_EXPLORATORY_THEMENO_NOT_NULL",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "assignment",
          "variable_name": "V_EVOLVED_THEME_NO",
          "assignment_operator": ":=",
          "expression": ":NEW.EVOLVED_THEME_NO;",
          "assignment_indent": 4
        },
        {
          "condition": "(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE V_NO_UPDATE_TO_EVOLVED;",
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;",
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "assignment",
              "variable_name": "V_EVOLVED_THEME_NO",
              "assignment_operator": ":=",
              "expression": "NULL;",
              "assignment_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE V_EXPLORATORY_THEMENO_NOT_NULL;",
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "TRUE",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "assignment",
              "variable_name": "V_PROPOSAL_ID",
              "assignment_operator": ":=",
              "expression": "PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;",
              "assignment_indent": 8
            },
            {
              "type": "insert_statement",
              "sql_statement": "INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );",
              "statement_indent": 8
            },
            {
              "condition": ":NEW.PARTNER_ID IS NOT NULL",
              "type": "if_else",
              "if_indent": 8,
              "then_statements": [
                {
                  "type": "function_calling",
                  "function_name": "MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA",
                  "parameters": {
                    "parameter_type": "positional",
                    "positional_params": [
                      "V_PROPOSAL_ID",
                      ":NEW.PARTNER_ID"
                    ],
                    "named_params": {},
                    "raw_text": "V_PROPOSAL_ID, :NEW.PARTNER_ID"
                  }
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "DUP_VAL_ON_INDEX",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20600",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20600, V_TRIGGER_NAME"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "V_NO_UPDATE_EVOLVED_TO_TERMINATED",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20800",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20800, V_TRIGGER_NAME"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "V_NO_UPDATE_TO_EVOLVED",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20900",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20900, V_TRIGGER_NAME"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "V_EXPLORATORY_THEMENO_NOT_NULL",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20940",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20940, V_TRIGGER_NAME"
              }
            }
          ]
        }
      ]
    },
    "conversion_stats": {
      "select_statement": 0,
      "insert_statement": 1,
      "update_statement": 0,
      "delete_statement": 0,
      "raise_statement": 3,
      "assignment": 3,
      "for_loop": 0,
      "if_else": 6,
      "case_when": 0,
      "begin_end": 1,
      "exception_handler": 4,
      "function_calling": 5,
      "when_statement": 0,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 0,
      "return_statement": 0
    }
  },
  "on_update": {
    "declarations": {
      "variables": [
        {
          "name": "V_TRIGGER_NAME",
          "data_type": "VARCHAR2(100)",
          "default_value": "'MDM_V_NEW_MEDICINE_PROPOSALS_IOF'"
        },
        {
          "name": "V_EVOLVED_THEME_NO",
          "data_type": "V_NEW_MEDICINE_PROPOSALS.EVOLVED_THEME_NO%TYPE",
          "default_value": null
        },
        {
          "name": "V_PROPOSAL_ID",
          "data_type": "NUMBER",
          "default_value": null
        },
        {
          "name": "C_PROPOSAL_STATUS_ACTIVE",
          "data_type": "VARCHAR2(1)",
          "default_value": "'A'"
        },
        {
          "name": "C_PROPOSAL_STATUS_EVOLVED",
          "data_type": "VARCHAR2(1)",
          "default_value": "'E'"
        },
        {
          "name": "C_PROPOSAL_STATUS_TERMINATED",
          "data_type": "VARCHAR2(1)",
          "default_value": "'T'"
        }
      ],
      "constants": [],
      "exceptions": [
        {
          "name": "V_NO_UPDATE_TO_EVOLVED",
          "type": "EXCEPTION"
        },
        {
          "name": "V_NO_UPDATE_TERMINATED_TO_ACTIVE",
          "type": "EXCEPTION"
        },
        {
          "name": "V_NO_UPDATE_EVOLVED_TO_TERMINATED",
          "type": "EXCEPTION"
        },
        {
          "name": "V_EXPLORATORY_THEMENO_NOT_NULL",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "assignment",
          "variable_name": "V_EVOLVED_THEME_NO",
          "assignment_operator": ":=",
          "expression": ":NEW.EVOLVED_THEME_NO;",
          "assignment_indent": 4
        },
        {
          "condition": "(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE V_NO_UPDATE_TO_EVOLVED;",
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;",
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "assignment",
              "variable_name": "V_EVOLVED_THEME_NO",
              "assignment_operator": ":=",
              "expression": "NULL;",
              "assignment_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE V_EXPLORATORY_THEMENO_NOT_NULL;",
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "TRUE",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "assignment",
              "variable_name": "V_PROPOSAL_ID",
              "assignment_operator": ":=",
              "expression": "PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;",
              "assignment_indent": 8
            },
            {
              "type": "insert_statement",
              "sql_statement": "INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );",
              "statement_indent": 8
            },
            {
              "condition": ":NEW.PARTNER_ID IS NOT NULL",
              "type": "if_else",
              "if_indent": 8,
              "then_statements": [
                {
                  "type": "function_calling",
                  "function_name": "MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA",
                  "parameters": {
                    "parameter_type": "positional",
                    "positional_params": [
                      "V_PROPOSAL_ID",
                      ":NEW.PARTNER_ID"
                    ],
                    "named_params": {},
                    "raw_text": "V_PROPOSAL_ID, :NEW.PARTNER_ID"
                  }
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "DUP_VAL_ON_INDEX",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20600",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20600, V_TRIGGER_NAME"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "V_NO_UPDATE_EVOLVED_TO_TERMINATED",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20800",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20800, V_TRIGGER_NAME"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "V_NO_UPDATE_TO_EVOLVED",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20900",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20900, V_TRIGGER_NAME"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "V_EXPLORATORY_THEMENO_NOT_NULL",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20940",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20940, V_TRIGGER_NAME"
              }
            }
          ]
        }
      ]
    },
    "conversion_stats": {
      "select_statement": 0,
      "insert_statement": 1,
      "update_statement": 0,
      "delete_statement": 0,
      "raise_statement": 3,
      "assignment": 3,
      "for_loop": 0,
      "if_else": 6,
      "case_when": 0,
      "begin_end": 1,
      "exception_handler": 4,
      "function_calling": 5,
      "when_statement": 0,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 0,
      "return_statement": 0
    }
  },
  "on_delete": {
    "declarations": {
      "variables": [
        {
          "name": "V_TRIGGER_NAME",
          "data_type": "VARCHAR2(100)",
          "default_value": "'MDM_V_NEW_MEDICINE_PROPOSALS_IOF'"
        },
        {
          "name": "V_EVOLVED_THEME_NO",
          "data_type": "V_NEW_MEDICINE_PROPOSALS.EVOLVED_THEME_NO%TYPE",
          "default_value": null
        },
        {
          "name": "V_PROPOSAL_ID",
          "data_type": "NUMBER",
          "default_value": null
        },
        {
          "name": "C_PROPOSAL_STATUS_ACTIVE",
          "data_type": "VARCHAR2(1)",
          "default_value": "'A'"
        },
        {
          "name": "C_PROPOSAL_STATUS_EVOLVED",
          "data_type": "VARCHAR2(1)",
          "default_value": "'E'"
        },
        {
          "name": "C_PROPOSAL_STATUS_TERMINATED",
          "data_type": "VARCHAR2(1)",
          "default_value": "'T'"
        }
      ],
      "constants": [],
      "exceptions": [
        {
          "name": "V_NO_UPDATE_TO_EVOLVED",
          "type": "EXCEPTION"
        },
        {
          "name": "V_NO_UPDATE_TERMINATED_TO_ACTIVE",
          "type": "EXCEPTION"
        },
        {
          "name": "V_NO_UPDATE_EVOLVED_TO_TERMINATED",
          "type": "EXCEPTION"
        },
        {
          "name": "V_EXPLORATORY_THEMENO_NOT_NULL",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "assignment",
          "variable_name": "V_EVOLVED_THEME_NO",
          "assignment_operator": ":=",
          "expression": ":NEW.EVOLVED_THEME_NO;",
          "assignment_indent": 4
        },
        {
          "condition": "(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE V_NO_UPDATE_TO_EVOLVED;",
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;",
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "assignment",
              "variable_name": "V_EVOLVED_THEME_NO",
              "assignment_operator": ":=",
              "expression": "NULL;",
              "assignment_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL)",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE V_EXPLORATORY_THEMENO_NOT_NULL;",
              "statement_indent": 8
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "TRUE",
          "type": "if_else",
          "if_indent": 4,
          "then_statements": [
            {
              "type": "assignment",
              "variable_name": "V_PROPOSAL_ID",
              "assignment_operator": ":=",
              "expression": "PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;",
              "assignment_indent": 8
            },
            {
              "type": "insert_statement",
              "sql_statement": "INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );",
              "statement_indent": 8
            },
            {
              "condition": ":NEW.PARTNER_ID IS NOT NULL",
              "type": "if_else",
              "if_indent": 8,
              "then_statements": [
                {
                  "type": "function_calling",
                  "function_name": "MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA",
                  "parameters": {
                    "parameter_type": "positional",
                    "positional_params": [
                      "V_PROPOSAL_ID",
                      ":NEW.PARTNER_ID"
                    ],
                    "named_params": {},
                    "raw_text": "V_PROPOSAL_ID, :NEW.PARTNER_ID"
                  }
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "DUP_VAL_ON_INDEX",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20600",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20600, V_TRIGGER_NAME"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "V_NO_UPDATE_EVOLVED_TO_TERMINATED",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20800",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20800, V_TRIGGER_NAME"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "V_NO_UPDATE_TO_EVOLVED",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20900",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20900, V_TRIGGER_NAME"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "V_EXPLORATORY_THEMENO_NOT_NULL",
          "when_indent": 4,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20940",
                  "V_TRIGGER_NAME"
                ],
                "named_params": {},
                "raw_text": "-20940, V_TRIGGER_NAME"
              }
            }
          ]
        }
      ]
    },
    "conversion_stats": {
      "select_statement": 0,
      "insert_statement": 1,
      "update_statement": 0,
      "delete_statement": 0,
      "raise_statement": 3,
      "assignment": 3,
      "for_loop": 0,
      "if_else": 6,
      "case_when": 0,
      "begin_end": 1,
      "exception_handler": 4,
      "function_calling": 5,
      "when_statement": 0,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 0,
      "return_statement": 0
    }
  },
  "metadata": {
    "parse_timestamp": "2025-08-28T19:32:18.871468",
    "parser_version": "1.0",
    "file_details": {
      "filename": "trigger6.sql",
      "filepath": "D:\\DELOITTE\\ORACALE_to_json\\files\\oracle\\trigger6.sql",
      "filesize": 3898,
      "file_extension": ".sql",
      "last_modified": 1755022623.40915,
      "created_time": 1755020625.774024,
      "is_file": true,
      "is_readable": true
    }
  }
}