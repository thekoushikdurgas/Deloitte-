{
  "on_insert": {
    "declarations": {
      "variables": [
        {
          "name": "V_COUNTER",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_CODE",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_ODG_NO",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_RESGRP_CD",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_RESLIN_CD",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_STATUS_CD",
          "data_type": "VARCHAR2(1)",
          "default_value": null
        },
        {
          "name": "V_DBA_CD",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_PORTF_PROJ_CD",
          "data_type": "VARCHAR2(1)",
          "default_value": null
        },
        {
          "name": "V_DESCRIPTION",
          "data_type": "VARCHAR2(500)",
          "default_value": null
        },
        {
          "name": "V_RESLIN_DESC",
          "data_type": "VARCHAR2(60)",
          "default_value": null
        },
        {
          "name": "V_THEME_DESC_LENGTH",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_D_REGISTRAT_DATE",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_D_INS_DATE",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_FUTURE_REGISTRAT",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_VALID_TO",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_USERID",
          "data_type": "VARCHAR2(30)",
          "default_value": null
        },
        {
          "name": "V_IS_ADMIN_CNT",
          "data_type": "SIMPLE_INTEGER",
          "default_value": "0"
        },
        {
          "name": "V_SEC_MOL_CNT",
          "data_type": "SIMPLE_INTEGER",
          "default_value": "0"
        },
        {
          "name": "V_MOLECULE_ID",
          "data_type": "VARCHAR2(5)",
          "default_value": "NULL"
        },
        {
          "name": "V_MOLECULE_RG_NO",
          "data_type": "VARCHAR2(20)",
          "default_value": "NULL"
        },
        {
          "name": "V_MOLEC_IN_LIC_PRTNR",
          "data_type": "VARCHAR2(15)",
          "default_value": "NULL"
        },
        {
          "name": "V_NEW_RG_NO",
          "data_type": "V_THEME_MOLECULES.RG_NO%TYPE",
          "default_value": null
        },
        {
          "name": "V_COMPARATOR_IND",
          "data_type": "V_THEME_MOLECULES.COMPARATOR_IND%TYPE",
          "default_value": null
        },
        {
          "name": "V_THEME_DESC_PROPOSAL",
          "data_type": "MDM_V_THEMES_MTN.THEME_DESC_PROPOSAL%TYPE",
          "default_value": null
        },
        {
          "name": "V_SHORT_NAME",
          "data_type": "VARCHAR2(30)",
          "default_value": null
        },
        {
          "name": "V_EVOLVED_NMP_CNT",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_TRADEMARK_NO",
          "data_type": "V_THEMES.TRADEMARK_NO%TYPE",
          "default_value": null
        },
        {
          "name": "V_MOLECULE_TYPE_ID",
          "data_type": "V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE",
          "default_value": null
        },
        {
          "name": "V_PHARMACOLOGICAL_TYPE_ID",
          "data_type": "V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE",
          "default_value": null
        }
      ],
      "constants": [
        {
          "name": "C_MOLECULE_TYPE_ID",
          "data_type": "V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE",
          "value": "99"
        },
        {
          "name": "C_PHARMACOLOGICAL_TYPE_ID",
          "data_type": "V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE",
          "value": "19"
        }
      ],
      "exceptions": [
        {
          "name": "INVALID_THEME_NO",
          "type": "EXCEPTION"
        },
        {
          "name": "DELETE_NO_MORE_POSSIBLE",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_NO_ONLY_INSERT",
          "type": "EXCEPTION"
        },
        {
          "name": "DESCRIPTION_TOO_LONG",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_DESC_PROPOSAL_TOO_LONG",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_DESC_ALT_TOO_LONG",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_NO_CANNOT_BE_INSERTED",
          "type": "EXCEPTION"
        },
        {
          "name": "ONLYONEOFFICIALCHANGEPERDAY",
          "type": "EXCEPTION"
        },
        {
          "name": "INSERTSMUSTBEOFFICIAL",
          "type": "EXCEPTION"
        },
        {
          "name": "THEMEDESCRIPTIONMANDATORY",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_DESC_NOT_UNIQUE",
          "type": "EXCEPTION"
        },
        {
          "name": "IN_PREP_NOT_PORTF_PROJ",
          "type": "EXCEPTION"
        },
        {
          "name": "IN_PREP_NOT_CLOSED",
          "type": "EXCEPTION"
        },
        {
          "name": "INVALID_MOLECULE_ID",
          "type": "EXCEPTION"
        },
        {
          "name": "SEC_MOL_LIST_NOT_EMPTY",
          "type": "EXCEPTION"
        },
        {
          "name": "ADMIN_UPDATE_ONLY",
          "type": "EXCEPTION"
        },
        {
          "name": "PORTF_PROJ_MOL_CRE_ERR",
          "type": "EXCEPTION"
        },
        {
          "name": "DEBUGGING",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_line_no": 51,
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "select_statement",
          "sql_statement": "SELECT NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID FROM DUAL;",
          "statement_line_no": 54,
          "statement_indent": 3
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID;",
          "statement_line_no": 61,
          "statement_indent": 3
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT TO_NUMBER(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1;",
          "statement_line_no": 70,
          "statement_indent": 3
        },
        {
          "condition": "(:NEW.IN_PREP_IND = 'Y')",
          "type": "if_else",
          "if_line_no": 95,
          "then_line_no": 96,
          "if_indent": 3,
          "end_if_line_no": 111,
          "then_statements": [
            {
              "condition": "(:NEW.PORTF_PROJ_CD <> 'Y')",
              "type": "if_else",
              "if_line_no": 97,
              "then_line_no": 97,
              "if_indent": 6,
              "end_if_line_no": 99,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE IN_PREP_NOT_PORTF_PROJ;",
                  "statement_line_no": 98,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0)",
              "type": "if_else",
              "if_line_no": 101,
              "then_line_no": 102,
              "if_indent": 6,
              "end_if_line_no": 104,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE IN_PREP_NOT_CLOSED;",
                  "statement_line_no": 103,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.MOLECULE_ID IS NULL)",
              "type": "if_else",
              "if_line_no": 106,
              "then_line_no": 106,
              "if_indent": 6,
              "end_if_line_no": 110,
              "then_statements": [
                {
                  "type": "function_calling",
                  "function_name": "TXO_UTIL.SET_WARNING",
                  "parameters": {
                    "parameter_type": "positional",
                    "positional_params": [
                      "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"
                    ],
                    "named_params": {},
                    "raw_text": "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"
                  }
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
          "type": "if_else",
          "if_line_no": 115,
          "then_line_no": 115,
          "if_indent": 3,
          "end_if_line_no": 145,
          "then_statements": [
            {
              "type": "begin_end",
              "begin_line_no": 116,
              "begin_indent": 6,
              "begin_end_statements": [
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';",
                  "statement_line_no": 117,
                  "statement_indent": 9
                }
              ],
              "exception_handlers": [
                {
                  "type": "exception_handler",
                  "exception_name": "NO_DATA_FOUND",
                  "when_line_no": 127,
                  "when_indent": 9,
                  "then_line_no": 127,
                  "exception_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE INVALID_MOLECULE_ID;",
                      "statement_line_no": 128,
                      "statement_indent": 12
                    }
                  ]
                }
              ],
              "exception_line_no": 126,
              "end_line_no": 129
            },
            {
              "condition": "(V_MOLECULE_RG_NO IS NULL)",
              "type": "if_else",
              "if_line_no": 131,
              "then_line_no": 131,
              "if_indent": 6,
              "end_if_line_no": 144,
              "then_statements": [
                {
                  "condition": "(V_COMPARATOR_IND = 'Y')",
                  "type": "if_else",
                  "if_line_no": 132,
                  "then_line_no": 132,
                  "if_indent": 9,
                  "end_if_line_no": 143,
                  "then_statements": [
                    {
                      "type": "null_statement",
                      "sql_statement": "NULL;",
                      "statement_line_no": 133,
                      "statement_indent": 12
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_ODG_NO",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);",
          "assignment_line_no": 150,
          "assignment_indent": 3
        },
        {
          "type": "assignment",
          "variable_name": "V_RESGRP_CD",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);",
          "assignment_line_no": 151,
          "assignment_indent": 3
        },
        {
          "type": "assignment",
          "variable_name": "V_RESLIN_CD",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);",
          "assignment_line_no": 152,
          "assignment_indent": 3
        },
        {
          "type": "assignment",
          "variable_name": "V_RESLIN_DESC",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));",
          "assignment_line_no": 153,
          "assignment_indent": 3
        },
        {
          "condition": "(:NEW.STATUS_DESC IS NOT NULL)",
          "type": "if_else",
          "if_line_no": 154,
          "then_line_no": 154,
          "if_indent": 3,
          "end_if_line_no": 163,
          "then_statements": [
            {
              "type": "select_statement",
              "sql_statement": "SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;",
              "statement_line_no": 155,
              "statement_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.DBA_DESC_CONCAT IS NOT NULL)",
          "type": "if_else",
          "if_line_no": 165,
          "then_line_no": 165,
          "if_indent": 3,
          "end_if_line_no": 176,
          "then_statements": [
            {
              "type": "select_statement",
              "sql_statement": "SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;",
              "statement_line_no": 166,
              "statement_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_MOLEC_IN_LIC_PRTNR",
          "assignment_operator": ":=",
          "expression": "GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);",
          "assignment_line_no": 178,
          "assignment_indent": 3
        },
        {
          "condition": "(:NEW.OFFICIAL_IND = 'N')",
          "type": "if_else",
          "if_line_no": 179,
          "then_line_no": 179,
          "if_indent": 3,
          "end_if_line_no": 183,
          "then_statements": [
            {
              "type": "assignment",
              "variable_name": "V_TRADEMARK_NO",
              "assignment_operator": ":=",
              "expression": ":NEW.TRADEMARK_NO;",
              "assignment_line_no": 180,
              "assignment_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_THEME_DESC_PROPOSAL",
          "assignment_operator": ":=",
          "expression": "GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');",
          "assignment_line_no": 185,
          "assignment_indent": 3
        },
        {
          "condition": "(:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30)",
          "type": "if_else",
          "if_line_no": 186,
          "then_line_no": 187,
          "if_indent": 3,
          "end_if_line_no": 189,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE THEME_DESC_PROPOSAL_TOO_LONG;",
              "statement_line_no": 188,
              "statement_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_SHORT_NAME",
          "assignment_operator": ":=",
          "expression": "COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);",
          "assignment_line_no": 191,
          "assignment_indent": 3
        },
        {
          "condition": "TRUE",
          "type": "if_else",
          "if_line_no": 192,
          "then_line_no": 192,
          "if_indent": 3,
          "end_if_line_no": 656,
          "then_statements": [
            {
              "condition": "(:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0)",
              "type": "if_else",
              "if_line_no": 193,
              "then_line_no": 194,
              "if_indent": 6,
              "end_if_line_no": 196,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE ADMIN_UPDATE_ONLY;",
                  "statement_line_no": 195,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "type": "assignment",
              "variable_name": "V_MOLECULE_ID",
              "assignment_operator": ":=",
              "expression": ":NEW.MOLECULE_ID;",
              "assignment_line_no": 201,
              "assignment_indent": 6
            },
            {
              "condition": "(:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL)",
              "type": "if_else",
              "if_line_no": 202,
              "then_line_no": 203,
              "if_indent": 6,
              "end_if_line_no": 247,
              "then_statements": [
                {
                  "condition": "(NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL)",
                  "type": "if_else",
                  "if_line_no": 204,
                  "then_line_no": 204,
                  "if_indent": 9,
                  "end_if_line_no": 246,
                  "then_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE PORTF_PROJ_MOL_CRE_ERR;",
                      "statement_line_no": 205,
                      "statement_indent": 12
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "LENGTH(:NEW.THEME_NO)",
              "type": "case_when",
              "case_line_no": 249,
              "case_indent": 6,
              "end_case_line_no": 276,
              "when_clauses": [
                {
                  "type": "when_statement",
                  "when_line_no": 250,
                  "when_indent": 9,
                  "condition": "4",
                  "then_line_no": 250,
                  "then_statements": [
                    {
                      "condition": "(SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9)",
                      "type": "if_else",
                      "if_line_no": 251,
                      "then_line_no": 258,
                      "if_indent": 12,
                      "end_if_line_no": 260,
                      "then_statements": [
                        {
                          "type": "raise_statement",
                          "sql_statement": "RAISE INVALID_THEME_NO;",
                          "statement_line_no": 259,
                          "statement_indent": 15
                        }
                      ],
                      "if_elses": [],
                      "else_statements": []
                    }
                  ]
                },
                {
                  "type": "when_statement",
                  "when_line_no": 261,
                  "when_indent": 9,
                  "condition": "5",
                  "then_line_no": 261,
                  "then_statements": [
                    {
                      "condition": "(SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9)",
                      "type": "if_else",
                      "if_line_no": 262,
                      "then_line_no": 271,
                      "if_indent": 12,
                      "end_if_line_no": 273,
                      "then_statements": [
                        {
                          "type": "raise_statement",
                          "sql_statement": "RAISE INVALID_THEME_NO;",
                          "statement_line_no": 272,
                          "statement_indent": 15
                        }
                      ],
                      "if_elses": [],
                      "else_statements": []
                    }
                  ]
                }
              ],
              "else_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE INVALID_THEME_NO;",
                  "statement_line_no": 275,
                  "statement_indent": 12
                }
              ]
            },
            {
              "type": "assignment",
              "variable_name": "V_COUNTER",
              "assignment_operator": ":=",
              "expression": "NULL;",
              "assignment_line_no": 278,
              "assignment_indent": 6
            },
            {
              "type": "select_statement",
              "sql_statement": "SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SELECT THEME_NO FROM V_THEMES UNION ALL SELECT THEME_NO FROM GMD.THEMES_ARCHIVE )                  T WHERE T.THEME_NO = :NEW.THEME_NO;",
              "statement_line_no": 281,
              "statement_indent": 6
            },
            {
              "condition": "(V_COUNTER > 0)",
              "type": "if_else",
              "if_line_no": 298,
              "then_line_no": 298,
              "if_indent": 6,
              "end_if_line_no": 300,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE THEME_NO_CANNOT_BE_INSERTED;",
                  "statement_line_no": 299,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "type": "assignment",
              "variable_name": "V_COUNTER",
              "assignment_operator": ":=",
              "expression": "NULL;",
              "assignment_line_no": 302,
              "assignment_indent": 6
            },
            {
              "type": "assignment",
              "variable_name": "V_D_REGISTRAT_DATE",
              "assignment_operator": ":=",
              "expression": "SYSDATE;",
              "assignment_line_no": 303,
              "assignment_indent": 6
            },
            {
              "condition": "(:NEW.OFFICIAL_IND = 'N')",
              "type": "if_else",
              "if_line_no": 306,
              "then_line_no": 306,
              "if_indent": 6,
              "end_if_line_no": 308,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE INSERTSMUSTBEOFFICIAL;",
                  "statement_line_no": 307,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(UPPER(:NEW.PORTF_PROJ_CD) = 'N')",
              "type": "if_else",
              "if_line_no": 310,
              "then_line_no": 310,
              "if_indent": 6,
              "end_if_line_no": 315,
              "then_statements": [
                {
                  "condition": "(:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0)",
                  "type": "if_else",
                  "if_line_no": 311,
                  "then_line_no": 312,
                  "if_indent": 9,
                  "end_if_line_no": 314,
                  "then_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE THEMEDESCRIPTIONMANDATORY;",
                      "statement_line_no": 313,
                      "statement_indent": 12
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(UPPER(:NEW.PORTF_PROJ_CD) = 'Y')",
              "type": "if_else",
              "if_line_no": 319,
              "then_line_no": 319,
              "if_indent": 6,
              "end_if_line_no": 344,
              "then_statements": [
                {
                  "type": "assignment",
                  "variable_name": "V_DESCRIPTION",
                  "assignment_operator": ":=",
                  "expression": "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );",
                  "assignment_line_no": 320,
                  "assignment_indent": 9
                },
                {
                  "condition": "(LENGTH(V_DESCRIPTION) > 90)",
                  "type": "if_else",
                  "if_line_no": 333,
                  "then_line_no": 333,
                  "if_indent": 9,
                  "end_if_line_no": 335,
                  "then_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE DESCRIPTION_TOO_LONG;",
                      "statement_line_no": 334,
                      "statement_indent": 12
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                },
                {
                  "type": "assignment",
                  "variable_name": "V_DESCRIPTION",
                  "assignment_operator": ":=",
                  "expression": "TRIM(V_DESCRIPTION);",
                  "assignment_line_no": 337,
                  "assignment_indent": 9
                },
                {
                  "type": "assignment",
                  "variable_name": "V_PORTF_PROJ_CD",
                  "assignment_operator": ":=",
                  "expression": "'Y';",
                  "assignment_line_no": 338,
                  "assignment_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "type": "assignment",
              "variable_name": "V_COUNTER",
              "assignment_operator": ":=",
              "expression": "NULL;",
              "assignment_line_no": 346,
              "assignment_indent": 6
            },
            {
              "type": "select_statement",
              "sql_statement": "SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION;",
              "statement_line_no": 347,
              "statement_indent": 6
            },
            {
              "condition": "(V_COUNTER > 0)",
              "type": "if_else",
              "if_line_no": 353,
              "then_line_no": 353,
              "if_indent": 6,
              "end_if_line_no": 355,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE THEME_DESC_NOT_UNIQUE;",
                  "statement_line_no": 354,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "type": "assignment",
              "variable_name": "V_COUNTER",
              "assignment_operator": ":=",
              "expression": "NULL;",
              "assignment_line_no": 357,
              "assignment_indent": 6
            },
            {
              "type": "assignment",
              "variable_name": "V_VALID_TO",
              "assignment_operator": ":=",
              "expression": "TO_DATE('09.09.9999', 'DD.MM.YYYY');",
              "assignment_line_no": 358,
              "assignment_indent": 6
            },
            {
              "type": "assignment",
              "variable_name": "V_SHORT_NAME",
              "assignment_operator": ":=",
              "expression": "NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));",
              "assignment_line_no": 359,
              "assignment_indent": 6
            },
            {
              "type": "insert_statement",
              "sql_statement": "INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ODG_NO, RESGRP_CD, RESLIN_CD, THEME_DESC, SHORT_NAME, STATUS_CD, DBA_CD, IN_PREP_IND, PROD_SHORT_CD, TRADEMARK_NO, BIO_ACTIVITY, APPLICANT, CONTACT, REGISTRAR, LINE_EXT_INFO, PORTF_PROJ_CD, CO_DEV_PRTNR, TECHNOLOGY_PRTNR, OFFICIAL_IND, CO_MAR_PRTNR, VALID_TO, PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC ) VALUES ( :NEW.THEME_NO, V_D_REGISTRAT_DATE, V_ODG_NO, V_RESGRP_CD, V_RESLIN_CD, V_DESCRIPTION, V_SHORT_NAME, V_STATUS_CD, V_DBA_CD, :NEW.IN_PREP_IND, :NEW.PROD_SHORT_CD, :NEW.TRADEMARK_NO, :NEW.BIO_ACTIVITY, :NEW.APPLICANT, :NEW.CONTACT, TXO_UTIL.GET_USERID, :NEW.LINE_EXT_INFO, V_PORTF_PROJ_CD, :NEW.CO_DEV_PRTNR, :NEW.TECHNOLOGY_PRTNR, :NEW.OFFICIAL_IND, :NEW.CO_MAR_PRTNR, V_VALID_TO, :NEW.PORTF_DA_GROUP_ID, :NEW.MANUAL_SHORT_DESC );",
              "statement_line_no": 360,
              "statement_indent": 6
            },
            {
              "condition": "(:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL)",
              "type": "if_else",
              "if_line_no": 413,
              "then_line_no": 414,
              "if_indent": 6,
              "end_if_line_no": 428,
              "then_statements": [
                {
                  "type": "insert_statement",
                  "sql_statement": "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );",
                  "statement_line_no": 417,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "( OR )",
          "type": "if_else",
          "if_line_no": 660,
          "then_line_no": 661,
          "if_indent": 3,
          "end_if_line_no": 747,
          "then_statements": [
            {
              "condition": "(:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL)",
              "type": "if_else",
              "if_line_no": 662,
              "then_line_no": 663,
              "if_indent": 6,
              "end_if_line_no": 720,
              "then_statements": [
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';",
                  "statement_line_no": 666,
                  "statement_indent": 9
                },
                {
                  "condition": "(V_EVOLVED_NMP_CNT = 0)",
                  "type": "if_else",
                  "if_line_no": 677,
                  "then_line_no": 677,
                  "if_indent": 9,
                  "end_if_line_no": 686,
                  "then_statements": [
                    {
                      "type": "update_statement",
                      "sql_statement": "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;",
                      "statement_line_no": 678,
                      "statement_indent": 12
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-'))",
              "type": "if_else",
              "if_line_no": 724,
              "then_line_no": 725,
              "if_indent": 6,
              "end_if_line_no": 746,
              "then_statements": [
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';",
                  "statement_line_no": 728,
                  "statement_indent": 9
                },
                {
                  "condition": "(V_EVOLVED_NMP_CNT > 0)",
                  "type": "if_else",
                  "if_line_no": 735,
                  "then_line_no": 735,
                  "if_indent": 9,
                  "end_if_line_no": 745,
                  "then_statements": [
                    {
                      "type": "update_statement",
                      "sql_statement": "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';",
                      "statement_line_no": 738,
                      "statement_indent": 12
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "( AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y')",
          "type": "if_else",
          "if_line_no": 751,
          "then_line_no": 753,
          "if_indent": 3,
          "end_if_line_no": 803,
          "then_statements": [
            {
              "condition": "(:NEW.PROPOSAL_ID IS NOT NULL)",
              "type": "if_else",
              "if_line_no": 754,
              "then_line_no": 754,
              "if_indent": 6,
              "end_if_line_no": 763,
              "then_statements": [
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';",
                  "statement_line_no": 755,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0))",
              "type": "if_else",
              "if_line_no": 767,
              "then_line_no": 769,
              "if_indent": 6,
              "end_if_line_no": 802,
              "then_statements": [
                {
                  "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
                  "type": "if_else",
                  "if_line_no": 770,
                  "then_line_no": 770,
                  "if_indent": 9,
                  "end_if_line_no": 785,
                  "then_statements": [
                    {
                      "type": "begin_end",
                      "begin_line_no": 771,
                      "begin_indent": 12,
                      "begin_end_statements": [
                        {
                          "type": "select_statement",
                          "sql_statement": "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';",
                          "statement_line_no": 772,
                          "statement_indent": 15
                        }
                      ],
                      "exception_handlers": [
                        {
                          "type": "exception_handler",
                          "exception_name": "NO_DATA_FOUND",
                          "when_line_no": 782,
                          "when_indent": 15,
                          "then_line_no": 782,
                          "exception_statements": [
                            {
                              "type": "raise_statement",
                              "sql_statement": "RAISE INVALID_MOLECULE_ID;",
                              "statement_line_no": 783,
                              "statement_indent": 18
                            }
                          ]
                        }
                      ],
                      "exception_line_no": 781,
                      "end_line_no": 784
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                },
                {
                  "type": "insert_statement",
                  "sql_statement": "INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );",
                  "statement_line_no": 787,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "begin_end",
          "begin_line_no": 805,
          "begin_indent": 3,
          "begin_end_statements": [
            {
              "for_expression": "( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )",
              "type": "for_loop",
              "for_line_no": 809,
              "for_indent": 6,
              "end_for_line_no": 822,
              "loop_variable": "I1",
              "for_statements": []
            }
          ],
          "exception_handlers": [],
          "exception_line_no": -1,
          "end_line_no": 823
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "ADMIN_UPDATE_ONLY",
          "when_line_no": 825,
          "when_indent": 3,
          "then_line_no": 825,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20115",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20115, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "IN_PREP_NOT_PORTF_PROJ",
          "when_line_no": 827,
          "when_indent": 3,
          "then_line_no": 827,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20116",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20116, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "IN_PREP_NOT_CLOSED",
          "when_line_no": 829,
          "when_indent": 3,
          "then_line_no": 829,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20117",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20117, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "INVALID_MOLECULE_ID",
          "when_line_no": 831,
          "when_indent": 3,
          "then_line_no": 831,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20118",
                  "'This is not a valid Molecule ID'"
                ],
                "named_params": {},
                "raw_text": "-20118, 'This is not a valid Molecule ID'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "SEC_MOL_LIST_NOT_EMPTY",
          "when_line_no": 833,
          "when_indent": 3,
          "then_line_no": 833,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20119",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20119, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "INVALID_THEME_NO",
          "when_line_no": 835,
          "when_indent": 3,
          "then_line_no": 835,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20101",
                  "'This is not a valid Theme No'"
                ],
                "named_params": {},
                "raw_text": "-20101, 'This is not a valid Theme No'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "DELETE_NO_MORE_POSSIBLE",
          "when_line_no": 837,
          "when_indent": 3,
          "then_line_no": 837,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_NO_ONLY_INSERT",
          "when_line_no": 839,
          "when_indent": 3,
          "then_line_no": 839,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'Theme No cannot be updated'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'Theme No cannot be updated'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "DESCRIPTION_TOO_LONG",
          "when_line_no": 841,
          "when_indent": 3,
          "then_line_no": 841,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'The automatically generated Theme Description \"' || V_DESCRIPTION || '\" is too long'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'The automatically generated Theme Description \"' || V_DESCRIPTION || '\" is too long'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_DESC_PROPOSAL_TOO_LONG",
          "when_line_no": 845,
          "when_indent": 3,
          "then_line_no": 845,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'The automatically generated Short Description Proposal \"' || :OLD.THEME_DESC_PROPOSAL || '\" is too long'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'The automatically generated Short Description Proposal \"' || :OLD.THEME_DESC_PROPOSAL || '\" is too long'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_DESC_ALT_TOO_LONG",
          "when_line_no": 849,
          "when_indent": 3,
          "then_line_no": 849,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'The automatically generated Downstream Theme Description \"' || :OLD.THEME_DESC_ALT || '\" is too long'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'The automatically generated Downstream Theme Description \"' || :OLD.THEME_DESC_ALT || '\" is too long'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_NO_CANNOT_BE_INSERTED",
          "when_line_no": 853,
          "when_indent": 3,
          "then_line_no": 853,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'This Theme No already exists'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'This Theme No already exists'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ONLYONEOFFICIALCHANGEPERDAY",
          "when_line_no": 855,
          "when_indent": 3,
          "then_line_no": 855,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'Official Change for this Theme No and Day already exists'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'Official Change for this Theme No and Day already exists'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "INSERTSMUSTBEOFFICIAL",
          "when_line_no": 857,
          "when_indent": 3,
          "then_line_no": 857,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'New Themes can only be inserted by Official Changes'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'New Themes can only be inserted by Official Changes'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEMEDESCRIPTIONMANDATORY",
          "when_line_no": 859,
          "when_indent": 3,
          "then_line_no": 859,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'If Pharma Rx Portfolio Project is set to \"No\", then the Theme Description must be filled'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'If Pharma Rx Portfolio Project is set to \"No\", then the Theme Description must be filled'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_DESC_NOT_UNIQUE",
          "when_line_no": 861,
          "when_indent": 3,
          "then_line_no": 861,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'This Theme Description already exists'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'This Theme Description already exists'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "PORTF_PROJ_MOL_CRE_ERR",
          "when_line_no": 863,
          "when_indent": 3,
          "then_line_no": 863,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20120",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20120, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "DEBUGGING",
          "when_line_no": 865,
          "when_indent": 3,
          "then_line_no": 865,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20900",
                  "'Debug in Themes IOF standard'"
                ],
                "named_params": {},
                "raw_text": "-20900, 'Debug in Themes IOF standard'"
              }
            }
          ]
        }
      ],
      "exception_line_no": 824,
      "end_line_no": 870
    },
    "conversion_stats": {
      "select_statement": 12,
      "insert_statement": 3,
      "update_statement": 2,
      "delete_statement": 0,
      "raise_statement": 15,
      "assignment": 19,
      "for_loop": 1,
      "if_else": 34,
      "case_when": 1,
      "begin_end": 4,
      "exception_handler": 20,
      "function_calling": 19,
      "when_statement": 2,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 1,
      "return_statement": 0
    }
  },
  "on_update": {
    "declarations": {
      "variables": [
        {
          "name": "V_COUNTER",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_CODE",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_ODG_NO",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_RESGRP_CD",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_RESLIN_CD",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_STATUS_CD",
          "data_type": "VARCHAR2(1)",
          "default_value": null
        },
        {
          "name": "V_DBA_CD",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_PORTF_PROJ_CD",
          "data_type": "VARCHAR2(1)",
          "default_value": null
        },
        {
          "name": "V_DESCRIPTION",
          "data_type": "VARCHAR2(500)",
          "default_value": null
        },
        {
          "name": "V_RESLIN_DESC",
          "data_type": "VARCHAR2(60)",
          "default_value": null
        },
        {
          "name": "V_THEME_DESC_LENGTH",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_D_REGISTRAT_DATE",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_D_INS_DATE",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_FUTURE_REGISTRAT",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_VALID_TO",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_USERID",
          "data_type": "VARCHAR2(30)",
          "default_value": null
        },
        {
          "name": "V_IS_ADMIN_CNT",
          "data_type": "SIMPLE_INTEGER",
          "default_value": "0"
        },
        {
          "name": "V_SEC_MOL_CNT",
          "data_type": "SIMPLE_INTEGER",
          "default_value": "0"
        },
        {
          "name": "V_MOLECULE_ID",
          "data_type": "VARCHAR2(5)",
          "default_value": "NULL"
        },
        {
          "name": "V_MOLECULE_RG_NO",
          "data_type": "VARCHAR2(20)",
          "default_value": "NULL"
        },
        {
          "name": "V_MOLEC_IN_LIC_PRTNR",
          "data_type": "VARCHAR2(15)",
          "default_value": "NULL"
        },
        {
          "name": "V_NEW_RG_NO",
          "data_type": "V_THEME_MOLECULES.RG_NO%TYPE",
          "default_value": null
        },
        {
          "name": "V_COMPARATOR_IND",
          "data_type": "V_THEME_MOLECULES.COMPARATOR_IND%TYPE",
          "default_value": null
        },
        {
          "name": "V_THEME_DESC_PROPOSAL",
          "data_type": "MDM_V_THEMES_MTN.THEME_DESC_PROPOSAL%TYPE",
          "default_value": null
        },
        {
          "name": "V_SHORT_NAME",
          "data_type": "VARCHAR2(30)",
          "default_value": null
        },
        {
          "name": "V_EVOLVED_NMP_CNT",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_TRADEMARK_NO",
          "data_type": "V_THEMES.TRADEMARK_NO%TYPE",
          "default_value": null
        },
        {
          "name": "V_MOLECULE_TYPE_ID",
          "data_type": "V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE",
          "default_value": null
        },
        {
          "name": "V_PHARMACOLOGICAL_TYPE_ID",
          "data_type": "V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE",
          "default_value": null
        }
      ],
      "constants": [
        {
          "name": "C_MOLECULE_TYPE_ID",
          "data_type": "V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE",
          "value": "99"
        },
        {
          "name": "C_PHARMACOLOGICAL_TYPE_ID",
          "data_type": "V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE",
          "value": "19"
        }
      ],
      "exceptions": [
        {
          "name": "INVALID_THEME_NO",
          "type": "EXCEPTION"
        },
        {
          "name": "DELETE_NO_MORE_POSSIBLE",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_NO_ONLY_INSERT",
          "type": "EXCEPTION"
        },
        {
          "name": "DESCRIPTION_TOO_LONG",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_DESC_PROPOSAL_TOO_LONG",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_DESC_ALT_TOO_LONG",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_NO_CANNOT_BE_INSERTED",
          "type": "EXCEPTION"
        },
        {
          "name": "ONLYONEOFFICIALCHANGEPERDAY",
          "type": "EXCEPTION"
        },
        {
          "name": "INSERTSMUSTBEOFFICIAL",
          "type": "EXCEPTION"
        },
        {
          "name": "THEMEDESCRIPTIONMANDATORY",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_DESC_NOT_UNIQUE",
          "type": "EXCEPTION"
        },
        {
          "name": "IN_PREP_NOT_PORTF_PROJ",
          "type": "EXCEPTION"
        },
        {
          "name": "IN_PREP_NOT_CLOSED",
          "type": "EXCEPTION"
        },
        {
          "name": "INVALID_MOLECULE_ID",
          "type": "EXCEPTION"
        },
        {
          "name": "SEC_MOL_LIST_NOT_EMPTY",
          "type": "EXCEPTION"
        },
        {
          "name": "ADMIN_UPDATE_ONLY",
          "type": "EXCEPTION"
        },
        {
          "name": "PORTF_PROJ_MOL_CRE_ERR",
          "type": "EXCEPTION"
        },
        {
          "name": "DEBUGGING",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_line_no": 51,
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "select_statement",
          "sql_statement": "SELECT NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID FROM DUAL;",
          "statement_line_no": 54,
          "statement_indent": 3
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID;",
          "statement_line_no": 61,
          "statement_indent": 3
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT TO_NUMBER(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1;",
          "statement_line_no": 70,
          "statement_indent": 3
        },
        {
          "condition": "(:NEW.IN_PREP_IND = 'Y')",
          "type": "if_else",
          "if_line_no": 95,
          "then_line_no": 96,
          "if_indent": 3,
          "end_if_line_no": 111,
          "then_statements": [
            {
              "condition": "(:NEW.PORTF_PROJ_CD <> 'Y')",
              "type": "if_else",
              "if_line_no": 97,
              "then_line_no": 97,
              "if_indent": 6,
              "end_if_line_no": 99,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE IN_PREP_NOT_PORTF_PROJ;",
                  "statement_line_no": 98,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0)",
              "type": "if_else",
              "if_line_no": 101,
              "then_line_no": 102,
              "if_indent": 6,
              "end_if_line_no": 104,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE IN_PREP_NOT_CLOSED;",
                  "statement_line_no": 103,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.MOLECULE_ID IS NULL)",
              "type": "if_else",
              "if_line_no": 106,
              "then_line_no": 106,
              "if_indent": 6,
              "end_if_line_no": 110,
              "then_statements": [
                {
                  "type": "function_calling",
                  "function_name": "TXO_UTIL.SET_WARNING",
                  "parameters": {
                    "parameter_type": "positional",
                    "positional_params": [
                      "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"
                    ],
                    "named_params": {},
                    "raw_text": "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"
                  }
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
          "type": "if_else",
          "if_line_no": 115,
          "then_line_no": 115,
          "if_indent": 3,
          "end_if_line_no": 145,
          "then_statements": [
            {
              "type": "begin_end",
              "begin_line_no": 116,
              "begin_indent": 6,
              "begin_end_statements": [
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';",
                  "statement_line_no": 117,
                  "statement_indent": 9
                }
              ],
              "exception_handlers": [
                {
                  "type": "exception_handler",
                  "exception_name": "NO_DATA_FOUND",
                  "when_line_no": 127,
                  "when_indent": 9,
                  "then_line_no": 127,
                  "exception_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE INVALID_MOLECULE_ID;",
                      "statement_line_no": 128,
                      "statement_indent": 12
                    }
                  ]
                }
              ],
              "exception_line_no": 126,
              "end_line_no": 129
            },
            {
              "condition": "(V_MOLECULE_RG_NO IS NULL)",
              "type": "if_else",
              "if_line_no": 131,
              "then_line_no": 131,
              "if_indent": 6,
              "end_if_line_no": 144,
              "then_statements": [
                {
                  "condition": "(V_COMPARATOR_IND = 'Y')",
                  "type": "if_else",
                  "if_line_no": 132,
                  "then_line_no": 132,
                  "if_indent": 9,
                  "end_if_line_no": 143,
                  "then_statements": [
                    {
                      "type": "null_statement",
                      "sql_statement": "NULL;",
                      "statement_line_no": 133,
                      "statement_indent": 12
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_ODG_NO",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);",
          "assignment_line_no": 150,
          "assignment_indent": 3
        },
        {
          "type": "assignment",
          "variable_name": "V_RESGRP_CD",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);",
          "assignment_line_no": 151,
          "assignment_indent": 3
        },
        {
          "type": "assignment",
          "variable_name": "V_RESLIN_CD",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);",
          "assignment_line_no": 152,
          "assignment_indent": 3
        },
        {
          "type": "assignment",
          "variable_name": "V_RESLIN_DESC",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));",
          "assignment_line_no": 153,
          "assignment_indent": 3
        },
        {
          "condition": "(:NEW.STATUS_DESC IS NOT NULL)",
          "type": "if_else",
          "if_line_no": 154,
          "then_line_no": 154,
          "if_indent": 3,
          "end_if_line_no": 163,
          "then_statements": [
            {
              "type": "select_statement",
              "sql_statement": "SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;",
              "statement_line_no": 155,
              "statement_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.DBA_DESC_CONCAT IS NOT NULL)",
          "type": "if_else",
          "if_line_no": 165,
          "then_line_no": 165,
          "if_indent": 3,
          "end_if_line_no": 176,
          "then_statements": [
            {
              "type": "select_statement",
              "sql_statement": "SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;",
              "statement_line_no": 166,
              "statement_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_MOLEC_IN_LIC_PRTNR",
          "assignment_operator": ":=",
          "expression": "GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);",
          "assignment_line_no": 178,
          "assignment_indent": 3
        },
        {
          "condition": "(:NEW.OFFICIAL_IND = 'N')",
          "type": "if_else",
          "if_line_no": 179,
          "then_line_no": 179,
          "if_indent": 3,
          "end_if_line_no": 183,
          "then_statements": [
            {
              "type": "assignment",
              "variable_name": "V_TRADEMARK_NO",
              "assignment_operator": ":=",
              "expression": ":NEW.TRADEMARK_NO;",
              "assignment_line_no": 180,
              "assignment_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_THEME_DESC_PROPOSAL",
          "assignment_operator": ":=",
          "expression": "GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');",
          "assignment_line_no": 185,
          "assignment_indent": 3
        },
        {
          "condition": "(:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30)",
          "type": "if_else",
          "if_line_no": 186,
          "then_line_no": 187,
          "if_indent": 3,
          "end_if_line_no": 189,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE THEME_DESC_PROPOSAL_TOO_LONG;",
              "statement_line_no": 188,
              "statement_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_SHORT_NAME",
          "assignment_operator": ":=",
          "expression": "COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);",
          "assignment_line_no": 191,
          "assignment_indent": 3
        },
        {
          "condition": "TRUE",
          "type": "if_else",
          "if_line_no": 192,
          "then_line_no": 192,
          "if_indent": 3,
          "end_if_line_no": 656,
          "then_statements": [
            {
              "condition": "(:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0",
              "type": "if_else",
              "if_line_no": 435,
              "then_line_no": 437,
              "if_indent": 6,
              "end_if_line_no": 439,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE ADMIN_UPDATE_ONLY;",
                  "statement_line_no": 438,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.THEME_NO <> :OLD.THEME_NO)",
              "type": "if_else",
              "if_line_no": 441,
              "then_line_no": 441,
              "if_indent": 6,
              "end_if_line_no": 443,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE THEME_NO_ONLY_INSERT;",
                  "statement_line_no": 442,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.OFFICIAL_IND = 'N')",
              "type": "if_else",
              "if_line_no": 449,
              "then_line_no": 449,
              "if_indent": 6,
              "end_if_line_no": 456,
              "then_statements": [
                {
                  "type": "assignment",
                  "variable_name": "V_D_REGISTRAT_DATE",
                  "assignment_operator": ":=",
                  "expression": "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');",
                  "assignment_line_no": 452,
                  "assignment_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD)",
              "type": "if_else",
              "if_line_no": 458,
              "then_line_no": 460,
              "if_indent": 6,
              "end_if_line_no": 484,
              "then_statements": [
                {
                  "type": "assignment",
                  "variable_name": "V_DESCRIPTION",
                  "assignment_operator": ":=",
                  "expression": "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );",
                  "assignment_line_no": 461,
                  "assignment_indent": 9
                },
                {
                  "type": "assignment",
                  "variable_name": "V_DESCRIPTION",
                  "assignment_operator": ":=",
                  "expression": "TRIM(V_DESCRIPTION);",
                  "assignment_line_no": 474,
                  "assignment_indent": 9
                },
                {
                  "type": "assignment",
                  "variable_name": "V_PORTF_PROJ_CD",
                  "assignment_operator": ":=",
                  "expression": "'Y';",
                  "assignment_line_no": 475,
                  "assignment_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(LENGTH(V_DESCRIPTION) > 90)",
              "type": "if_else",
              "if_line_no": 486,
              "then_line_no": 486,
              "if_indent": 6,
              "end_if_line_no": 488,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE DESCRIPTION_TOO_LONG;",
                  "statement_line_no": 487,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "type": "assignment",
              "variable_name": "V_COUNTER",
              "assignment_operator": ":=",
              "expression": "NULL;",
              "assignment_line_no": 493,
              "assignment_indent": 6
            },
            {
              "type": "select_statement",
              "sql_statement": "SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO;",
              "statement_line_no": 494,
              "statement_indent": 6
            },
            {
              "condition": "(V_COUNTER > 0)",
              "type": "if_else",
              "if_line_no": 501,
              "then_line_no": 501,
              "if_indent": 6,
              "end_if_line_no": 503,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE THEME_DESC_NOT_UNIQUE;",
                  "statement_line_no": 502,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "type": "assignment",
              "variable_name": "V_COUNTER",
              "assignment_operator": ":=",
              "expression": "NULL;",
              "assignment_line_no": 505,
              "assignment_indent": 6
            },
            {
              "condition": "(:NEW.OFFICIAL_IND = 'N')",
              "type": "if_else",
              "if_line_no": 508,
              "then_line_no": 508,
              "if_indent": 6,
              "end_if_line_no": 581,
              "then_statements": [
                {
                  "type": "update_statement",
                  "sql_statement": "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;",
                  "statement_line_no": 509,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "",
              "type": "case_when",
              "case_line_no": 586,
              "case_indent": 6,
              "end_case_line_no": 637,
              "when_clauses": [
                {
                  "type": "when_statement",
                  "when_line_no": 587,
                  "when_indent": 9,
                  "condition": ":OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL",
                  "then_line_no": 587,
                  "then_statements": [
                    {
                      "type": "insert_statement",
                      "sql_statement": "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );",
                      "statement_line_no": 590,
                      "statement_indent": 12
                    }
                  ]
                },
                {
                  "type": "when_statement",
                  "when_line_no": 601,
                  "when_indent": 9,
                  "condition": ":OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL",
                  "then_line_no": 601,
                  "then_statements": [
                    {
                      "type": "update_statement",
                      "sql_statement": "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';",
                      "statement_line_no": 604,
                      "statement_indent": 12
                    }
                  ]
                },
                {
                  "type": "when_statement",
                  "when_line_no": 612,
                  "when_indent": 9,
                  "condition": ":OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL",
                  "then_line_no": 612,
                  "then_statements": [
                    {
                      "type": "select_statement",
                      "sql_statement": "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';",
                      "statement_line_no": 613,
                      "statement_indent": 12
                    },
                    {
                      "condition": "(V_SEC_MOL_CNT > 0)",
                      "type": "if_else",
                      "if_line_no": 621,
                      "then_line_no": 621,
                      "if_indent": 12,
                      "end_if_line_no": 634,
                      "then_statements": [
                        {
                          "type": "raise_statement",
                          "sql_statement": "RAISE SEC_MOL_LIST_NOT_EMPTY;",
                          "statement_line_no": 622,
                          "statement_indent": 15
                        }
                      ],
                      "if_elses": [],
                      "else_statements": []
                    }
                  ]
                }
              ],
              "else_statements": [
                {
                  "type": "null_statement",
                  "sql_statement": "NULL;",
                  "statement_line_no": 636,
                  "statement_indent": 12
                }
              ]
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "( OR )",
          "type": "if_else",
          "if_line_no": 660,
          "then_line_no": 661,
          "if_indent": 3,
          "end_if_line_no": 747,
          "then_statements": [
            {
              "condition": "(:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL)",
              "type": "if_else",
              "if_line_no": 662,
              "then_line_no": 663,
              "if_indent": 6,
              "end_if_line_no": 720,
              "then_statements": [
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';",
                  "statement_line_no": 666,
                  "statement_indent": 9
                },
                {
                  "condition": "(V_EVOLVED_NMP_CNT = 0)",
                  "type": "if_else",
                  "if_line_no": 677,
                  "then_line_no": 677,
                  "if_indent": 9,
                  "end_if_line_no": 686,
                  "then_statements": [
                    {
                      "type": "update_statement",
                      "sql_statement": "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;",
                      "statement_line_no": 678,
                      "statement_indent": 12
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-'))",
              "type": "if_else",
              "if_line_no": 724,
              "then_line_no": 725,
              "if_indent": 6,
              "end_if_line_no": 746,
              "then_statements": [
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';",
                  "statement_line_no": 728,
                  "statement_indent": 9
                },
                {
                  "condition": "(V_EVOLVED_NMP_CNT > 0)",
                  "type": "if_else",
                  "if_line_no": 735,
                  "then_line_no": 735,
                  "if_indent": 9,
                  "end_if_line_no": 745,
                  "then_statements": [
                    {
                      "type": "update_statement",
                      "sql_statement": "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';",
                      "statement_line_no": 738,
                      "statement_indent": 12
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "begin_end",
          "begin_line_no": 805,
          "begin_indent": 3,
          "begin_end_statements": [
            {
              "for_expression": "( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )",
              "type": "for_loop",
              "for_line_no": 809,
              "for_indent": 6,
              "end_for_line_no": 822,
              "loop_variable": "I1",
              "for_statements": []
            }
          ],
          "exception_handlers": [],
          "exception_line_no": -1,
          "end_line_no": 823
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "ADMIN_UPDATE_ONLY",
          "when_line_no": 825,
          "when_indent": 3,
          "then_line_no": 825,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20115",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20115, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "IN_PREP_NOT_PORTF_PROJ",
          "when_line_no": 827,
          "when_indent": 3,
          "then_line_no": 827,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20116",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20116, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "IN_PREP_NOT_CLOSED",
          "when_line_no": 829,
          "when_indent": 3,
          "then_line_no": 829,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20117",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20117, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "INVALID_MOLECULE_ID",
          "when_line_no": 831,
          "when_indent": 3,
          "then_line_no": 831,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20118",
                  "'This is not a valid Molecule ID'"
                ],
                "named_params": {},
                "raw_text": "-20118, 'This is not a valid Molecule ID'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "SEC_MOL_LIST_NOT_EMPTY",
          "when_line_no": 833,
          "when_indent": 3,
          "then_line_no": 833,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20119",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20119, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "INVALID_THEME_NO",
          "when_line_no": 835,
          "when_indent": 3,
          "then_line_no": 835,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20101",
                  "'This is not a valid Theme No'"
                ],
                "named_params": {},
                "raw_text": "-20101, 'This is not a valid Theme No'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "DELETE_NO_MORE_POSSIBLE",
          "when_line_no": 837,
          "when_indent": 3,
          "then_line_no": 837,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_NO_ONLY_INSERT",
          "when_line_no": 839,
          "when_indent": 3,
          "then_line_no": 839,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'Theme No cannot be updated'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'Theme No cannot be updated'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "DESCRIPTION_TOO_LONG",
          "when_line_no": 841,
          "when_indent": 3,
          "then_line_no": 841,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'The automatically generated Theme Description \"' || V_DESCRIPTION || '\" is too long'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'The automatically generated Theme Description \"' || V_DESCRIPTION || '\" is too long'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_DESC_PROPOSAL_TOO_LONG",
          "when_line_no": 845,
          "when_indent": 3,
          "then_line_no": 845,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'The automatically generated Short Description Proposal \"' || :OLD.THEME_DESC_PROPOSAL || '\" is too long'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'The automatically generated Short Description Proposal \"' || :OLD.THEME_DESC_PROPOSAL || '\" is too long'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_DESC_ALT_TOO_LONG",
          "when_line_no": 849,
          "when_indent": 3,
          "then_line_no": 849,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'The automatically generated Downstream Theme Description \"' || :OLD.THEME_DESC_ALT || '\" is too long'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'The automatically generated Downstream Theme Description \"' || :OLD.THEME_DESC_ALT || '\" is too long'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_NO_CANNOT_BE_INSERTED",
          "when_line_no": 853,
          "when_indent": 3,
          "then_line_no": 853,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'This Theme No already exists'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'This Theme No already exists'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ONLYONEOFFICIALCHANGEPERDAY",
          "when_line_no": 855,
          "when_indent": 3,
          "then_line_no": 855,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'Official Change for this Theme No and Day already exists'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'Official Change for this Theme No and Day already exists'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "INSERTSMUSTBEOFFICIAL",
          "when_line_no": 857,
          "when_indent": 3,
          "then_line_no": 857,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'New Themes can only be inserted by Official Changes'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'New Themes can only be inserted by Official Changes'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEMEDESCRIPTIONMANDATORY",
          "when_line_no": 859,
          "when_indent": 3,
          "then_line_no": 859,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'If Pharma Rx Portfolio Project is set to \"No\", then the Theme Description must be filled'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'If Pharma Rx Portfolio Project is set to \"No\", then the Theme Description must be filled'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_DESC_NOT_UNIQUE",
          "when_line_no": 861,
          "when_indent": 3,
          "then_line_no": 861,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'This Theme Description already exists'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'This Theme Description already exists'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "PORTF_PROJ_MOL_CRE_ERR",
          "when_line_no": 863,
          "when_indent": 3,
          "then_line_no": 863,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20120",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20120, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "DEBUGGING",
          "when_line_no": 865,
          "when_indent": 3,
          "then_line_no": 865,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20900",
                  "'Debug in Themes IOF standard'"
                ],
                "named_params": {},
                "raw_text": "-20900, 'Debug in Themes IOF standard'"
              }
            }
          ]
        }
      ],
      "exception_line_no": 824,
      "end_line_no": 870
    },
    "conversion_stats": {
      "select_statement": 10,
      "insert_statement": 1,
      "update_statement": 4,
      "delete_statement": 0,
      "raise_statement": 9,
      "assignment": 14,
      "for_loop": 1,
      "if_else": 25,
      "case_when": 1,
      "begin_end": 3,
      "exception_handler": 19,
      "function_calling": 19,
      "when_statement": 3,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 2,
      "return_statement": 0
    }
  },
  "on_delete": {
    "declarations": {
      "variables": [
        {
          "name": "V_COUNTER",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_CODE",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_ODG_NO",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_RESGRP_CD",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_RESLIN_CD",
          "data_type": "VARCHAR2(2)",
          "default_value": null
        },
        {
          "name": "V_STATUS_CD",
          "data_type": "VARCHAR2(1)",
          "default_value": null
        },
        {
          "name": "V_DBA_CD",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_PORTF_PROJ_CD",
          "data_type": "VARCHAR2(1)",
          "default_value": null
        },
        {
          "name": "V_DESCRIPTION",
          "data_type": "VARCHAR2(500)",
          "default_value": null
        },
        {
          "name": "V_RESLIN_DESC",
          "data_type": "VARCHAR2(60)",
          "default_value": null
        },
        {
          "name": "V_THEME_DESC_LENGTH",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_D_REGISTRAT_DATE",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_D_INS_DATE",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_FUTURE_REGISTRAT",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_VALID_TO",
          "data_type": "DATE",
          "default_value": null
        },
        {
          "name": "V_USERID",
          "data_type": "VARCHAR2(30)",
          "default_value": null
        },
        {
          "name": "V_IS_ADMIN_CNT",
          "data_type": "SIMPLE_INTEGER",
          "default_value": "0"
        },
        {
          "name": "V_SEC_MOL_CNT",
          "data_type": "SIMPLE_INTEGER",
          "default_value": "0"
        },
        {
          "name": "V_MOLECULE_ID",
          "data_type": "VARCHAR2(5)",
          "default_value": "NULL"
        },
        {
          "name": "V_MOLECULE_RG_NO",
          "data_type": "VARCHAR2(20)",
          "default_value": "NULL"
        },
        {
          "name": "V_MOLEC_IN_LIC_PRTNR",
          "data_type": "VARCHAR2(15)",
          "default_value": "NULL"
        },
        {
          "name": "V_NEW_RG_NO",
          "data_type": "V_THEME_MOLECULES.RG_NO%TYPE",
          "default_value": null
        },
        {
          "name": "V_COMPARATOR_IND",
          "data_type": "V_THEME_MOLECULES.COMPARATOR_IND%TYPE",
          "default_value": null
        },
        {
          "name": "V_THEME_DESC_PROPOSAL",
          "data_type": "MDM_V_THEMES_MTN.THEME_DESC_PROPOSAL%TYPE",
          "default_value": null
        },
        {
          "name": "V_SHORT_NAME",
          "data_type": "VARCHAR2(30)",
          "default_value": null
        },
        {
          "name": "V_EVOLVED_NMP_CNT",
          "data_type": "PLS_INTEGER",
          "default_value": null
        },
        {
          "name": "V_TRADEMARK_NO",
          "data_type": "V_THEMES.TRADEMARK_NO%TYPE",
          "default_value": null
        },
        {
          "name": "V_MOLECULE_TYPE_ID",
          "data_type": "V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE",
          "default_value": null
        },
        {
          "name": "V_PHARMACOLOGICAL_TYPE_ID",
          "data_type": "V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE",
          "default_value": null
        }
      ],
      "constants": [
        {
          "name": "C_MOLECULE_TYPE_ID",
          "data_type": "V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE",
          "value": "99"
        },
        {
          "name": "C_PHARMACOLOGICAL_TYPE_ID",
          "data_type": "V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE",
          "value": "19"
        }
      ],
      "exceptions": [
        {
          "name": "INVALID_THEME_NO",
          "type": "EXCEPTION"
        },
        {
          "name": "DELETE_NO_MORE_POSSIBLE",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_NO_ONLY_INSERT",
          "type": "EXCEPTION"
        },
        {
          "name": "DESCRIPTION_TOO_LONG",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_DESC_PROPOSAL_TOO_LONG",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_DESC_ALT_TOO_LONG",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_NO_CANNOT_BE_INSERTED",
          "type": "EXCEPTION"
        },
        {
          "name": "ONLYONEOFFICIALCHANGEPERDAY",
          "type": "EXCEPTION"
        },
        {
          "name": "INSERTSMUSTBEOFFICIAL",
          "type": "EXCEPTION"
        },
        {
          "name": "THEMEDESCRIPTIONMANDATORY",
          "type": "EXCEPTION"
        },
        {
          "name": "THEME_DESC_NOT_UNIQUE",
          "type": "EXCEPTION"
        },
        {
          "name": "IN_PREP_NOT_PORTF_PROJ",
          "type": "EXCEPTION"
        },
        {
          "name": "IN_PREP_NOT_CLOSED",
          "type": "EXCEPTION"
        },
        {
          "name": "INVALID_MOLECULE_ID",
          "type": "EXCEPTION"
        },
        {
          "name": "SEC_MOL_LIST_NOT_EMPTY",
          "type": "EXCEPTION"
        },
        {
          "name": "ADMIN_UPDATE_ONLY",
          "type": "EXCEPTION"
        },
        {
          "name": "PORTF_PROJ_MOL_CRE_ERR",
          "type": "EXCEPTION"
        },
        {
          "name": "DEBUGGING",
          "type": "EXCEPTION"
        }
      ]
    },
    "main": {
      "type": "begin_end",
      "begin_line_no": 51,
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "type": "select_statement",
          "sql_statement": "SELECT NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID FROM DUAL;",
          "statement_line_no": 54,
          "statement_indent": 3
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID;",
          "statement_line_no": 61,
          "statement_indent": 3
        },
        {
          "type": "select_statement",
          "sql_statement": "SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT TO_NUMBER(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1;",
          "statement_line_no": 70,
          "statement_indent": 3
        },
        {
          "condition": "(:NEW.IN_PREP_IND = 'Y')",
          "type": "if_else",
          "if_line_no": 95,
          "then_line_no": 96,
          "if_indent": 3,
          "end_if_line_no": 111,
          "then_statements": [
            {
              "condition": "(:NEW.PORTF_PROJ_CD <> 'Y')",
              "type": "if_else",
              "if_line_no": 97,
              "then_line_no": 97,
              "if_indent": 6,
              "end_if_line_no": 99,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE IN_PREP_NOT_PORTF_PROJ;",
                  "statement_line_no": 98,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0)",
              "type": "if_else",
              "if_line_no": 101,
              "then_line_no": 102,
              "if_indent": 6,
              "end_if_line_no": 104,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE IN_PREP_NOT_CLOSED;",
                  "statement_line_no": 103,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(:NEW.MOLECULE_ID IS NULL)",
              "type": "if_else",
              "if_line_no": 106,
              "then_line_no": 106,
              "if_indent": 6,
              "end_if_line_no": 110,
              "then_statements": [
                {
                  "type": "function_calling",
                  "function_name": "TXO_UTIL.SET_WARNING",
                  "parameters": {
                    "parameter_type": "positional",
                    "positional_params": [
                      "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"
                    ],
                    "named_params": {},
                    "raw_text": "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"
                  }
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
          "type": "if_else",
          "if_line_no": 115,
          "then_line_no": 115,
          "if_indent": 3,
          "end_if_line_no": 145,
          "then_statements": [
            {
              "type": "begin_end",
              "begin_line_no": 116,
              "begin_indent": 6,
              "begin_end_statements": [
                {
                  "type": "select_statement",
                  "sql_statement": "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';",
                  "statement_line_no": 117,
                  "statement_indent": 9
                }
              ],
              "exception_handlers": [
                {
                  "type": "exception_handler",
                  "exception_name": "NO_DATA_FOUND",
                  "when_line_no": 127,
                  "when_indent": 9,
                  "then_line_no": 127,
                  "exception_statements": [
                    {
                      "type": "raise_statement",
                      "sql_statement": "RAISE INVALID_MOLECULE_ID;",
                      "statement_line_no": 128,
                      "statement_indent": 12
                    }
                  ]
                }
              ],
              "exception_line_no": 126,
              "end_line_no": 129
            },
            {
              "condition": "(V_MOLECULE_RG_NO IS NULL)",
              "type": "if_else",
              "if_line_no": 131,
              "then_line_no": 131,
              "if_indent": 6,
              "end_if_line_no": 144,
              "then_statements": [
                {
                  "condition": "(V_COMPARATOR_IND = 'Y')",
                  "type": "if_else",
                  "if_line_no": 132,
                  "then_line_no": 132,
                  "if_indent": 9,
                  "end_if_line_no": 143,
                  "then_statements": [
                    {
                      "type": "null_statement",
                      "sql_statement": "NULL;",
                      "statement_line_no": 133,
                      "statement_indent": 12
                    }
                  ],
                  "if_elses": [],
                  "else_statements": []
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_ODG_NO",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);",
          "assignment_line_no": 150,
          "assignment_indent": 3
        },
        {
          "type": "assignment",
          "variable_name": "V_RESGRP_CD",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);",
          "assignment_line_no": 151,
          "assignment_indent": 3
        },
        {
          "type": "assignment",
          "variable_name": "V_RESLIN_CD",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);",
          "assignment_line_no": 152,
          "assignment_indent": 3
        },
        {
          "type": "assignment",
          "variable_name": "V_RESLIN_DESC",
          "assignment_operator": ":=",
          "expression": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));",
          "assignment_line_no": 153,
          "assignment_indent": 3
        },
        {
          "condition": "(:NEW.STATUS_DESC IS NOT NULL)",
          "type": "if_else",
          "if_line_no": 154,
          "then_line_no": 154,
          "if_indent": 3,
          "end_if_line_no": 163,
          "then_statements": [
            {
              "type": "select_statement",
              "sql_statement": "SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;",
              "statement_line_no": 155,
              "statement_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "condition": "(:NEW.DBA_DESC_CONCAT IS NOT NULL)",
          "type": "if_else",
          "if_line_no": 165,
          "then_line_no": 165,
          "if_indent": 3,
          "end_if_line_no": 176,
          "then_statements": [
            {
              "type": "select_statement",
              "sql_statement": "SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;",
              "statement_line_no": 166,
              "statement_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_MOLEC_IN_LIC_PRTNR",
          "assignment_operator": ":=",
          "expression": "GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);",
          "assignment_line_no": 178,
          "assignment_indent": 3
        },
        {
          "condition": "(:NEW.OFFICIAL_IND = 'N')",
          "type": "if_else",
          "if_line_no": 179,
          "then_line_no": 179,
          "if_indent": 3,
          "end_if_line_no": 183,
          "then_statements": [
            {
              "type": "assignment",
              "variable_name": "V_TRADEMARK_NO",
              "assignment_operator": ":=",
              "expression": ":NEW.TRADEMARK_NO;",
              "assignment_line_no": 180,
              "assignment_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_THEME_DESC_PROPOSAL",
          "assignment_operator": ":=",
          "expression": "GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');",
          "assignment_line_no": 185,
          "assignment_indent": 3
        },
        {
          "condition": "(:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30)",
          "type": "if_else",
          "if_line_no": 186,
          "then_line_no": 187,
          "if_indent": 3,
          "end_if_line_no": 189,
          "then_statements": [
            {
              "type": "raise_statement",
              "sql_statement": "RAISE THEME_DESC_PROPOSAL_TOO_LONG;",
              "statement_line_no": 188,
              "statement_indent": 6
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "assignment",
          "variable_name": "V_SHORT_NAME",
          "assignment_operator": ":=",
          "expression": "COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);",
          "assignment_line_no": 191,
          "assignment_indent": 3
        },
        {
          "condition": "TRUE",
          "type": "if_else",
          "if_line_no": 192,
          "then_line_no": 192,
          "if_indent": 3,
          "end_if_line_no": 656,
          "then_statements": [
            {
              "condition": "((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0)",
              "type": "if_else",
              "if_line_no": 639,
              "then_line_no": 640,
              "if_indent": 6,
              "end_if_line_no": 642,
              "then_statements": [
                {
                  "type": "raise_statement",
                  "sql_statement": "RAISE ADMIN_UPDATE_ONLY;",
                  "statement_line_no": 641,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            },
            {
              "condition": "(TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE))",
              "type": "if_else",
              "if_line_no": 648,
              "then_line_no": 648,
              "if_indent": 6,
              "end_if_line_no": 655,
              "then_statements": [
                {
                  "type": "delete_statement",
                  "sql_statement": "DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);",
                  "statement_line_no": 649,
                  "statement_indent": 9
                }
              ],
              "if_elses": [],
              "else_statements": []
            }
          ],
          "if_elses": [],
          "else_statements": []
        },
        {
          "type": "begin_end",
          "begin_line_no": 805,
          "begin_indent": 3,
          "begin_end_statements": [
            {
              "for_expression": "( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )",
              "type": "for_loop",
              "for_line_no": 809,
              "for_indent": 6,
              "end_for_line_no": 822,
              "loop_variable": "I1",
              "for_statements": []
            }
          ],
          "exception_handlers": [],
          "exception_line_no": -1,
          "end_line_no": 823
        }
      ],
      "exception_handlers": [
        {
          "type": "exception_handler",
          "exception_name": "ADMIN_UPDATE_ONLY",
          "when_line_no": 825,
          "when_indent": 3,
          "then_line_no": 825,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20115",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20115, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "IN_PREP_NOT_PORTF_PROJ",
          "when_line_no": 827,
          "when_indent": 3,
          "then_line_no": 827,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20116",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20116, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "IN_PREP_NOT_CLOSED",
          "when_line_no": 829,
          "when_indent": 3,
          "then_line_no": 829,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20117",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20117, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "INVALID_MOLECULE_ID",
          "when_line_no": 831,
          "when_indent": 3,
          "then_line_no": 831,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20118",
                  "'This is not a valid Molecule ID'"
                ],
                "named_params": {},
                "raw_text": "-20118, 'This is not a valid Molecule ID'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "SEC_MOL_LIST_NOT_EMPTY",
          "when_line_no": 833,
          "when_indent": 3,
          "then_line_no": 833,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20119",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20119, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "INVALID_THEME_NO",
          "when_line_no": 835,
          "when_indent": 3,
          "then_line_no": 835,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20101",
                  "'This is not a valid Theme No'"
                ],
                "named_params": {},
                "raw_text": "-20101, 'This is not a valid Theme No'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "DELETE_NO_MORE_POSSIBLE",
          "when_line_no": 837,
          "when_indent": 3,
          "then_line_no": 837,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_NO_ONLY_INSERT",
          "when_line_no": 839,
          "when_indent": 3,
          "then_line_no": 839,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'Theme No cannot be updated'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'Theme No cannot be updated'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "DESCRIPTION_TOO_LONG",
          "when_line_no": 841,
          "when_indent": 3,
          "then_line_no": 841,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'The automatically generated Theme Description \"' || V_DESCRIPTION || '\" is too long'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'The automatically generated Theme Description \"' || V_DESCRIPTION || '\" is too long'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_DESC_PROPOSAL_TOO_LONG",
          "when_line_no": 845,
          "when_indent": 3,
          "then_line_no": 845,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'The automatically generated Short Description Proposal \"' || :OLD.THEME_DESC_PROPOSAL || '\" is too long'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'The automatically generated Short Description Proposal \"' || :OLD.THEME_DESC_PROPOSAL || '\" is too long'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_DESC_ALT_TOO_LONG",
          "when_line_no": 849,
          "when_indent": 3,
          "then_line_no": 849,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'The automatically generated Downstream Theme Description \"' || :OLD.THEME_DESC_ALT || '\" is too long'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'The automatically generated Downstream Theme Description \"' || :OLD.THEME_DESC_ALT || '\" is too long'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_NO_CANNOT_BE_INSERTED",
          "when_line_no": 853,
          "when_indent": 3,
          "then_line_no": 853,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'This Theme No already exists'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'This Theme No already exists'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "ONLYONEOFFICIALCHANGEPERDAY",
          "when_line_no": 855,
          "when_indent": 3,
          "then_line_no": 855,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'Official Change for this Theme No and Day already exists'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'Official Change for this Theme No and Day already exists'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "INSERTSMUSTBEOFFICIAL",
          "when_line_no": 857,
          "when_indent": 3,
          "then_line_no": 857,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'New Themes can only be inserted by Official Changes'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'New Themes can only be inserted by Official Changes'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEMEDESCRIPTIONMANDATORY",
          "when_line_no": 859,
          "when_indent": 3,
          "then_line_no": 859,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'If Pharma Rx Portfolio Project is set to \"No\", then the Theme Description must be filled'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'If Pharma Rx Portfolio Project is set to \"No\", then the Theme Description must be filled'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "THEME_DESC_NOT_UNIQUE",
          "when_line_no": 861,
          "when_indent": 3,
          "then_line_no": 861,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20400",
                  "'This Theme Description already exists'"
                ],
                "named_params": {},
                "raw_text": "-20400, 'This Theme Description already exists'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "PORTF_PROJ_MOL_CRE_ERR",
          "when_line_no": 863,
          "when_indent": 3,
          "then_line_no": 863,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20120",
                  "'MDM_V_THEMES_IOF'"
                ],
                "named_params": {},
                "raw_text": "-20120, 'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "type": "exception_handler",
          "exception_name": "DEBUGGING",
          "when_line_no": 865,
          "when_indent": 3,
          "then_line_no": 865,
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "RAISE_APPLICATION_ERROR",
              "parameters": {
                "parameter_type": "positional",
                "positional_params": [
                  "-20900",
                  "'Debug in Themes IOF standard'"
                ],
                "named_params": {},
                "raw_text": "-20900, 'Debug in Themes IOF standard'"
              }
            }
          ]
        }
      ],
      "exception_line_no": 824,
      "end_line_no": 870
    },
    "conversion_stats": {
      "select_statement": 6,
      "insert_statement": 0,
      "update_statement": 0,
      "delete_statement": 1,
      "raise_statement": 5,
      "assignment": 8,
      "for_loop": 1,
      "if_else": 14,
      "case_when": 0,
      "begin_end": 3,
      "exception_handler": 19,
      "function_calling": 19,
      "when_statement": 0,
      "elif_statement": 0,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 1,
      "return_statement": 0
    }
  },
  "metadata": {
    "parse_timestamp": "2025-09-03T04:34:13.235538",
    "parser_version": "1.0",
    "file_details": {
      "filename": "trigger1.sql",
      "filepath": "D:\\DELOITTE\\ORACALE_to_json\\files\\oracle\\trigger1.sql",
      "filesize": 30669,
      "file_extension": ".sql",
      "last_modified": 1756244400.3125362,
      "created_time": 1754566723.5715313,
      "is_file": true,
      "is_readable": true
    }
  }
}