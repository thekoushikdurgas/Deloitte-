{
  "declarations": {
    "variables": [
      {
        "name": "V_COUNT_T_MAPPINGS",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_COUNT_T_MOL_MAP",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_MOLECULE_SEQ_NO",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_SEQ_NO_DUPLICATE_CNT",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "INVALID_MAPPING_EXISTS",
        "data_type": "BOOLEAN",
        "default_value": "FALSE"
      },
      {
        "name": "V_MANUAL_SHORT_DESC",
        "data_type": "THEMES.MANUAL_SHORT_DESC%TYPE",
        "default_value": null
      }
    ],
    "constants": [],
    "exceptions": [
      {
        "name": "ERR_MAP_EXISTS",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_MOLEC_ID_MISSING",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_NO_PORTF_MOLECULE_LEFT",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_UPD_INV_MAP",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_INS_INV_MAP",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_INV_MOL_SEQUENCE",
        "type": "EXCEPTION"
      },
      {
        "name": "UPDATE_UPD",
        "type": "EXCEPTION"
      }
    ]
  },
  "main": [
    {
      "type": "begin_end",
      "begin_line_no": 18,
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "sql_statement": "SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
          "type": "select_statement",
          "statement_indent": 4,
          "statement_line_no": 21
        },
        {
          "type": "if_else",
          "condition": "(DELETING)",
          "then_statements": [
            {
              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
              "type": "update_statement",
              "statement_indent": 8,
              "statement_line_no": 33
            },
            {
              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
              "type": "update_statement",
              "statement_indent": 8,
              "statement_line_no": 41
            },
            {
              "statement": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );",
              "type": "unknown_statement",
              "indent": 8,
              "line_no": 52
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 27,
          "if_indent": 4,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 58
        },
        {
          "type": "if_else",
          "condition": "(INSERTING OR UPDATING)",
          "then_statements": [
            {
              "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';",
              "type": "select_statement",
              "statement_indent": 8,
              "statement_line_no": 61
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID IS NULL)",
              "then_statements": [
                {
                  "sql_statement": "RAISE ERR_MOLEC_ID_MISSING;",
                  "type": "raise_statement",
                  "statement_indent": 12,
                  "statement_line_no": 69
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 68,
              "if_indent": 8,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 87
            },
            {
              "type": "if_else",
              "condition": "(UPDATING)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS)",
                  "then_statements": [
                    {
                      "sql_statement": "RAISE ERR_UPD_INV_MAP;",
                      "type": "raise_statement",
                      "statement_indent": 16,
                      "statement_line_no": 91
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 90,
                  "if_indent": 12,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 92
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 89,
              "if_indent": 8,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 93
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1'))",
              "then_statements": [
                {
                  "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';",
                  "type": "select_statement",
                  "statement_indent": 12,
                  "statement_line_no": 99
                },
                {
                  "type": "if_else",
                  "condition": "(V_COUNT_T_MOL_MAP > 0)",
                  "then_statements": [
                    {
                      "sql_statement": "RAISE ERR_MAP_EXISTS;",
                      "type": "raise_statement",
                      "statement_indent": 16,
                      "statement_line_no": 108
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 107,
                  "if_indent": 12,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 109
                },
                {
                  "sql_statement": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';",
                  "type": "select_statement",
                  "statement_indent": 12,
                  "statement_line_no": 111
                },
                {
                  "type": "if_else",
                  "condition": "(V_COUNT_T_MOL_MAP > 0)",
                  "then_statements": [
                    {
                      "variable": "INVALID_MAPPING_EXISTS",
                      "value": "TRUE",
                      "type": "assignment_statement",
                      "statement_indent": 16,
                      "statement_line_no": 120
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 119,
                  "if_indent": 12,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 121
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 98,
              "if_indent": 8,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 122
            },
            {
              "type": "if_else",
              "condition": "(INSERTING)",
              "then_statements": [
                {
                  "type": "case_when",
                  "case_expression": "",
                  "when_clauses": [
                    {
                      "when_value": ":NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1",
                      "then_statements": [
                        {
                          "type": "if_else",
                          "condition": "(INVALID_MAPPING_EXISTS)",
                          "then_statements": [
                            {
                              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                              "type": "update_statement",
                              "statement_indent": 24,
                              "statement_line_no": 130
                            }
                          ],
                          "else_if": [],
                          "else_statements": [
                            {
                              "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                              "type": "insert_statement",
                              "statement_indent": 24,
                              "statement_line_no": 139
                            }
                          ],
                          "if_line_no": 127,
                          "if_indent": 20,
                          "else_if_line_nos": [],
                          "else_line_no": 137,
                          "end_if_line_no": 152
                        }
                      ],
                      "when_line_no": 126
                    },
                    {
                      "when_value": ":NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                          "type": "update_statement",
                          "statement_indent": 20,
                          "statement_line_no": 158
                        },
                        {
                          "type": "if_else",
                          "condition": "(INVALID_MAPPING_EXISTS)",
                          "then_statements": [
                            {
                              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                              "type": "update_statement",
                              "statement_indent": 24,
                              "statement_line_no": 170
                            }
                          ],
                          "else_if": [],
                          "else_statements": [
                            {
                              "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                              "type": "insert_statement",
                              "statement_indent": 24,
                              "statement_line_no": 179
                            }
                          ],
                          "if_line_no": 167,
                          "if_indent": 20,
                          "else_if_line_nos": [],
                          "else_line_no": 177,
                          "end_if_line_no": 192
                        }
                      ],
                      "when_line_no": 156
                    }
                  ],
                  "else_statements": [
                    {
                      "sql_statement": "RAISE ERR_INS_INV_MAP;",
                      "type": "raise_statement",
                      "statement_indent": 20,
                      "statement_line_no": 199
                    }
                  ],
                  "case_line_no": 125,
                  "case_indent": 12,
                  "when_line_nos": [
                    126,
                    156
                  ],
                  "else_line_no": 196,
                  "end_case_line_no": 200
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 124,
              "if_indent": 8,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 201
            },
            {
              "type": "if_else",
              "condition": "(UPDATING)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
                  "then_statements": [
                    {
                      "type": "if_else",
                      "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 20,
                          "statement_line_no": 205
                        }
                      ],
                      "else_if": [],
                      "else_statements": [],
                      "if_line_no": 204,
                      "if_indent": 16,
                      "else_if_line_nos": [],
                      "else_line_no": null,
                      "end_if_line_no": 211
                    },
                    {
                      "type": "if_else",
                      "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 20,
                          "statement_line_no": 222
                        },
                        {
                          "type": "if_else",
                          "condition": "(:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO)",
                          "then_statements": [
                            {
                              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;",
                              "type": "update_statement",
                              "statement_indent": 24,
                              "statement_line_no": 231
                            }
                          ],
                          "else_if": [],
                          "else_statements": [
                            {
                              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;",
                              "type": "update_statement",
                              "statement_indent": 24,
                              "statement_line_no": 242
                            }
                          ],
                          "if_line_no": 228,
                          "if_indent": 20,
                          "else_if_line_nos": [],
                          "else_line_no": 239,
                          "end_if_line_no": 250
                        },
                        {
                          "type": "if_else",
                          "condition": "(INVALID_MAPPING_EXISTS)",
                          "then_statements": [
                            {
                              "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                              "type": "update_statement",
                              "statement_indent": 24,
                              "statement_line_no": 257
                            }
                          ],
                          "else_if": [],
                          "else_statements": [
                            {
                              "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                              "type": "insert_statement",
                              "statement_indent": 24,
                              "statement_line_no": 267
                            }
                          ],
                          "if_line_no": 254,
                          "if_indent": 20,
                          "else_if_line_nos": [],
                          "else_line_no": 265,
                          "end_if_line_no": 280
                        }
                      ],
                      "else_if": [],
                      "else_statements": [],
                      "if_line_no": 213,
                      "if_indent": 16,
                      "else_if_line_nos": [],
                      "else_line_no": null,
                      "end_if_line_no": 285
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 203,
                  "if_indent": 12,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 289
                },
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 16,
                      "statement_line_no": 302
                    },
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                      "type": "update_statement",
                      "statement_indent": 16,
                      "statement_line_no": 310
                    },
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 20,
                          "statement_line_no": 323
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 20,
                          "statement_line_no": 333
                        }
                      ],
                      "if_line_no": 320,
                      "if_indent": 16,
                      "else_if_line_nos": [],
                      "else_line_no": 331,
                      "end_if_line_no": 346
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 291,
                  "if_indent": 12,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 351
                },
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;",
                      "type": "update_statement",
                      "statement_indent": 16,
                      "statement_line_no": 355
                    },
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement",
                          "statement_indent": 20,
                          "statement_line_no": 366
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR );",
                          "type": "insert_statement",
                          "statement_indent": 20,
                          "statement_line_no": 376
                        }
                      ],
                      "if_line_no": 363,
                      "if_indent": 16,
                      "else_if_line_nos": [],
                      "else_line_no": 374,
                      "end_if_line_no": 387
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_line_no": 352,
                  "if_indent": 12,
                  "else_if_line_nos": [],
                  "else_line_no": null,
                  "end_if_line_no": 392
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_line_no": 202,
              "if_indent": 8,
              "else_if_line_nos": [],
              "else_line_no": null,
              "end_if_line_no": 393
            },
            {
              "statement": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );",
              "type": "unknown_statement",
              "indent": 8,
              "line_no": 395
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 60,
          "if_indent": 4,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 401
        },
        {
          "sql_statement": "SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );",
          "type": "select_statement",
          "statement_indent": 4,
          "statement_line_no": 403
        },
        {
          "type": "if_else",
          "condition": "(V_SEQ_NO_DUPLICATE_CNT > 0)",
          "then_statements": [
            {
              "sql_statement": "RAISE ERR_INV_MOL_SEQUENCE;",
              "type": "raise_statement",
              "statement_indent": 8,
              "statement_line_no": 420
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_line_no": 419,
          "if_indent": 4,
          "else_if_line_nos": [],
          "else_line_no": null,
          "end_if_line_no": 421
        }
      ],
      "exception_handlers": [
        {
          "exception_name": "ERR_MAP_EXISTS",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20110",
                "handler_string": "'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "exception_name": "ERR_MOLEC_ID_MISSING",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20111",
                "handler_string": "'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "exception_name": "ERR_UPD_INV_MAP",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20112",
                "handler_string": "'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "exception_name": "ERR_INS_INV_MAP",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20113",
                "handler_string": "'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        },
        {
          "exception_name": "ERR_INV_MOL_SEQUENCE",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20120",
                "handler_string": "'MDM_THEME_MOLECULE_MAP_IOF'"
              }
            }
          ]
        }
      ],
      "exception_line_no": 439,
      "end_line_no": 465
    }
  ],
  "sql_comments": [
    "/*\n        DELETE FROM theme_molecule_map tmm\n              WHERE     tmm.theme_no = :old.theme_no\n                    AND tmm.molecule_id = :old.molecule_id;\n        */",
    "/*\n        -- DELETE does not work because refresh doesn't find the record\n        -----------------------------------------------------------------\n        -- delete the mapping to this molecule\n        DELETE FROM theme_molecule_map tmm\n              WHERE     tmm.theme_no = :old.theme_no\n                    AND tmm.molecule_id = :old.molecule_id;\n        -- move left\n        UPDATE theme_molecule_map tmm\n           SET tmm.molecule_seq_no = tmm.molecule_seq_no - 1\n         WHERE     tmm.theme_no = :old.theme_no\n               AND tmm.molecule_seq_no > :old.molecule_seq_no;\n         */",
    "/*\n                    DELETE FROM theme_molecule_map tmm\n                          WHERE     tmm.theme_no = :new.theme_no\n                                AND tmm.molecule_id = :old.molecule_id;\n                    */",
    "/*\n                DELETE FROM theme_molecule_map tmm\n                      WHERE     tmm.theme_no = :new.theme_no\n                            AND tmm.molecule_id = :old.molecule_id;\n                            */",
    "/*\n    IF (v_mappings_changed)\n    THEN                  -- store the theme_no for theme with changed mapping\n        -- as a description update may be necessary (for portfolio projects)\n        gmd.gmd_util_themes.g_theme_no_upd_molec_map :=\n            v_theme_no_upd_molec_map;\n        -- debugging, remove for production\n        INSERT INTO jap_debug_tmmap\n                 VALUES (\n                            SYSDATE,\n                               'MDMAPPL.MDM_THEME_MOLECULE_MAP_IOF => gmd_util_themes.g_theme_no_upd_molec_map: '\n                            || gmd_util_themes.g_theme_no_upd_molec_map,\n                            NULL);\n    END IF;\n    */",
    "/*\nWHEN OTHERS\nTHEN\n    raise_application_error (\n        -20199,\n           v_count_t_mappings\n        || ' nm: '\n        || :new.molecule_id\n        || ' om: '\n        || :old.molecule_id\n        || ' ms: '\n        || :new.molecule_seq_no\n        || 'error: '\n        || SQLERRM);\n        */",
    "-- how many for one theme",
    "-- how many for one theme/molecule combination (zero/one expected)",
    "--   v_mappings_changed         BOOLEAN := FALSE;",
    "--   v_theme_no_upd_molec_map   themes.theme_no%TYPE;",
    "--chevali1",
    "-- move left (valid mappings only)",
    "--   v_mappings_changed := TRUE;",
    "--  v_theme_no_upd_molec_map := :old.theme_no;",
    "-- Update Theme Description",
    "-- Check if theme_no <=> molecule_id valid or invalid mapping exists",
    "--  for changed molecule_ids",
    "-- update to valid, place mapping at the end",
    "-- this is a real new mapping => insert",
    "-- insert new, valid mapping at the end",
    "--    v_mappings_changed := TRUE;",
    "--    v_theme_no_upd_molec_map := :new.theme_no;",
    "-- move existing and insert mapping",
    "-- move valid mappings right",
    "-- place new mapping on new position",
    "-- update to valid, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on new position",
    "--    v_mappings_changed := TRUE;",
    "--    v_theme_no_upd_molec_map := :new.theme_no;",
    "--(:new.molecule_seq_no < v_count_t_mappings + 1)",
    "------------- INSERTING-CASES ----------------------------",
    "---INSERTING -------------------------------------------",
    "-- BLOCK START  existing molecule is moved (update seq_no)",
    "-- existing molecule is moved (update seq_no)",
    "-- delete old mapping",
    "-- move valid mappings left",
    "-- move valid mappings right",
    "-- place valid mapping on new position",
    "-- update to valid, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on new position",
    "--   v_mappings_changed := TRUE;",
    "--   v_theme_no_upd_molec_map := :new.theme_no;",
    "-- BLOCK END  existing molecule is moved (update seq_no)",
    "-- BLOCK START  new molecule in arbitrary position",
    "-- we know that the new mapping doesn't exist yet",
    "-- we know that the old mapping exists",
    "-- old mapping  is removed",
    "-- new mapping is inserted",
    "-- move valid mappings left",
    "-- place new mapping on new position",
    "-- update to valid, update molecule_map_char, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on new position",
    "--  v_mappings_changed := TRUE;",
    "--  v_theme_no_upd_molec_map := :new.theme_no;",
    "-- BLOCK END  new molecule in arbitrary position",
    "-- BLOCK START  new molecule in existing position",
    "-- old mapping  is removed",
    "-- new mapping is inserted",
    "-- insert mapping on new position",
    "-- place new mapping on position",
    "-- update to valid, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on position",
    "--  v_mappings_changed := TRUE;",
    "--  v_theme_no_upd_molec_map := :new.theme_no;",
    "-- BLOCK END  new molecule in existing position",
    "-------------------------------------------------- UPDATING",
    "-- Update Theme Description",
    "---------------------------------------- INSERTING or UPDATING",
    "-- Sanity check => each seq_no may appear only once for valid Mappings"
  ],
  "rest_strings": [
    {
      "statement": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );",
      "type": "unknown_statement",
      "indent": 8,
      "line_no": 52
    },
    {
      "statement": "MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );",
      "type": "unknown_statement",
      "indent": 8,
      "line_no": 395
    }
  ],
  "sql_lines": [
    {
      "indent": 0,
      "line": "DECLARE",
      "line_no": 1,
      "is_end_semicolon": false
    },
    {
      "indent": 4,
      "line": "    ERR_MAP_EXISTS EXCEPTION;",
      "line_no": 2,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    ERR_MOLEC_ID_MISSING EXCEPTION;",
      "line_no": 3,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    ERR_NO_PORTF_MOLECULE_LEFT EXCEPTION;",
      "line_no": 4,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    ERR_UPD_INV_MAP EXCEPTION;",
      "line_no": 5,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    ERR_INS_INV_MAP EXCEPTION;",
      "line_no": 6,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    ERR_INV_MOL_SEQUENCE EXCEPTION;",
      "line_no": 7,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    UPDATE_UPD EXCEPTION;",
      "line_no": 8,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    V_COUNT_T_MAPPINGS         PLS_INTEGER;",
      "line_no": 9,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    V_COUNT_T_MOL_MAP          PLS_INTEGER;",
      "line_no": 10,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    V_MOLECULE_SEQ_NO          PLS_INTEGER;",
      "line_no": 11,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    V_SEQ_NO_DUPLICATE_CNT     PLS_INTEGER;",
      "line_no": 12,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    INVALID_MAPPING_EXISTS     BOOLEAN := FALSE;",
      "line_no": 13,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    V_MANUAL_SHORT_DESC        THEMES.MANUAL_SHORT_DESC%TYPE;",
      "line_no": 14,
      "is_end_semicolon": true
    },
    {
      "indent": 0,
      "line": "BEGIN",
      "line_no": 18,
      "is_end_semicolon": false
    },
    {
      "indent": 4,
      "line": "    SELECT",
      "line_no": 21,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC",
      "line_no": 22,
      "is_end_semicolon": false
    },
    {
      "indent": 4,
      "line": "    FROM",
      "line_no": 23,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        GMD.THEMES",
      "line_no": 24,
      "is_end_semicolon": false
    },
    {
      "indent": 4,
      "line": "    WHERE",
      "line_no": 25,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
      "line_no": 26,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    IF (DELETING) THEN",
      "line_no": 27,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 33,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        SET",
      "line_no": 34,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            TMM.VALID_IND = 'N'",
      "line_no": 35,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        WHERE",
      "line_no": 36,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            TMM.THEME_NO = :OLD.THEME_NO",
      "line_no": 37,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
      "line_no": 38,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 41,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        SET",
      "line_no": 42,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1",
      "line_no": 43,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        WHERE",
      "line_no": 44,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            TMM.THEME_NO = :OLD.THEME_NO",
      "line_no": 45,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO",
      "line_no": 46,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            AND TMM.VALID_IND = 'Y';",
      "line_no": 47,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (",
      "line_no": 52,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_THEME_NO => :OLD.THEME_NO,",
      "line_no": 53,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_MOLECULE_ID => :OLD.MOLECULE_ID,",
      "line_no": 54,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_DATE => SYSDATE,",
      "line_no": 55,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC",
      "line_no": 56,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        );",
      "line_no": 57,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    END IF;",
      "line_no": 58,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    IF (INSERTING OR UPDATING) THEN",
      "line_no": 60,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        SELECT",
      "line_no": 61,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            COUNT (*) INTO V_COUNT_T_MAPPINGS",
      "line_no": 62,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        FROM",
      "line_no": 63,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            V_THEME_MOLECULE_MAP TMM",
      "line_no": 64,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        WHERE",
      "line_no": 65,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 66,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            AND TMM.VALID_IND = 'Y';",
      "line_no": 67,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        IF (:NEW.MOLECULE_ID IS NULL) THEN",
      "line_no": 68,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            RAISE ERR_MOLEC_ID_MISSING;",
      "line_no": 69,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        END IF;",
      "line_no": 87,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        IF (UPDATING) THEN",
      "line_no": 89,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            IF (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) THEN",
      "line_no": 90,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                RAISE ERR_UPD_INV_MAP;",
      "line_no": 91,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            END IF;",
      "line_no": 92,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        END IF;",
      "line_no": 93,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        IF (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) THEN",
      "line_no": 98,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            SELECT",
      "line_no": 99,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                COUNT (*) INTO V_COUNT_T_MOL_MAP",
      "line_no": 100,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            FROM",
      "line_no": 101,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                V_THEME_MOLECULE_MAP TMM",
      "line_no": 102,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            WHERE",
      "line_no": 103,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 104,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID",
      "line_no": 105,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                AND TMM.VALID_IND = 'Y';",
      "line_no": 106,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            IF (V_COUNT_T_MOL_MAP > 0) THEN",
      "line_no": 107,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                RAISE ERR_MAP_EXISTS;",
      "line_no": 108,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            END IF;",
      "line_no": 109,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            SELECT",
      "line_no": 111,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                COUNT (*) INTO V_COUNT_T_MOL_MAP",
      "line_no": 112,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            FROM",
      "line_no": 113,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                V_THEME_MOLECULE_MAP TMM",
      "line_no": 114,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            WHERE",
      "line_no": 115,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 116,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID",
      "line_no": 117,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                AND TMM.VALID_IND = 'N';",
      "line_no": 118,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            IF (V_COUNT_T_MOL_MAP > 0) THEN",
      "line_no": 119,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                INVALID_MAPPING_EXISTS := TRUE;",
      "line_no": 120,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            END IF;",
      "line_no": 121,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        END IF;",
      "line_no": 122,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        IF (INSERTING) THEN",
      "line_no": 124,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            CASE",
      "line_no": 125,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                WHEN :NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1 THEN",
      "line_no": 126,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    IF (INVALID_MAPPING_EXISTS) THEN",
      "line_no": 127,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 130,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        SET",
      "line_no": 131,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.VALID_IND = 'Y',",
      "line_no": 132,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO",
      "line_no": 133,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        WHERE",
      "line_no": 134,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 135,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
      "line_no": 136,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    ELSE",
      "line_no": 137,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        INSERT INTO THEME_MOLECULE_MAP TMM (",
      "line_no": 139,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.THEME_NO,",
      "line_no": 140,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_ID,",
      "line_no": 141,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_SEQ_NO,",
      "line_no": 142,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_MAP_CHAR,",
      "line_no": 143,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.VALID_IND",
      "line_no": 144,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        ) VALUES (",
      "line_no": 145,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.THEME_NO,",
      "line_no": 146,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.MOLECULE_ID,",
      "line_no": 147,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.MOLECULE_SEQ_NO,",
      "line_no": 148,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.MOLECULE_MAP_CHAR,",
      "line_no": 149,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            'Y'",
      "line_no": 150,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        );",
      "line_no": 151,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    END IF;",
      "line_no": 152,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                WHEN :NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1 THEN",
      "line_no": 156,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 158,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    SET",
      "line_no": 159,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1",
      "line_no": 160,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    WHERE",
      "line_no": 161,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 162,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO",
      "line_no": 163,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        AND TMM.VALID_IND = 'Y';",
      "line_no": 164,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    IF (INVALID_MAPPING_EXISTS) THEN",
      "line_no": 167,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 170,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        SET",
      "line_no": 171,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.VALID_IND = 'Y',",
      "line_no": 172,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO",
      "line_no": 173,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        WHERE",
      "line_no": 174,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 175,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
      "line_no": 176,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    ELSE",
      "line_no": 177,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        INSERT INTO THEME_MOLECULE_MAP TMM (",
      "line_no": 179,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.THEME_NO,",
      "line_no": 180,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_ID,",
      "line_no": 181,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_SEQ_NO,",
      "line_no": 182,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_MAP_CHAR,",
      "line_no": 183,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.VALID_IND",
      "line_no": 184,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        ) VALUES (",
      "line_no": 185,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.THEME_NO,",
      "line_no": 186,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.MOLECULE_ID,",
      "line_no": 187,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.MOLECULE_SEQ_NO,",
      "line_no": 188,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.MOLECULE_MAP_CHAR,",
      "line_no": 189,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            'Y'",
      "line_no": 190,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        );",
      "line_no": 191,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    END IF;",
      "line_no": 192,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                ELSE",
      "line_no": 196,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    RAISE ERR_INS_INV_MAP;",
      "line_no": 199,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            END CASE;",
      "line_no": 200,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        END IF;",
      "line_no": 201,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        IF (UPDATING) THEN",
      "line_no": 202,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            IF (:NEW.MOLECULE_ID IS NOT NULL) THEN",
      "line_no": 203,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) THEN",
      "line_no": 204,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 205,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    SET",
      "line_no": 206,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR",
      "line_no": 207,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    WHERE",
      "line_no": 208,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 209,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
      "line_no": 210,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                END IF;",
      "line_no": 211,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN",
      "line_no": 213,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 222,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    SET",
      "line_no": 223,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.VALID_IND = 'N'",
      "line_no": 224,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    WHERE",
      "line_no": 225,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 226,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
      "line_no": 227,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    IF (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) THEN",
      "line_no": 228,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 231,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        SET",
      "line_no": 232,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1",
      "line_no": 233,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        WHERE",
      "line_no": 234,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 235,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO",
      "line_no": 236,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            AND TMM.VALID_IND = 'Y'",
      "line_no": 237,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;",
      "line_no": 238,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    ELSE",
      "line_no": 239,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 242,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        SET",
      "line_no": 243,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1",
      "line_no": 244,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        WHERE",
      "line_no": 245,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 246,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            AND TMM.VALID_IND = 'Y'",
      "line_no": 247,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO",
      "line_no": 248,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;",
      "line_no": 249,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    END IF;",
      "line_no": 250,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    IF (INVALID_MAPPING_EXISTS) THEN",
      "line_no": 254,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 257,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        SET",
      "line_no": 258,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.VALID_IND = 'Y',",
      "line_no": 259,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,",
      "line_no": 260,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR",
      "line_no": 261,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        WHERE",
      "line_no": 262,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 263,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
      "line_no": 264,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    ELSE",
      "line_no": 265,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        INSERT INTO THEME_MOLECULE_MAP TMM (",
      "line_no": 267,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.THEME_NO,",
      "line_no": 268,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_ID,",
      "line_no": 269,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_SEQ_NO,",
      "line_no": 270,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.MOLECULE_MAP_CHAR,",
      "line_no": 271,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            TMM.VALID_IND",
      "line_no": 272,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        ) VALUES (",
      "line_no": 273,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.THEME_NO,",
      "line_no": 274,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.MOLECULE_ID,",
      "line_no": 275,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.MOLECULE_SEQ_NO,",
      "line_no": 276,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            :NEW.MOLECULE_MAP_CHAR,",
      "line_no": 277,
      "is_end_semicolon": false
    },
    {
      "indent": 28,
      "line": "                            'Y'",
      "line_no": 278,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        );",
      "line_no": 279,
      "is_end_semicolon": true
    },
    {
      "indent": 20,
      "line": "                    END IF;",
      "line_no": 280,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                END IF;",
      "line_no": 285,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            END IF;",
      "line_no": 289,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN",
      "line_no": 291,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 302,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                SET",
      "line_no": 303,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    TMM.VALID_IND = 'N'",
      "line_no": 304,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                WHERE",
      "line_no": 305,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 306,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
      "line_no": 307,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 310,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                SET",
      "line_no": 311,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1",
      "line_no": 312,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                WHERE",
      "line_no": 313,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 314,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO",
      "line_no": 315,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO",
      "line_no": 316,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    AND TMM.VALID_IND = 'Y';",
      "line_no": 317,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                IF (INVALID_MAPPING_EXISTS) THEN",
      "line_no": 320,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 323,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    SET",
      "line_no": 324,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.VALID_IND = 'Y',",
      "line_no": 325,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,",
      "line_no": 326,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR",
      "line_no": 327,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    WHERE",
      "line_no": 328,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 329,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
      "line_no": 330,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                ELSE",
      "line_no": 331,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    INSERT INTO THEME_MOLECULE_MAP TMM (",
      "line_no": 333,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.THEME_NO,",
      "line_no": 334,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_ID,",
      "line_no": 335,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_SEQ_NO,",
      "line_no": 336,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_MAP_CHAR,",
      "line_no": 337,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.VALID_IND",
      "line_no": 338,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    ) VALUES (",
      "line_no": 339,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        :NEW.THEME_NO,",
      "line_no": 340,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        :NEW.MOLECULE_ID,",
      "line_no": 341,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        :NEW.MOLECULE_SEQ_NO,",
      "line_no": 342,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        :NEW.MOLECULE_MAP_CHAR,",
      "line_no": 343,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        'Y'",
      "line_no": 344,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    );",
      "line_no": 345,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                END IF;",
      "line_no": 346,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            END IF;",
      "line_no": 351,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO THEN",
      "line_no": 352,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 355,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                SET",
      "line_no": 356,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    TMM.VALID_IND = 'N'",
      "line_no": 357,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                WHERE",
      "line_no": 358,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 359,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID",
      "line_no": 360,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;",
      "line_no": 361,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                IF (INVALID_MAPPING_EXISTS) THEN",
      "line_no": 363,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    UPDATE THEME_MOLECULE_MAP TMM",
      "line_no": 366,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    SET",
      "line_no": 367,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.VALID_IND = 'Y',",
      "line_no": 368,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,",
      "line_no": 369,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR",
      "line_no": 370,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    WHERE",
      "line_no": 371,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 372,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
      "line_no": 373,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                ELSE",
      "line_no": 374,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    INSERT INTO THEME_MOLECULE_MAP TMM (",
      "line_no": 376,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.THEME_NO,",
      "line_no": 377,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_ID,",
      "line_no": 378,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_SEQ_NO,",
      "line_no": 379,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        TMM.MOLECULE_MAP_CHAR",
      "line_no": 380,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    ) VALUES (",
      "line_no": 381,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        :NEW.THEME_NO,",
      "line_no": 382,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        :NEW.MOLECULE_ID,",
      "line_no": 383,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        :NEW.MOLECULE_SEQ_NO,",
      "line_no": 384,
      "is_end_semicolon": false
    },
    {
      "indent": 24,
      "line": "                        :NEW.MOLECULE_MAP_CHAR",
      "line_no": 385,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    );",
      "line_no": 386,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                END IF;",
      "line_no": 387,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            END IF;",
      "line_no": 392,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        END IF;",
      "line_no": 393,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (",
      "line_no": 395,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_THEME_NO => :NEW.THEME_NO,",
      "line_no": 396,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_MOLECULE_ID => 0,",
      "line_no": 397,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_DATE => SYSDATE,",
      "line_no": 398,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC",
      "line_no": 399,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        );",
      "line_no": 400,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    END IF;",
      "line_no": 401,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    SELECT",
      "line_no": 403,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT",
      "line_no": 404,
      "is_end_semicolon": false
    },
    {
      "indent": 4,
      "line": "    FROM",
      "line_no": 405,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        (",
      "line_no": 406,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            SELECT",
      "line_no": 407,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                MOLECULE_SEQ_NO",
      "line_no": 408,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            FROM",
      "line_no": 409,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                THEME_MOLECULE_MAP TMM",
      "line_no": 410,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            WHERE",
      "line_no": 411,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 412,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                AND VALID_IND = 'Y'",
      "line_no": 413,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            GROUP BY",
      "line_no": 414,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                MOLECULE_SEQ_NO",
      "line_no": 415,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            HAVING",
      "line_no": 416,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                COUNT (*) > 1",
      "line_no": 417,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        );",
      "line_no": 418,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    IF (V_SEQ_NO_DUPLICATE_CNT > 0) THEN",
      "line_no": 419,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        RAISE ERR_INV_MOL_SEQUENCE;",
      "line_no": 420,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    END IF;",
      "line_no": 421,
      "is_end_semicolon": true
    },
    {
      "indent": 0,
      "line": "EXCEPTION",
      "line_no": 439,
      "is_end_semicolon": false
    },
    {
      "indent": 4,
      "line": "    WHEN ERR_MAP_EXISTS THEN",
      "line_no": 440,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        RAISE_APPLICATION_ERROR (-20110, 'MDM_THEME_MOLECULE_MAP_IOF');",
      "line_no": 441,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    WHEN ERR_MOLEC_ID_MISSING THEN",
      "line_no": 442,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        RAISE_APPLICATION_ERROR (-20111, 'MDM_THEME_MOLECULE_MAP_IOF');",
      "line_no": 443,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    WHEN ERR_UPD_INV_MAP THEN",
      "line_no": 444,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        RAISE_APPLICATION_ERROR (-20112, 'MDM_THEME_MOLECULE_MAP_IOF');",
      "line_no": 445,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    WHEN ERR_INS_INV_MAP THEN",
      "line_no": 446,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        RAISE_APPLICATION_ERROR (-20113, 'MDM_THEME_MOLECULE_MAP_IOF');",
      "line_no": 447,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    WHEN ERR_INV_MOL_SEQUENCE THEN",
      "line_no": 448,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        RAISE_APPLICATION_ERROR (-20120, 'MDM_THEME_MOLECULE_MAP_IOF');",
      "line_no": 449,
      "is_end_semicolon": true
    },
    {
      "indent": 0,
      "line": "END;",
      "line_no": 465,
      "is_end_semicolon": true
    }
  ],
  "conversion_stats": {
    "declaration_count": 13,
    "comment_count": 73,
    "rest_string_count": 2,
    "sql_convert_count": 80
  },
  "metadata": {
    "parse_timestamp": "2025-08-22T00:31:33.511711",
    "parser_version": "1.0"
  }
}