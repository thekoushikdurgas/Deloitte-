{
  "trigger_metadata": {
    "trigger_name": "trigger2",
    "timing": "BEFORE",
    "events": [
      "INSERT",
      "UPDATE",
      "DELETE"
    ],
    "table_name": "theme_molecule_map",
    "has_declare_section": true,
    "has_begin_section": true,
    "has_exception_section": true
  },
  "declarations": {
    "variables": [
      {
        "name": "v_count_t_mappings",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "v_count_t_mol_map",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "v_molecule_seq_no",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "v_seq_no_duplicate_cnt",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "invalid_mapping_exists",
        "data_type": "BOOLEAN",
        "default_value": "FALSE"
      },
      {
        "name": "v_manual_short_desc",
        "data_type": "THEMES.MANUAL_SHORT_DESC%TYPE",
        "default_value": null
      }
    ],
    "constants": [],
    "exceptions": [
      {
        "name": "err_map_exists",
        "type": "user_defined"
      },
      {
        "name": "err_molec_id_missing",
        "type": "user_defined"
      },
      {
        "name": "err_no_portf_molecule_left",
        "type": "user_defined"
      },
      {
        "name": "err_upd_inv_map",
        "type": "user_defined"
      },
      {
        "name": "err_ins_inv_map",
        "type": "user_defined"
      },
      {
        "name": "err_inv_mol_sequence",
        "type": "user_defined"
      },
      {
        "name": "update_upd",
        "type": "user_defined"
      }
    ]
  },
  "data_operations": [
    {
      "id": "code_1",
      "sql": "SELECT manual_short_desc INTO v_manual_short_desc from gmd.themes where theme_no = NVL(:new.theme_no, :old.theme_no);",
      "type": "select_statements"
    },
    {
      "id": "code_2",
      "sql": "if (DELETING) then ... end if;",
      "type": "if_else",
      "condition": "DELETING",
      "then_statement": [
        {
          "id": "code_2_1",
          "sql": "UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'N' WHERE tmm.theme_no = :old.theme_no AND tmm.molecule_id = :old.molecule_id;",
          "type": "update_statements"
        },
        {
          "id": "code_2_2",
          "sql": "UPDATE theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no - 1 WHERE tmm.theme_no = :old.theme_no AND tmm.molecule_seq_no > :old.molecule_seq_no AND tmm.valid_ind = 'Y';",
          "type": "update_statements"
        },
        {
          "id": "code_2_3",
          "sql": "mdmappl.mdm_util_themes.refresh_theme_desc (p_theme_no => :old.theme_no, p_molecule_id => :old.molecule_id, p_date => SYSDATE, p_manual_short_desc => v_manual_short_desc);",
          "type": "procedure_calls"
        }
      ],
      "else_statement": null
    },
    {
      "id": "code_3",
      "sql": "if (INSERTING OR UPDATING) then ... end if;",
      "type": "if_else",
      "condition": "INSERTING OR UPDATING",
      "then_statement": [
        {
          "id": "code_3_1",
          "sql": "SELECT COUNT (*) INTO v_count_t_mappings FROM v_theme_molecule_map tmm WHERE tmm.theme_no = :new.theme_no AND tmm.valid_ind = 'Y';",
          "type": "select_statements"
        },
        {
          "id": "code_3_2",
          "sql": "if (:new.molecule_id IS NULL) then RAISE err_molec_id_missing; end if;",
          "type": "if_else",
          "condition": ":new.molecule_id IS NULL",
          "then_statement": [
            {
              "id": "code_3_2_1",
              "sql": "RAISE err_molec_id_missing;",
              "type": "exception_raise"
            }
          ],
          "else_statement": null
        },
        {
          "id": "code_3_3",
          "sql": "if (UPDATING) then if (:new.molecule_seq_no > v_count_t_mappings) then RAISE err_upd_inv_map; end if; end if;",
          "type": "if_else",
          "condition": "UPDATING",
          "then_statement": [
            {
              "id": "code_3_3_1",
              "sql": "if (:new.molecule_seq_no > v_count_t_mappings) then RAISE err_upd_inv_map; end if;",
              "type": "if_else",
              "condition": ":new.molecule_seq_no > v_count_t_mappings",
              "then_statement": [
                {
                  "id": "code_3_3_1_1",
                  "sql": "RAISE err_upd_inv_map;",
                  "type": "exception_raise"
                }
              ],
              "else_statement": null
            }
          ],
          "else_statement": null
        },
        {
          "id": "code_3_4",
          "sql": "if (:new.molecule_id <> NVL (:old.molecule_id, '-1')) then ... end if;",
          "type": "if_else",
          "condition": ":new.molecule_id <> NVL (:old.molecule_id, '-1')",
          "then_statement": [
            {
              "id": "code_3_4_1",
              "sql": "SELECT COUNT (*) INTO v_count_t_mol_map FROM v_theme_molecule_map tmm WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id AND tmm.valid_ind = 'Y';",
              "type": "select_statements"
            },
            {
              "id": "code_3_4_2",
              "sql": "if (v_count_t_mol_map > 0) then RAISE err_map_exists; end if;",
              "type": "if_else",
              "condition": "v_count_t_mol_map > 0",
              "then_statement": [
                {
                  "id": "code_3_4_2_1",
                  "sql": "RAISE err_map_exists;",
                  "type": "exception_raise"
                }
              ],
              "else_statement": null
            },
            {
              "id": "code_3_4_3",
              "sql": "SELECT COUNT (*) INTO v_count_t_mol_map FROM v_theme_molecule_map tmm WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id AND tmm.valid_ind = 'N';",
              "type": "select_statements"
            },
            {
              "id": "code_3_4_4",
              "sql": "if (v_count_t_mol_map > 0) then invalid_mapping_exists := TRUE; end if;",
              "type": "if_else",
              "condition": "v_count_t_mol_map > 0",
              "then_statement": [
                {
                  "id": "code_3_4_4_1",
                  "sql": "invalid_mapping_exists := TRUE;",
                  "type": "assignment"
                }
              ],
              "else_statement": null
            }
          ],
          "else_statement": null
        },
        {
          "id": "code_3_5",
          "sql": "if (INSERTING) then ... end if;",
          "type": "if_else",
          "condition": "INSERTING",
          "then_statement": [
            {
              "id": "code_3_5_1",
              "sql": "case when :new.molecule_seq_no = v_count_t_mappings + 1 then ... when :new.molecule_seq_no < v_count_t_mappings + 1 then ... else RAISE err_ins_inv_map; end case;",
              "type": "case_statements",
              "when_clauses": [
                {
                  "when_condition": ":new.molecule_seq_no = v_count_t_mappings + 1",
                  "then_statement": [
                    {
                      "id": "code_3_5_1_1",
                      "sql": "if (invalid_mapping_exists) then UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new.molecule_seq_no WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id; else INSERT INTO theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new.theme_no, :new.molecule_id, :new.molecule_seq_no, :new.molecule_map_char, 'Y'); end if;",
                      "type": "if_else",
                      "condition": "invalid_mapping_exists",
                      "then_statement": [
                        {
                          "id": "code_3_5_1_1_1",
                          "sql": "UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new.molecule_seq_no WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id;",
                          "type": "update_statements"
                        }
                      ],
                      "else_statement": [
                        {
                          "id": "code_3_5_1_1_e1",
                          "sql": "INSERT INTO theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new.theme_no, :new.molecule_id, :new.molecule_seq_no, :new.molecule_map_char, 'Y');",
                          "type": "insert_statements"
                        }
                      ]
                    }
                  ]
                },
                {
                  "when_condition": ":new.molecule_seq_no < v_count_t_mappings + 1",
                  "then_statement": [
                    {
                      "id": "code_3_5_1_2_1",
                      "sql": "UPDATE theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no + 1 WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_seq_no >= :new.molecule_seq_no AND tmm.valid_ind = 'Y';",
                      "type": "update_statements"
                    },
                    {
                      "id": "code_3_5_1_2_2",
                      "sql": "if (invalid_mapping_exists) then UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new.molecule_seq_no WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id; else INSERT INTO theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new.theme_no, :new.molecule_id, :new.molecule_seq_no, :new.molecule_map_char, 'Y'); end if;",
                      "type": "if_else",
                      "condition": "invalid_mapping_exists",
                      "then_statement": [
                        {
                          "id": "code_3_5_1_2_2_1",
                          "sql": "UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new.molecule_seq_no WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id;",
                          "type": "update_statements"
                        }
                      ],
                      "else_statement": [
                        {
                          "id": "code_3_5_1_2_2_e1",
                          "sql": "INSERT INTO theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new.theme_no, :new.molecule_id, :new.molecule_seq_no, :new.molecule_map_char, 'Y');",
                          "type": "insert_statements"
                        }
                      ]
                    }
                  ]
                }
              ],
              "else_statement": "RAISE err_ins_inv_map;"
            }
          ],
          "else_statement": null
        },
        {
          "id": "code_3_6",
          "sql": "if (UPDATING) then ... end if;",
          "type": "if_else",
          "condition": "UPDATING",
          "then_statement": [
            {
              "id": "code_3_6_1",
              "sql": "if (:new.molecule_id IS NOT NULL) then ... end if;",
              "type": "if_else",
              "condition": ":new.molecule_id IS NOT NULL",
              "then_statement": [
                {
                  "id": "code_3_6_1_1",
                  "sql": "if (:new.molecule_id = :old.molecule_id AND :new.molecule_seq_no = :old.molecule_seq_no) AND :new.molecule_map_char <> :old.molecule_map_char then UPDATE theme_molecule_map tmm SET tmm.molecule_map_char = :new.molecule_map_char WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id; end if;",
                  "type": "if_else",
                  "condition": ":new.molecule_id = :old.molecule_id AND :new.molecule_seq_no = :old.molecule_seq_no AND :new.molecule_map_char <> :old.molecule_map_char",
                  "then_statement": [
                    {
                      "id": "code_3_6_1_1_1",
                      "sql": "UPDATE theme_molecule_map tmm SET tmm.molecule_map_char = :new.molecule_map_char WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id;",
                      "type": "update_statements"
                    }
                  ],
                  "else_statement": null
                },
                {
                  "id": "code_3_6_1_2",
                  "sql": "if (:new.molecule_id = :old.molecule_id AND :new.molecule_seq_no <> :old.molecule_seq_no) then ... end if;",
                  "type": "if_else",
                  "condition": ":new.molecule_id = :old.molecule_id AND :new.molecule_seq_no <> :old.molecule_seq_no",
                  "then_statement": [
                    {
                      "id": "code_3_6_1_2_1",
                      "sql": "UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'N' WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :old.molecule_id;",
                      "type": "update_statements"
                    },
                    {
                      "id": "code_3_6_1_2_2",
                      "sql": "if (:old.molecule_seq_no < :new.molecule_seq_no) then UPDATE theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no - 1 WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_seq_no > :old.molecule_seq_no AND tmm.valid_ind = 'Y' AND tmm.molecule_seq_no <= :new.molecule_seq_no; else UPDATE theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no + 1 WHERE tmm.theme_no = :new.theme_no AND tmm.valid_ind = 'Y' AND tmm.molecule_seq_no >= :new.molecule_seq_no AND tmm.molecule_seq_no < :old.molecule_seq_no; end if;",
                      "type": "if_else",
                      "condition": ":old.molecule_seq_no < :new.molecule_seq_no",
                      "then_statement": [
                        {
                          "id": "code_3_6_1_2_2_1",
                          "sql": "UPDATE theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no - 1 WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_seq_no > :old.molecule_seq_no AND tmm.valid_ind = 'Y' AND tmm.molecule_seq_no <= :new.molecule_seq_no;",
                          "type": "update_statements"
                        }
                      ],
                      "else_statement": [
                        {
                          "id": "code_3_6_1_2_2_e1",
                          "sql": "UPDATE theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no + 1 WHERE tmm.theme_no = :new.theme_no AND tmm.valid_ind = 'Y' AND tmm.molecule_seq_no >= :new.molecule_seq_no AND tmm.molecule_seq_no < :old.molecule_seq_no;",
                          "type": "update_statements"
                        }
                      ]
                    },
                    {
                      "id": "code_3_6_1_2_3",
                      "sql": "if (invalid_mapping_exists) then UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new.molecule_seq_no, tmm.molecule_map_char = :new.molecule_map_char WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id; else INSERT INTO theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new.theme_no, :new.molecule_id, :new.molecule_seq_no, :new.molecule_map_char, 'Y'); end if;",
                      "type": "if_else",
                      "condition": "invalid_mapping_exists",
                      "then_statement": [
                        {
                          "id": "code_3_6_1_2_3_1",
                          "sql": "UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new.molecule_seq_no, tmm.molecule_map_char = :new.molecule_map_char WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id;",
                          "type": "update_statements"
                        }
                      ],
                      "else_statement": [
                        {
                          "id": "code_3_6_1_2_3_e1",
                          "sql": "INSERT INTO theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new.theme_no, :new.molecule_id, :new.molecule_seq_no, :new.molecule_map_char, 'Y');",
                          "type": "insert_statements"
                        }
                      ]
                    }
                  ],
                  "else_statement": null
                },
                {
                  "id": "code_3_6_1_3",
                  "sql": "if (:new.molecule_id <> :old.molecule_id AND :new.molecule_seq_no <> :old.molecule_seq_no) then ... end if;",
                  "type": "if_else",
                  "condition": ":new.molecule_id <> :old.molecule_id AND :new.molecule_seq_no <> :old.molecule_seq_no",
                  "then_statement": [
                    {
                      "id": "code_3_6_1_3_1",
                      "sql": "UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'N' WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :old.molecule_id;",
                      "type": "update_statements"
                    },
                    {
                      "id": "code_3_6_1_3_2",
                      "sql": "UPDATE theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no - 1 WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_seq_no > :old.molecule_seq_no AND tmm.molecule_seq_no <= :new.molecule_seq_no AND tmm.valid_ind = 'Y';",
                      "type": "update_statements"
                    },
                    {
                      "id": "code_3_6_1_3_3",
                      "sql": "if (invalid_mapping_exists) then UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new.molecule_seq_no, tmm.molecule_map_char = :new.molecule_map_char WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id; else INSERT INTO theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new.theme_no, :new.molecule_id, :new.molecule_seq_no, :new.molecule_map_char, 'Y'); end if;",
                      "type": "if_else",
                      "condition": "invalid_mapping_exists",
                      "then_statement": [
                        {
                          "id": "code_3_6_1_3_3_1",
                          "sql": "UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new.molecule_seq_no, tmm.molecule_map_char = :new.molecule_map_char WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id;",
                          "type": "update_statements"
                        }
                      ],
                      "else_statement": [
                        {
                          "id": "code_3_6_1_3_3_e1",
                          "sql": "INSERT INTO theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new.theme_no, :new.molecule_id, :new.molecule_seq_no, :new.molecule_map_char, 'Y');",
                          "type": "insert_statements"
                        }
                      ]
                    }
                  ],
                  "else_statement": null
                },
                {
                  "id": "code_3_6_1_4",
                  "sql": "if (:new.molecule_id <> :old.molecule_id AND :new.molecule_seq_no = :old.molecule_seq_no) then ... end if;",
                  "type": "if_else",
                  "condition": ":new.molecule_id <> :old.molecule_id AND :new.molecule_seq_no = :old.molecule_seq_no",
                  "then_statement": [
                    {
                      "id": "code_3_6_1_4_1",
                      "sql": "UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'N' WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :old.molecule_id AND molecule_seq_no = :old.molecule_seq_no;",
                      "type": "update_statements"
                    },
                    {
                      "id": "code_3_6_1_4_2",
                      "sql": "if (invalid_mapping_exists) then UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new.molecule_seq_no, tmm.molecule_map_char = :new.molecule_map_char WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id; else INSERT INTO theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char) VALUES (:new.theme_no, :new.molecule_id, :new.molecule_seq_no, :new.molecule_map_char); end if;",
                      "type": "if_else",
                      "condition": "invalid_mapping_exists",
                      "then_statement": [
                        {
                          "id": "code_3_6_1_4_2_1",
                          "sql": "UPDATE theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new.molecule_seq_no, tmm.molecule_map_char = :new.molecule_map_char WHERE tmm.theme_no = :new.theme_no AND tmm.molecule_id = :new.molecule_id;",
                          "type": "update_statements"
                        }
                      ],
                      "else_statement": [
                        {
                          "id": "code_3_6_1_4_2_e1",
                          "sql": "INSERT INTO theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char) VALUES (:new.theme_no, :new.molecule_id, :new.molecule_seq_no, :new.molecule_map_char);",
                          "type": "insert_statements"
                        }
                      ]
                    }
                  ],
                  "else_statement": null
                }
              ],
              "else_statement": null
            }
          ],
          "else_statement": null
        },
        {
          "id": "code_3_7",
          "sql": "mdmappl.mdm_util_themes.refresh_theme_desc (p_theme_no => :new.theme_no, p_molecule_id => 0, p_date => SYSDATE, p_manual_short_desc => v_manual_short_desc);",
          "type": "procedure_calls"
        }
      ],
      "else_statement": null
    },
    {
      "id": "code_4",
      "sql": "SELECT COUNT (*) INTO v_seq_no_duplicate_cnt FROM (SELECT molecule_seq_no FROM theme_molecule_map tmm WHERE tmm.theme_no = :new.theme_no AND valid_ind = 'Y' GROUP BY molecule_seq_no HAVING COUNT (*) > 1);",
      "type": "select_statements"
    },
    {
      "id": "code_5",
      "sql": "if (v_seq_no_duplicate_cnt > 0) then RAISE err_inv_mol_sequence; end if;",
      "type": "if_else",
      "condition": "v_seq_no_duplicate_cnt > 0",
      "then_statement": [
        {
          "id": "code_5_1",
          "sql": "RAISE err_inv_mol_sequence;",
          "type": "exception_raise"
        }
      ],
      "else_statement": null
    }
  ],
  "exception_handlers": [
    {
      "exception_name": "err_map_exists",
      "handler_code": "raise_application_error (-20110, 'MDM_THEME_MOLECULE_MAP_IOF');"
    },
    {
      "exception_name": "err_molec_id_missing",
      "handler_code": "raise_application_error (-20111, 'MDM_THEME_MOLECULE_MAP_IOF');"
    },
    {
      "exception_name": "err_upd_inv_map",
      "handler_code": "raise_application_error (-20112, 'MDM_THEME_MOLECULE_MAP_IOF');"
    },
    {
      "exception_name": "err_ins_inv_map",
      "handler_code": "raise_application_error (-20113, 'MDM_THEME_MOLECULE_MAP_IOF');"
    },
    {
      "exception_name": "err_inv_mol_sequence",
      "handler_code": "raise_application_error (-20120, 'MDM_THEME_MOLECULE_MAP_IOF');"
    }
  ]
}