{
  "declarations": {
    "variables": [
      {
        "name": "V_COUNTER",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_CODE",
        "data_type": "VARCHAR2(2)",
        "default_value": null
      },
      {
        "name": "V_ODG_NO",
        "data_type": "VARCHAR2(2)",
        "default_value": null
      },
      {
        "name": "V_RESGRP_CD",
        "data_type": "VARCHAR2(2)",
        "default_value": null
      },
      {
        "name": "V_RESLIN_CD",
        "data_type": "VARCHAR2(2)",
        "default_value": null
      },
      {
        "name": "V_STATUS_CD",
        "data_type": "VARCHAR2(1)",
        "default_value": null
      },
      {
        "name": "V_DBA_CD",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_PORTF_PROJ_CD",
        "data_type": "VARCHAR2(1)",
        "default_value": null
      },
      {
        "name": "V_DESCRIPTION",
        "data_type": "VARCHAR2(500)",
        "default_value": null
      },
      {
        "name": "V_RESLIN_DESC",
        "data_type": "VARCHAR2(60)",
        "default_value": null
      },
      {
        "name": "V_THEME_DESC_LENGTH",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_D_REGISTRAT_DATE",
        "data_type": "DATE",
        "default_value": null
      },
      {
        "name": "V_D_INS_DATE",
        "data_type": "DATE",
        "default_value": null
      },
      {
        "name": "V_FUTURE_REGISTRAT",
        "data_type": "DATE",
        "default_value": null
      },
      {
        "name": "V_VALID_TO",
        "data_type": "DATE",
        "default_value": null
      },
      {
        "name": "V_USERID",
        "data_type": "VARCHAR2(30)",
        "default_value": null
      },
      {
        "name": "V_IS_ADMIN_CNT",
        "data_type": "SIMPLE_INTEGER",
        "default_value": "0"
      },
      {
        "name": "V_SEC_MOL_CNT",
        "data_type": "SIMPLE_INTEGER",
        "default_value": "0"
      },
      {
        "name": "V_MOLECULE_ID",
        "data_type": "VARCHAR2(5)",
        "default_value": "NULL"
      },
      {
        "name": "V_MOLECULE_RG_NO",
        "data_type": "VARCHAR2(20)",
        "default_value": "NULL"
      },
      {
        "name": "V_MOLEC_IN_LIC_PRTNR",
        "data_type": "VARCHAR2(15)",
        "default_value": "NULL"
      },
      {
        "name": "V_NEW_RG_NO",
        "data_type": "V_THEME_MOLECULES.RG_NO%TYPE",
        "default_value": null
      },
      {
        "name": "V_COMPARATOR_IND",
        "data_type": "V_THEME_MOLECULES.COMPARATOR_IND%TYPE",
        "default_value": null
      },
      {
        "name": "V_THEME_DESC_PROPOSAL",
        "data_type": "MDM_V_THEMES_MTN.THEME_DESC_PROPOSAL%TYPE",
        "default_value": null
      },
      {
        "name": "V_SHORT_NAME",
        "data_type": "VARCHAR2(30)",
        "default_value": null
      },
      {
        "name": "V_EVOLVED_NMP_CNT",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_TRADEMARK_NO",
        "data_type": "V_THEMES.TRADEMARK_NO%TYPE",
        "default_value": null
      },
      {
        "name": "V_MOLECULE_TYPE_ID",
        "data_type": "V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE",
        "default_value": null
      },
      {
        "name": "V_PHARMACOLOGICAL_TYPE_ID",
        "data_type": "V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE",
        "default_value": null
      }
    ],
    "constants": [
      {
        "name": "C_MOLECULE_TYPE_ID",
        "data_type": "V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE",
        "value": "99"
      },
      {
        "name": "C_PHARMACOLOGICAL_TYPE_ID",
        "data_type": "V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE",
        "value": "19"
      }
    ],
    "exceptions": [
      {
        "name": "INVALID_THEME_NO",
        "type": "EXCEPTION"
      },
      {
        "name": "DELETE_NO_MORE_POSSIBLE",
        "type": "EXCEPTION"
      },
      {
        "name": "THEME_NO_ONLY_INSERT",
        "type": "EXCEPTION"
      },
      {
        "name": "DESCRIPTION_TOO_LONG",
        "type": "EXCEPTION"
      },
      {
        "name": "THEME_DESC_PROPOSAL_TOO_LONG",
        "type": "EXCEPTION"
      },
      {
        "name": "THEME_DESC_ALT_TOO_LONG",
        "type": "EXCEPTION"
      },
      {
        "name": "THEME_NO_CANNOT_BE_INSERTED",
        "type": "EXCEPTION"
      },
      {
        "name": "ONLYONEOFFICIALCHANGEPERDAY",
        "type": "EXCEPTION"
      },
      {
        "name": "INSERTSMUSTBEOFFICIAL",
        "type": "EXCEPTION"
      },
      {
        "name": "THEMEDESCRIPTIONMANDATORY",
        "type": "EXCEPTION"
      },
      {
        "name": "THEME_DESC_NOT_UNIQUE",
        "type": "EXCEPTION"
      },
      {
        "name": "IN_PREP_NOT_PORTF_PROJ",
        "type": "EXCEPTION"
      },
      {
        "name": "IN_PREP_NOT_CLOSED",
        "type": "EXCEPTION"
      },
      {
        "name": "INVALID_MOLECULE_ID",
        "type": "EXCEPTION"
      },
      {
        "name": "SEC_MOL_LIST_NOT_EMPTY",
        "type": "EXCEPTION"
      },
      {
        "name": "ADMIN_UPDATE_ONLY",
        "type": "EXCEPTION"
      },
      {
        "name": "PORTF_PROJ_MOL_CRE_ERR",
        "type": "EXCEPTION"
      },
      {
        "name": "DEBUGGING",
        "type": "EXCEPTION"
      }
    ]
  },
  "main": [
    {
      "type": "begin_end",
      "begin_indent": 0,
      "begin_end_statements": [
        {
          "sql_statement": "SELECT NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID FROM DUAL;",
          "type": "select_statement",
          "statement_indent": 3
        },
        {
          "sql_statement": "SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID;",
          "type": "select_statement",
          "statement_indent": 3
        },
        {
          "sql_statement": "SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT TO_NUMBER(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1;",
          "type": "select_statement",
          "statement_indent": 3
        },
        {
          "type": "if_else",
          "condition": "(:NEW.IN_PREP_IND = 'Y')",
          "then_statements": [
            {
              "type": "if_else",
              "condition": "(:NEW.PORTF_PROJ_CD <> 'Y')",
              "then_statements": [
                {
                  "sql_statement": "RAISE IN_PREP_NOT_PORTF_PROJ;",
                  "type": "raise_statement",
                  "statement_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0)",
              "then_statements": [
                {
                  "sql_statement": "RAISE IN_PREP_NOT_CLOSED;",
                  "type": "raise_statement",
                  "statement_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID IS NULL)",
              "then_statements": [
                {
                  "statement": "TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!');",
                  "type": "unknown_statement",
                  "indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_indent": 3
        },
        {
          "type": "if_else",
          "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
          "then_statements": [
            {
              "type": "begin_end",
              "begin_end_statements": [
                {
                  "sql_statement": "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';",
                  "type": "select_statement",
                  "statement_indent": 9
                }
              ],
              "exception_handlers": [
                {
                  "exception_name": "NO_DATA_FOUND",
                  "exception_statements": [
                    {
                      "sql_statement": "RAISE INVALID_MOLECULE_ID;",
                      "type": "raise_statement",
                      "statement_indent": 12
                    }
                  ]
                }
              ]
            },
            {
              "type": "if_else",
              "condition": "(V_MOLECULE_RG_NO IS NULL)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(V_COMPARATOR_IND = 'Y')",
                  "then_statements": [
                    {
                      "statement": "NULL;",
                      "type": "unknown_statement",
                      "indent": 12
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql_statement": "UPDATE V_THEME_MOLECULES SET RG_NO = V_NEW_RG_NO WHERE MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement",
                      "statement_indent": 12
                    }
                  ],
                  "if_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_indent": 3
        },
        {
          "variable": "V_ODG_NO",
          "value": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2)",
          "type": "assignment_statement",
          "statement_indent": 3
        },
        {
          "variable": "V_RESGRP_CD",
          "value": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2)",
          "type": "assignment_statement",
          "statement_indent": 3
        },
        {
          "variable": "V_RESLIN_CD",
          "value": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2)",
          "type": "assignment_statement",
          "statement_indent": 3
        },
        {
          "variable": "V_RESLIN_DESC",
          "value": "SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT))",
          "type": "assignment_statement",
          "statement_indent": 3
        },
        {
          "type": "if_else",
          "condition": "(:NEW.STATUS_DESC IS NOT NULL)",
          "then_statements": [
            {
              "sql_statement": "SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;",
              "type": "select_statement",
              "statement_indent": 6
            }
          ],
          "else_if": [],
          "else_statements": [
            {
              "variable": "V_STATUS_CD",
              "value": "NULL",
              "type": "assignment_statement",
              "statement_indent": 6
            }
          ],
          "if_indent": 3
        },
        {
          "type": "if_else",
          "condition": "(:NEW.DBA_DESC_CONCAT IS NOT NULL)",
          "then_statements": [
            {
              "sql_statement": "SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;",
              "type": "select_statement",
              "statement_indent": 6
            }
          ],
          "else_if": [],
          "else_statements": [
            {
              "variable": "V_DBA_CD",
              "value": "NULL",
              "type": "assignment_statement",
              "statement_indent": 6
            }
          ],
          "if_indent": 3
        },
        {
          "variable": "V_MOLEC_IN_LIC_PRTNR",
          "value": "GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID)",
          "type": "assignment_statement",
          "statement_indent": 3
        },
        {
          "type": "if_else",
          "condition": "(:NEW.OFFICIAL_IND = 'N')",
          "then_statements": [
            {
              "variable": "V_TRADEMARK_NO",
              "value": ":NEW.TRADEMARK_NO",
              "type": "assignment_statement",
              "statement_indent": 6
            }
          ],
          "else_if": [],
          "else_statements": [
            {
              "variable": "V_TRADEMARK_NO",
              "value": ":OLD.TRADEMARK_NO",
              "type": "assignment_statement",
              "statement_indent": 6
            }
          ],
          "if_indent": 3
        },
        {
          "variable": "V_THEME_DESC_PROPOSAL",
          "value": "GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N')",
          "type": "assignment_statement",
          "statement_indent": 3
        },
        {
          "type": "if_else",
          "condition": "(:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30)",
          "then_statements": [
            {
              "sql_statement": "RAISE THEME_DESC_PROPOSAL_TOO_LONG;",
              "type": "raise_statement",
              "statement_indent": 6
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_indent": 3
        },
        {
          "variable": "V_SHORT_NAME",
          "value": "COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL)",
          "type": "assignment_statement",
          "statement_indent": 3
        },
        {
          "type": "if_else",
          "condition": "(INSERTING)",
          "then_statements": [
            {
              "type": "if_else",
              "condition": "(:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0)",
              "then_statements": [
                {
                  "sql_statement": "RAISE ADMIN_UPDATE_ONLY;",
                  "type": "raise_statement",
                  "statement_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            },
            {
              "variable": "V_MOLECULE_ID",
              "value": ":NEW.MOLECULE_ID",
              "type": "assignment_statement",
              "statement_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL)",
                  "then_statements": [
                    {
                      "sql_statement": "RAISE PORTF_PROJ_MOL_CRE_ERR;",
                      "type": "raise_statement",
                      "statement_indent": 12
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql_statement": "INSERT INTO MDM_V_THEME_MOLECULES_MTN( MOLECULE_DESC, VALID_IND, RG_NO, CANCER_IMMUNOTHERAPY_IND, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID ) VALUES ( NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL), 'Y', V_NEW_RG_NO, 'N', C_MOLECULE_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID );",
                      "type": "insert_statement",
                      "statement_indent": 12
                    },
                    {
                      "sql_statement": "SELECT MOLECULE_ID INTO V_MOLECULE_ID FROM V_THEME_MOLECULES WHERE MOLECULE_DESC = NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) AND VALID_IND = 'Y' AND RG_NO = V_NEW_RG_NO AND CANCER_IMMUNOTHERAPY_IND = 'N' AND MOLECULE_TYPE_ID = C_MOLECULE_TYPE_ID AND PHARMACOLOGICAL_TYPE_ID = C_PHARMACOLOGICAL_TYPE_ID;",
                      "type": "select_statement",
                      "statement_indent": 12
                    },
                    {
                      "sql_statement": "INSERT INTO THEME_MOLECULE_MAP TMMAP( TMMAP.THEME_NO, TMMAP.MOLECULE_ID, TMMAP.MOLECULE_SEQ_NO, TMMAP.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );",
                      "type": "insert_statement",
                      "statement_indent": 12
                    }
                  ],
                  "if_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            },
            {
              "type": "case_when",
              "case_expression": "LENGTH(:NEW.THEME_NO)",
              "when_clauses": [
                {
                  "when_value": "4",
                  "then_statements": [
                    {
                      "type": "if_else",
                      "condition": "(SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9)",
                      "then_statements": [
                        {
                          "sql_statement": "RAISE INVALID_THEME_NO;",
                          "type": "raise_statement",
                          "statement_indent": 15
                        }
                      ],
                      "else_if": [],
                      "else_statements": [],
                      "if_indent": 12
                    }
                  ]
                },
                {
                  "when_value": "5",
                  "then_statements": [
                    {
                      "type": "if_else",
                      "condition": "(SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9)",
                      "then_statements": [
                        {
                          "sql_statement": "RAISE INVALID_THEME_NO;",
                          "type": "raise_statement",
                          "statement_indent": 15
                        }
                      ],
                      "else_if": [],
                      "else_statements": [],
                      "if_indent": 12
                    }
                  ]
                }
              ],
              "else_statements": [
                {
                  "sql_statement": "RAISE INVALID_THEME_NO;",
                  "type": "raise_statement",
                  "statement_indent": 12
                }
              ],
              "case_indent": 6
            },
            {
              "variable": "V_COUNTER",
              "value": "NULL",
              "type": "assignment_statement",
              "statement_indent": 6
            },
            {
              "sql_statement": "SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SELECT THEME_NO FROM V_THEMES UNION ALL SELECT THEME_NO FROM GMD.THEMES_ARCHIVE )                  T WHERE T.THEME_NO = :NEW.THEME_NO;",
              "type": "select_statement",
              "statement_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(V_COUNTER > 0)",
              "then_statements": [
                {
                  "sql_statement": "RAISE THEME_NO_CANNOT_BE_INSERTED;",
                  "type": "raise_statement",
                  "statement_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            },
            {
              "variable": "V_COUNTER",
              "value": "NULL",
              "type": "assignment_statement",
              "statement_indent": 6
            },
            {
              "variable": "V_D_REGISTRAT_DATE",
              "value": "SYSDATE",
              "type": "assignment_statement",
              "statement_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(:NEW.OFFICIAL_IND = 'N')",
              "then_statements": [
                {
                  "sql_statement": "RAISE INSERTSMUSTBEOFFICIAL;",
                  "type": "raise_statement",
                  "statement_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(UPPER(:NEW.PORTF_PROJ_CD) = 'N')",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0)",
                  "then_statements": [
                    {
                      "sql_statement": "RAISE THEMEDESCRIPTIONMANDATORY;",
                      "type": "raise_statement",
                      "statement_indent": 12
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(UPPER(:NEW.PORTF_PROJ_CD) = 'Y')",
              "then_statements": [
                {
                  "variable": "V_DESCRIPTION",
                  "value": "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' )",
                  "type": "assignment_statement",
                  "statement_indent": 9
                },
                {
                  "type": "if_else",
                  "condition": "(LENGTH(V_DESCRIPTION) > 90)",
                  "then_statements": [
                    {
                      "sql_statement": "RAISE DESCRIPTION_TOO_LONG;",
                      "type": "raise_statement",
                      "statement_indent": 12
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_indent": 9
                },
                {
                  "variable": "V_DESCRIPTION",
                  "value": "TRIM(V_DESCRIPTION)",
                  "type": "assignment_statement",
                  "statement_indent": 9
                },
                {
                  "variable": "V_PORTF_PROJ_CD",
                  "value": "'Y'",
                  "type": "assignment_statement",
                  "statement_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [
                {
                  "variable": "V_DESCRIPTION",
                  "value": ":NEW.THEME_DESC",
                  "type": "assignment_statement",
                  "statement_indent": 9
                },
                {
                  "variable": "V_PORTF_PROJ_CD",
                  "value": "'N'",
                  "type": "assignment_statement",
                  "statement_indent": 9
                }
              ],
              "if_indent": 6
            },
            {
              "variable": "V_COUNTER",
              "value": "NULL",
              "type": "assignment_statement",
              "statement_indent": 6
            },
            {
              "sql_statement": "SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION;",
              "type": "select_statement",
              "statement_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(V_COUNTER > 0)",
              "then_statements": [
                {
                  "sql_statement": "RAISE THEME_DESC_NOT_UNIQUE;",
                  "type": "raise_statement",
                  "statement_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            },
            {
              "variable": "V_COUNTER",
              "value": "NULL",
              "type": "assignment_statement",
              "statement_indent": 6
            },
            {
              "variable": "V_VALID_TO",
              "value": "TO_DATE('09.09.9999', 'DD.MM.YYYY')",
              "type": "assignment_statement",
              "statement_indent": 6
            },
            {
              "variable": "V_SHORT_NAME",
              "value": "NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30))",
              "type": "assignment_statement",
              "statement_indent": 6
            },
            {
              "sql_statement": "INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ODG_NO, RESGRP_CD, RESLIN_CD, THEME_DESC, SHORT_NAME, STATUS_CD, DBA_CD, IN_PREP_IND, PROD_SHORT_CD, TRADEMARK_NO, BIO_ACTIVITY, APPLICANT, CONTACT, REGISTRAR, LINE_EXT_INFO, PORTF_PROJ_CD, CO_DEV_PRTNR, TECHNOLOGY_PRTNR, OFFICIAL_IND, CO_MAR_PRTNR, VALID_TO, PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC ) VALUES ( :NEW.THEME_NO, V_D_REGISTRAT_DATE, V_ODG_NO, V_RESGRP_CD, V_RESLIN_CD, V_DESCRIPTION, V_SHORT_NAME, V_STATUS_CD, V_DBA_CD, :NEW.IN_PREP_IND, :NEW.PROD_SHORT_CD, :NEW.TRADEMARK_NO, :NEW.BIO_ACTIVITY, :NEW.APPLICANT, :NEW.CONTACT, TXO_UTIL.GET_USERID, :NEW.LINE_EXT_INFO, V_PORTF_PROJ_CD, :NEW.CO_DEV_PRTNR, :NEW.TECHNOLOGY_PRTNR, :NEW.OFFICIAL_IND, :NEW.CO_MAR_PRTNR, V_VALID_TO, :NEW.PORTF_DA_GROUP_ID, :NEW.MANUAL_SHORT_DESC );",
              "type": "insert_statement",
              "statement_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL)",
              "then_statements": [
                {
                  "sql_statement": "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );",
                  "type": "insert_statement",
                  "statement_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            }
          ],
          "else_if": [
            {
              "condition": "(UPDATING)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0",
                  "then_statements": [
                    {
                      "sql_statement": "RAISE ADMIN_UPDATE_ONLY;",
                      "type": "raise_statement",
                      "statement_indent": 9
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_indent": 6
                },
                {
                  "type": "if_else",
                  "condition": "(:NEW.THEME_NO <> :OLD.THEME_NO)",
                  "then_statements": [
                    {
                      "sql_statement": "RAISE THEME_NO_ONLY_INSERT;",
                      "type": "raise_statement",
                      "statement_indent": 9
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_indent": 6
                },
                {
                  "type": "if_else",
                  "condition": "(:NEW.OFFICIAL_IND = 'N')",
                  "then_statements": [
                    {
                      "variable": "V_D_REGISTRAT_DATE",
                      "value": "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy')",
                      "type": "assignment_statement",
                      "statement_indent": 9
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "variable": "V_D_REGISTRAT_DATE",
                      "value": "SYSDATE",
                      "type": "assignment_statement",
                      "statement_indent": 9
                    }
                  ],
                  "if_indent": 6
                },
                {
                  "type": "if_else",
                  "condition": "(UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD)",
                  "then_statements": [
                    {
                      "variable": "V_DESCRIPTION",
                      "value": "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' )",
                      "type": "assignment_statement",
                      "statement_indent": 9
                    },
                    {
                      "variable": "V_DESCRIPTION",
                      "value": "TRIM(V_DESCRIPTION)",
                      "type": "assignment_statement",
                      "statement_indent": 9
                    },
                    {
                      "variable": "V_PORTF_PROJ_CD",
                      "value": "'Y'",
                      "type": "assignment_statement",
                      "statement_indent": 9
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "type": "if_else",
                      "condition": "(:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0)",
                      "then_statements": [
                        {
                          "sql_statement": "RAISE THEMEDESCRIPTIONMANDATORY;",
                          "type": "raise_statement",
                          "statement_indent": 12
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "variable": "V_DESCRIPTION",
                          "value": ":NEW.THEME_DESC",
                          "type": "assignment_statement",
                          "statement_indent": 12
                        },
                        {
                          "variable": "V_PORTF_PROJ_CD",
                          "value": ":NEW.PORTF_PROJ_CD",
                          "type": "assignment_statement",
                          "statement_indent": 12
                        }
                      ],
                      "if_indent": 9
                    }
                  ],
                  "if_indent": 6
                },
                {
                  "type": "if_else",
                  "condition": "(LENGTH(V_DESCRIPTION) > 90)",
                  "then_statements": [
                    {
                      "sql_statement": "RAISE DESCRIPTION_TOO_LONG;",
                      "type": "raise_statement",
                      "statement_indent": 9
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_indent": 6
                },
                {
                  "variable": "V_COUNTER",
                  "value": "NULL",
                  "type": "assignment_statement",
                  "statement_indent": 6
                },
                {
                  "sql_statement": "SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO;",
                  "type": "select_statement",
                  "statement_indent": 6
                },
                {
                  "type": "if_else",
                  "condition": "(V_COUNTER > 0)",
                  "then_statements": [
                    {
                      "sql_statement": "RAISE THEME_DESC_NOT_UNIQUE;",
                      "type": "raise_statement",
                      "statement_indent": 9
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_indent": 6
                },
                {
                  "variable": "V_COUNTER",
                  "value": "NULL",
                  "type": "assignment_statement",
                  "statement_indent": 6
                },
                {
                  "type": "if_else",
                  "condition": "(:NEW.OFFICIAL_IND = 'N')",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;",
                      "type": "update_statement",
                      "statement_indent": 9
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "variable": "V_COUNTER",
                      "value": "NULL",
                      "type": "assignment_statement",
                      "statement_indent": 9
                    },
                    {
                      "sql_statement": "SELECT COUNT(*) INTO V_COUNTER FROM V_THEMES T WHERE TRUNC(T.REGISTRAT_DATE) = TRUNC(SYSDATE) AND T.THEME_NO = :NEW.THEME_NO;",
                      "type": "select_statement",
                      "statement_indent": 9
                    },
                    {
                      "type": "if_else",
                      "condition": "(V_COUNTER > 0)",
                      "then_statements": [
                        {
                          "sql_statement": "RAISE ONLYONEOFFICIALCHANGEPERDAY;",
                          "type": "raise_statement",
                          "statement_indent": 12
                        }
                      ],
                      "else_if": [],
                      "else_statements": [],
                      "if_indent": 9
                    },
                    {
                      "variable": "V_COUNTER",
                      "value": "NULL",
                      "type": "assignment_statement",
                      "statement_indent": 9
                    },
                    {
                      "sql_statement": "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, REGISTRAT_DATE = SYSDATE, REGISTRAR = V_USERID, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO;",
                      "type": "update_statement",
                      "statement_indent": 9
                    }
                  ],
                  "if_indent": 6
                },
                {
                  "type": "case_when",
                  "case_expression": "",
                  "when_clauses": [
                    {
                      "when_value": ":OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL",
                      "then_statements": [
                        {
                          "sql_statement": "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );",
                          "type": "insert_statement",
                          "statement_indent": 12
                        }
                      ]
                    },
                    {
                      "when_value": ":OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';",
                          "type": "update_statement",
                          "statement_indent": 12
                        }
                      ]
                    },
                    {
                      "when_value": ":OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL",
                      "then_statements": [
                        {
                          "sql_statement": "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';",
                          "type": "select_statement",
                          "statement_indent": 12
                        },
                        {
                          "type": "if_else",
                          "condition": "(V_SEC_MOL_CNT > 0)",
                          "then_statements": [
                            {
                              "sql_statement": "RAISE SEC_MOL_LIST_NOT_EMPTY;",
                              "type": "raise_statement",
                              "statement_indent": 15
                            }
                          ],
                          "else_if": [],
                          "else_statements": [
                            {
                              "sql_statement": "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.VALID_IND = 'N' WHERE A.MOLECULE_ID = :OLD.MOLECULE_ID AND A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';",
                              "type": "update_statement",
                              "statement_indent": 15
                            }
                          ],
                          "if_indent": 12
                        }
                      ]
                    }
                  ],
                  "else_statements": [
                    {
                      "statement": "NULL;",
                      "type": "unknown_statement",
                      "indent": 12
                    }
                  ],
                  "case_indent": 6
                }
              ]
            },
            {
              "condition": "(DELETING)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0)",
                  "then_statements": [
                    {
                      "sql_statement": "RAISE ADMIN_UPDATE_ONLY;",
                      "type": "raise_statement",
                      "statement_indent": 9
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_indent": 6
                },
                {
                  "type": "if_else",
                  "condition": "(TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE))",
                  "then_statements": [
                    {
                      "sql_statement": "DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);",
                      "type": "delete_statement",
                      "statement_indent": 9
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql_statement": "RAISE DELETE_NO_MORE_POSSIBLE;",
                      "type": "raise_statement",
                      "statement_indent": 9
                    }
                  ],
                  "if_indent": 6
                }
              ]
            }
          ],
          "else_statements": [],
          "if_indent": 3
        },
        {
          "type": "if_else",
          "condition": "(INSERTING OR UPDATING)",
          "then_statements": [
            {
              "type": "if_else",
              "condition": "(:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL)",
              "then_statements": [
                {
                  "sql_statement": "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';",
                  "type": "select_statement",
                  "statement_indent": 9
                },
                {
                  "type": "if_else",
                  "condition": "(V_EVOLVED_NMP_CNT = 0)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;",
                      "type": "update_statement",
                      "statement_indent": 12
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [
                {
                  "type": "if_else",
                  "condition": "(:NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'A', EVOLVED_THEME_NO = NULL WHERE PROPOSAL_ID = :OLD.PROPOSAL_ID;",
                      "type": "update_statement",
                      "statement_indent": 12
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "type": "if_else",
                      "condition": "(:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID)",
                      "then_statements": [
                        {
                          "sql_statement": "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'A', EVOLVED_THEME_NO = NULL WHERE PROPOSAL_ID = :OLD.PROPOSAL_ID;",
                          "type": "update_statement",
                          "statement_indent": 15
                        },
                        {
                          "sql_statement": "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;",
                          "type": "update_statement",
                          "statement_indent": 15
                        }
                      ],
                      "else_if": [],
                      "else_statements": [],
                      "if_indent": 12
                    }
                  ],
                  "if_indent": 9
                }
              ],
              "if_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-'))",
              "then_statements": [
                {
                  "sql_statement": "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';",
                  "type": "select_statement",
                  "statement_indent": 9
                },
                {
                  "type": "if_else",
                  "condition": "(V_EVOLVED_NMP_CNT > 0)",
                  "then_statements": [
                    {
                      "sql_statement": "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';",
                      "type": "update_statement",
                      "statement_indent": 12
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_indent": 3
        },
        {
          "type": "if_else",
          "condition": "(INSERTING AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y')",
          "then_statements": [
            {
              "type": "if_else",
              "condition": "(:NEW.PROPOSAL_ID IS NOT NULL)",
              "then_statements": [
                {
                  "sql_statement": "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';",
                  "type": "select_statement",
                  "statement_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            },
            {
              "type": "if_else",
              "condition": "(:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0))",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
                  "then_statements": [
                    {
                      "type": "begin_end",
                      "begin_end_statements": [
                        {
                          "sql_statement": "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';",
                          "type": "select_statement",
                          "statement_indent": 15
                        }
                      ],
                      "exception_handlers": [
                        {
                          "exception_name": "NO_DATA_FOUND",
                          "exception_statements": [
                            {
                              "sql_statement": "RAISE INVALID_MOLECULE_ID;",
                              "type": "raise_statement",
                              "statement_indent": 18
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "else_if": [],
                  "else_statements": [],
                  "if_indent": 9
                },
                {
                  "sql_statement": "INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );",
                  "type": "insert_statement",
                  "statement_indent": 9
                }
              ],
              "else_if": [],
              "else_statements": [],
              "if_indent": 6
            }
          ],
          "else_if": [],
          "else_statements": [],
          "if_indent": 3
        },
        {
          "type": "begin_end",
          "begin_end_statements": [
            {
              "type": "for_loop",
              "loop_variable": "I1",
              "cursor_query": "(SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )",
              "loop_statements": [
                {
                  "sql_statement": "DELETE FROM GMD.THEMES WHERE THEME_NO = I1.THEME_NO AND REGISTRAT_DATE = I1.REGISTRAT_DATE;",
                  "type": "delete_statement",
                  "statement_indent": 9
                }
              ]
            }
          ],
          "exception_handlers": []
        }
      ],
      "exception_handlers": [
        {
          "exception_name": "ADMIN_UPDATE_ONLY",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20115",
                "handler_string": "'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "exception_name": "IN_PREP_NOT_PORTF_PROJ",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20116",
                "handler_string": "'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "exception_name": "IN_PREP_NOT_CLOSED",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20117",
                "handler_string": "'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "exception_name": "INVALID_MOLECULE_ID",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20118",
                "handler_string": "'This is not a valid Molecule ID'"
              }
            }
          ]
        },
        {
          "exception_name": "SEC_MOL_LIST_NOT_EMPTY",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20119",
                "handler_string": "'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "exception_name": "INVALID_THEME_NO",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20101",
                "handler_string": "'This is not a valid Theme No'"
              }
            }
          ]
        },
        {
          "exception_name": "DELETE_NO_MORE_POSSIBLE",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20400",
                "handler_string": "'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"
              }
            }
          ]
        },
        {
          "exception_name": "THEME_NO_ONLY_INSERT",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20400",
                "handler_string": "'Theme No cannot be updated'"
              }
            }
          ]
        },
        {
          "exception_name": "DESCRIPTION_TOO_LONG",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20400",
                "handler_string": "'The automatically generated Theme Description \"' || V_DESCRIPTION || '\" is too long'"
              }
            }
          ]
        },
        {
          "exception_name": "THEME_DESC_PROPOSAL_TOO_LONG",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20400",
                "handler_string": "'The automatically generated Short Description Proposal \"' || :OLD.THEME_DESC_PROPOSAL || '\" is too long'"
              }
            }
          ]
        },
        {
          "exception_name": "THEME_DESC_ALT_TOO_LONG",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20400",
                "handler_string": "'The automatically generated Downstream Theme Description \"' || :OLD.THEME_DESC_ALT || '\" is too long'"
              }
            }
          ]
        },
        {
          "exception_name": "THEME_NO_CANNOT_BE_INSERTED",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20400",
                "handler_string": "'This Theme No already exists'"
              }
            }
          ]
        },
        {
          "exception_name": "ONLYONEOFFICIALCHANGEPERDAY",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20400",
                "handler_string": "'Official Change for this Theme No and Day already exists'"
              }
            }
          ]
        },
        {
          "exception_name": "INSERTSMUSTBEOFFICIAL",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20400",
                "handler_string": "'New Themes can only be inserted by Official Changes'"
              }
            }
          ]
        },
        {
          "exception_name": "THEMEDESCRIPTIONMANDATORY",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20400",
                "handler_string": "'If Pharma Rx Portfolio Project is set to \"No\", then the Theme Description must be filled'"
              }
            }
          ]
        },
        {
          "exception_name": "THEME_DESC_NOT_UNIQUE",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20400",
                "handler_string": "'This Theme Description already exists'"
              }
            }
          ]
        },
        {
          "exception_name": "PORTF_PROJ_MOL_CRE_ERR",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20120",
                "handler_string": "'MDM_V_THEMES_IOF'"
              }
            }
          ]
        },
        {
          "exception_name": "DEBUGGING",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20900",
                "handler_string": "'Debug in Themes IOF standard'"
              }
            }
          ]
        }
      ]
    }
  ],
  "sql_comments": [
    "-- Other Program",
    "-- Unknown",
    "-- check user",
    "-- v_is_admin_cnt = 0 => is NOT a full admin user (MDMS_THEME_ADMIN_FULL_ACCESS)",
    "-- v_is_admin_cnt > 0 => is a full admin user (MDMS_THEME_ADMIN_FULL_ACCESS)",
    "-- find next free rg_no which may be used later in this trigger :",
    "-- set THEME_MOLECULE RG Number for first assignment of molecule",
    "-- no RG_NO for Comparators -----------------------------",
    "--   for Roche molecules ----------------------------------",
    "-- first time assignment as RG_NO is empty.",
    "-- set RG_NO to RG + first theme_no the molecule was ever assigned to",
    "--:new.theme_no",
    "-- RAISE debugging;",
    "-- The Parameter :NEW.RESLIN_DESC_CONCAT consists of 4 fields",
    "-- CMA 1685, automatic molecule creation",
    "-- CMA 1820, add RG_NO to inserted values",
    "--  create molecule mapping (Primary Molecule)",
    "-- primary molecule!",
    "-- Is this theme_no really new?",
    "-- VERIFY OFFICIAL-IND --------------------------",
    "-- The Theme Description is generated automatically",
    "-- The given Theme Description is inserted",
    "-- :NEW.PORTF_PROJ_CD = 'Y'",
    "-- NOW VERIFY UNIQUENESS OF THEME_DESC --------------",
    "-- handle primary molecule mapping to this theme",
    "--(PRIMARY, molecule_seq_no = 1)",
    "-- End Code  for Inserting",
    "-- check admin access (role 315)",
    "-- CMA 1544 Registrat_date is",
    "--   * always sysdate for official updates",
    "--   * always :OLD.registrat_date for inofficial updates",
    "-- inofficial => do not change registrat_date",
    "-- it is an official change",
    "-- official change => registrat_date will be set to sysdate",
    "-- NOW VERIFY UNIQUENESS OF THEME_DESC --------------",
    "--(but not within the same theme_no, then is no uniqueness required)",
    "--  Code for INOFFICIAL Changes",
    "-- Code for OFFICIAL changes  :NEW.OFFICIAL_IND = 'Y'",
    "-- then this is  the first and only record for this registrat-date",
    "-- only one official change allowed per day",
    "-- handle primary molecule mapping to this theme",
    "-- this code is identical for official and in-official changes",
    "-- insert a new mapping (PRIMARY, molecule_seq_no = 1)",
    "-- update an existing mapping (PRIMARY, molecule_seq_no = 1)",
    "-- error",
    "-- soft-delete an existing mapping (PRIMARY, molecule_seq_no = 1)",
    "-- deleting is only possible, if theme_no has been",
    "-- inserted on the same day",
    "-- only if this change has been",
    "--  Code for Inserting, Updating, Deleting",
    "-- check if the entered NMP is evolved",
    "----------",
    "-- if the proposal id is set and the NMP is not evolved then update the corresponding",
    "-- New Medicinie Proposal status to evolved",
    "-- set to Active the old New Medicine Proposal",
    "-- set to Evolved the new choosen New Medicine Proposal",
    "-- short_name update",
    "-- check if this is an evolved proposal",
    "-- short_name has changed so proposal_name must be updated accordingly",
    "-- handle New Medicine Proposals with theme_no starting with 71.. or 74",
    "-- automatic create NMP only if no prposal_id is selected or the selected one is evolved",
    "-- set variable",
    "-- is_from_theme_validity_check := TRUE;"
  ],
  "rest_strings": [
    {
      "statement": "TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!');",
      "type": "unknown_statement",
      "indent": 9
    },
    {
      "statement": "NULL;",
      "type": "unknown_statement",
      "indent": 12
    },
    {
      "statement": "NULL;",
      "type": "unknown_statement",
      "indent": 12
    },
    {
      "statement": "NULL;",
      "type": "unknown_statement",
      "indent": 12
    }
  ],
  "conversion_stats": {
    "declaration_count": 49,
    "comment_count": 63,
    "rest_string_count": 4,
    "sql_convert_count": 183
  },
  "metadata": {
    "parse_timestamp": "2025-08-14T12:07:24.296338",
    "parser_version": "1.0"
  }
}