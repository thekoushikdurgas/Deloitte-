{
  "declarations": {
    "variables": [
      {
        "name": "V_COUNTER",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_CODE",
        "data_type": "VARCHAR2(2)",
        "default_value": null
      },
      {
        "name": "V_ODG_NO",
        "data_type": "VARCHAR2(2)",
        "default_value": null
      },
      {
        "name": "V_RESGRP_CD",
        "data_type": "VARCHAR2(2)",
        "default_value": null
      },
      {
        "name": "V_RESLIN_CD",
        "data_type": "VARCHAR2(2)",
        "default_value": null
      },
      {
        "name": "V_STATUS_CD",
        "data_type": "VARCHAR2(1)",
        "default_value": null
      },
      {
        "name": "V_DBA_CD",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_PORTF_PROJ_CD",
        "data_type": "VARCHAR2(1)",
        "default_value": null
      },
      {
        "name": "V_DESCRIPTION",
        "data_type": "VARCHAR2(500)",
        "default_value": null
      },
      {
        "name": "V_RESLIN_DESC",
        "data_type": "VARCHAR2(60)",
        "default_value": null
      },
      {
        "name": "V_THEME_DESC_LENGTH",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_D_REGISTRAT_DATE",
        "data_type": "DATE",
        "default_value": null
      },
      {
        "name": "V_D_INS_DATE",
        "data_type": "DATE",
        "default_value": null
      },
      {
        "name": "V_FUTURE_REGISTRAT",
        "data_type": "DATE",
        "default_value": null
      },
      {
        "name": "V_VALID_TO",
        "data_type": "DATE",
        "default_value": null
      },
      {
        "name": "V_USERID",
        "data_type": "VARCHAR2(30)",
        "default_value": null
      },
      {
        "name": "V_IS_ADMIN_CNT",
        "data_type": "SIMPLE_INTEGER",
        "default_value": "0"
      },
      {
        "name": "V_SEC_MOL_CNT",
        "data_type": "SIMPLE_INTEGER",
        "default_value": "0"
      },
      {
        "name": "V_MOLECULE_ID",
        "data_type": "VARCHAR2(5)",
        "default_value": "NULL"
      },
      {
        "name": "V_MOLECULE_RG_NO",
        "data_type": "VARCHAR2(20)",
        "default_value": "NULL"
      },
      {
        "name": "V_MOLEC_IN_LIC_PRTNR",
        "data_type": "VARCHAR2(15)",
        "default_value": "NULL"
      },
      {
        "name": "V_NEW_RG_NO",
        "data_type": "V_THEME_MOLECULES.RG_NO%TYPE",
        "default_value": null
      },
      {
        "name": "V_COMPARATOR_IND",
        "data_type": "V_THEME_MOLECULES.COMPARATOR_IND%TYPE",
        "default_value": null
      },
      {
        "name": "V_THEME_DESC_PROPOSAL",
        "data_type": "MDM_V_THEMES_MTN.THEME_DESC_PROPOSAL%TYPE",
        "default_value": null
      },
      {
        "name": "V_SHORT_NAME",
        "data_type": "VARCHAR2(30)",
        "default_value": null
      },
      {
        "name": "V_EVOLVED_NMP_CNT",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_TRADEMARK_NO",
        "data_type": "V_THEMES.TRADEMARK_NO%TYPE",
        "default_value": null
      },
      {
        "name": "V_MOLECULE_TYPE_ID",
        "data_type": "V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE",
        "default_value": null
      },
      {
        "name": "V_PHARMACOLOGICAL_TYPE_ID",
        "data_type": "V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE",
        "default_value": null
      }
    ],
    "constants": [
      {
        "name": "C_MOLECULE_TYPE_ID",
        "data_type": "V_MOLECULE_TYPES.MOLECULE_TYPE_ID%TYPE",
        "value": "99"
      },
      {
        "name": "C_PHARMACOLOGICAL_TYPE_ID",
        "data_type": "V_PHARMACOLOGICAL_TYPES.PHARMACOLOGICAL_TYPE_ID%TYPE",
        "value": "19"
      }
    ],
    "exceptions": [
      {
        "name": "INVALID_THEME_NO",
        "type": "EXCEPTION"
      },
      {
        "name": "DELETE_NO_MORE_POSSIBLE",
        "type": "EXCEPTION"
      },
      {
        "name": "THEME_NO_ONLY_INSERT",
        "type": "EXCEPTION"
      },
      {
        "name": "DESCRIPTION_TOO_LONG",
        "type": "EXCEPTION"
      },
      {
        "name": "THEME_DESC_PROPOSAL_TOO_LONG",
        "type": "EXCEPTION"
      },
      {
        "name": "THEME_DESC_ALT_TOO_LONG",
        "type": "EXCEPTION"
      },
      {
        "name": "THEME_NO_CANNOT_BE_INSERTED",
        "type": "EXCEPTION"
      },
      {
        "name": "ONLYONEOFFICIALCHANGEPERDAY",
        "type": "EXCEPTION"
      },
      {
        "name": "INSERTSMUSTBEOFFICIAL",
        "type": "EXCEPTION"
      },
      {
        "name": "THEMEDESCRIPTIONMANDATORY",
        "type": "EXCEPTION"
      },
      {
        "name": "THEME_DESC_NOT_UNIQUE",
        "type": "EXCEPTION"
      },
      {
        "name": "IN_PREP_NOT_PORTF_PROJ",
        "type": "EXCEPTION"
      },
      {
        "name": "IN_PREP_NOT_CLOSED",
        "type": "EXCEPTION"
      },
      {
        "name": "INVALID_MOLECULE_ID",
        "type": "EXCEPTION"
      },
      {
        "name": "SEC_MOL_LIST_NOT_EMPTY",
        "type": "EXCEPTION"
      },
      {
        "name": "ADMIN_UPDATE_ONLY",
        "type": "EXCEPTION"
      },
      {
        "name": "PORTF_PROJ_MOL_CRE_ERR",
        "type": "EXCEPTION"
      },
      {
        "name": "DEBUGGING",
        "type": "EXCEPTION"
      }
    ]
  },
  "main": [
    {
      "sqls": [
        "SELECT",
        "NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID",
        "FROM",
        "DUAL;",
        "SELECT",
        "COUNT(*) INTO V_IS_ADMIN_CNT",
        "FROM",
        "TXO_USERS_ROLES_MAP",
        "WHERE",
        "ROLE_ID IN (315)",
        "AND USERID = V_USERID;",
        "SELECT",
        "NEW_RG_NO INTO V_NEW_RG_NO",
        "FROM",
        "(",
        "SELECT",
        "NEW_RG_NO",
        "FROM",
        "(",
        "SELECT",
        "ROWNUM AS NEW_RG_NO",
        "FROM",
        "DUAL",
        "CONNECT BY",
        "1 = 1",
        "AND ROWNUM <= 6999",
        ")",
        "WHERE",
        "NEW_RG_NO > 5999 MINUS",
        "SELECT",
        "TO_NUMBER(RG_NO)",
        "FROM",
        "V_THEME_MOLECULES",
        ")",
        "WHERE",
        "ROWNUM = 1;",
        "IF (:NEW.IN_PREP_IND = 'Y') THEN",
        "IF (:NEW.PORTF_PROJ_CD <> 'Y') THEN",
        "RAISE IN_PREP_NOT_PORTF_PROJ;",
        "END IF;",
        "IF (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) THEN",
        "RAISE IN_PREP_NOT_CLOSED;",
        "END IF;",
        "IF (:NEW.MOLECULE_ID IS NULL) THEN",
        "TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!');",
        "END IF;",
        "END IF;",
        "IF (:NEW.MOLECULE_ID IS NOT NULL) THEN",
        {
          "sqls": [
            "SELECT",
            "RG_NO,",
            "M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,",
            "V_COMPARATOR_IND",
            "FROM",
            "V_THEME_MOLECULES M",
            "WHERE",
            "MOLECULE_ID = :NEW.MOLECULE_ID",
            "AND M.VALID_IND = 'Y';",
            "RAISE INVALID_MOLECULE_ID;"
          ],
          "type": "begin_block",
          "exception_handlers": [
            {
              "exception_name": "NO_DATA_FOUND"
            }
          ]
        },
        "IF (V_MOLECULE_RG_NO IS NULL) THEN",
        "IF (V_COMPARATOR_IND = 'Y') THEN",
        "NULL;",
        "ELSE",
        "UPDATE V_THEME_MOLECULES",
        "SET",
        "RG_NO = V_NEW_RG_NO",
        "WHERE",
        "MOLECULE_ID = :NEW.MOLECULE_ID;",
        "END IF;",
        "END IF;",
        "END IF;",
        "V_ODG_NO := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);",
        "V_RESGRP_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);",
        "V_RESLIN_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);",
        "V_RESLIN_DESC := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));",
        "IF (:NEW.STATUS_DESC IS NOT NULL) THEN",
        "SELECT",
        "STATUS_CD INTO V_STATUS_CD",
        "FROM",
        "MDM_V_THEME_STATUS",
        "WHERE",
        "STATE_DESC = :NEW.STATUS_DESC;",
        "ELSE",
        "V_STATUS_CD := NULL;",
        "END IF;",
        "IF (:NEW.DBA_DESC_CONCAT IS NOT NULL) THEN",
        "SELECT",
        "DBA_CD INTO V_DBA_CD",
        "FROM",
        "MDM_V_DISEASE_BIOLOGY_AREAS",
        "WHERE",
        "DBA_SHORT_DESC",
        "|| ' - '",
        "|| DBA_DESC = :NEW.DBA_DESC_CONCAT;",
        "ELSE",
        "V_DBA_CD := NULL;",
        "END IF;",
        "V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);",
        "IF (:NEW.OFFICIAL_IND = 'N') THEN",
        "V_TRADEMARK_NO := :NEW.TRADEMARK_NO;",
        "ELSE",
        "V_TRADEMARK_NO := :OLD.TRADEMARK_NO;",
        "END IF;",
        "V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');",
        "IF (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) THEN",
        "RAISE THEME_DESC_PROPOSAL_TOO_LONG;",
        "END IF;",
        "V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);",
        "IF (INSERTING) THEN",
        "IF (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) THEN",
        "RAISE ADMIN_UPDATE_ONLY;",
        "END IF;",
        "V_MOLECULE_ID := :NEW.MOLECULE_ID;",
        "IF (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) THEN",
        "IF (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) THEN",
        "RAISE PORTF_PROJ_MOL_CRE_ERR;",
        "ELSE",
        "INSERT INTO MDM_V_THEME_MOLECULES_MTN(",
        "MOLECULE_DESC,",
        "VALID_IND,",
        "RG_NO,",
        "CANCER_IMMUNOTHERAPY_IND,",
        "MOLECULE_TYPE_ID,",
        "PHARMACOLOGICAL_TYPE_ID",
        ") VALUES (",
        "NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL),",
        "'Y',",
        "V_NEW_RG_NO,",
        "'N',",
        "C_MOLECULE_TYPE_ID,",
        "C_PHARMACOLOGICAL_TYPE_ID",
        ");",
        "SELECT",
        "MOLECULE_ID INTO V_MOLECULE_ID",
        "FROM",
        "V_THEME_MOLECULES",
        "WHERE",
        "MOLECULE_DESC = NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL)",
        "AND VALID_IND = 'Y'",
        "AND RG_NO = V_NEW_RG_NO",
        "AND CANCER_IMMUNOTHERAPY_IND = 'N'",
        "AND MOLECULE_TYPE_ID = C_MOLECULE_TYPE_ID",
        "AND PHARMACOLOGICAL_TYPE_ID = C_PHARMACOLOGICAL_TYPE_ID;",
        "INSERT INTO THEME_MOLECULE_MAP TMMAP(",
        "TMMAP.THEME_NO,",
        "TMMAP.MOLECULE_ID,",
        "TMMAP.MOLECULE_SEQ_NO,",
        "TMMAP.VALID_IND",
        ") VALUES (",
        ":NEW.THEME_NO,",
        "V_MOLECULE_ID,",
        "1,",
        "'Y'",
        ");",
        "END IF;",
        "END IF;",
        "CASE LENGTH(:NEW.THEME_NO)",
        "IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) THEN",
        "RAISE INVALID_THEME_NO;",
        "END IF;",
        "IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) THEN",
        "RAISE INVALID_THEME_NO;",
        "END IF;",
        "ELSE",
        "RAISE INVALID_THEME_NO;",
        "END CASE;",
        "V_COUNTER := NULL;",
        "SELECT",
        "COUNT(T.THEME_NO) INTO V_COUNTER",
        "FROM",
        "(",
        "SELECT",
        "THEME_NO",
        "FROM",
        "V_THEMES",
        "UNION",
        "ALL",
        "SELECT",
        "THEME_NO",
        "FROM",
        "GMD.THEMES_ARCHIVE",
        ")                  T",
        "WHERE",
        "T.THEME_NO = :NEW.THEME_NO;",
        "IF (V_COUNTER > 0) THEN",
        "RAISE THEME_NO_CANNOT_BE_INSERTED;",
        "END IF;",
        "V_COUNTER := NULL;",
        "V_D_REGISTRAT_DATE := SYSDATE;",
        "IF (:NEW.OFFICIAL_IND = 'N') THEN",
        "RAISE INSERTSMUSTBEOFFICIAL;",
        "END IF;",
        "IF (UPPER(:NEW.PORTF_PROJ_CD) = 'N') THEN",
        "IF (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) THEN",
        "RAISE THEMEDESCRIPTIONMANDATORY;",
        "END IF;",
        "END IF;",
        "IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') THEN",
        "V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(",
        "P_THEME_NO_PORTF => NULL,",
        "P_MOLECULE_ID_PORTF => V_MOLECULE_ID,",
        "P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,",
        "P_ODG_NO_PORT => V_ODG_NO,",
        "P_RESGRP_CD_PORT => V_RESGRP_CD,",
        "P_RESLIN_CD_PORT => V_RESLIN_CD,",
        "P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,",
        "P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,",
        "P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,",
        "P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,",
        "P_TRUNC_DESC_LENGTH => 'N'",
        ");",
        "IF (LENGTH(V_DESCRIPTION) > 90) THEN",
        "RAISE DESCRIPTION_TOO_LONG;",
        "END IF;",
        "V_DESCRIPTION := TRIM(V_DESCRIPTION);",
        "V_PORTF_PROJ_CD := 'Y';",
        "ELSE",
        "V_DESCRIPTION := :NEW.THEME_DESC;",
        "V_PORTF_PROJ_CD := 'N';",
        "END IF;",
        "V_COUNTER := NULL;",
        "SELECT",
        "COUNT(T.THEME_NO) INTO V_COUNTER",
        "FROM",
        "V_THEMES T",
        "WHERE",
        "T.THEME_DESC = V_DESCRIPTION;",
        "IF (V_COUNTER > 0) THEN",
        "RAISE THEME_DESC_NOT_UNIQUE;",
        "END IF;",
        "V_COUNTER := NULL;",
        "V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY');",
        "V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));",
        "INSERT INTO GMD.THEMES(",
        "THEME_NO,",
        "REGISTRAT_DATE,",
        "ODG_NO,",
        "RESGRP_CD,",
        "RESLIN_CD,",
        "THEME_DESC,",
        "SHORT_NAME,",
        "STATUS_CD,",
        "DBA_CD,",
        "IN_PREP_IND,",
        "PROD_SHORT_CD,",
        "TRADEMARK_NO,",
        "BIO_ACTIVITY,",
        "APPLICANT,",
        "CONTACT,",
        "REGISTRAR,",
        "LINE_EXT_INFO,",
        "PORTF_PROJ_CD,",
        "CO_DEV_PRTNR,",
        "TECHNOLOGY_PRTNR,",
        "OFFICIAL_IND,",
        "CO_MAR_PRTNR,",
        "VALID_TO,",
        "PORTF_DA_GROUP_ID,",
        "MANUAL_SHORT_DESC",
        ") VALUES (",
        ":NEW.THEME_NO,",
        "V_D_REGISTRAT_DATE,",
        "V_ODG_NO,",
        "V_RESGRP_CD,",
        "V_RESLIN_CD,",
        "V_DESCRIPTION,",
        "V_SHORT_NAME,",
        "V_STATUS_CD,",
        "V_DBA_CD,",
        ":NEW.IN_PREP_IND,",
        ":NEW.PROD_SHORT_CD,",
        ":NEW.TRADEMARK_NO,",
        ":NEW.BIO_ACTIVITY,",
        ":NEW.APPLICANT,",
        ":NEW.CONTACT,",
        "TXO_UTIL.GET_USERID,",
        ":NEW.LINE_EXT_INFO,",
        "V_PORTF_PROJ_CD,",
        ":NEW.CO_DEV_PRTNR,",
        ":NEW.TECHNOLOGY_PRTNR,",
        ":NEW.OFFICIAL_IND,",
        ":NEW.CO_MAR_PRTNR,",
        "V_VALID_TO,",
        ":NEW.PORTF_DA_GROUP_ID,",
        ":NEW.MANUAL_SHORT_DESC",
        ");",
        "IF (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) THEN",
        "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(",
        "A.THEME_NO,",
        "A.MOLECULE_ID,",
        "A.MOLECULE_SEQ_NO,",
        "A.VALID_IND",
        ") VALUES (",
        ":NEW.THEME_NO,",
        "V_MOLECULE_ID,",
        "1,",
        "'Y'",
        ");",
        "END IF;",
        "ELSIF (UPDATING) THEN",
        "IF (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 THEN",
        "RAISE ADMIN_UPDATE_ONLY;",
        "END IF;",
        "IF (:NEW.THEME_NO <> :OLD.THEME_NO) THEN",
        "RAISE THEME_NO_ONLY_INSERT;",
        "END IF;",
        "IF (:NEW.OFFICIAL_IND = 'N') THEN",
        "V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');",
        "ELSE",
        "V_D_REGISTRAT_DATE := SYSDATE;",
        "END IF;",
        "IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) THEN",
        "V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(",
        "P_THEME_NO_PORTF => :NEW.THEME_NO,",
        "P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,",
        "P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,",
        "P_ODG_NO_PORT => V_ODG_NO,",
        "P_RESGRP_CD_PORT => V_RESGRP_CD,",
        "P_RESLIN_CD_PORT => V_RESLIN_CD,",
        "P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,",
        "P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,",
        "P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,",
        "P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,",
        "P_TRUNC_DESC_LENGTH => 'N'",
        ");",
        "V_DESCRIPTION := TRIM(V_DESCRIPTION);",
        "V_PORTF_PROJ_CD := 'Y';",
        "ELSE",
        "IF (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) THEN",
        "RAISE THEMEDESCRIPTIONMANDATORY;",
        "ELSE",
        "V_DESCRIPTION := :NEW.THEME_DESC;",
        "V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD;",
        "END IF;",
        "END IF;",
        "IF (LENGTH(V_DESCRIPTION) > 90) THEN",
        "RAISE DESCRIPTION_TOO_LONG;",
        "END IF;",
        "V_COUNTER := NULL;",
        "SELECT",
        "COUNT(T.THEME_NO) INTO V_COUNTER",
        "FROM",
        "V_THEMES T",
        "WHERE",
        "T.THEME_DESC = V_DESCRIPTION",
        "AND T.THEME_NO <> :NEW.THEME_NO;",
        "IF (V_COUNTER > 0) THEN",
        "RAISE THEME_DESC_NOT_UNIQUE;",
        "END IF;",
        "V_COUNTER := NULL;",
        "IF (:NEW.OFFICIAL_IND = 'N') THEN",
        "UPDATE GMD.THEMES",
        "SET",
        "ODG_NO = V_ODG_NO,",
        "RESGRP_CD = V_RESGRP_CD,",
        "RESLIN_CD = V_RESLIN_CD,",
        "THEME_DESC = V_DESCRIPTION,",
        "SHORT_NAME = V_SHORT_NAME,",
        "STATUS_CD = V_STATUS_CD,",
        "DBA_CD = V_DBA_CD,",
        "IN_PREP_IND = :NEW.IN_PREP_IND,",
        "PROD_SHORT_CD = :NEW.PROD_SHORT_CD,",
        "TRADEMARK_NO = :NEW.TRADEMARK_NO,",
        "BIO_ACTIVITY = :NEW.BIO_ACTIVITY,",
        "APPLICANT = :NEW.APPLICANT,",
        "CONTACT = :NEW.CONTACT,",
        "LINE_EXT_INFO = :NEW.LINE_EXT_INFO,",
        "PORTF_PROJ_CD = V_PORTF_PROJ_CD,",
        "CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,",
        "TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,",
        "OFFICIAL_IND = :NEW.OFFICIAL_IND,",
        "CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,",
        "PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,",
        "MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC",
        "WHERE",
        "THEME_NO = :NEW.THEME_NO",
        "AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;",
        "ELSE",
        "V_COUNTER := NULL;",
        "SELECT",
        "COUNT(*) INTO V_COUNTER",
        "FROM",
        "V_THEMES T",
        "WHERE",
        "TRUNC(T.REGISTRAT_DATE) = TRUNC(SYSDATE)",
        "AND T.THEME_NO = :NEW.THEME_NO;",
        "IF (V_COUNTER > 0) THEN",
        "RAISE ONLYONEOFFICIALCHANGEPERDAY;",
        "END IF;",
        "V_COUNTER := NULL;",
        "UPDATE GMD.THEMES",
        "SET",
        "ODG_NO = V_ODG_NO,",
        "RESGRP_CD = V_RESGRP_CD,",
        "RESLIN_CD = V_RESLIN_CD,",
        "THEME_DESC = V_DESCRIPTION,",
        "SHORT_NAME = V_SHORT_NAME,",
        "STATUS_CD = V_STATUS_CD,",
        "DBA_CD = V_DBA_CD,",
        "IN_PREP_IND = :NEW.IN_PREP_IND,",
        "PROD_SHORT_CD = :NEW.PROD_SHORT_CD,",
        "TRADEMARK_NO = :NEW.TRADEMARK_NO,",
        "BIO_ACTIVITY = :NEW.BIO_ACTIVITY,",
        "APPLICANT = :NEW.APPLICANT,",
        "CONTACT = :NEW.CONTACT,",
        "LINE_EXT_INFO = :NEW.LINE_EXT_INFO,",
        "PORTF_PROJ_CD = V_PORTF_PROJ_CD,",
        "CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,",
        "TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,",
        "OFFICIAL_IND = :NEW.OFFICIAL_IND,",
        "CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,",
        "REGISTRAT_DATE = SYSDATE,",
        "REGISTRAR = V_USERID,",
        "PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,",
        "MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC",
        "WHERE",
        "THEME_NO = :NEW.THEME_NO;",
        "END IF;",
        "CASE",
        "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(",
        "A.THEME_NO,",
        "A.MOLECULE_ID,",
        "A.MOLECULE_SEQ_NO,",
        "A.VALID_IND",
        ") VALUES (",
        ":NEW.THEME_NO,",
        ":NEW.MOLECULE_ID,",
        "1,",
        "'Y'",
        ");",
        "UPDATE MDM_V_THEME_MOLECULE_MAP A",
        "SET",
        "A.MOLECULE_ID = :NEW.MOLECULE_ID,",
        "A.VALID_IND = 'Y'",
        "WHERE",
        "A.THEME_NO = :NEW.THEME_NO",
        "AND A.MOLECULE_SEQ_NO = 1",
        "AND A.VALID_IND = 'Y';",
        "SELECT",
        "COUNT(*) INTO V_SEC_MOL_CNT",
        "FROM",
        "MDM_V_THEME_MOLECULE_MAP_MTN A",
        "WHERE",
        "A.THEME_NO = :NEW.THEME_NO",
        "AND A.MOLECULE_SEQ_NO > 1",
        "AND A.VALID_IND = 'Y';",
        "IF (V_SEC_MOL_CNT > 0) THEN",
        "RAISE SEC_MOL_LIST_NOT_EMPTY;",
        "ELSE",
        "UPDATE MDM_V_THEME_MOLECULE_MAP A",
        "SET",
        "A.VALID_IND = 'N'",
        "WHERE",
        "A.MOLECULE_ID = :OLD.MOLECULE_ID",
        "AND A.THEME_NO = :NEW.THEME_NO",
        "AND A.MOLECULE_SEQ_NO = 1",
        "AND A.VALID_IND = 'Y';",
        "END IF;",
        "ELSE",
        "NULL;",
        "END CASE;",
        "ELSIF (DELETING) THEN",
        "IF ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) THEN",
        "RAISE ADMIN_UPDATE_ONLY;",
        "END IF;",
        "IF (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) THEN",
        "DELETE FROM GMD.THEMES A",
        "WHERE",
        "A.THEME_NO = :OLD.THEME_NO",
        "AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);",
        "ELSE",
        "RAISE DELETE_NO_MORE_POSSIBLE;",
        "END IF;",
        "END IF;",
        "IF (INSERTING OR UPDATING) THEN",
        "IF (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) THEN",
        "SELECT",
        "COUNT(*) INTO V_EVOLVED_NMP_CNT",
        "FROM",
        "MDM_V_NEW_MEDICINE_PROPOSALS_MTN",
        "WHERE",
        "PROPOSAL_ID = :NEW.PROPOSAL_ID",
        "AND PROPOSAL_STATUS_CD = 'E';",
        "IF (V_EVOLVED_NMP_CNT = 0) THEN",
        "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN",
        "SET",
        "PROPOSAL_STATUS_CD = 'E',",
        "EVOLVED_THEME_NO = :NEW.THEME_NO,",
        "PROPOSAL_NAME = V_SHORT_NAME,",
        "REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'",
        "WHERE",
        "PROPOSAL_ID = :NEW.PROPOSAL_ID;",
        "END IF;",
        "ELSE",
        "IF (:NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL) THEN",
        "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN",
        "SET",
        "PROPOSAL_STATUS_CD = 'A',",
        "EVOLVED_THEME_NO = NULL",
        "WHERE",
        "PROPOSAL_ID = :OLD.PROPOSAL_ID;",
        "ELSE",
        "IF (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID) THEN",
        "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN",
        "SET",
        "PROPOSAL_STATUS_CD = 'A',",
        "EVOLVED_THEME_NO = NULL",
        "WHERE",
        "PROPOSAL_ID = :OLD.PROPOSAL_ID;",
        "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN",
        "SET",
        "PROPOSAL_STATUS_CD = 'E',",
        "EVOLVED_THEME_NO = :NEW.THEME_NO,",
        "PROPOSAL_NAME = V_SHORT_NAME,",
        "REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'",
        "WHERE",
        "PROPOSAL_ID = :NEW.PROPOSAL_ID;",
        "END IF;",
        "END IF;",
        "END IF;",
        "IF (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) THEN",
        "SELECT",
        "COUNT(*) INTO V_EVOLVED_NMP_CNT",
        "FROM",
        "MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP",
        "WHERE",
        "NMP.EVOLVED_THEME_NO =:NEW.THEME_NO",
        "AND NMP.PROPOSAL_STATUS_CD = 'E';",
        "IF (V_EVOLVED_NMP_CNT > 0) THEN",
        "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP",
        "SET",
        "NMP.PROPOSAL_NAME = V_SHORT_NAME,",
        "NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'",
        "WHERE",
        "NMP.EVOLVED_THEME_NO =:NEW.THEME_NO",
        "AND NMP.PROPOSAL_STATUS_CD = 'E';",
        "END IF;",
        "END IF;",
        "END IF;",
        "IF (INSERTING AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y') THEN",
        "IF (:NEW.PROPOSAL_ID IS NOT NULL) THEN",
        "SELECT",
        "COUNT(*) INTO V_EVOLVED_NMP_CNT",
        "FROM",
        "MDM_V_NEW_MEDICINE_PROPOSALS_MTN",
        "WHERE",
        "PROPOSAL_ID = :NEW.PROPOSAL_ID",
        "AND PROPOSAL_NAME = V_SHORT_NAME",
        "AND PROPOSAL_STATUS_CD = 'E';",
        "END IF;",
        "IF (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) THEN",
        "IF (:NEW.MOLECULE_ID IS NOT NULL) THEN",
        {
          "sqls": [
            "SELECT",
            "PHARMACOLOGICAL_TYPE_ID,",
            "MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,",
            "V_MOLECULE_TYPE_ID",
            "FROM",
            "V_THEME_MOLECULES M",
            "WHERE",
            "MOLECULE_ID = :NEW.MOLECULE_ID",
            "AND M.VALID_IND = 'Y';",
            "RAISE INVALID_MOLECULE_ID;"
          ],
          "type": "begin_block",
          "exception_handlers": [
            {
              "exception_name": "NO_DATA_FOUND"
            }
          ]
        },
        "END IF;",
        "INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (",
        "PROPOSAL_STATUS_CD,",
        "EVOLVED_THEME_NO,",
        "PROPOSAL_NAME,",
        "PHARMACOLOGICAL_TYPE_ID,",
        "MOLECULE_TYPE_ID,",
        "REASON_FOR_CHANGE",
        ") VALUES (",
        "'E',",
        ":NEW.THEME_NO,",
        "V_SHORT_NAME,",
        "NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),",
        "NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),",
        "'** Automatic creation of nmp for early development themes **'",
        ");",
        "END IF;",
        "END IF;",
        {
          "sqls": [
            "FOR I1 IN (",
            "SELECT",
            "A.THEME_NO,",
            "A.REGISTRAT_DATE",
            "FROM",
            "V_THEMES A",
            "WHERE",
            "A.VALID_TO <= TRUNC(SYSDATE)",
            ") LOOP",
            "DELETE FROM GMD.THEMES",
            "WHERE",
            "THEME_NO = I1.THEME_NO",
            "AND REGISTRAT_DATE = I1.REGISTRAT_DATE;",
            "END LOOP;"
          ],
          "type": "begin_block",
          "exception_handlers": []
        }
      ],
      "type": "begin_block",
      "exception_handlers": [
        {
          "exception_name": "ADMIN_UPDATE_ONLY",
          "raise_application_error": {
            "handler_code": "-20115",
            "handler_string": "MDM_V_THEMES_IOF"
          }
        },
        {
          "exception_name": "IN_PREP_NOT_PORTF_PROJ",
          "raise_application_error": {
            "handler_code": "-20116",
            "handler_string": "MDM_V_THEMES_IOF"
          }
        },
        {
          "exception_name": "IN_PREP_NOT_CLOSED",
          "raise_application_error": {
            "handler_code": "-20117",
            "handler_string": "MDM_V_THEMES_IOF"
          }
        },
        {
          "exception_name": "INVALID_MOLECULE_ID",
          "raise_application_error": {
            "handler_code": "-20118",
            "handler_string": "This is not a valid Molecule ID"
          }
        },
        {
          "exception_name": "SEC_MOL_LIST_NOT_EMPTY",
          "raise_application_error": {
            "handler_code": "-20119",
            "handler_string": "MDM_V_THEMES_IOF"
          }
        },
        {
          "exception_name": "INVALID_THEME_NO",
          "raise_application_error": {
            "handler_code": "-20101",
            "handler_string": "This is not a valid Theme No"
          }
        },
        {
          "exception_name": "DELETE_NO_MORE_POSSIBLE",
          "raise_application_error": {
            "handler_code": "-20400",
            "handler_string": "Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted"
          }
        },
        {
          "exception_name": "THEME_NO_ONLY_INSERT",
          "raise_application_error": {
            "handler_code": "-20400",
            "handler_string": "Theme No cannot be updated"
          }
        },
        {
          "exception_name": "DESCRIPTION_TOO_LONG",
          "raise_application_error": {
            "handler_code": "-20400",
            "handler_string": "The automatically generated Theme Description \"' || V_DESCRIPTION || '\" is too long"
          }
        },
        {
          "exception_name": "THEME_DESC_PROPOSAL_TOO_LONG",
          "raise_application_error": {
            "handler_code": "-20400",
            "handler_string": "The automatically generated Short Description Proposal \"' || :OLD.THEME_DESC_PROPOSAL || '\" is too long"
          }
        },
        {
          "exception_name": "THEME_DESC_ALT_TOO_LONG",
          "raise_application_error": {
            "handler_code": "-20400",
            "handler_string": "The automatically generated Downstream Theme Description \"' || :OLD.THEME_DESC_ALT || '\" is too long"
          }
        },
        {
          "exception_name": "THEME_NO_CANNOT_BE_INSERTED",
          "raise_application_error": {
            "handler_code": "-20400",
            "handler_string": "This Theme No already exists"
          }
        },
        {
          "exception_name": "ONLYONEOFFICIALCHANGEPERDAY",
          "raise_application_error": {
            "handler_code": "-20400",
            "handler_string": "Official Change for this Theme No and Day already exists"
          }
        },
        {
          "exception_name": "INSERTSMUSTBEOFFICIAL",
          "raise_application_error": {
            "handler_code": "-20400",
            "handler_string": "New Themes can only be inserted by Official Changes"
          }
        },
        {
          "exception_name": "THEMEDESCRIPTIONMANDATORY",
          "raise_application_error": {
            "handler_code": "-20400",
            "handler_string": "If Pharma Rx Portfolio Project is set to \"No\", then the Theme Description must be filled"
          }
        },
        {
          "exception_name": "THEME_DESC_NOT_UNIQUE",
          "raise_application_error": {
            "handler_code": "-20400",
            "handler_string": "This Theme Description already exists"
          }
        },
        {
          "exception_name": "PORTF_PROJ_MOL_CRE_ERR",
          "raise_application_error": {
            "handler_code": "-20120",
            "handler_string": "MDM_V_THEMES_IOF"
          }
        },
        {
          "exception_name": "DEBUGGING",
          "raise_application_error": {
            "handler_code": "-20900",
            "handler_string": "Debug in Themes IOF standard"
          }
        }
      ]
    }
  ],
  "sql_comments": [
    "-- Other Program",
    "-- Unknown",
    "-- check user",
    "-- v_is_admin_cnt = 0 => is NOT a full admin user (MDMS_THEME_ADMIN_FULL_ACCESS)",
    "-- v_is_admin_cnt > 0 => is a full admin user (MDMS_THEME_ADMIN_FULL_ACCESS)",
    "-- find next free rg_no which may be used later in this trigger :",
    "-- set THEME_MOLECULE RG Number for first assignment of molecule",
    "-- no RG_NO for Comparators -----------------------------",
    "--   for Roche molecules ----------------------------------",
    "-- first time assignment as RG_NO is empty.",
    "-- set RG_NO to RG + first theme_no the molecule was ever assigned to",
    "--:new.theme_no",
    "-- RAISE debugging;",
    "-- The Parameter :NEW.RESLIN_DESC_CONCAT consists of 4 fields",
    "-- CMA 1685, automatic molecule creation",
    "-- CMA 1820, add RG_NO to inserted values",
    "--  create molecule mapping (Primary Molecule)",
    "-- primary molecule!",
    "-- Is this theme_no really new?",
    "-- VERIFY OFFICIAL-IND --------------------------",
    "-- The Theme Description is generated automatically",
    "-- The given Theme Description is inserted",
    "-- :NEW.PORTF_PROJ_CD = 'Y'",
    "-- NOW VERIFY UNIQUENESS OF THEME_DESC --------------",
    "-- handle primary molecule mapping to this theme",
    "--(PRIMARY, molecule_seq_no = 1)",
    "-- End Code  for Inserting",
    "-- check admin access (role 315)",
    "-- CMA 1544 Registrat_date is",
    "--   * always sysdate for official updates",
    "--   * always :OLD.registrat_date for inofficial updates",
    "-- inofficial => do not change registrat_date",
    "-- it is an official change",
    "-- official change => registrat_date will be set to sysdate",
    "-- NOW VERIFY UNIQUENESS OF THEME_DESC --------------",
    "--(but not within the same theme_no, then is no uniqueness required)",
    "--  Code for INOFFICIAL Changes",
    "-- Code for OFFICIAL changes  :NEW.OFFICIAL_IND = 'Y'",
    "-- then this is  the first and only record for this registrat-date",
    "-- only one official change allowed per day",
    "-- handle primary molecule mapping to this theme",
    "-- this code is identical for official and in-official changes",
    "-- insert a new mapping (PRIMARY, molecule_seq_no = 1)",
    "-- update an existing mapping (PRIMARY, molecule_seq_no = 1)",
    "-- error",
    "-- soft-delete an existing mapping (PRIMARY, molecule_seq_no = 1)",
    "-- deleting is only possible, if theme_no has been",
    "-- inserted on the same day",
    "-- only if this change has been",
    "--  Code for Inserting, Updating, Deleting",
    "-- check if the entered NMP is evolved",
    "----------",
    "-- if the proposal id is set and the NMP is not evolved then update the corresponding",
    "-- New Medicinie Proposal status to evolved",
    "-- set to Active the old New Medicine Proposal",
    "-- set to Evolved the new choosen New Medicine Proposal",
    "-- short_name update",
    "-- check if this is an evolved proposal",
    "-- short_name has changed so proposal_name must be updated accordingly",
    "-- handle New Medicine Proposals with theme_no starting with 71.. or 74",
    "-- automatic create NMP only if no prposal_id is selected or the selected one is evolved",
    "-- set variable",
    "-- is_from_theme_validity_check := TRUE;"
  ],
  "conversion_stats": {
    "declaration_count": 49,
    "main_block_count": 1,
    "comment_count": 63
  },
  "metadata": {
    "parse_timestamp": "2025-08-11T08:38:15.971274",
    "parser_version": "1.0"
  }
}