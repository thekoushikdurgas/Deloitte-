{
  "declarations": {
    "variables": [
      {
        "name": "V_COUNT_T_MAPPINGS",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_COUNT_T_MOL_MAP",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_MOLECULE_SEQ_NO",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_SEQ_NO_DUPLICATE_CNT",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "INVALID_MAPPING_EXISTS",
        "data_type": "BOOLEAN",
        "default_value": "FALSE"
      },
      {
        "name": "V_MANUAL_SHORT_DESC",
        "data_type": "THEMES.MANUAL_SHORT_DESC%TYPE",
        "default_value": null
      }
    ],
    "constants": [],
    "exceptions": [
      {
        "name": "ERR_MAP_EXISTS",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_MOLEC_ID_MISSING",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_NO_PORTF_MOLECULE_LEFT",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_UPD_INV_MAP",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_INS_INV_MAP",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_INV_MOL_SEQUENCE",
        "type": "EXCEPTION"
      },
      {
        "name": "UPDATE_UPD",
        "type": "EXCEPTION"
      }
    ]
  },
  "main": {
    "type": "begin_end",
    "begin_line_no": 18,
    "begin_indent": 0,
    "begin_end_statements": [
      {
        "indent": 4,
        "line": "    SELECT",
        "line_no": 21,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC",
        "line_no": 22,
        "is_end_semicolon": false
      },
      {
        "indent": 4,
        "line": "    FROM",
        "line_no": 23,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        GMD.THEMES",
        "line_no": 24,
        "is_end_semicolon": false
      },
      {
        "indent": 4,
        "line": "    WHERE",
        "line_no": 25,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
        "line_no": 26,
        "is_end_semicolon": true
      },
      {
        "if_expression": " (DELETING) ",
        "type": "if_else",
        "if_line_no": 27,
        "then_statements": [],
        "if_indent": 4,
        "end_if_line_no": 58,
        "if_elses": [],
        "else_statements": []
      },
      {
        "if_expression": " (INSERTING OR UPDATING) ",
        "type": "if_else",
        "if_line_no": 60,
        "then_statements": [],
        "if_indent": 4,
        "end_if_line_no": 401,
        "if_elses": [],
        "else_statements": []
      },
      {
        "indent": 4,
        "line": "    SELECT",
        "line_no": 403,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT",
        "line_no": 404,
        "is_end_semicolon": false
      },
      {
        "indent": 4,
        "line": "    FROM",
        "line_no": 405,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        (",
        "line_no": 406,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            SELECT",
        "line_no": 407,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                MOLECULE_SEQ_NO",
        "line_no": 408,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            FROM",
        "line_no": 409,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                THEME_MOLECULE_MAP TMM",
        "line_no": 410,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            WHERE",
        "line_no": 411,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                TMM.THEME_NO = :NEW.THEME_NO",
        "line_no": 412,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                AND VALID_IND = 'Y'",
        "line_no": 413,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            GROUP BY",
        "line_no": 414,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                MOLECULE_SEQ_NO",
        "line_no": 415,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            HAVING",
        "line_no": 416,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                COUNT (*) > 1",
        "line_no": 417,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        );",
        "line_no": 418,
        "is_end_semicolon": true
      },
      {
        "if_expression": " (V_SEQ_NO_DUPLICATE_CNT > 0) ",
        "type": "if_else",
        "if_line_no": 419,
        "then_statements": [],
        "if_indent": 4,
        "end_if_line_no": 421,
        "if_elses": [],
        "else_statements": []
      }
    ],
    "exception_handlers": [
      {
        "type": "exception_handler",
        "exception_name": "ERR_MAP_EXISTS",
        "when_line_no": 440,
        "when_indent": 4,
        "then_line_no": 440,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20110,
              "handler_string": "'MDM_THEME_MOLECULE_MAP_IOF'"
            }
          }
        ],
        "exception_statements_line_no": [
          441
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_MOLEC_ID_MISSING",
        "when_line_no": 442,
        "when_indent": 4,
        "then_line_no": 442,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20111,
              "handler_string": "'MDM_THEME_MOLECULE_MAP_IOF'"
            }
          }
        ],
        "exception_statements_line_no": [
          443
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_UPD_INV_MAP",
        "when_line_no": 444,
        "when_indent": 4,
        "then_line_no": 444,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20112,
              "handler_string": "'MDM_THEME_MOLECULE_MAP_IOF'"
            }
          }
        ],
        "exception_statements_line_no": [
          445
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_INS_INV_MAP",
        "when_line_no": 446,
        "when_indent": 4,
        "then_line_no": 446,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20113,
              "handler_string": "'MDM_THEME_MOLECULE_MAP_IOF'"
            }
          }
        ],
        "exception_statements_line_no": [
          447
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_INV_MOL_SEQUENCE",
        "when_line_no": 448,
        "when_indent": 4,
        "then_line_no": 448,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20120,
              "handler_string": "'MDM_THEME_MOLECULE_MAP_IOF'"
            }
          }
        ],
        "exception_statements_line_no": [
          449
        ]
      }
    ],
    "exception_line_no": 439,
    "end_line_no": 465
  },
  "sql_comments": [
    "/*\n        DELETE FROM theme_molecule_map tmm\n              WHERE     tmm.theme_no = :old.theme_no\n                    AND tmm.molecule_id = :old.molecule_id;\n        */",
    "/*\n        -- DELETE does not work because refresh doesn't find the record\n        -----------------------------------------------------------------\n        -- delete the mapping to this molecule\n        DELETE FROM theme_molecule_map tmm\n              WHERE     tmm.theme_no = :old.theme_no\n                    AND tmm.molecule_id = :old.molecule_id;\n        -- move left\n        UPDATE theme_molecule_map tmm\n           SET tmm.molecule_seq_no = tmm.molecule_seq_no - 1\n         WHERE     tmm.theme_no = :old.theme_no\n               AND tmm.molecule_seq_no > :old.molecule_seq_no;\n         */",
    "/*\n                    DELETE FROM theme_molecule_map tmm\n                          WHERE     tmm.theme_no = :new.theme_no\n                                AND tmm.molecule_id = :old.molecule_id;\n                    */",
    "/*\n                DELETE FROM theme_molecule_map tmm\n                      WHERE     tmm.theme_no = :new.theme_no\n                            AND tmm.molecule_id = :old.molecule_id;\n                            */",
    "/*\n    IF (v_mappings_changed)\n    THEN                  -- store the theme_no for theme with changed mapping\n        -- as a description update may be necessary (for portfolio projects)\n        gmd.gmd_util_themes.g_theme_no_upd_molec_map :=\n            v_theme_no_upd_molec_map;\n        -- debugging, remove for production\n        INSERT INTO jap_debug_tmmap\n                 VALUES (\n                            SYSDATE,\n                               'MDMAPPL.MDM_THEME_MOLECULE_MAP_IOF => gmd_util_themes.g_theme_no_upd_molec_map: '\n                            || gmd_util_themes.g_theme_no_upd_molec_map,\n                            NULL);\n    END IF;\n    */",
    "/*\nWHEN OTHERS\nTHEN\n    raise_application_error (\n        -20199,\n           v_count_t_mappings\n        || ' nm: '\n        || :new.molecule_id\n        || ' om: '\n        || :old.molecule_id\n        || ' ms: '\n        || :new.molecule_seq_no\n        || 'error: '\n        || SQLERRM);\n        */",
    "-- how many for one theme",
    "-- how many for one theme/molecule combination (zero/one expected)",
    "--   v_mappings_changed         BOOLEAN := FALSE;",
    "--   v_theme_no_upd_molec_map   themes.theme_no%TYPE;",
    "--chevali1",
    "-- move left (valid mappings only)",
    "--   v_mappings_changed := TRUE;",
    "--  v_theme_no_upd_molec_map := :old.theme_no;",
    "-- Update Theme Description",
    "-- Check if theme_no <=> molecule_id valid or invalid mapping exists",
    "--  for changed molecule_ids",
    "-- update to valid, place mapping at the end",
    "-- this is a real new mapping => insert",
    "-- insert new, valid mapping at the end",
    "--    v_mappings_changed := TRUE;",
    "--    v_theme_no_upd_molec_map := :new.theme_no;",
    "-- move existing and insert mapping",
    "-- move valid mappings right",
    "-- place new mapping on new position",
    "-- update to valid, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on new position",
    "--    v_mappings_changed := TRUE;",
    "--    v_theme_no_upd_molec_map := :new.theme_no;",
    "--(:new.molecule_seq_no < v_count_t_mappings + 1)",
    "------------- INSERTING-CASES ----------------------------",
    "---INSERTING -------------------------------------------",
    "-- BLOCK START  existing molecule is moved (update seq_no)",
    "-- existing molecule is moved (update seq_no)",
    "-- delete old mapping",
    "-- move valid mappings left",
    "-- move valid mappings right",
    "-- place valid mapping on new position",
    "-- update to valid, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on new position",
    "--   v_mappings_changed := TRUE;",
    "--   v_theme_no_upd_molec_map := :new.theme_no;",
    "-- BLOCK END  existing molecule is moved (update seq_no)",
    "-- BLOCK START  new molecule in arbitrary position",
    "-- we know that the new mapping doesn't exist yet",
    "-- we know that the old mapping exists",
    "-- old mapping  is removed",
    "-- new mapping is inserted",
    "-- move valid mappings left",
    "-- place new mapping on new position",
    "-- update to valid, update molecule_map_char, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on new position",
    "--  v_mappings_changed := TRUE;",
    "--  v_theme_no_upd_molec_map := :new.theme_no;",
    "-- BLOCK END  new molecule in arbitrary position",
    "-- BLOCK START  new molecule in existing position",
    "-- old mapping  is removed",
    "-- new mapping is inserted",
    "-- insert mapping on new position",
    "-- place new mapping on position",
    "-- update to valid, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on position",
    "--  v_mappings_changed := TRUE;",
    "--  v_theme_no_upd_molec_map := :new.theme_no;",
    "-- BLOCK END  new molecule in existing position",
    "-------------------------------------------------- UPDATING",
    "-- Update Theme Description",
    "---------------------------------------- INSERTING or UPDATING",
    "-- Sanity check => each seq_no may appear only once for valid Mappings"
  ],
  "rest_strings": [
    {
      "indent": 4,
      "line": "    SELECT",
      "line_no": 21,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC",
      "line_no": 22,
      "is_end_semicolon": false
    },
    {
      "indent": 4,
      "line": "    FROM",
      "line_no": 23,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        GMD.THEMES",
      "line_no": 24,
      "is_end_semicolon": false
    },
    {
      "indent": 4,
      "line": "    WHERE",
      "line_no": 25,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
      "line_no": 26,
      "is_end_semicolon": true
    },
    {
      "indent": 4,
      "line": "    SELECT",
      "line_no": 403,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT",
      "line_no": 404,
      "is_end_semicolon": false
    },
    {
      "indent": 4,
      "line": "    FROM",
      "line_no": 405,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        (",
      "line_no": 406,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            SELECT",
      "line_no": 407,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                MOLECULE_SEQ_NO",
      "line_no": 408,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            FROM",
      "line_no": 409,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                THEME_MOLECULE_MAP TMM",
      "line_no": 410,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            WHERE",
      "line_no": 411,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                TMM.THEME_NO = :NEW.THEME_NO",
      "line_no": 412,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                AND VALID_IND = 'Y'",
      "line_no": 413,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            GROUP BY",
      "line_no": 414,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                MOLECULE_SEQ_NO",
      "line_no": 415,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            HAVING",
      "line_no": 416,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                COUNT (*) > 1",
      "line_no": 417,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        );",
      "line_no": 418,
      "is_end_semicolon": true
    }
  ],
  "conversion_stats": {
    "declaration_count": 13,
    "comment_count": 73,
    "rest_string_count": 22,
    "sql_convert_count": 14
  },
  "metadata": {
    "parse_timestamp": "2025-08-25T02:26:38.844931",
    "parser_version": "1.0"
  }
}