{
  "declarations": {
    "variables": [
      {
        "name": "V_COUNT_T_MAPPINGS",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_COUNT_T_MOL_MAP",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_MOLECULE_SEQ_NO",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_SEQ_NO_DUPLICATE_CNT",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "INVALID_MAPPING_EXISTS",
        "data_type": "BOOLEAN",
        "default_value": "FALSE"
      },
      {
        "name": "V_MANUAL_SHORT_DESC",
        "data_type": "THEMES.MANUAL_SHORT_DESC%TYPE",
        "default_value": null
      }
    ],
    "constants": [],
    "exceptions": [
      {
        "name": "ERR_MAP_EXISTS",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_MOLEC_ID_MISSING",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_NO_PORTF_MOLECULE_LEFT",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_UPD_INV_MAP",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_INS_INV_MAP",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_INV_MOL_SEQUENCE",
        "type": "EXCEPTION"
      },
      {
        "name": "UPDATE_UPD",
        "type": "EXCEPTION"
      }
    ]
  },
  "main": [
    {
      "begin_end_statements": [
        {
          "sql": "SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);",
          "type": "select_statement"
        },
        {
          "type": "if_else",
          "condition": "(DELETING)",
          "then_statements": [
            {
              "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
              "type": "update_statement"
            },
            {
              "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
              "type": "update_statement"
            },
            {
              "indent": 8,
              "line": "        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (",
              "line_no": 52,
              "is_end_semicolon": false
            },
            {
              "indent": 12,
              "line": "            P_THEME_NO => :OLD.THEME_NO,",
              "line_no": 53,
              "is_end_semicolon": false
            },
            {
              "indent": 12,
              "line": "            P_MOLECULE_ID => :OLD.MOLECULE_ID,",
              "line_no": 54,
              "is_end_semicolon": false
            },
            {
              "indent": 12,
              "line": "            P_DATE => SYSDATE,",
              "line_no": 55,
              "is_end_semicolon": false
            },
            {
              "indent": 12,
              "line": "            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC",
              "line_no": 56,
              "is_end_semicolon": false
            },
            {
              "indent": 8,
              "line": "        );",
              "line_no": 57,
              "is_end_semicolon": true
            }
          ],
          "else_if": [],
          "else_statements": []
        },
        {
          "type": "if_else",
          "condition": "(INSERTING OR UPDATING)",
          "then_statements": [
            {
              "sql": "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';",
              "type": "select_statement"
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID IS NULL)",
              "then_statements": [
                {
                  "sql": "RAISE ERR_MOLEC_ID_MISSING;",
                  "type": "raise_statement"
                }
              ],
              "else_if": [],
              "else_statements": []
            },
            {
              "type": "if_else",
              "condition": "(UPDATING)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS)",
                  "then_statements": [
                    {
                      "sql": "RAISE ERR_UPD_INV_MAP;",
                      "type": "raise_statement"
                    }
                  ],
                  "else_if": [],
                  "else_statements": []
                }
              ],
              "else_if": [],
              "else_statements": []
            },
            {
              "type": "if_else",
              "condition": "(:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1'))",
              "then_statements": [
                {
                  "sql": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';",
                  "type": "select_statement"
                },
                {
                  "type": "if_else",
                  "condition": "(V_COUNT_T_MOL_MAP > 0)",
                  "then_statements": [
                    {
                      "sql": "RAISE ERR_MAP_EXISTS;",
                      "type": "raise_statement"
                    }
                  ],
                  "else_if": [],
                  "else_statements": []
                },
                {
                  "sql": "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';",
                  "type": "select_statement"
                },
                {
                  "type": "if_else",
                  "condition": "(V_COUNT_T_MOL_MAP > 0)",
                  "then_statements": [
                    {
                      "variable": "INVALID_MAPPING_EXISTS",
                      "value": "TRUE",
                      "type": "assignment_statement"
                    }
                  ],
                  "else_if": [],
                  "else_statements": []
                }
              ],
              "else_if": [],
              "else_statements": []
            },
            {
              "type": "if_else",
              "condition": "(INSERTING)",
              "then_statements": [
                {
                  "type": "case_when",
                  "case_expression": "",
                  "when_clauses": [],
                  "sql": "CASE\n                WHEN :NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1 THEN\n                    IF (INVALID_MAPPING_EXISTS) THEN\n                        UPDATE THEME_MOLECULE_MAP TMM\n                        SET\n                            TMM.VALID_IND = 'Y',\n                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO\n                        WHERE\n                            TMM.THEME_NO = :NEW.THEME_NO\n                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;\n                    ELSE\n                        INSERT INTO THEME_MOLECULE_MAP TMM (\n                            TMM.THEME_NO,\n                            TMM.MOLECULE_ID,\n                            TMM.MOLECULE_SEQ_NO,\n                            TMM.MOLECULE_MAP_CHAR,\n                            TMM.VALID_IND\n                        ) VALUES (\n                            :NEW.THEME_NO,\n                            :NEW.MOLECULE_ID,\n                            :NEW.MOLECULE_SEQ_NO,\n                            :NEW.MOLECULE_MAP_CHAR,\n                            'Y'\n                        );\n                    END IF;\n                WHEN :NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1 THEN\n                    UPDATE THEME_MOLECULE_MAP TMM\n                    SET\n                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1\n                    WHERE\n                        TMM.THEME_NO = :NEW.THEME_NO\n                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO\n                        AND TMM.VALID_IND = 'Y';\n                    IF (INVALID_MAPPING_EXISTS) THEN\n                        UPDATE THEME_MOLECULE_MAP TMM\n                        SET\n                            TMM.VALID_IND = 'Y',\n                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO\n                        WHERE\n                            TMM.THEME_NO = :NEW.THEME_NO\n                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;\n                    ELSE\n                        INSERT INTO THEME_MOLECULE_MAP TMM (\n                            TMM.THEME_NO,\n                            TMM.MOLECULE_ID,\n                            TMM.MOLECULE_SEQ_NO,\n                            TMM.MOLECULE_MAP_CHAR,\n                            TMM.VALID_IND\n                        ) VALUES (\n                            :NEW.THEME_NO,\n                            :NEW.MOLECULE_ID,\n                            :NEW.MOLECULE_SEQ_NO,\n                            :NEW.MOLECULE_MAP_CHAR,\n                            'Y'\n                        );\n                    END IF;\n                ELSE\n                    RAISE ERR_INS_INV_MAP;\n            END CASE;"
                },
                {
                  "type": "if_else",
                  "condition": "(INVALID_MAPPING_EXISTS)",
                  "then_statements": [
                    {
                      "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement"
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                      "type": "insert_statement"
                    }
                  ]
                },
                {
                  "indent": 16,
                  "line": "                WHEN :NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1 THEN",
                  "line_no": 156,
                  "is_end_semicolon": false
                },
                {
                  "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                  "type": "update_statement"
                },
                {
                  "type": "if_else",
                  "condition": "(INVALID_MAPPING_EXISTS)",
                  "then_statements": [
                    {
                      "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                      "type": "update_statement"
                    }
                  ],
                  "else_if": [],
                  "else_statements": [
                    {
                      "sql": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                      "type": "insert_statement"
                    }
                  ]
                },
                {
                  "indent": 16,
                  "line": "                ELSE",
                  "line_no": 196,
                  "is_end_semicolon": false
                },
                {
                  "sql": "RAISE ERR_INS_INV_MAP;",
                  "type": "raise_statement"
                },
                {
                  "indent": 12,
                  "line": "            END CASE;",
                  "line_no": 200,
                  "is_end_semicolon": true
                }
              ],
              "else_if": [],
              "else_statements": []
            },
            {
              "type": "if_else",
              "condition": "(UPDATING)",
              "then_statements": [
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID IS NOT NULL)",
                  "then_statements": [
                    {
                      "type": "if_else",
                      "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR)",
                      "then_statements": [
                        {
                          "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement"
                        }
                      ],
                      "else_if": [],
                      "else_statements": []
                    },
                    {
                      "type": "if_else",
                      "condition": "(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
                      "then_statements": [
                        {
                          "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                          "type": "update_statement"
                        },
                        {
                          "type": "if_else",
                          "condition": "(:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO)",
                          "then_statements": [
                            {
                              "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;",
                              "type": "update_statement"
                            }
                          ],
                          "else_if": [],
                          "else_statements": [
                            {
                              "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;",
                              "type": "update_statement"
                            }
                          ]
                        },
                        {
                          "type": "if_else",
                          "condition": "(INVALID_MAPPING_EXISTS)",
                          "then_statements": [
                            {
                              "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                              "type": "update_statement"
                            }
                          ],
                          "else_if": [],
                          "else_statements": [
                            {
                              "sql": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                              "type": "insert_statement"
                            }
                          ]
                        }
                      ],
                      "else_if": [],
                      "else_statements": []
                    }
                  ],
                  "else_if": [],
                  "else_statements": []
                },
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)",
                  "then_statements": [
                    {
                      "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;",
                      "type": "update_statement"
                    },
                    {
                      "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';",
                      "type": "update_statement"
                    },
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement"
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR, TMM.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR, 'Y' );",
                          "type": "insert_statement"
                        }
                      ]
                    }
                  ],
                  "else_if": [],
                  "else_statements": []
                },
                {
                  "type": "if_else",
                  "condition": "(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO",
                  "then_statements": [
                    {
                      "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;",
                      "type": "update_statement"
                    },
                    {
                      "type": "if_else",
                      "condition": "(INVALID_MAPPING_EXISTS)",
                      "then_statements": [
                        {
                          "sql": "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;",
                          "type": "update_statement"
                        }
                      ],
                      "else_if": [],
                      "else_statements": [
                        {
                          "sql": "INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO, TMM.MOLECULE_ID, TMM.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, :NEW.MOLECULE_SEQ_NO, :NEW.MOLECULE_MAP_CHAR );",
                          "type": "insert_statement"
                        }
                      ]
                    }
                  ],
                  "else_if": [],
                  "else_statements": []
                }
              ],
              "else_if": [],
              "else_statements": []
            },
            {
              "indent": 8,
              "line": "        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (",
              "line_no": 395,
              "is_end_semicolon": false
            },
            {
              "indent": 12,
              "line": "            P_THEME_NO => :NEW.THEME_NO,",
              "line_no": 396,
              "is_end_semicolon": false
            },
            {
              "indent": 12,
              "line": "            P_MOLECULE_ID => 0,",
              "line_no": 397,
              "is_end_semicolon": false
            },
            {
              "indent": 12,
              "line": "            P_DATE => SYSDATE,",
              "line_no": 398,
              "is_end_semicolon": false
            },
            {
              "indent": 12,
              "line": "            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC",
              "line_no": 399,
              "is_end_semicolon": false
            },
            {
              "indent": 8,
              "line": "        );",
              "line_no": 400,
              "is_end_semicolon": true
            }
          ],
          "else_if": [],
          "else_statements": []
        },
        {
          "type": "case_when",
          "case_expression": "",
          "when_clauses": [],
          "sql": "CASE\n                WHEN :NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1 THEN\n                    IF (INVALID_MAPPING_EXISTS) THEN\n                        UPDATE THEME_MOLECULE_MAP TMM\n                        SET\n                            TMM.VALID_IND = 'Y',\n                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO\n                        WHERE\n                            TMM.THEME_NO = :NEW.THEME_NO\n                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;\n                    ELSE\n                        INSERT INTO THEME_MOLECULE_MAP TMM (\n                            TMM.THEME_NO,\n                            TMM.MOLECULE_ID,\n                            TMM.MOLECULE_SEQ_NO,\n                            TMM.MOLECULE_MAP_CHAR,\n                            TMM.VALID_IND\n                        ) VALUES (\n                            :NEW.THEME_NO,\n                            :NEW.MOLECULE_ID,\n                            :NEW.MOLECULE_SEQ_NO,\n                            :NEW.MOLECULE_MAP_CHAR,\n                            'Y'\n                        );\n                    END IF;\n                WHEN :NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1 THEN\n                    UPDATE THEME_MOLECULE_MAP TMM\n                    SET\n                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1\n                    WHERE\n                        TMM.THEME_NO = :NEW.THEME_NO\n                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO\n                        AND TMM.VALID_IND = 'Y';\n                    IF (INVALID_MAPPING_EXISTS) THEN\n                        UPDATE THEME_MOLECULE_MAP TMM\n                        SET\n                            TMM.VALID_IND = 'Y',\n                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO\n                        WHERE\n                            TMM.THEME_NO = :NEW.THEME_NO\n                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;\n                    ELSE\n                        INSERT INTO THEME_MOLECULE_MAP TMM (\n                            TMM.THEME_NO,\n                            TMM.MOLECULE_ID,\n                            TMM.MOLECULE_SEQ_NO,\n                            TMM.MOLECULE_MAP_CHAR,\n                            TMM.VALID_IND\n                        ) VALUES (\n                            :NEW.THEME_NO,\n                            :NEW.MOLECULE_ID,\n                            :NEW.MOLECULE_SEQ_NO,\n                            :NEW.MOLECULE_MAP_CHAR,\n                            'Y'\n                        );\n                    END IF;\n                ELSE\n                    RAISE ERR_INS_INV_MAP;\n            END CASE;"
        }
      ],
      "type": "begin_end",
      "exception_handlers": [
        {
          "exception_name": "ERR_MAP_EXISTS",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20110",
                "handler_string": "MDM_THEME_MOLECULE_MAP_IOF"
              }
            }
          ]
        },
        {
          "exception_name": "ERR_MOLEC_ID_MISSING",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20111",
                "handler_string": "MDM_THEME_MOLECULE_MAP_IOF"
              }
            }
          ]
        },
        {
          "exception_name": "ERR_UPD_INV_MAP",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20112",
                "handler_string": "MDM_THEME_MOLECULE_MAP_IOF"
              }
            }
          ]
        },
        {
          "exception_name": "ERR_INS_INV_MAP",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20113",
                "handler_string": "MDM_THEME_MOLECULE_MAP_IOF"
              }
            }
          ]
        },
        {
          "exception_name": "ERR_INV_MOL_SEQUENCE",
          "exception_statements": [
            {
              "type": "function_calling",
              "function_name": "raise_application_error",
              "parameter": {
                "handler_code": "-20120",
                "handler_string": "MDM_THEME_MOLECULE_MAP_IOF"
              }
            }
          ]
        }
      ]
    }
  ],
  "sql_comments": [
    "/*\n        DELETE FROM theme_molecule_map tmm\n              WHERE     tmm.theme_no = :old.theme_no\n                    AND tmm.molecule_id = :old.molecule_id;\n        */",
    "/*\n        -- DELETE does not work because refresh doesn't find the record\n        -----------------------------------------------------------------\n        -- delete the mapping to this molecule\n        DELETE FROM theme_molecule_map tmm\n              WHERE     tmm.theme_no = :old.theme_no\n                    AND tmm.molecule_id = :old.molecule_id;\n        -- move left\n        UPDATE theme_molecule_map tmm\n           SET tmm.molecule_seq_no = tmm.molecule_seq_no - 1\n         WHERE     tmm.theme_no = :old.theme_no\n               AND tmm.molecule_seq_no > :old.molecule_seq_no;\n         */",
    "/*\n                    DELETE FROM theme_molecule_map tmm\n                          WHERE     tmm.theme_no = :new.theme_no\n                                AND tmm.molecule_id = :old.molecule_id;\n                    */",
    "/*\n                DELETE FROM theme_molecule_map tmm\n                      WHERE     tmm.theme_no = :new.theme_no\n                            AND tmm.molecule_id = :old.molecule_id;\n                            */",
    "/*\n    IF (v_mappings_changed)\n    THEN                  -- store the theme_no for theme with changed mapping\n        -- as a description update may be necessary (for portfolio projects)\n        gmd.gmd_util_themes.g_theme_no_upd_molec_map :=\n            v_theme_no_upd_molec_map;\n        -- debugging, remove for production\n        INSERT INTO jap_debug_tmmap\n                 VALUES (\n                            SYSDATE,\n                               'MDMAPPL.MDM_THEME_MOLECULE_MAP_IOF => gmd_util_themes.g_theme_no_upd_molec_map: '\n                            || gmd_util_themes.g_theme_no_upd_molec_map,\n                            NULL);\n    END IF;\n    */",
    "/*\nWHEN OTHERS\nTHEN\n    raise_application_error (\n        -20199,\n           v_count_t_mappings\n        || ' nm: '\n        || :new.molecule_id\n        || ' om: '\n        || :old.molecule_id\n        || ' ms: '\n        || :new.molecule_seq_no\n        || 'error: '\n        || SQLERRM);\n        */",
    "-- how many for one theme",
    "-- how many for one theme/molecule combination (zero/one expected)",
    "--   v_mappings_changed         BOOLEAN := FALSE;",
    "--   v_theme_no_upd_molec_map   themes.theme_no%TYPE;",
    "--chevali1",
    "-- move left (valid mappings only)",
    "--   v_mappings_changed := TRUE;",
    "--  v_theme_no_upd_molec_map := :old.theme_no;",
    "-- Update Theme Description",
    "-- Check if theme_no <=> molecule_id valid or invalid mapping exists",
    "--  for changed molecule_ids",
    "-- update to valid, place mapping at the end",
    "-- this is a real new mapping => insert",
    "-- insert new, valid mapping at the end",
    "--    v_mappings_changed := TRUE;",
    "--    v_theme_no_upd_molec_map := :new.theme_no;",
    "-- move existing and insert mapping",
    "-- move valid mappings right",
    "-- place new mapping on new position",
    "-- update to valid, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on new position",
    "--    v_mappings_changed := TRUE;",
    "--    v_theme_no_upd_molec_map := :new.theme_no;",
    "--(:new.molecule_seq_no < v_count_t_mappings + 1)",
    "------------- INSERTING-CASES ----------------------------",
    "---INSERTING -------------------------------------------",
    "-- BLOCK START  existing molecule is moved (update seq_no)",
    "-- existing molecule is moved (update seq_no)",
    "-- delete old mapping",
    "-- move valid mappings left",
    "-- move valid mappings right",
    "-- place valid mapping on new position",
    "-- update to valid, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on new position",
    "--   v_mappings_changed := TRUE;",
    "--   v_theme_no_upd_molec_map := :new.theme_no;",
    "-- BLOCK END  existing molecule is moved (update seq_no)",
    "-- BLOCK START  new molecule in arbitrary position",
    "-- we know that the new mapping doesn't exist yet",
    "-- we know that the old mapping exists",
    "-- old mapping  is removed",
    "-- new mapping is inserted",
    "-- move valid mappings left",
    "-- place new mapping on new position",
    "-- update to valid, update molecule_map_char, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on new position",
    "--  v_mappings_changed := TRUE;",
    "--  v_theme_no_upd_molec_map := :new.theme_no;",
    "-- BLOCK END  new molecule in arbitrary position",
    "-- BLOCK START  new molecule in existing position",
    "-- old mapping  is removed",
    "-- new mapping is inserted",
    "-- insert mapping on new position",
    "-- place new mapping on position",
    "-- update to valid, place mapping at new position",
    "-- this is a real new mapping => insert",
    "-- insert mapping on position",
    "--  v_mappings_changed := TRUE;",
    "--  v_theme_no_upd_molec_map := :new.theme_no;",
    "-- BLOCK END  new molecule in existing position",
    "-------------------------------------------------- UPDATING",
    "-- Update Theme Description",
    "---------------------------------------- INSERTING or UPDATING",
    "-- Sanity check => each seq_no may appear only once for valid Mappings"
  ],
  "rest_strings": [
    {
      "indent": 8,
      "line": "        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (",
      "line_no": 52,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_THEME_NO => :OLD.THEME_NO,",
      "line_no": 53,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_MOLECULE_ID => :OLD.MOLECULE_ID,",
      "line_no": 54,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_DATE => SYSDATE,",
      "line_no": 55,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC",
      "line_no": 56,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        );",
      "line_no": 57,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                WHEN :NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1 THEN",
      "line_no": 156,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                ELSE",
      "line_no": 196,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            END CASE;",
      "line_no": 200,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (",
      "line_no": 395,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_THEME_NO => :NEW.THEME_NO,",
      "line_no": 396,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_MOLECULE_ID => 0,",
      "line_no": 397,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_DATE => SYSDATE,",
      "line_no": 398,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC",
      "line_no": 399,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        );",
      "line_no": 400,
      "is_end_semicolon": true
    }
  ],
  "conversion_stats": {
    "declaration_count": 13,
    "comment_count": 73,
    "rest_string_count": 15,
    "sql_convert_count": 300
  },
  "metadata": {
    "parse_timestamp": "2025-08-11T21:33:08.561418",
    "parser_version": "1.0"
  }
}