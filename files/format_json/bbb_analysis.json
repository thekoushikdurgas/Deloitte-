{
  "declarations": {
    "variables": [
      {
        "name": "V_TRIGGER_NAME",
        "data_type": "VARCHAR2(40)",
        "default_value": "'BPA_POST_CD_RULES_IOF'"
      },
      {
        "name": "CNTR",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_RULE_ID",
        "data_type": "V_BPA_POSTAL_CODE_RULES.RULE_ID%TYPE",
        "default_value": null
      },
      {
        "name": "V_PATTERN_ID",
        "data_type": "V_BPA_POSTAL_CODE_PATTERNS.PATTERN_ID%TYPE",
        "default_value": null
      },
      {
        "name": "V_PATTERN",
        "data_type": "V_BPA_POSTAL_CODE_PATTERNS.PATTERN%TYPE",
        "default_value": null
      },
      {
        "name": "V_ALLOWED_PATTERN",
        "data_type": "VARCHAR2(30)",
        "default_value": "'^[A|9|-| ]*$'"
      }
    ],
    "constants": [],
    "exceptions": [
      {
        "name": "ERR_DEL",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_POSTAL_CODE",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_NULL",
        "type": "EXCEPTION"
      }
    ]
  },
  "main": {
    "type": "begin_end",
    "begin_indent": 0,
    "begin_end_statements": [
      {
        "type": "assignment",
        "variable_name": "V_PATTERN",
        "assignment_operator": ":=",
        "expression": ":NEW.PATTERN;",
        "assignment_indent": 4
      },
      {
        "condition": "",
        "type": "case_when",
        "case_indent": 4,
        "when_clauses": [
          {
            "type": "when_statement",
            "when_indent": 8,
            "condition": "V_PATTERN IS NOT NULL",
            "then_statements": [
              {
                "condition": " :NEW.RULE_FLAG = 'N' ",
                "type": "if_else",
                "if_indent": 12,
                "then_statements": [
                  {
                    "type": "raise_statement",
                    "sql_statement": "RAISE ERR_NULL;",
                    "statement_indent": 16
                  }
                ],
                "if_elses": [],
                "else_statements": []
              },
              {
                "condition": " NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ",
                "type": "if_else",
                "if_indent": 12,
                "then_statements": [
                  {
                    "type": "raise_statement",
                    "sql_statement": "RAISE ERR_POSTAL_CODE;",
                    "statement_indent": 16
                  }
                ],
                "if_elses": [],
                "else_statements": []
              }
            ]
          }
        ],
        "else_statements": [
          {
            "condition": " :NEW.RULE_FLAG = 'M' ",
            "type": "if_else",
            "if_indent": 12,
            "then_statements": [
              {
                "type": "raise_statement",
                "sql_statement": "RAISE ERR_POSTAL_CODE;",
                "statement_indent": 16
              }
            ],
            "if_elses": [],
            "else_statements": []
          }
        ]
      },
      {
        "type": "select_statement",
        "sql_statement": "SELECT COUNT (*) INTO CNTR FROM V_BPA_POSTAL_CODE_RULES WHERE COUNTRY_CD = :NEW.COUNTRY_CD;",
        "statement_indent": 4
      },
      {
        "condition": " CNTR = 0 ",
        "type": "if_else",
        "if_indent": 4,
        "then_statements": [
          {
            "type": "select_statement",
            "sql_statement": "SELECT NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID FROM V_BPA_POSTAL_CODE_RULES;",
            "statement_indent": 8
          },
          {
            "type": "insert_statement",
            "sql_statement": "INSERT INTO V_BPA_POSTAL_CODE_RULES ( RULE_ID, COUNTRY_CD, RULE_FLAG ) VALUES ( V_RULE_ID, UPPER (:NEW.COUNTRY_CD), :NEW.RULE_FLAG );",
            "statement_indent": 8
          }
        ],
        "if_elses": [],
        "else_statements": [
          {
            "type": "assignment",
            "variable_name": "V_RULE_ID",
            "assignment_operator": ":=",
            "expression": ":NEW.RULE_ID;",
            "assignment_indent": 8
          }
        ]
      },
      {
        "type": "select_statement",
        "sql_statement": "SELECT NVL (MAX (PATTERN_ID) + 1, 1) INTO V_PATTERN_ID FROM V_BPA_POSTAL_CODE_PATTERNS;",
        "statement_indent": 4
      },
      {
        "condition": " INSERTING AND V_PATTERN IS NOT NULL ",
        "type": "if_else",
        "if_indent": 4,
        "then_statements": [
          {
            "type": "insert_statement",
            "sql_statement": "INSERT INTO V_BPA_POSTAL_CODE_PATTERNS ( PATTERN_ID, RULE_ID, PATTERN, DESCRIPTION, VALID_IND ) VALUES ( V_PATTERN_ID, V_RULE_ID, V_PATTERN, :NEW.DESCRIPTION, :NEW.VALID_IND );",
            "statement_indent": 8
          }
        ],
        "if_elses": [
          {
            "type": "elif_statement",
            "elif_indent": 4,
            "condition": "UPDATING",
            "then_statements": [
              {
                "condition": " :OLD.RULE_FLAG != :NEW.RULE_FLAG ",
                "type": "if_else",
                "if_indent": 8,
                "then_statements": [
                  {
                    "type": "update_statement",
                    "sql_statement": "UPDATE V_BPA_POSTAL_CODE_RULES SET RULE_FLAG = :NEW.RULE_FLAG WHERE RULE_ID = V_RULE_ID;",
                    "statement_indent": 12
                  }
                ],
                "if_elses": [],
                "else_statements": []
              },
              {
                "condition": " :NEW.PATTERN_ID IS NOT NULL ",
                "type": "if_else",
                "if_indent": 8,
                "then_statements": [
                  {
                    "condition": " V_PATTERN IS NOT NULL ",
                    "type": "if_else",
                    "if_indent": 12,
                    "then_statements": [
                      {
                        "type": "update_statement",
                        "sql_statement": "UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;",
                        "statement_indent": 16
                      }
                    ],
                    "if_elses": [],
                    "else_statements": [
                      {
                        "type": "delete_statement",
                        "sql_statement": "DELETE FROM V_BPA_POSTAL_CODE_PATTERNS WHERE PATTERN_ID = :NEW.PATTERN_ID AND PATTERN = :OLD.PATTERN;",
                        "statement_indent": 16
                      }
                    ]
                  }
                ],
                "if_elses": [],
                "else_statements": [
                  {
                    "condition": " V_PATTERN IS NOT NULL ",
                    "type": "if_else",
                    "if_indent": 12,
                    "then_statements": [
                      {
                        "type": "insert_statement",
                        "sql_statement": "INSERT INTO V_BPA_POSTAL_CODE_PATTERNS ( PATTERN_ID, RULE_ID, PATTERN, VALID_IND ) VALUES ( V_PATTERN_ID, V_RULE_ID, V_PATTERN, :NEW.VALID_IND );",
                        "statement_indent": 16
                      }
                    ],
                    "if_elses": [],
                    "else_statements": []
                  }
                ]
              }
            ]
          }
        ],
        "else_statements": []
      }
    ],
    "exception_handlers": [
      {
        "type": "exception_handler",
        "exception_name": "ERR_DEL",
        "when_indent": 4,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "RAISE_APPLICATION_ERROR",
            "parameters": {
              "parameter_type": "positional",
              "positional_params": [
                "-20112",
                "V_TRIGGER_NAME"
              ],
              "named_params": {},
              "raw_text": "-20112, V_TRIGGER_NAME"
            }
          }
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_NULL",
        "when_indent": 4,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "RAISE_APPLICATION_ERROR",
            "parameters": {
              "parameter_type": "positional",
              "positional_params": [
                "-20114",
                "V_TRIGGER_NAME"
              ],
              "named_params": {},
              "raw_text": "-20114, V_TRIGGER_NAME"
            }
          }
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_POSTAL_CODE",
        "when_indent": 4,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "RAISE_APPLICATION_ERROR",
            "parameters": {
              "parameter_type": "positional",
              "positional_params": [
                "-20119",
                "V_TRIGGER_NAME"
              ],
              "named_params": {},
              "raw_text": "-20119, V_TRIGGER_NAME"
            }
          }
        ]
      }
    ]
  },
  "sql_comments": [
    "--(A, 9, - and space)",
    "--",
    "-- Check musst be null inconsistance",
    "-- must be null check",
    "-- Check allowed pattern entries",
    "-- check if entry exists on bpa_postal_code_rules table",
    "-- insert country rule when no entry found",
    "-- Select next pattern id => used by insert",
    "-- insert into bpa_postal_code_patterns table",
    "-- update  bpa_postal_code_rules table"
  ],
  "rest_string_list": [],
  "conversion_stats": {
    "declaration_count": 9,
    "comment_count": 10,
    "sql_convert_count": {
      "select_statement": 3,
      "insert_statement": 3,
      "update_statement": 2,
      "delete_statement": 1,
      "raise_statement": 3,
      "assignment": 2,
      "for_loop": 0,
      "if_else": 9,
      "case_when": 1,
      "begin_end": 1,
      "exception_handler": 3,
      "function_calling": 3,
      "when_statement": 1,
      "elif_statement": 1,
      "fetch_statement": 0,
      "open_statement": 0,
      "exit_statement": 0,
      "close_statement": 0,
      "merge_statement": 0,
      "null_statement": 0,
      "return_statement": 0
    }
  },
  "metadata": {
    "parse_timestamp": "2025-08-28T19:32:16.280743",
    "parser_version": "1.0",
    "file_details": {
      "filename": "bbb.sql",
      "filepath": "D:\\DELOITTE\\ORACALE_to_json\\files\\oracle\\bbb.sql",
      "filesize": 4273,
      "file_extension": ".sql",
      "last_modified": 1756389343.3745239,
      "created_time": 1756389338.2353327,
      "is_file": true,
      "is_readable": true
    }
  }
}