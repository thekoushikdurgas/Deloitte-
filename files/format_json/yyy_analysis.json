{
  "declarations": {
    "variables": [
      {
        "name": "CNTR",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_USERID",
        "data_type": "VARCHAR2(100)",
        "default_value": null
      },
      {
        "name": "V_REPORTING_ENTITY_CD",
        "data_type": "CFG_V_REPORTING_ENTITIES.REPORTING_ENTITY_CD%TYPE",
        "default_value": null
      },
      {
        "name": "V_LEGAL_COMPANY_CD",
        "data_type": "CFG_V_COMPANIES.LEGAL_COMPANY_CD%TYPE",
        "default_value": null
      },
      {
        "name": "V_OLD_LEGAL_COMPANY_CD",
        "data_type": "CFG_V_COMPANIES.LEGAL_COMPANY_CD%TYPE",
        "default_value": "NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)"
      },
      {
        "name": "V_REP_CBC_FLAG",
        "data_type": "CFG_V_REPORTING_ENTITIES.CBC_FLAG%TYPE",
        "default_value": null
      },
      {
        "name": "V_ADDR_VALID_FROM_DATE",
        "data_type": "CFG.CFG_V_COMPANY_ADDRESSES.VALID_FROM%TYPE",
        "default_value": null
      },
      {
        "name": "V_COUNTRY_CD",
        "data_type": "CFG.CFG_V_COMPANY_ADDRESSES.COUNTRY_CD%TYPE",
        "default_value": null
      },
      {
        "name": "V_COMPANY_CODES_LIST",
        "data_type": "VARCHAR2(200)",
        "default_value": null
      }
    ],
    "constants": [
      {
        "name": "V_TRIGGER_NAME",
        "data_type": "VARCHAR2(30)",
        "value": "'COMPANIES_MTN_IOF'"
      }
    ],
    "exceptions": [
      {
        "name": "ERR_INS",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_DEL",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_UPD",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_VALID_FROM_DATE",
        "type": "EXCEPTION"
      },
      {
        "name": "RU_NOT_IN_CBC_SCOPE",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_NO_ADR",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_CPY_STILL_IN_SCOPE",
        "type": "EXCEPTION"
      },
      {
        "name": "CPY_IN_USE",
        "type": "EXCEPTION"
      },
      {
        "name": "INVALID_LEGAL_COMP",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_CPY_STILL_IN_MFR",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC",
        "type": "EXCEPTION"
      }
    ]
  },
  "main": {
    "type": "begin_end",
    "begin_line_no": 23,
    "begin_indent": 0,
    "begin_end_statements": [
      {
        "type": "begin_end",
        "begin_line_no": 24,
        "begin_indent": 4,
        "begin_end_statements": [
          {
            "indent": 8,
            "line": "        V_USERID := TXO_UTIL.GET_USERID;",
            "line_no": 25,
            "is_end_semicolon": true
          }
        ],
        "exception_handlers": [
          {
            "type": "exception_handler",
            "exception_name": "OTHERS",
            "when_line_no": 27,
            "when_indent": 8,
            "then_line_no": 27,
            "exception_statements": [
              {
                "indent": 12,
                "line": "            V_USERID := USER;",
                "line_no": 28,
                "is_end_semicolon": true
              }
            ],
            "exception_statements_line_no": [
              28
            ]
          }
        ],
        "exception_line_no": 26,
        "end_line_no": 29
      },
      {
        "if_expression": " UPDATING AND :OLD.COMPANY_CD != :NEW.COMPANY_CD ",
        "type": "if_else",
        "if_line_no": 31,
        "then_statements": [],
        "if_indent": 4,
        "end_if_line_no": 33,
        "if_elses": [],
        "else_statements": []
      },
      {
        "if_expression": " INSERTING ",
        "type": "if_else",
        "if_line_no": 35,
        "then_statements": [],
        "if_indent": 4,
        "end_if_line_no": 48,
        "if_elses": [],
        "else_statements": []
      },
      {
        "if_expression": " INSERTING OR UPDATING ",
        "type": "if_else",
        "if_line_no": 50,
        "then_statements": [
          {
            "if_expression": " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ",
            "type": "if_else",
            "if_line_no": 53,
            "then_statements": [
              {
                "indent": 12,
                "line": "            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;",
                "line_no": 54,
                "is_end_semicolon": true
              }
            ],
            "if_indent": 8,
            "end_if_line_no": 57,
            "if_elses": [],
            "else_statements": [
              {
                "indent": 12,
                "line": "            V_LEGAL_COMPANY_CD := :NEW.LEGAL_COMPANY_CD;",
                "line_no": 56,
                "is_end_semicolon": true
              }
            ]
          },
          {
            "indent": 8,
            "line": "        CNTR := 0;",
            "line_no": 61,
            "is_end_semicolon": true
          },
          {
            "indent": 8,
            "line": "        SELECT",
            "line_no": 62,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            COUNT (*) INTO CNTR",
            "line_no": 63,
            "is_end_semicolon": false
          },
          {
            "indent": 8,
            "line": "        FROM",
            "line_no": 64,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            CFG_V_COMPANIES",
            "line_no": 65,
            "is_end_semicolon": false
          },
          {
            "indent": 8,
            "line": "        WHERE",
            "line_no": 66,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            COMPANY_TYPE_CD IN ( 'L')",
            "line_no": 67,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            AND VALID_IND = 'Y'",
            "line_no": 68,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            AND COMPANY_CD = V_LEGAL_COMPANY_CD;",
            "line_no": 69,
            "is_end_semicolon": true
          },
          {
            "if_expression": "OR (:NEW.COMPANY_TYPE_CD = 'D'AND :NEW.CBC_GBE_SCOPE = 'Y'",
            "type": "if_else",
            "if_line_no": 72,
            "then_statements": [],
            "if_indent": 8,
            "end_if_line_no": 77,
            "if_elses": [],
            "else_statements": []
          },
          {
            "indent": 8,
            "line": "        MDM_UTIL_COMPANIES.MODIFYCOMPANY (",
            "line_no": 79,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_COMPANY_CD => :NEW.COMPANY_CD,",
            "line_no": 80,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD,",
            "line_no": 81,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE,",
            "line_no": 82,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD,",
            "line_no": 83,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME,",
            "line_no": 84,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_SHORT_NAME => :NEW.SHORT_NAME,",
            "line_no": 85,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME,",
            "line_no": 86,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD,",
            "line_no": 87,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD,",
            "line_no": 88,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_URL => :NEW.URL,",
            "line_no": 89,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL,",
            "line_no": 90,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO,",
            "line_no": 91,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO,",
            "line_no": 92,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO,",
            "line_no": 93,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND,",
            "line_no": 94,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_FATCA_CD => :NEW.FATCA_CD,",
            "line_no": 95,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE,",
            "line_no": 96,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE,",
            "line_no": 97,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_SAPINST_NO => :NEW.SAPINST_NO,",
            "line_no": 98,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO,",
            "line_no": 99,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE,",
            "line_no": 100,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE,",
            "line_no": 101,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA,",
            "line_no": 102,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA,",
            "line_no": 103,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND,",
            "line_no": 104,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE,",
            "line_no": 105,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_TOP_REMARKS => :NEW.TOP_REMARKS,",
            "line_no": 106,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS,",
            "line_no": 107,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_REMARKS => :NEW.REMARKS,",
            "line_no": 108,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC,",
            "line_no": 109,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER,",
            "line_no": 110,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_TRADING_PARTNER => :NEW.TRADING_PARTNER,",
            "line_no": 111,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID,",
            "line_no": 112,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG,",
            "line_no": 113,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE",
            "line_no": 114,
            "is_end_semicolon": false
          },
          {
            "indent": 0,
            "line": ",",
            "line_no": 115,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND,",
            "line_no": 116,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND,",
            "line_no": 117,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_VALID_IND => :NEW.VALID_IND,",
            "line_no": 118,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_CORE_REMARKS => :NEW.CORE_REMARKS,",
            "line_no": 119,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_REVIEW_USERID => :NEW.REVIEW_USERID,",
            "line_no": 120,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE,",
            "line_no": 121,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_REQUESTER_USERID => :NEW.REQUESTER_USERID,",
            "line_no": 122,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_REQUEST_DATE => :NEW.REQUEST_DATE,",
            "line_no": 123,
            "is_end_semicolon": false
          },
          {
            "indent": 12,
            "line": "            I_CHANGE_USER => V_USERID",
            "line_no": 124,
            "is_end_semicolon": false
          },
          {
            "indent": 8,
            "line": "        );",
            "line_no": 125,
            "is_end_semicolon": true
          },
          {
            "case_expression": "",
            "type": "case_when",
            "case_line_no": 128,
            "case_indent": 8,
            "end_case_line_no": 158,
            "when_clauses": [
              {
                "type": "when_statement",
                "when_line_no": 129,
                "when_indent": 12,
                "when_value": "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)",
                "then_line_no": 139,
                "then_statements": [
                  {
                    "indent": 16,
                    "line": "                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;",
                    "line_no": 140,
                    "is_end_semicolon": true
                  },
                  {
                    "case_expression": "",
                    "type": "case_when",
                    "case_line_no": 141,
                    "case_indent": 16,
                    "end_case_line_no": 148,
                    "when_clauses": [
                      {
                        "type": "when_statement",
                        "when_line_no": 142,
                        "when_indent": 20,
                        "when_value": "( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)",
                        "then_line_no": 144,
                        "then_statements": [
                          {
                            "indent": 24,
                            "line": "                        RAISE ERR_VALID_FROM_DATE;",
                            "line_no": 145,
                            "is_end_semicolon": true
                          }
                        ]
                      }
                    ],
                    "else_statements": [
                      {
                        "indent": 24,
                        "line": "                        NULL;",
                        "line_no": 147,
                        "is_end_semicolon": true
                      }
                    ]
                  },
                  {
                    "indent": 16,
                    "line": "                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (",
                    "line_no": 149,
                    "is_end_semicolon": false
                  },
                  {
                    "indent": 20,
                    "line": "                    I_COMPANY_CD => :NEW.COMPANY_CD,",
                    "line_no": 150,
                    "is_end_semicolon": false
                  },
                  {
                    "indent": 20,
                    "line": "                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,",
                    "line_no": 151,
                    "is_end_semicolon": false
                  },
                  {
                    "indent": 20,
                    "line": "                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,",
                    "line_no": 152,
                    "is_end_semicolon": false
                  },
                  {
                    "indent": 20,
                    "line": "                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,",
                    "line_no": 153,
                    "is_end_semicolon": false
                  },
                  {
                    "indent": 20,
                    "line": "                    I_CHANGE_USER => V_USERID",
                    "line_no": 154,
                    "is_end_semicolon": false
                  },
                  {
                    "indent": 16,
                    "line": "                );",
                    "line_no": 155,
                    "is_end_semicolon": true
                  }
                ]
              }
            ],
            "else_statements": [
              {
                "indent": 16,
                "line": "                NULL;",
                "line_no": 157,
                "is_end_semicolon": true
              }
            ]
          },
          {
            "if_expression": " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ",
            "type": "if_else",
            "if_line_no": 160,
            "then_statements": [],
            "if_indent": 8,
            "end_if_line_no": 195,
            "if_elses": [],
            "else_statements": []
          },
          {
            "if_expression": " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ",
            "type": "if_else",
            "if_line_no": 199,
            "then_statements": [],
            "if_indent": 8,
            "end_if_line_no": 210,
            "if_elses": [],
            "else_statements": []
          },
          {
            "if_expression": " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ",
            "type": "if_else",
            "if_line_no": 214,
            "then_statements": [],
            "if_indent": 8,
            "end_if_line_no": 216,
            "if_elses": [],
            "else_statements": []
          },
          {
            "if_expression": " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ",
            "type": "if_else",
            "if_line_no": 220,
            "then_statements": [],
            "if_indent": 8,
            "end_if_line_no": 222,
            "if_elses": [],
            "else_statements": []
          },
          {
            "if_expression": " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ",
            "type": "if_else",
            "if_line_no": 226,
            "then_statements": [],
            "if_indent": 8,
            "end_if_line_no": 228,
            "if_elses": [],
            "else_statements": []
          },
          {
            "if_expression": " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ",
            "type": "if_else",
            "if_line_no": 232,
            "then_statements": [
              {
                "indent": 12,
                "line": "            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);",
                "line_no": 233,
                "is_end_semicolon": true
              }
            ],
            "if_indent": 8,
            "end_if_line_no": 236,
            "if_elses": [],
            "else_statements": [
              {
                "indent": 12,
                "line": "            V_REPORTING_ENTITY_CD := V_LEGAL_COMPANY_CD;",
                "line_no": 235,
                "is_end_semicolon": true
              }
            ]
          },
          {
            "if_expression": " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ",
            "type": "if_else",
            "if_line_no": 240,
            "then_statements": [],
            "if_indent": 8,
            "end_if_line_no": 324,
            "if_elses": [],
            "else_statements": []
          },
          {
            "case_expression": "",
            "type": "case_when",
            "case_line_no": 328,
            "case_indent": 8,
            "end_case_line_no": 340,
            "when_clauses": [
              {
                "type": "when_statement",
                "when_line_no": 329,
                "when_indent": 12,
                "when_value": "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL",
                "then_line_no": 332,
                "then_statements": [
                  {
                    "indent": 16,
                    "line": "                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (",
                    "line_no": 333,
                    "is_end_semicolon": false
                  },
                  {
                    "indent": 16,
                    "line": "                :NEW.COMPANY_CD,",
                    "line_no": 334,
                    "is_end_semicolon": false
                  },
                  {
                    "indent": 16,
                    "line": "                V_LEGAL_COMPANY_CD,",
                    "line_no": 335,
                    "is_end_semicolon": false
                  },
                  {
                    "indent": 16,
                    "line": "                :NEW.OFFICIAL_NAME,",
                    "line_no": 336,
                    "is_end_semicolon": false
                  },
                  {
                    "indent": 16,
                    "line": "                V_USERID);",
                    "line_no": 337,
                    "is_end_semicolon": true
                  }
                ]
              }
            ],
            "else_statements": [
              {
                "indent": 16,
                "line": "                NULL;",
                "line_no": 339,
                "is_end_semicolon": true
              }
            ]
          }
        ],
        "if_indent": 4,
        "end_if_line_no": 343,
        "if_elses": [],
        "else_statements": []
      }
    ],
    "exception_handlers": [
      {
        "type": "exception_handler",
        "exception_name": "ERR_DEL",
        "when_line_no": 345,
        "when_indent": 4,
        "then_line_no": 345,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20110,
              "handler_string": "V_TRIGGER_NAME"
            }
          }
        ],
        "exception_statements_line_no": [
          346
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_UPD",
        "when_line_no": 347,
        "when_indent": 4,
        "then_line_no": 347,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20111,
              "handler_string": "V_TRIGGER_NAME"
            }
          }
        ],
        "exception_statements_line_no": [
          348
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_INS",
        "when_line_no": 349,
        "when_indent": 4,
        "then_line_no": 349,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20114,
              "handler_string": "V_TRIGGER_NAME"
            }
          }
        ],
        "exception_statements_line_no": [
          350
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_VALID_FROM_DATE",
        "when_line_no": 351,
        "when_indent": 4,
        "then_line_no": 351,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20122,
              "handler_string": "'Please insert : Rep. Code Assignm. Valid from Date'"
            }
          }
        ],
        "exception_statements_line_no": [
          352
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "RU_NOT_IN_CBC_SCOPE",
        "when_line_no": 353,
        "when_indent": 4,
        "then_line_no": 353,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20123,
              "handler_string": "'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"
            }
          }
        ],
        "exception_statements_line_no": [
          354
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_CPY_STILL_IN_SCOPE",
        "when_line_no": 355,
        "when_indent": 4,
        "then_line_no": 355,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20124,
              "handler_string": "'The CBC/GBE Scope must be set to No before deactivating the company'"
            }
          }
        ],
        "exception_statements_line_no": [
          356
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_NO_ADR",
        "when_line_no": 357,
        "when_indent": 4,
        "then_line_no": 357,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20124,
              "handler_string": "'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"
            }
          }
        ],
        "exception_statements_line_no": [
          358
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "CPY_IN_USE",
        "when_line_no": 359,
        "when_indent": 4,
        "then_line_no": 359,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20125,
              "handler_string": "'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"
            }
          }
        ],
        "exception_statements_line_no": [
          360,
          361
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "INVALID_LEGAL_COMP",
        "when_line_no": 362,
        "when_indent": 4,
        "then_line_no": 362,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20126,
              "handler_string": "V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"
            }
          }
        ],
        "exception_statements_line_no": [
          363,
          364
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC",
        "when_line_no": 365,
        "when_indent": 4,
        "then_line_no": 365,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20127,
              "handler_string": "'An Associate Entity cannot be in CBC/GBE Scope!'"
            }
          }
        ],
        "exception_statements_line_no": [
          366
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_CPY_STILL_IN_MFR",
        "when_line_no": 367,
        "when_indent": 4,
        "then_line_no": 367,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20127,
              "handler_string": "'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"
            }
          }
        ],
        "exception_statements_line_no": [
          368
        ]
      }
    ],
    "exception_line_no": 344,
    "end_line_no": 369
  },
  "sql_comments": [
    "-- check if company_cd already exists",
    "-- Fix CHG0388122 - [FIN] Companies Maintenance - Legal Entity CD",
    "--check if the value inserted in legal company field is actually a valid legal company or a valid associate entity",
    "--if count is 0 then no valid legal company => return error",
    "--DE in CBC are allowed to use Legal Company Code",
    "-- CHG1205462 added as part of GloBE",
    "-- Reporting Entity mapping",
    "--check if the company is used as legal company for another company",
    "--Deactivate the addresses in case the company switches the status from Yes to No",
    "--when switching from LE or BR to Dummy entity, deactivate all the addresses except L, P, RES and INC",
    "--check the CBC/GBE scope flag before invalidating the Company",
    "--checkf if the valid_to date for MFR mapping is filled in before trying to deactivate the company",
    "--don't allow the user to set CBC scope flag to Yes for Associate Entity",
    "--check for company type and assign the correct value",
    "--check if the value for reporting_entity_cd is filled in; exception when company = Dummy entity, Legal Company Code is manadatory only when CBC/GBE Scope is YES",
    "--check if corresponding reporting entity has cbc_flag on YES when CBC_GBE_SCOPE is set on YES",
    "--check if the Phisical address exists - if not, throw error - used for JU mapping",
    "--in case the legal company was updated with another one, the valid from of the new mapping will not be the valid from date of the RES address but today's date",
    "--For Oficial NAME"
  ],
  "rest_strings": [
    {
      "indent": 8,
      "line": "        V_USERID := TXO_UTIL.GET_USERID;",
      "line_no": 25,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            V_USERID := USER;",
      "line_no": 28,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;",
      "line_no": 54,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            V_LEGAL_COMPANY_CD := :NEW.LEGAL_COMPANY_CD;",
      "line_no": 56,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        CNTR := 0;",
      "line_no": 61,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        SELECT",
      "line_no": 62,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            COUNT (*) INTO CNTR",
      "line_no": 63,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        FROM",
      "line_no": 64,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            CFG_V_COMPANIES",
      "line_no": 65,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        WHERE",
      "line_no": 66,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            COMPANY_TYPE_CD IN ( 'L')",
      "line_no": 67,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            AND VALID_IND = 'Y'",
      "line_no": 68,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            AND COMPANY_CD = V_LEGAL_COMPANY_CD;",
      "line_no": 69,
      "is_end_semicolon": true
    },
    {
      "indent": 8,
      "line": "        MDM_UTIL_COMPANIES.MODIFYCOMPANY (",
      "line_no": 79,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_COMPANY_CD => :NEW.COMPANY_CD,",
      "line_no": 80,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD,",
      "line_no": 81,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE,",
      "line_no": 82,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD,",
      "line_no": 83,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME,",
      "line_no": 84,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_SHORT_NAME => :NEW.SHORT_NAME,",
      "line_no": 85,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME,",
      "line_no": 86,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD,",
      "line_no": 87,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD,",
      "line_no": 88,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_URL => :NEW.URL,",
      "line_no": 89,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL,",
      "line_no": 90,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO,",
      "line_no": 91,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO,",
      "line_no": 92,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO,",
      "line_no": 93,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND,",
      "line_no": 94,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_FATCA_CD => :NEW.FATCA_CD,",
      "line_no": 95,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE,",
      "line_no": 96,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE,",
      "line_no": 97,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_SAPINST_NO => :NEW.SAPINST_NO,",
      "line_no": 98,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO,",
      "line_no": 99,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE,",
      "line_no": 100,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE,",
      "line_no": 101,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA,",
      "line_no": 102,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA,",
      "line_no": 103,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND,",
      "line_no": 104,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE,",
      "line_no": 105,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_TOP_REMARKS => :NEW.TOP_REMARKS,",
      "line_no": 106,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS,",
      "line_no": 107,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_REMARKS => :NEW.REMARKS,",
      "line_no": 108,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC,",
      "line_no": 109,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER,",
      "line_no": 110,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_TRADING_PARTNER => :NEW.TRADING_PARTNER,",
      "line_no": 111,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID,",
      "line_no": 112,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG,",
      "line_no": 113,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE",
      "line_no": 114,
      "is_end_semicolon": false
    },
    {
      "indent": 0,
      "line": ",",
      "line_no": 115,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND,",
      "line_no": 116,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND,",
      "line_no": 117,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_VALID_IND => :NEW.VALID_IND,",
      "line_no": 118,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_CORE_REMARKS => :NEW.CORE_REMARKS,",
      "line_no": 119,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_REVIEW_USERID => :NEW.REVIEW_USERID,",
      "line_no": 120,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE,",
      "line_no": 121,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_REQUESTER_USERID => :NEW.REQUESTER_USERID,",
      "line_no": 122,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_REQUEST_DATE => :NEW.REQUEST_DATE,",
      "line_no": 123,
      "is_end_semicolon": false
    },
    {
      "indent": 12,
      "line": "            I_CHANGE_USER => V_USERID",
      "line_no": 124,
      "is_end_semicolon": false
    },
    {
      "indent": 8,
      "line": "        );",
      "line_no": 125,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;",
      "line_no": 140,
      "is_end_semicolon": true
    },
    {
      "indent": 24,
      "line": "                        RAISE ERR_VALID_FROM_DATE;",
      "line_no": 145,
      "is_end_semicolon": true
    },
    {
      "indent": 24,
      "line": "                        NULL;",
      "line_no": 147,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (",
      "line_no": 149,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    I_COMPANY_CD => :NEW.COMPANY_CD,",
      "line_no": 150,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,",
      "line_no": 151,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,",
      "line_no": 152,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,",
      "line_no": 153,
      "is_end_semicolon": false
    },
    {
      "indent": 20,
      "line": "                    I_CHANGE_USER => V_USERID",
      "line_no": 154,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                );",
      "line_no": 155,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                NULL;",
      "line_no": 157,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);",
      "line_no": 233,
      "is_end_semicolon": true
    },
    {
      "indent": 12,
      "line": "            V_REPORTING_ENTITY_CD := V_LEGAL_COMPANY_CD;",
      "line_no": 235,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (",
      "line_no": 333,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                :NEW.COMPANY_CD,",
      "line_no": 334,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                V_LEGAL_COMPANY_CD,",
      "line_no": 335,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                :NEW.OFFICIAL_NAME,",
      "line_no": 336,
      "is_end_semicolon": false
    },
    {
      "indent": 16,
      "line": "                V_USERID);",
      "line_no": 337,
      "is_end_semicolon": true
    },
    {
      "indent": 16,
      "line": "                NULL;",
      "line_no": 339,
      "is_end_semicolon": true
    }
  ],
  "conversion_stats": {
    "declaration_count": 21,
    "comment_count": 19,
    "rest_string_count": 79,
    "sql_convert_count": 43
  },
  "metadata": {
    "parse_timestamp": "2025-08-25T02:26:38.928791",
    "parser_version": "1.0"
  }
}