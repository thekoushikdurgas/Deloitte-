{
  "declarations": {
    "variables": [
      {
        "name": "CNTR",
        "data_type": "PLS_INTEGER",
        "default_value": null
      },
      {
        "name": "V_USERID",
        "data_type": "VARCHAR2(100)",
        "default_value": null
      },
      {
        "name": "V_REPORTING_ENTITY_CD",
        "data_type": "CFG_V_REPORTING_ENTITIES.REPORTING_ENTITY_CD%TYPE",
        "default_value": null
      },
      {
        "name": "V_LEGAL_COMPANY_CD",
        "data_type": "CFG_V_COMPANIES.LEGAL_COMPANY_CD%TYPE",
        "default_value": null
      },
      {
        "name": "V_OLD_LEGAL_COMPANY_CD",
        "data_type": "CFG_V_COMPANIES.LEGAL_COMPANY_CD%TYPE",
        "default_value": "NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)"
      },
      {
        "name": "V_REP_CBC_FLAG",
        "data_type": "CFG_V_REPORTING_ENTITIES.CBC_FLAG%TYPE",
        "default_value": null
      },
      {
        "name": "V_ADDR_VALID_FROM_DATE",
        "data_type": "CFG.CFG_V_COMPANY_ADDRESSES.VALID_FROM%TYPE",
        "default_value": null
      },
      {
        "name": "V_COUNTRY_CD",
        "data_type": "CFG.CFG_V_COMPANY_ADDRESSES.COUNTRY_CD%TYPE",
        "default_value": null
      },
      {
        "name": "V_COMPANY_CODES_LIST",
        "data_type": "VARCHAR2(200)",
        "default_value": null
      }
    ],
    "constants": [
      {
        "name": "V_TRIGGER_NAME",
        "data_type": "VARCHAR2(30)",
        "value": "'COMPANIES_MTN_IOF'"
      }
    ],
    "exceptions": [
      {
        "name": "ERR_INS",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_DEL",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_UPD",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_VALID_FROM_DATE",
        "type": "EXCEPTION"
      },
      {
        "name": "RU_NOT_IN_CBC_SCOPE",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_NO_ADR",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_CPY_STILL_IN_SCOPE",
        "type": "EXCEPTION"
      },
      {
        "name": "CPY_IN_USE",
        "type": "EXCEPTION"
      },
      {
        "name": "INVALID_LEGAL_COMP",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_CPY_STILL_IN_MFR",
        "type": "EXCEPTION"
      },
      {
        "name": "ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC",
        "type": "EXCEPTION"
      }
    ]
  },
  "main": {
    "type": "begin_end",
    "begin_line_no": 23,
    "begin_indent": 0,
    "begin_end_statements": [
      {
        "type": "begin_end",
        "begin_line_no": 24,
        "begin_indent": 4,
        "begin_end_statements": [
          {
            "indent": 8,
            "line": "        V_USERID := TXO_UTIL.GET_USERID;",
            "line_no": 25,
            "is_end_semicolon": true
          }
        ],
        "exception_handlers": [
          {
            "type": "exception_handler",
            "exception_name": "OTHERS",
            "when_line_no": 27,
            "when_indent": 8,
            "then_line_no": 27,
            "exception_statements": [
              {
                "indent": 12,
                "line": "            V_USERID := USER;",
                "line_no": 28,
                "is_end_semicolon": true
              }
            ],
            "exception_statements_line_no": [
              28
            ]
          }
        ],
        "exception_line_no": 26,
        "end_line_no": 29
      },
      {
        "indent": 4,
        "line": "    IF UPDATING AND :OLD.COMPANY_CD != :NEW.COMPANY_CD THEN",
        "line_no": 31,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        RAISE ERR_UPD;",
        "line_no": 32,
        "is_end_semicolon": true
      },
      {
        "indent": 4,
        "line": "    END IF;",
        "line_no": 33,
        "is_end_semicolon": true
      },
      {
        "indent": 4,
        "line": "    IF INSERTING THEN",
        "line_no": 35,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        CNTR := 0;",
        "line_no": 36,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        SELECT",
        "line_no": 39,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            COUNT (*) INTO CNTR",
        "line_no": 40,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        FROM",
        "line_no": 41,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            CFG_V_COMPANIES",
        "line_no": 42,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        WHERE",
        "line_no": 43,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            COMPANY_CD = :NEW.COMPANY_CD;",
        "line_no": 44,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        IF CNTR > 0 THEN",
        "line_no": 45,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            RAISE ERR_INS;",
        "line_no": 46,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END IF;",
        "line_no": 47,
        "is_end_semicolon": true
      },
      {
        "indent": 4,
        "line": "    END IF;",
        "line_no": 48,
        "is_end_semicolon": true
      },
      {
        "indent": 4,
        "line": "    IF INSERTING OR UPDATING THEN",
        "line_no": 50,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        IF :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL THEN",
        "line_no": 53,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;",
        "line_no": 54,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        ELSE",
        "line_no": 55,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            V_LEGAL_COMPANY_CD := :NEW.LEGAL_COMPANY_CD;",
        "line_no": 56,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END IF;",
        "line_no": 57,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        CNTR := 0;",
        "line_no": 61,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        SELECT",
        "line_no": 62,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            COUNT (*) INTO CNTR",
        "line_no": 63,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        FROM",
        "line_no": 64,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            CFG_V_COMPANIES",
        "line_no": 65,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        WHERE",
        "line_no": 66,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            COMPANY_TYPE_CD IN ( 'L')",
        "line_no": 67,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            AND VALID_IND = 'Y'",
        "line_no": 68,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            AND COMPANY_CD = V_LEGAL_COMPANY_CD;",
        "line_no": 69,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        IF CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L')",
        "line_no": 72,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        OR (:NEW.COMPANY_TYPE_CD = 'D'",
        "line_no": 73,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        AND :NEW.CBC_GBE_SCOPE = 'Y'",
        "line_no": 74,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) THEN",
        "line_no": 75,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            RAISE INVALID_LEGAL_COMP;",
        "line_no": 76,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END IF;",
        "line_no": 77,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        MDM_UTIL_COMPANIES.MODIFYCOMPANY (",
        "line_no": 79,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_COMPANY_CD => :NEW.COMPANY_CD,",
        "line_no": 80,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD,",
        "line_no": 81,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE,",
        "line_no": 82,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD,",
        "line_no": 83,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME,",
        "line_no": 84,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_SHORT_NAME => :NEW.SHORT_NAME,",
        "line_no": 85,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME,",
        "line_no": 86,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD,",
        "line_no": 87,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD,",
        "line_no": 88,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_URL => :NEW.URL,",
        "line_no": 89,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL,",
        "line_no": 90,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO,",
        "line_no": 91,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO,",
        "line_no": 92,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO,",
        "line_no": 93,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND,",
        "line_no": 94,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_FATCA_CD => :NEW.FATCA_CD,",
        "line_no": 95,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE,",
        "line_no": 96,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE,",
        "line_no": 97,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_SAPINST_NO => :NEW.SAPINST_NO,",
        "line_no": 98,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO,",
        "line_no": 99,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE,",
        "line_no": 100,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE,",
        "line_no": 101,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA,",
        "line_no": 102,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA,",
        "line_no": 103,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND,",
        "line_no": 104,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE,",
        "line_no": 105,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_TOP_REMARKS => :NEW.TOP_REMARKS,",
        "line_no": 106,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS,",
        "line_no": 107,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_REMARKS => :NEW.REMARKS,",
        "line_no": 108,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC,",
        "line_no": 109,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER,",
        "line_no": 110,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_TRADING_PARTNER => :NEW.TRADING_PARTNER,",
        "line_no": 111,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID,",
        "line_no": 112,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG,",
        "line_no": 113,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE",
        "line_no": 114,
        "is_end_semicolon": false
      },
      {
        "indent": 0,
        "line": ",",
        "line_no": 115,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND,",
        "line_no": 116,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND,",
        "line_no": 117,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_VALID_IND => :NEW.VALID_IND,",
        "line_no": 118,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_CORE_REMARKS => :NEW.CORE_REMARKS,",
        "line_no": 119,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_REVIEW_USERID => :NEW.REVIEW_USERID,",
        "line_no": 120,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE,",
        "line_no": 121,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_REQUESTER_USERID => :NEW.REQUESTER_USERID,",
        "line_no": 122,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_REQUEST_DATE => :NEW.REQUEST_DATE,",
        "line_no": 123,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            I_CHANGE_USER => V_USERID",
        "line_no": 124,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        );",
        "line_no": 125,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        CASE",
        "line_no": 128,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            WHEN NVL (:OLD.REPORTING_ENTITY_CD, '-') !=",
        "line_no": 129,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            NVL (:NEW.REPORTING_ENTITY_CD, '-')",
        "line_no": 130,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'),",
        "line_no": 131,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            SYSDATE + 100) !=",
        "line_no": 132,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'),",
        "line_no": 133,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            SYSDATE + 100)",
        "line_no": 134,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'),",
        "line_no": 135,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            SYSDATE + 100) !=",
        "line_no": 136,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'),",
        "line_no": 137,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            SYSDATE + 100)",
        "line_no": 138,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            THEN",
        "line_no": 139,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;",
        "line_no": 140,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                CASE",
        "line_no": 141,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    WHEN ( :NEW.VALID_FROM_DATE IS NULL",
        "line_no": 142,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    OR :NEW.VALID_FROM_DATE IS NULL)",
        "line_no": 143,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    THEN",
        "line_no": 144,
        "is_end_semicolon": false
      },
      {
        "indent": 24,
        "line": "                        RAISE ERR_VALID_FROM_DATE;",
        "line_no": 145,
        "is_end_semicolon": true
      },
      {
        "indent": 20,
        "line": "                    ELSE",
        "line_no": 146,
        "is_end_semicolon": false
      },
      {
        "indent": 24,
        "line": "                        NULL;",
        "line_no": 147,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                END CASE;",
        "line_no": 148,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (",
        "line_no": 149,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_COMPANY_CD => :NEW.COMPANY_CD,",
        "line_no": 150,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,",
        "line_no": 151,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,",
        "line_no": 152,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,",
        "line_no": 153,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_CHANGE_USER => V_USERID",
        "line_no": 154,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                );",
        "line_no": 155,
        "is_end_semicolon": true
      },
      {
        "indent": 12,
        "line": "            ELSE",
        "line_no": 156,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                NULL;",
        "line_no": 157,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END CASE;",
        "line_no": 158,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        IF NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' THEN",
        "line_no": 160,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            CNTR := 0;",
        "line_no": 161,
        "is_end_semicolon": true
      },
      {
        "indent": 12,
        "line": "            SELECT",
        "line_no": 164,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                COUNT (*) INTO CNTR",
        "line_no": 165,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            FROM",
        "line_no": 166,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                CFG_V_COMPANIES",
        "line_no": 167,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            WHERE",
        "line_no": 168,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                LEGAL_COMPANY_CD = :NEW.COMPANY_CD",
        "line_no": 169,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                AND COMPANY_CD <> :NEW.COMPANY_CD",
        "line_no": 170,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                AND VALID_IND = 'Y';",
        "line_no": 171,
        "is_end_semicolon": true
      },
      {
        "indent": 12,
        "line": "            IF CNTR > 0 THEN",
        "line_no": 172,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                SELECT",
        "line_no": 173,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST",
        "line_no": 174,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                FROM",
        "line_no": 175,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    CFG_V_COMPANIES",
        "line_no": 176,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                WHERE",
        "line_no": 177,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD",
        "line_no": 178,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    AND COMPANY_CD <> :NEW.COMPANY_CD",
        "line_no": 179,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    AND VALID_IND = 'Y';",
        "line_no": 180,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                RAISE CPY_IN_USE;",
        "line_no": 181,
        "is_end_semicolon": true
      },
      {
        "indent": 12,
        "line": "            END IF;",
        "line_no": 182,
        "is_end_semicolon": true
      },
      {
        "indent": 12,
        "line": "            UPDATE CFG.CFG_COMPANY_ADDRESSES",
        "line_no": 186,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            SET",
        "line_no": 187,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                VALID_TO = TRUNC (",
        "line_no": 188,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    SYSDATE",
        "line_no": 189,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                ) - 1",
        "line_no": 190,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            WHERE",
        "line_no": 191,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                COMPANY_CD = :NEW.COMPANY_CD",
        "line_no": 192,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                AND ( VALID_TO > TRUNC(SYSDATE)",
        "line_no": 193,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                OR VALID_TO IS NULL);",
        "line_no": 194,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END IF;",
        "line_no": 195,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        IF :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' THEN",
        "line_no": 199,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            UPDATE CFG.CFG_COMPANY_ADDRESSES",
        "line_no": 200,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            SET",
        "line_no": 201,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                VALID_TO = TRUNC (",
        "line_no": 202,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    SYSDATE",
        "line_no": 203,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                ) - 1",
        "line_no": 204,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            WHERE",
        "line_no": 205,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                COMPANY_CD = :NEW.COMPANY_CD",
        "line_no": 206,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')",
        "line_no": 207,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                AND ( VALID_TO > TRUNC(SYSDATE)",
        "line_no": 208,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                OR VALID_TO IS NULL);",
        "line_no": 209,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END IF;",
        "line_no": 210,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        IF :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' THEN",
        "line_no": 214,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            RAISE ERR_CPY_STILL_IN_SCOPE;",
        "line_no": 215,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END IF;",
        "line_no": 216,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        IF :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL THEN",
        "line_no": 220,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            RAISE ERR_CPY_STILL_IN_MFR;",
        "line_no": 221,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END IF;",
        "line_no": 222,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        IF :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' THEN",
        "line_no": 226,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;",
        "line_no": 227,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END IF;",
        "line_no": 228,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        IF NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' THEN",
        "line_no": 232,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);",
        "line_no": 233,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        ELSE",
        "line_no": 234,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            V_REPORTING_ENTITY_CD := V_LEGAL_COMPANY_CD;",
        "line_no": 235,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END IF;",
        "line_no": 236,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        IF V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' THEN",
        "line_no": 240,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            IF (:NEW.CBC_GBE_SCOPE = 'Y'",
        "line_no": 241,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y'",
        "line_no": 242,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) THEN",
        "line_no": 243,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                SELECT",
        "line_no": 244,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    CBC_FLAG INTO V_REP_CBC_FLAG",
        "line_no": 245,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                FROM",
        "line_no": 246,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    CFG_V_REPORTING_ENTITIES",
        "line_no": 247,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                WHERE",
        "line_no": 248,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;",
        "line_no": 249,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                IF NVL (V_REP_CBC_FLAG, 'N') = 'N' THEN",
        "line_no": 252,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    RAISE RU_NOT_IN_CBC_SCOPE;",
        "line_no": 253,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                END IF;",
        "line_no": 254,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                CNTR := 0;",
        "line_no": 256,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                SELECT",
        "line_no": 259,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    COUNT (*) INTO CNTR",
        "line_no": 260,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                FROM",
        "line_no": 261,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    CFG.CFG_V_COMPANY_ADDRESSES",
        "line_no": 262,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                WHERE",
        "line_no": 263,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    COMPANY_CD = V_REPORTING_ENTITY_CD",
        "line_no": 264,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    AND ADDRESS_TYPE_CD = 'RES';",
        "line_no": 265,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                IF CNTR = 0 THEN",
        "line_no": 266,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    RAISE ERR_NO_ADR;",
        "line_no": 267,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                END IF;",
        "line_no": 268,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                SELECT",
        "line_no": 270,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    VALID_FROM,",
        "line_no": 271,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,",
        "line_no": 272,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    V_COUNTRY_CD",
        "line_no": 273,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                FROM",
        "line_no": 274,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    CFG.CFG_V_COMPANY_ADDRESSES",
        "line_no": 275,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                WHERE",
        "line_no": 276,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    COMPANY_CD = V_REPORTING_ENTITY_CD",
        "line_no": 277,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    AND ADDRESS_TYPE_CD = 'RES';",
        "line_no": 278,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                IF V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) THEN",
        "line_no": 281,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);",
        "line_no": 282,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                END IF;",
        "line_no": 283,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (",
        "line_no": 285,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_COMPANY_CD => :NEW.COMPANY_CD,",
        "line_no": 286,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,",
        "line_no": 287,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_VALID_FROM_DATE => TRUNC (SYSDATE),",
        "line_no": 288,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_VALID_TO_DATE => NULL,",
        "line_no": 289,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_CHANGE_USER => V_USERID,",
        "line_no": 290,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_MAPPING_TYPE => 'CE',",
        "line_no": 291,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_ACTION_TYPE => 'INSERT'",
        "line_no": 292,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                );",
        "line_no": 293,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (",
        "line_no": 294,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_COMPANY_CD => :NEW.COMPANY_CD,",
        "line_no": 295,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_REPORTING_ENTITY_CD => 'J-'",
        "line_no": 296,
        "is_end_semicolon": false
      },
      {
        "indent": 45,
        "line": "                                             || V_COUNTRY_CD,",
        "line_no": 297,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,",
        "line_no": 298,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_VALID_TO_DATE => NULL,",
        "line_no": 299,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_CHANGE_USER => V_USERID,",
        "line_no": 300,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_MAPPING_TYPE => 'JU',",
        "line_no": 301,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_ACTION_TYPE => 'INSERT'",
        "line_no": 302,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                );",
        "line_no": 303,
        "is_end_semicolon": true
      },
      {
        "indent": 12,
        "line": "            END IF;",
        "line_no": 304,
        "is_end_semicolon": true
      },
      {
        "indent": 12,
        "line": "            IF :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' THEN",
        "line_no": 306,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (",
        "line_no": 307,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_COMPANY_CD => :NEW.COMPANY_CD,",
        "line_no": 308,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_VALID_FROM_DATE => NULL,",
        "line_no": 309,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_VALID_TO_DATE => TRUNC (SYSDATE),",
        "line_no": 310,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_CHANGE_USER => V_USERID,",
        "line_no": 311,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_MAPPING_TYPE => 'CE',",
        "line_no": 312,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_ACTION_TYPE => 'UPDATE'",
        "line_no": 313,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                );",
        "line_no": 314,
        "is_end_semicolon": true
      },
      {
        "indent": 16,
        "line": "                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (",
        "line_no": 315,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_COMPANY_CD => :NEW.COMPANY_CD,",
        "line_no": 316,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_VALID_FROM_DATE => NULL,",
        "line_no": 317,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_VALID_TO_DATE => TRUNC (SYSDATE),",
        "line_no": 318,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_CHANGE_USER => V_USERID,",
        "line_no": 319,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_MAPPING_TYPE => 'JU',",
        "line_no": 320,
        "is_end_semicolon": false
      },
      {
        "indent": 20,
        "line": "                    I_ACTION_TYPE => 'UPDATE'",
        "line_no": 321,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                );",
        "line_no": 322,
        "is_end_semicolon": true
      },
      {
        "indent": 12,
        "line": "            END IF;",
        "line_no": 323,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END IF;",
        "line_no": 324,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        CASE",
        "line_no": 328,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            WHEN (NVL (:OLD.OFFICIAL_NAME, '-') !=",
        "line_no": 329,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            NVL (:NEW.OFFICIAL_NAME, '-'))",
        "line_no": 330,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            AND :OLD.OFFICIAL_NAME IS NOT NULL",
        "line_no": 331,
        "is_end_semicolon": false
      },
      {
        "indent": 12,
        "line": "            THEN",
        "line_no": 332,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (",
        "line_no": 333,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                :NEW.COMPANY_CD,",
        "line_no": 334,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                V_LEGAL_COMPANY_CD,",
        "line_no": 335,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                :NEW.OFFICIAL_NAME,",
        "line_no": 336,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                V_USERID);",
        "line_no": 337,
        "is_end_semicolon": true
      },
      {
        "indent": 12,
        "line": "            ELSE",
        "line_no": 338,
        "is_end_semicolon": false
      },
      {
        "indent": 16,
        "line": "                NULL;",
        "line_no": 339,
        "is_end_semicolon": true
      },
      {
        "indent": 8,
        "line": "        END CASE;",
        "line_no": 340,
        "is_end_semicolon": true
      },
      {
        "indent": 4,
        "line": "    ELSIF DELETING THEN",
        "line_no": 341,
        "is_end_semicolon": false
      },
      {
        "indent": 8,
        "line": "        RAISE ERR_DEL;",
        "line_no": 342,
        "is_end_semicolon": true
      },
      {
        "indent": 4,
        "line": "    END IF;",
        "line_no": 343,
        "is_end_semicolon": true
      }
    ],
    "exception_handlers": [
      {
        "type": "exception_handler",
        "exception_name": "ERR_DEL",
        "when_line_no": 345,
        "when_indent": 4,
        "then_line_no": 345,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20110,
              "handler_string": "V_TRIGGER_NAME"
            }
          }
        ],
        "exception_statements_line_no": [
          346
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_UPD",
        "when_line_no": 347,
        "when_indent": 4,
        "then_line_no": 347,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20111,
              "handler_string": "V_TRIGGER_NAME"
            }
          }
        ],
        "exception_statements_line_no": [
          348
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_INS",
        "when_line_no": 349,
        "when_indent": 4,
        "then_line_no": 349,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20114,
              "handler_string": "V_TRIGGER_NAME"
            }
          }
        ],
        "exception_statements_line_no": [
          350
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_VALID_FROM_DATE",
        "when_line_no": 351,
        "when_indent": 4,
        "then_line_no": 351,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20122,
              "handler_string": "'Please insert : Rep. Code Assignm. Valid from Date'"
            }
          }
        ],
        "exception_statements_line_no": [
          352
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "RU_NOT_IN_CBC_SCOPE",
        "when_line_no": 353,
        "when_indent": 4,
        "then_line_no": 353,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20123,
              "handler_string": "'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"
            }
          }
        ],
        "exception_statements_line_no": [
          354
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_CPY_STILL_IN_SCOPE",
        "when_line_no": 355,
        "when_indent": 4,
        "then_line_no": 355,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20124,
              "handler_string": "'The CBC/GBE Scope must be set to No before deactivating the company'"
            }
          }
        ],
        "exception_statements_line_no": [
          356
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_NO_ADR",
        "when_line_no": 357,
        "when_indent": 4,
        "then_line_no": 357,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20124,
              "handler_string": "'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"
            }
          }
        ],
        "exception_statements_line_no": [
          358
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "CPY_IN_USE",
        "when_line_no": 359,
        "when_indent": 4,
        "then_line_no": 359,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20125,
              "handler_string": "'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"
            }
          }
        ],
        "exception_statements_line_no": [
          360,
          361
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "INVALID_LEGAL_COMP",
        "when_line_no": 362,
        "when_indent": 4,
        "then_line_no": 362,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20126,
              "handler_string": "V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"
            }
          }
        ],
        "exception_statements_line_no": [
          363,
          364
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC",
        "when_line_no": 365,
        "when_indent": 4,
        "then_line_no": 365,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20127,
              "handler_string": "'An Associate Entity cannot be in CBC/GBE Scope!'"
            }
          }
        ],
        "exception_statements_line_no": [
          366
        ]
      },
      {
        "type": "exception_handler",
        "exception_name": "ERR_CPY_STILL_IN_MFR",
        "when_line_no": 367,
        "when_indent": 4,
        "then_line_no": 367,
        "exception_statements": [
          {
            "type": "function_calling",
            "function_name": "raise_application_error",
            "parameter": {
              "handler_code": -20127,
              "handler_string": "'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"
            }
          }
        ],
        "exception_statements_line_no": [
          368
        ]
      }
    ],
    "exception_line_no": 344,
    "end_line_no": 369
  },
  "sql_comments": [
    "-- check if company_cd already exists",
    "-- Fix CHG0388122 - [FIN] Companies Maintenance - Legal Entity CD",
    "--check if the value inserted in legal company field is actually a valid legal company or a valid associate entity",
    "--if count is 0 then no valid legal company => return error",
    "--DE in CBC are allowed to use Legal Company Code",
    "-- CHG1205462 added as part of GloBE",
    "-- Reporting Entity mapping",
    "--check if the company is used as legal company for another company",
    "--Deactivate the addresses in case the company switches the status from Yes to No",
    "--when switching from LE or BR to Dummy entity, deactivate all the addresses except L, P, RES and INC",
    "--check the CBC/GBE scope flag before invalidating the Company",
    "--checkf if the valid_to date for MFR mapping is filled in before trying to deactivate the company",
    "--don't allow the user to set CBC scope flag to Yes for Associate Entity",
    "--check for company type and assign the correct value",
    "--check if the value for reporting_entity_cd is filled in; exception when company = Dummy entity, Legal Company Code is manadatory only when CBC/GBE Scope is YES",
    "--check if corresponding reporting entity has cbc_flag on YES when CBC_GBE_SCOPE is set on YES",
    "--check if the Phisical address exists - if not, throw error - used for JU mapping",
    "--in case the legal company was updated with another one, the valid from of the new mapping will not be the valid from date of the RES address but today's date",
    "--For Oficial NAME"
  ],
  "rest_strings": [],
  "conversion_stats": {
    "declaration_count": 21,
    "comment_count": 19,
    "rest_string_count": 0,
    "sql_convert_count": 0
  },
  "metadata": {
    "parse_timestamp": "2025-08-22T20:23:18.528524",
    "parser_version": "1.0"
  }
}