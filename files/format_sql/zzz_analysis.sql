DECLARE
   V_HOLIDAY_DESCS TXO_VARCHAR_COLL;
   V_COUNTRY_CODES TXO_VARCHAR_COLL;
   V_CHK_IS_MULTIVALUE NUMBER;
   V_CHK_DISTINCT NUMBER;
   ERR_INS EXCEPTION;
   ERR_UPD EXCEPTION;
   ERR_UPD2 EXCEPTION;
   ERR_UPD3 EXCEPTION;
   ERR_UPD4 EXCEPTION;
   ERR_DEL EXCEPTION;
   ERR_LEVEL EXCEPTION;
BEGIN
  IF  (INSERTING OR UPDATING)  THEN
    WITH C AS (
      SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL
    )
    SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C;
    SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ;
    IF  V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT  THEN
      RAISE ERR_UPD2;
    END IF;
    IF  V_CHK_DISTINCT > 0  THEN
      RAISE ERR_UPD3;
    END IF;
    IF  V_CHK_IS_MULTIVALUE <= 1  THEN
        MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( SELECT HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND FROM ( SELECT :NEW.HOLIDAY_DATE    HOLIDAY_DATE, :NEW.HOLIDAY_NAME    HOLIDAY_DESC, :NEW.GRANTED         GRANTED, :NEW.VALID_FOR_CH    CH, :NEW.VALID_FOR_USA   USA, :NEW.VALID_FOR_UK    UK, :NEW.VALID_FOR_FR    FR, :NEW.VALID_FOR_DE    DE, :NEW.VALID_FOR_JP    JP, :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS FROM DUAL )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH', USA AS 'US', UK AS 'GB', FR AS 'FR', DE AS 'DE', JP AS 'JP')) ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);
      EXCEPTION
        WHEN OTHERS THEN
          IF  SQLCODE = -1407 AND INSTR(SQLERRM, '"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"') > 0  THEN
            RAISE ERR_INS;
          END IF;
    END IF;
    IF  (:NEW.GRANTED != :OLD.GRANTED)  THEN
      MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE);
    END IF;
  ELSIF (DELETING) THEN
    IF  :OLD.HOLIDAY_DATE IS NULL  THEN
      RAISE ERR_DEL;
    END IF;
    DELETE FROM CFG.CFG_IRTT_HOLIDAYS A WHERE A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;
  END IF;
EXCEPTION
  WHEN DUP_VAL_ON_INDEX THEN
    RAISE_APPLICATION_ERROR(-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
  WHEN ERR_INS THEN
    RAISE_APPLICATION_ERROR(-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
  WHEN ERR_UPD THEN
    RAISE_APPLICATION_ERROR(-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
  WHEN ERR_UPD2 THEN
    RAISE_APPLICATION_ERROR(-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
  WHEN ERR_UPD3 THEN
    RAISE_APPLICATION_ERROR(-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
  WHEN ERR_UPD4 THEN
    RAISE_APPLICATION_ERROR(-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
  WHEN ERR_DEL THEN
    RAISE_APPLICATION_ERROR(-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
  WHEN ERR_LEVEL THEN
    RAISE_APPLICATION_ERROR(-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
END;