-- Generated from JSON analysis
-- Generated on: 2025-08-13 03:05:35

DECLARE
  V_ACTION TEXT;
  COL_NAMES TEXT[];
  COL_NEW_VALUES TEXT[];
  COL_OLD_VALUES TEXT[];
  V_TABLE_NAME TEXT := LOWER(TG_TABLE_NAME) || '_his';
  V_SCHEMA_NAME TEXT := LOWER(TG_TABLE_SCHEMA);

BEGIN
  IF TG_OP = 'INSERT' THEN
    V_ACTION := 'I';
  ELSIF TG_OP = 'UPDATE' THEN
    V_ACTION := 'U';
  ELSIF TG_OP = 'DELETE' THEN
    V_ACTION := 'D';
  END IF;
  COL_NAMES := ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ];
  COL_NEW_VALUES := ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];
  COL_OLD_VALUES := ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];
  PERFORM MDMTOOL."mdmt_util_history$write_history"( V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES );
  RETURN NULL;
END;

-- End of generated SQL