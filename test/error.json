{
    "triggers": {
      "trigger1": {
        "overall_alignment": "partially_mismatched",
        "differences": {
          "syntax": [
            {
              "location": "files/format_sql/trigger1.sql:142",
              "generated": "IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) THEN",
              "original_equivalent": "IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND (V_STATUS_CD <> 'C' OR :NEW.IN_PREP_IND = 'Y')) THEN",
              "impact": "parse_error"
            }
          ],
          "logic": [
            {
              "section": "CASE LENGTH(:NEW.THEME_NO)",
              "generated": "WHEN 4 ...; WHEN 5 ...; (no ELSE branch here)",
              "original": "WHEN 4 ...; WHEN 5 ...; ELSE RAISE INVALID_THEME_NO;",
              "impact": "invalid length not rejected consistently"
            }
          ],
          "error_messages": [
            {
              "location": "files/format_sql/trigger1.sql:259-263",
              "generated": "RAISE_APPLICATION_ERROR(-20400, 'The automatically generated Theme Description \"')",
              "original": "RAISE_APPLICATION_ERROR(-20400, 'The automatically generated Theme Description \"' || V_DESCRIPTION || '\" is too long')",
              "impact": "truncated message; loses context"
            },
            {
              "location": "files/format_sql/trigger1.sql:261-263",
              "generated": "Short Description Proposal message truncated",
              "original": "includes :OLD.THEME_DESC_PROPOSAL",
              "impact": "truncated message; loses context"
            },
            {
              "location": "files/format_sql/trigger1.sql:263",
              "generated": "Downstream Theme Description message truncated",
              "original": "includes :OLD.THEME_DESC_ALT",
              "impact": "truncated message; loses context"
            }
          ],
          "dml": [],
          "plsql_blocks": []
        },
        "analysis_json_alignment": [
          {
            "file": "files/format_json/trigger1_analysis.json",
            "status": "mostly_aligned",
            "notes": [
              "The malformed IF condition in generated SQL (line 142) reflects a bad condition string in the analysis JSON (603-619).",
              "Case invalid-length handling is split across else_statement in JSON (840-870), risking structural drift in codegen."
            ]
          }
        ]
      },
      "trigger2": {
        "overall_alignment": "partially_mismatched",
        "differences": {
          "syntax": [
            {
              "location": "files/format_sql/trigger2.sql:65-67",
              "generated": "ELSE RAISE ERR_INS_INV_MAP; END CASE;",
              "original_equivalent": "END CASE; (the ELSE belongs inside the CASE body, not after)",
              "impact": "parse_error"
            },
            {
              "location": "files/format_sql/trigger2.sql:80-82",
              "generated": "TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR",
              "original_equivalent": "TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR",
              "impact": "bind parsing error due to space after ':'"
            },
            {
              "location": "files/format_sql/trigger2.sql:96-97",
              "generated": "IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO THEN",
              "original_equivalent": "IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO) THEN",
              "impact": "parse_error (misplaced parenthesis)"
            }
          ],
          "logic": [],
          "error_messages": [],
          "dml": [],
          "plsql_blocks": []
        },
        "analysis_json_alignment": [
          {
            "file": "files/format_json/trigger2_analysis.json",
            "status": "mostly_aligned",
            "notes": [
              "The stray 'END CASE' and spacing issues are not present in the analysis JSON; they likely occurred during SQL emission.",
              "Conditional groupings in JSON align with original logic; emitted SQL regressed in formatting."
            ]
          }
        ]
      },
      "trigger3": {
        "overall_alignment": "significantly_mismatched",
        "differences": {
          "declarations": [
            {
              "location": "files/format_sql/trigger3.sql:2",
              "generated": "VARCHAR2 (100) := 'COMPANY_ADDRESSES_IOF';",
              "original_equivalent": "V_TRIGGER_NAME VARCHAR2(100) := 'COMPANY_ADDRESSES_IOF';",
              "impact": "missing identifier; parse_error"
            },
            {
              "location": "files/format_sql/trigger3.sql:4",
              "generated": "VARCHAR2 (100);",
              "original_equivalent": "(no such unnamed declaration in original)",
              "impact": "missing identifier; parse_error"
            },
            {
              "location": "files/format_sql/trigger3.sql:15-20",
              "generated": "V_USERID assigned later but not declared in DECLARE section",
              "original_equivalent": "V_USERID VARCHAR2(100) declared",
              "impact": "compile failure (undeclared identifier) if not implicitly declared elsewhere"
            }
          ],
          "logic": [
            {
              "section": "User ID acquisition",
              "generated": "BEGIN V_USERID := TXO_UTIL.GET_USERID; EXCEPTION WHEN OTHERS THEN NULL; END;",
              "original": "BEGIN V_USERID := TXO_UTIL.GET_USERID; EXCEPTION WHEN OTHERS THEN V_USERID := USER; END;",
              "impact": "V_USERID may be NULL instead of falling back to USER"
            },
            {
              "section": "JU mapping propagation",
              "generated": "Replaced a real loop with a dummy loop: FOR i IN (SELECT 1 FROM DUAL) LOOP END LOOP;",
              "original": "FOR V_REC IN (SELECT COMPANY_CD ... FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD ...) LOOP MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU(...); END LOOP;",
              "impact": "loses required propagation to related companies"
            }
          ],
          "error_messages": [],
          "dml": [],
          "plsql_blocks": []
        },
        "analysis_json_alignment": [
          {
            "file": "files/format_json/trigger3_analysis.json",
            "status": "diverged",
            "notes": [
              "Two variable entries in JSON are 'name': 'VARCHAR2' without identifiers (5-8, 15-18), which caused invalid declarations in generated SQL.",
              "JSON simplified several exception messages; generated SQL retained original dynamic concatenations, creating mismatch with its source JSON."
            ]
          }
        ]
      }
    },
    "summary": {
      "parse_errors_in_generated_sql": [
        "trigger1: malformed IF condition (line 142)",
        "trigger2: stray 'END CASE' and bad bind spacing; mis-parenthesized IF",
        "trigger3: unnamed VARCHAR2 declarations; missing V_USERID declaration"
      ],
      "logic_gaps_in_generated_sql": [
        "trigger1: incomplete CASE for theme_no length; truncated error messages",
        "trigger3: lost JU mapping propagation and missing USER fallback"
      ],
      "json_to_sql_generation_issues": [
        "trigger3 analysis JSON produced invalid variable specs that led to invalid declarations",
        "trigger1 analysis JSON condition rendering contributed to malformed IF in SQL",
        "trigger2 analysis JSON generally OK; emission step introduced formatting/syntax defects"
      ]
    }
  }