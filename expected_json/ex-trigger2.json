{
    "on_insert": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_count_t_mappings INTEGER; v_count_t_mol_map INTEGER; v_seq_no_duplicate_cnt INTEGER; v_manual_short_desc VARCHAR(30); invalid_mapping_exists BOOLEAN := FALSE; BEGIN SELECT manual_short_desc INTO v_manual_short_desc FROM gmd.themes WHERE theme_no = COALESCE(:new_theme_no, NULL); SELECT COUNT() INTO v_count_t_mappings FROM gmd.v_theme_molecule_map WHERE theme_no = :new_theme_no AND valid_ind = 'Y'; IF CAST(:new_molecule_id AS TEXT) IS NULL THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Molecule ID missing in INSERT'; ELSE BEGIN PERFORM 1 FROM gmd.v_theme_molecules_mrhub m LEFT JOIN mdmappl.mdm_v_product_families pf ON m.product_family_cd = pf.product_family_cd WHERE m.valid_ind = 'Y' AND m.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC);  IF NOT FOUND THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: This is not a valid Molecule ID'; END IF; EXCEPTION WHEN OTHERS THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: This is not a valid Molecule ID'; END; END IF; IF cast(:new_molecule_id as text) <> COALESCE(NULL, '-1') THEN SELECT COUNT() INTO v_count_t_mol_map FROM gmd.v_theme_molecule_map WHERE theme_no = :new_theme_no AND molecule_id = cast(:new_molecule_id as text) AND valid_ind = 'Y'; IF v_count_t_mol_map > 0 THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Mapping already exists in INSERT'; END IF; SELECT COUNT() INTO v_count_t_mol_map FROM gmd.v_theme_molecule_map WHERE theme_no = :new_theme_no AND molecule_id = cast(:new_molecule_id as text) AND valid_ind = 'N'; IF v_count_t_mol_map > 0 THEN invalid_mapping_exists := TRUE; END IF; END IF; IF :new_molecule_seq_no = v_count_t_mappings + 1 THEN IF invalid_mapping_exists THEN UPDATE gmd.theme_molecule_map SET valid_ind = 'Y', molecule_seq_no = :new_molecule_seq_no WHERE theme_no = :new_theme_no AND molecule_id = cast(:new_molecule_id as text); ELSE INSERT INTO gmd.theme_molecule_map ( theme_no, molecule_id, molecule_seq_no, molecule_map_char, valid_ind, ins_user, ins_date ) VALUES ( :new_theme_no, cast(:new_molecule_id as text), :new_molecule_seq_no, :new_molecule_map_char, 'Y', :ins_user, :ins_date ); END IF; ELSIF :new_molecule_seq_no < v_count_t_mappings + 1 THEN UPDATE gmd.theme_molecule_map SET molecule_seq_no = molecule_seq_no + 1 WHERE theme_no = :new_theme_no AND molecule_seq_no >= :new_molecule_seq_no AND valid_ind = 'Y'; IF invalid_mapping_exists THEN UPDATE gmd.theme_molecule_map SET valid_ind = 'Y', molecule_seq_no = :new_molecule_seq_no WHERE theme_no = :new_theme_no AND molecule_id = cast(:new_molecule_id as text); ELSE INSERT INTO gmd.theme_molecule_map ( theme_no, molecule_id, molecule_seq_no, molecule_map_char, valid_ind, ins_user, ins_date ) VALUES ( :new_theme_no, cast(:new_molecule_id as text), :new_molecule_seq_no, :new_molecule_map_char, 'Y', :ins_user, :ins_date ); END IF; ELSE RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Invalid mapping sequence in INSERT'; END IF; CALL mdmappl.mdm_util_themes$refresh_theme_desc_mrhub(cast(:new_theme_no as text), 0::text,CURRENT_TIMESTAMP::text,v_manual_short_desc::text, :ins_user, :ins_date); SELECT COUNT() INTO v_seq_no_duplicate_cnt FROM ( SELECT molecule_seq_no FROM gmd.theme_molecule_map WHERE theme_no = :new_theme_no AND valid_ind = 'Y' GROUP BY molecule_seq_no HAVING COUNT(*) > 1 ) AS duplicates; IF v_seq_no_duplicate_cnt > 0 THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Duplicate molecule sequence in INSERT'; END IF; END $$;"
        }
    ],
    "on_update": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_count_t_mappings INTEGER; v_count_t_mol_map INTEGER; v_seq_no_duplicate_cnt INTEGER; v_manual_short_desc VARCHAR(30); invalid_mapping_exists BOOLEAN := FALSE; BEGIN SELECT manual_short_desc INTO v_manual_short_desc FROM gmd.themes WHERE theme_no = COALESCE(:new_theme_no, :old_theme_no); SELECT COUNT() INTO v_count_t_mappings FROM gmd.v_theme_molecule_map WHERE theme_no = :new_theme_no AND valid_ind = 'Y'; IF CAST(:new_molecule_id AS TEXT) IS NULL THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Molecule ID missing in UPDATE'; ELSE BEGIN PERFORM 1 FROM gmd.v_theme_molecules_mrhub m LEFT JOIN mdmappl.mdm_v_product_families pf ON m.product_family_cd = pf.product_family_cd WHERE m.valid_ind = 'Y' AND m.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC);  IF NOT FOUND THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: This is not a valid Molecule ID'; END IF; EXCEPTION WHEN OTHERS THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: This is not a valid Molecule ID'; END; END IF; IF :new_molecule_seq_num > v_count_t_mappings THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Invalid mapping sequence in UPDATE'; END IF; IF :new_molecule_id <> COALESCE(:old_molecule_id, -1) THEN SELECT COUNT() INTO v_count_t_mol_map FROM gmd.v_theme_molecule_map WHERE theme_no = :new_theme_no AND molecule_id = cast(:new_molecule_id as text) AND valid_ind = 'Y'; IF v_count_t_mol_map > 0 THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Mapping already exists in UPDATE'; END IF; SELECT COUNT() INTO v_count_t_mol_map FROM gmd.v_theme_molecule_map WHERE theme_no = :new_theme_no AND molecule_id = cast(:new_molecule_id as text) AND valid_ind = 'N'; IF v_count_t_mol_map > 0 THEN invalid_mapping_exists := TRUE; END IF; END IF; IF :new_molecule_id = :old_molecule_id THEN IF :new_molecule_seq_num = :old_molecule_seq_num AND :new_molecule_map_char <> :old_molecule_map_char THEN UPDATE gmd.theme_molecule_map SET molecule_map_char = :new_molecule_map_char WHERE theme_no = :new_theme_no AND molecule_id = cast(:new_molecule_id as text); ELSIF :new_molecule_seq_num <> :old_molecule_seq_num THEN UPDATE gmd.theme_molecule_map SET valid_ind = 'N' WHERE theme_no = :new_theme_no AND molecule_id = cast(:old_molecule_id as text); IF :old_molecule_seq_num < :new_molecule_seq_num THEN UPDATE gmd.theme_molecule_map SET molecule_seq_no = molecule_seq_no - 1 WHERE theme_no = :new_theme_no AND molecule_seq_no > :old_molecule_seq_num AND valid_ind = 'Y' AND molecule_seq_no <= :new_molecule_seq_num; ELSE UPDATE gmd.theme_molecule_map SET molecule_seq_no = molecule_seq_no + 1 WHERE theme_no = :new_theme_no AND valid_ind = 'Y' AND molecule_seq_no >= :new_molecule_seq_num AND molecule_seq_no < :old_molecule_seq_num; END IF; IF invalid_mapping_exists THEN UPDATE gmd.theme_molecule_map SET valid_ind = 'Y', molecule_seq_no = :new_molecule_seq_num, molecule_map_char = :new_molecule_map_char WHERE theme_no = :new_theme_no AND molecule_id = cast(:new_molecule_id as text); ELSE INSERT INTO gmd.theme_molecule_map ( theme_no, molecule_id, molecule_seq_no, molecule_map_char, valid_ind, ins_user, ins_date ) VALUES ( :new_theme_no, :new_molecule_id, :new_molecule_seq_num, :new_molecule_map_char, 'Y', :ins_user, :ins_date ); END IF; END IF; ELSE UPDATE gmd.theme_molecule_map SET valid_ind = 'N' WHERE theme_no = :new_theme_no AND molecule_id = cast(:old_molecule_id as text); IF :new_molecule_seq_num <> :old_molecule_seq_num THEN UPDATE gmd.theme_molecule_map SET molecule_seq_no = molecule_seq_no - 1 WHERE theme_no = :new_theme_no AND molecule_seq_no > :old_molecule_seq_num AND molecule_seq_no <= :new_molecule_seq_num AND valid_ind = 'Y'; END IF; IF invalid_mapping_exists THEN UPDATE gmd.theme_molecule_map SET valid_ind = 'Y', molecule_seq_no = :new_molecule_seq_num, molecule_map_char = :new_molecule_map_char WHERE theme_no = :new_theme_no AND molecule_id = cast(:new_molecule_id as text); ELSE INSERT INTO gmd.theme_molecule_map ( theme_no, molecule_id, molecule_seq_no, molecule_map_char, valid_ind, ins_user, ins_date ) VALUES ( :new_theme_no, :new_molecule_id, :new_molecule_seq_num, :new_molecule_map_char, 'Y', :ins_user, :ins_date ); END IF; END IF; CALL mdmappl.mdm_util_themes$refresh_theme_desc_mrhub( cast(:new_theme_no as text), 0::text, CURRENT_TIMESTAMP::text, v_manual_short_desc::text, :upd_user, :upd_date ); SELECT COUNT() INTO v_seq_no_duplicate_cnt FROM ( SELECT molecule_seq_no FROM gmd.theme_molecule_map WHERE theme_no = :new_theme_no AND valid_ind = 'Y' GROUP BY molecule_seq_no HAVING COUNT(*) > 1 ) AS duplicates; IF v_seq_no_duplicate_cnt > 0 THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Duplicate molecule sequence in UPDATE'; END IF; END $$; "
        }
    ],
    "on_delete": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_manual_short_desc VARCHAR(30); v_seq_no_duplicate_cnt INTEGER; BEGIN SELECT manual_short_desc INTO v_manual_short_desc FROM gmd.themes WHERE theme_no = COALESCE(NULL, :old_theme_no); UPDATE gmd.theme_molecule_map SET valid_ind = 'N' WHERE theme_no = :old_theme_no AND molecule_id = cast(:old_molecule_id as text); UPDATE gmd.theme_molecule_map SET molecule_seq_no = molecule_seq_no - 1 WHERE theme_no = :old_theme_no AND molecule_seq_no > :old_molecule_seq_num AND valid_ind = 'Y'; CALL mdmappl.mdm_util_themes$refresh_theme_desc_mrhub( cast(:old_theme_no as text), cast(:old_molecule_id as text), CURRENT_TIMESTAMP::text, v_manual_short_desc::text, :upd_user, :upd_date ); SELECT COUNT() INTO v_seq_no_duplicate_cnt FROM ( SELECT molecule_seq_no FROM gmd.theme_molecule_map WHERE theme_no = :old_theme_no AND valid_ind = 'Y' GROUP BY molecule_seq_no HAVING COUNT() > 1 ) AS duplicates; IF v_seq_no_duplicate_cnt > 0 THEN RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Invalid molecule sequence in DELETE'; END IF; END $$; "
        }
    ]
}