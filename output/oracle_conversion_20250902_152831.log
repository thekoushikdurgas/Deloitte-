2025-09-02 15:28:31,911 - root - DEBUG - [common.py:105] - Starting main conversion workflow
2025-09-02 15:28:31,911 - root - INFO - [common.py:110] - === Starting Oracle Trigger Conversion Process ===
2025-09-02 15:28:31,911 - root - INFO - [common.py:110] - Logging to: output\oracle_conversion_20250902_152831.log
2025-09-02 15:28:31,911 - root - DEBUG - [common.py:105] - Logging system initialized
2025-09-02 15:28:31,911 - root - INFO - [common.py:110] - Step 1: Converting Oracle SQL files to JSON analysis...
2025-09-02 15:28:31,911 - root - DEBUG - [common.py:105] - Starting Step 1: Oracle SQL â†’ JSON conversion
2025-09-02 15:28:31,912 - root - INFO - [common.py:110] - === Starting Oracle triggers to JSON conversion ===
2025-09-02 15:28:31,913 - root - DEBUG - [common.py:105] - Workflow Phase 1: Convert Oracle SQL files to JSON analysis structure
2025-09-02 15:28:31,913 - root - DEBUG - [common.py:105] - Source directory: files/oracle
2025-09-02 15:28:31,913 - root - DEBUG - [common.py:105] - Target directory: files/format_json
2025-09-02 15:28:31,913 - root - DEBUG - [common.py:105] - File details will be included in metadata for each processed file
2025-09-02 15:28:31,914 - root - INFO - [common.py:110] - === Starting file processing ===
2025-09-02 15:28:31,914 - root - INFO - [common.py:110] - Source directory: 'files/oracle'
2025-09-02 15:28:31,914 - root - INFO - [common.py:110] - Target directory: 'files/format_json'
2025-09-02 15:28:31,914 - root - INFO - [common.py:110] - File pattern: '.sql'
2025-09-02 15:28:31,915 - root - INFO - [common.py:110] - Output suffix: '_analysis.json'
2025-09-02 15:28:31,915 - root - DEBUG - [common.py:105] - Ensuring target directory exists...
2025-09-02 15:28:31,915 - root - DEBUG - [common.py:105] - Directory already exists: files/format_json
2025-09-02 15:28:31,915 - root - DEBUG - [common.py:105] - Found 1 files in source directory
2025-09-02 15:28:31,915 - root - DEBUG - [common.py:105] - Files matching pattern '.sql': ['zzz.sql']
2025-09-02 15:28:31,915 - root - DEBUG - [common.py:105] - === Processing file 1/1: zzz.sql ===
2025-09-02 15:28:31,915 - root - DEBUG - [common.py:105] - Source path: files/oracle\zzz.sql
2025-09-02 15:28:31,915 - root - DEBUG - [common.py:105] - Output path: files/format_json\zzz_analysis.json
2025-09-02 15:28:31,915 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger zzz.sql ===
2025-09-02 15:28:31,915 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-02 15:28:31,916 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 20 characters of SQL
2025-09-02 15:28:31,916 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-02 15:28:31,916 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-02 15:28:31,916 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-02 15:28:31,916 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-02 15:28:31,916 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 203 total, 45 with semicolons, 18 empty lines skipped
2025-09-02 15:28:31,916 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-02 15:28:31,916 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 203 lines cleaned
2025-09-02 15:28:31,916 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-02 15:28:31,916 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 18 comments extracted, 185 lines cleaned
2025-09-02 15:28:31,916 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-02 15:28:31,916 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 3
2025-09-02 15:28:31,917 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 15
2025-09-02 15:28:31,917 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 3-14
2025-09-02 15:28:32,006 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-02 15:28:32,006 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_INS
2025-09-02 15:28:32,006 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_UPD
2025-09-02 15:28:32,006 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_UPD2
2025-09-02 15:28:32,006 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_UPD3
2025-09-02 15:28:32,006 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_UPD4
2025-09-02 15:28:32,006 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_DEL
2025-09-02 15:28:32,006 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_LEVEL
2025-09-02 15:28:32,006 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_HOLIDAY_DESCS
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_COUNTRY_CODES
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_CHK_IS_MULTIVALUE
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_CHK_DISTINCT
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:1442] - Starting top-level BEGIN blocks parsing
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'DUP_VAL_ON_INDEX', 'when_line_no': 186, 'when_indent': 4, 'then_line_no': 186, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 189}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS', 'when_line_no': 190, 'when_indent': 4, 'then_line_no': 190, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 193}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 194, 'when_indent': 4, 'then_line_no': 194, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 197}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD2', 'when_line_no': 198, 'when_indent': 4, 'then_line_no': 198, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 201}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD3', 'when_line_no': 202, 'when_indent': 4, 'then_line_no': 202, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 205}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD4', 'when_line_no': 206, 'when_indent': 4, 'then_line_no': 206, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 209}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 210, 'when_indent': 4, 'then_line_no': 210, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 213}]}, {'type': 'exception_handler', 'exception_name': 'ERR_LEVEL', 'when_line_no': 214, 'when_indent': 4, 'then_line_no': 214, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 217}]}]
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:1487] - Begin line: {'indent': 12, 'line': '            BEGIN', 'line_no': 59} 32
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:1494] - Exception line: {'indent': 12, 'line': '            EXCEPTION', 'line_no': 91} 64
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:1497] - End line: {'indent': 12, 'line': '            END;', 'line_no': 98} 71
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 93}, {'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}, {'indent': 20, 'line': '                    ELSE', 'line_no': 95}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 96}, {'indent': 20, 'line': '                    END IF;', 'line_no': 97}]}]
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:1487] - Begin line: {'indent': 12, 'line': '            BEGIN', 'line_no': 100} 73
2025-09-02 15:28:32,007 - root - DEBUG - [OracleTriggerAnalyzer.py:1494] - Exception line: {'indent': 12, 'line': '            EXCEPTION', 'line_no': 153} 126
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1497] - End line: {'indent': 12, 'line': '            END;', 'line_no': 160} 133
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 154, 'when_indent': 16, 'then_line_no': 154, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 155}, {'indent': 24, 'line': '                        RAISE ERR_UPD4;', 'line_no': 156}, {'indent': 20, 'line': '                    ELSE', 'line_no': 157}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 158}, {'indent': 20, 'line': '                    END IF;', 'line_no': 159}]}]
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 4, 'line': '    IF (INSERTING', 'line_no': 19}
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1071] - if_indent: 19
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1077] - if_i: 19 i: 182
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1078] - if_elses working_lines lenght: 51
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1160] - line_info : {'indent': 4, 'line': '    OR UPDATING) THEN', 'line_no': 20}
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1176] - then_statements: 0 43
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - line_info: {'indent': 8, 'line': '        IF :OLD.HOLIDAY_DATE IS NULL THEN', 'line_no': 176}
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - line_info: {'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 178}
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - line_info: {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - line_info: {'indent': 8, 'line': '        WHERE', 'line_no': 180}
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - line_info: {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}
2025-09-02 15:28:32,008 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - line_info: {'indent': 4, 'line': '    END IF;', 'line_no': 182}
2025-09-02 15:28:32,009 - root - DEBUG - [OracleTriggerAnalyzer.py:1211] - elif_else_statements: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 19, 'then_line_no': 20, 'if_indent': 4, 'end_if_line_no': 182, 'then_statements': [{'indent': 8, 'line': '        WITH C AS (', 'line_no': 21}, {'indent': 12, 'line': '            SELECT', 'line_no': 22}, {'indent': 16, 'line': "                TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL", 'line_no': 23}, {'indent': 12, 'line': '            FROM', 'line_no': 24}, {'indent': 16, 'line': '                DUAL', 'line_no': 25}, {'indent': 12, 'line': '            CONNECT BY', 'line_no': 26}, {'indent': 16, 'line': "                REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL", 'line_no': 27}, {'indent': 8, 'line': '        )', 'line_no': 28}, {'indent': 8, 'line': '        SELECT', 'line_no': 29}, {'indent': 12, 'line': "            REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC,", 'line_no': 30}, {'indent': 12, 'line': "            REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS,", 'line_no': 31}, {'indent': 12, 'line': '            V_COUNTRY_CODES', 'line_no': 32}, {'indent': 8, 'line': '        FROM', 'line_no': 33}, {'indent': 12, 'line': '            C;', 'line_no': 34}, {'indent': 8, 'line': '        SELECT', 'line_no': 38}, {'indent': 12, 'line': '            COUNT(COUNTRY_CD),', 'line_no': 39}, {'indent': 12, 'line': '            COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE', 'line_no': 40}, {'indent': 0, 'line': ',', 'line_no': 42}, {'indent': 12, 'line': '            V_CHK_DISTINCT', 'line_no': 43}, {'indent': 8, 'line': '        FROM', 'line_no': 44}, {'indent': 12, 'line': '            TABLE (V_COUNTRY_CODES)', 'line_no': 45}, {'indent': 12, 'line': '            LEFT JOIN COUNTRIES', 'line_no': 46}, {'indent': 12, 'line': '            ON COUNTRY_CD = COLUMN_VALUE         ;', 'line_no': 47}, {'indent': 8, 'line': '        IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN', 'line_no': 48}, {'indent': 12, 'line': '            RAISE ERR_UPD2;', 'line_no': 49}, {'indent': 8, 'line': '        END IF;', 'line_no': 52}, {'indent': 8, 'line': '        IF V_CHK_DISTINCT > 0 THEN', 'line_no': 54}, {'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}, {'indent': 8, 'line': '        END IF;', 'line_no': 56}, {'indent': 8, 'line': '        IF V_CHK_IS_MULTIVALUE <= 1 THEN', 'line_no': 58}, {'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 93}, {'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}, {'indent': 20, 'line': '                    ELSE', 'line_no': 95}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 96}, {'indent': 20, 'line': '                    END IF;', 'line_no': 97}]}], 'exception_line_no': 91, 'end_line_no': 98}, {'indent': 8, 'line': '        ELSE', 'line_no': 99}, {'type': 'begin_end', 'begin_line_no': 100, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( WITH HN AS (', 'line_no': 101}, {'indent': 20, 'line': '                    SELECT', 'line_no': 102}, {'indent': 24, 'line': '                        A.COLUMN_VALUE HOLIDAY_DESC,', 'line_no': 103}, {'indent': 24, 'line': '                        B.COLUMN_VALUE COUNTRY_CODE', 'line_no': 104}, {'indent': 20, 'line': '                    FROM', 'line_no': 105}, {'indent': 24, 'line': '                        (', 'line_no': 106}, {'indent': 28, 'line': '                            SELECT', 'line_no': 107}, {'indent': 32, 'line': '                                COLUMN_VALUE,', 'line_no': 108}, {'indent': 32, 'line': '                                ROWNUM       RN', 'line_no': 109}, {'indent': 28, 'line': '                            FROM', 'line_no': 110}, {'indent': 32, 'line': '                                TABLE(V_HOLIDAY_DESCS)', 'line_no': 111}, {'indent': 24, 'line': '                        ) A', 'line_no': 112}, {'indent': 24, 'line': '                        JOIN (', 'line_no': 113}, {'indent': 28, 'line': '                            SELECT', 'line_no': 114}, {'indent': 32, 'line': '                                COLUMN_VALUE,', 'line_no': 115}, {'indent': 32, 'line': '                                ROWNUM       RN', 'line_no': 116}, {'indent': 28, 'line': '                            FROM', 'line_no': 117}, {'indent': 32, 'line': '                                TABLE(V_COUNTRY_CODES)', 'line_no': 118}, {'indent': 24, 'line': '                        ) B', 'line_no': 119}, {'indent': 24, 'line': '                        ON A.RN = B.RN', 'line_no': 120}, {'indent': 16, 'line': '                )', 'line_no': 121}, {'indent': 20, 'line': '                    SELECT', 'line_no': 122}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 123}, {'indent': 24, 'line': "                        DECODE(VALID_IND, 'N', 'N/A', HOLIDAY_DESC) HOLIDAY_DESC,", 'line_no': 124}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 125}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 126}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 127}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 128}, {'indent': 20, 'line': '                    FROM', 'line_no': 129}, {'indent': 24, 'line': '                        (', 'line_no': 130}, {'indent': 28, 'line': '                            SELECT', 'line_no': 131}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 132}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 133}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 134}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 135}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 136}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 137}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 138}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 139}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 140}, {'indent': 28, 'line': '                            FROM', 'line_no': 141}, {'indent': 32, 'line': '                                DUAL', 'line_no': 142}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 143}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 144}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 145}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 146}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 147}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 148}, {'indent': 24, 'line': '                        LEFT JOIN HN', 'line_no': 149}, {'indent': 24, 'line': '                        ON HN.COUNTRY_CODE = COUNTRY_CD', 'line_no': 150}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 151}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 152}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 154, 'when_indent': 16, 'then_line_no': 154, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 155}, {'indent': 24, 'line': '                        RAISE ERR_UPD4;', 'line_no': 156}, {'indent': 20, 'line': '                    ELSE', 'line_no': 157}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 158}, {'indent': 20, 'line': '                    END IF;', 'line_no': 159}]}], 'exception_line_no': 153, 'end_line_no': 160}, {'indent': 8, 'line': '        END IF;', 'line_no': 161}, {'indent': 8, 'line': '        IF (:NEW.GRANTED != :OLD.GRANTED) THEN', 'line_no': 166}, {'indent': 12, 'line': '            MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(', 'line_no': 169}, {'indent': 16, 'line': '                P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE),', 'line_no': 170}, {'indent': 16, 'line': '                P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE),', 'line_no': 171}, {'indent': 16, 'line': '                P_START_EVENT_DATE => :NEW.HOLIDAY_DATE', 'line_no': 172}, {'indent': 12, 'line': '            );', 'line_no': 173}, {'indent': 8, 'line': '        END IF;', 'line_no': 174}], 'if_elses': [], 'else_statements': []}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 8, 'line': '        WITH C AS (', 'line_no': 21}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 22}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 16, 'line': "                TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL", 'line_no': 23}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            FROM', 'line_no': 24}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 16, 'line': '                DUAL', 'line_no': 25}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            CONNECT BY', 'line_no': 26}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 16, 'line': "                REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL", 'line_no': 27}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 8, 'line': '        )', 'line_no': 28}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 29}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': "            REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC,", 'line_no': 30}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': "            REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS,", 'line_no': 31}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            V_COUNTRY_CODES', 'line_no': 32}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 8, 'line': '        FROM', 'line_no': 33}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            C;', 'line_no': 34}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 38}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            COUNT(COUNTRY_CD),', 'line_no': 39}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE', 'line_no': 40}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 0, 'line': ',', 'line_no': 42}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            V_CHK_DISTINCT', 'line_no': 43}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 8, 'line': '        FROM', 'line_no': 44}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            TABLE (V_COUNTRY_CODES)', 'line_no': 45}
2025-09-02 15:28:32,031 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            LEFT JOIN COUNTRIES', 'line_no': 46}
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            ON COUNTRY_CD = COLUMN_VALUE         ;', 'line_no': 47}
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 8, 'line': '        IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN', 'line_no': 48}
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1071] - if_indent: 48
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1077] - if_i: 48 i: 52
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1078] - if_elses working_lines lenght: 3
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1208] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_UPD2;', 'line_no': 49}]
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1211] - elif_else_statements: {'condition': ' V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 8, 'end_if_line_no': 52, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD2;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            RAISE ERR_UPD2;', 'line_no': 49}
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 8, 'line': '        IF V_CHK_DISTINCT > 0 THEN', 'line_no': 54}
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1071] - if_indent: 54
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1077] - if_i: 54 i: 56
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1078] - if_elses working_lines lenght: 3
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1208] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}]
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1211] - elif_else_statements: {'condition': ' V_CHK_DISTINCT > 0 ', 'type': 'if_else', 'if_line_no': 54, 'then_line_no': 54, 'if_indent': 8, 'end_if_line_no': 56, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}], 'if_elses': [], 'else_statements': []}
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1067] - item: {'indent': 8, 'line': '        IF V_CHK_IS_MULTIVALUE <= 1 THEN', 'line_no': 58}
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1071] - if_indent: 58
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1077] - if_i: 58 i: 161
2025-09-02 15:28:32,032 - root - DEBUG - [OracleTriggerAnalyzer.py:1078] - if_elses working_lines lenght: 5
2025-09-02 15:28:32,032 - root - ERROR - [common.py:120] - Failed to create OracleTriggerAnalyzer: 'line_no'
2025-09-02 15:28:32,033 - root - ERROR - [common.py:120] - Failed to process zzz.sql: 'line_no'
2025-09-02 15:28:32,033 - root - CRITICAL - [common.py:125] - Fatal error during conversion: 'line_no'
2025-09-02 15:28:32,033 - root - CRITICAL - [common.py:125] - Process failed after 0.12 seconds
2025-09-02 15:28:32,033 - root - DEBUG - [common.py:105] - Fatal error details: KeyError: 'line_no'
2025-09-02 15:28:32,039 - root - DEBUG - [common.py:105] - Error traceback: Traceback (most recent call last):
  File "D:\DELOITTE\ORACALE_to_json\main.py", line 1174, in main
    read_oracle_triggers_to_json()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\DELOITTE\ORACALE_to_json\main.py", line 324, in read_oracle_triggers_to_json
    process_files(
    ~~~~~~~~~~~~~^
        source_dir="files/oracle",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        processor_func=sql_to_json_processor,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\DELOITTE\ORACALE_to_json\main.py", line 196, in process_files
    processor_func(src_path, out_path, file_name)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\DELOITTE\ORACALE_to_json\main.py", line 246, in sql_to_json_processor
    analyzer = OracleTriggerAnalyzer(src_path)
  File "D:\DELOITTE\ORACALE_to_json\utilities\OracleTriggerAnalyzer.py", line 110, in __init__
    self._parse_sql()
    ~~~~~~~~~~~~~~~^^
  File "D:\DELOITTE\ORACALE_to_json\utilities\OracleTriggerAnalyzer.py", line 369, in _parse_sql
    self._process_main_section()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "D:\DELOITTE\ORACALE_to_json\utilities\OracleTriggerAnalyzer.py", line 638, in _process_main_section
    self._parse_if_else()
    ~~~~~~~~~~~~~~~~~~~^^
  File "D:\DELOITTE\ORACALE_to_json\utilities\OracleTriggerAnalyzer.py", line 1128, in _parse_if_else
    self.main_section_lines["begin_end_statements"] = parse_if_else(self.main_section_lines["begin_end_statements"])
                                                      ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\DELOITTE\ORACALE_to_json\utilities\OracleTriggerAnalyzer.py", line 1080, in parse_if_else
    if_else_statement["then_statements"] = parse_if_else(if_else_statement["then_statements"])
                                           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\DELOITTE\ORACALE_to_json\utilities\OracleTriggerAnalyzer.py", line 1079, in parse_if_else
    if_else_statement = self._parse_elif_else_statements(working_lines[i : j+1])
  File "D:\DELOITTE\ORACALE_to_json\utilities\OracleTriggerAnalyzer.py", line 1203, in _parse_elif_else_statements
    logger.debug(f"else_statements: {working_lines[i+1]["line_no"]}, {working_lines[-1]["line_no"]}")
                                     ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
KeyError: 'line_no'

