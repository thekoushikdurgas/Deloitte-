2025-09-03 00:29:57,664 - root - DEBUG - [common.py:105] - Starting main conversion workflow
2025-09-03 00:29:57,664 - root - INFO - [common.py:110] - === Starting Oracle Trigger Conversion Process ===
2025-09-03 00:29:57,664 - root - INFO - [common.py:110] - Logging to: output\oracle_conversion_20250903_002957.log
2025-09-03 00:29:57,664 - root - DEBUG - [common.py:105] - Logging system initialized
2025-09-03 00:29:57,665 - root - INFO - [common.py:110] - Step 1: Converting Oracle SQL files to JSON analysis...
2025-09-03 00:29:57,665 - root - DEBUG - [common.py:105] - Starting Step 1: Oracle SQL â†’ JSON conversion
2025-09-03 00:29:57,665 - root - INFO - [common.py:110] - === Starting Oracle triggers to JSON conversion ===
2025-09-03 00:29:57,666 - root - DEBUG - [common.py:105] - Workflow Phase 1: Convert Oracle SQL files to JSON analysis structure
2025-09-03 00:29:57,666 - root - DEBUG - [common.py:105] - Source directory: files/oracle
2025-09-03 00:29:57,666 - root - DEBUG - [common.py:105] - Target directory: files/format_json
2025-09-03 00:29:57,666 - root - DEBUG - [common.py:105] - File details will be included in metadata for each processed file
2025-09-03 00:29:57,666 - root - INFO - [common.py:110] - === Starting file processing ===
2025-09-03 00:29:57,667 - root - INFO - [common.py:110] - Source directory: 'files/oracle'
2025-09-03 00:29:57,667 - root - INFO - [common.py:110] - Target directory: 'files/format_json'
2025-09-03 00:29:57,667 - root - INFO - [common.py:110] - File pattern: '.sql'
2025-09-03 00:29:57,667 - root - INFO - [common.py:110] - Output suffix: '_analysis.json'
2025-09-03 00:29:57,667 - root - DEBUG - [common.py:105] - Ensuring target directory exists...
2025-09-03 00:29:57,668 - root - DEBUG - [common.py:105] - Directory already exists: files/format_json
2025-09-03 00:29:57,668 - root - DEBUG - [common.py:105] - Found 1 files in source directory
2025-09-03 00:29:57,668 - root - DEBUG - [common.py:105] - Files matching pattern '.sql': ['zzz.sql']
2025-09-03 00:29:57,668 - root - DEBUG - [common.py:105] - === Processing file 1/1: zzz.sql ===
2025-09-03 00:29:57,668 - root - DEBUG - [common.py:105] - Source path: files/oracle\zzz.sql
2025-09-03 00:29:57,668 - root - DEBUG - [common.py:105] - Output path: files/format_json\zzz_analysis.json
2025-09-03 00:29:57,669 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger zzz.sql ===
2025-09-03 00:29:57,669 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 00:29:57,669 - root - DEBUG - [main.py:244] - Reading SQL file: files/oracle\zzz.sql
2025-09-03 00:29:57,669 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 20 characters of SQL
2025-09-03 00:29:57,669 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 00:29:57,669 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 00:29:57,670 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 00:29:57,670 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 00:29:57,670 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 60 total, 13 with semicolons, 1 empty lines skipped
2025-09-03 00:29:57,670 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 00:29:57,670 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 60 lines cleaned
2025-09-03 00:29:57,670 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 00:29:57,671 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 0 comments extracted, 60 lines cleaned
2025-09-03 00:29:57,671 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 00:29:57,671 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 3
2025-09-03 00:29:57,671 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 7
2025-09-03 00:29:57,671 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 3-6
2025-09-03 00:29:57,671 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 00:29:57,672 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_TRIGGER_NAME
2025-09-03 00:29:57,672 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_UPD
2025-09-03 00:29:57,672 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_DEL
2025-09-03 00:29:57,672 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 00:29:57,672 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 55, 'when_indent': 4, 'then_line_no': 55, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);', 'line_no': 56}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 57, 'when_indent': 4, 'then_line_no': 57, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);', 'line_no': 58}]}]
2025-09-03 00:29:57,672 - root - DEBUG - [OracleTriggerAnalyzer.py:1591] - Begin line: {'indent': 8, 'line': '        BEGIN', 'line_no': 9} 1
2025-09-03 00:29:57,672 - root - DEBUG - [OracleTriggerAnalyzer.py:1601] - End line: {'indent': 8, 'line': '        END;', 'line_no': 33} 25
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF INSERTING THEN', 'line_no': 8}
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 8
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 8 i: 53
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 22
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1276] - then_statements: 0 2
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        IF :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO THEN', 'line_no': 35}
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 37}
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        SET', 'line_no': 39}
2025-09-03 00:29:57,673 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        WHERE', 'line_no': 49}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}
2025-09-03 00:29:57,674 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 51}
2025-09-03 00:29:57,675 - root - DEBUG - [OracleTriggerAnalyzer.py:1286] - {'indent': 4, 'line': '    ELSIF UPDATING THEN', 'line_no': 34}
2025-09-03 00:29:57,675 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 4, 'line': '    ELSIF UPDATING THEN', 'line_no': 34}, {'indent': 8, 'line': '        IF :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO THEN', 'line_no': 35}, {'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}, {'indent': 8, 'line': '        END IF;', 'line_no': 37}, {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}, {'indent': 8, 'line': '        SET', 'line_no': 39}, {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}, {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}, {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}, {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}, {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}, {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}, {'indent': 8, 'line': '        WHERE', 'line_no': 49}, {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}]
2025-09-03 00:29:57,675 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 4, 'line': '    ELSIF UPDATING THEN', 'line_no': 34}, {'indent': 8, 'line': '        IF :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO THEN', 'line_no': 35}, {'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}, {'indent': 8, 'line': '        END IF;', 'line_no': 37}, {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}, {'indent': 8, 'line': '        SET', 'line_no': 39}, {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}, {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}, {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}, {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}, {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}, {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}, {'indent': 8, 'line': '        WHERE', 'line_no': 49}, {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}]
2025-09-03 00:29:57,675 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 4, 'line': '    ELSIF UPDATING THEN', 'line_no': 34}
2025-09-03 00:29:57,675 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 34 then_i: 34
2025-09-03 00:29:57,675 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 4, 'line': '    ELSIF UPDATING THEN', 'line_no': 34}, {'indent': 8, 'line': '        IF :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO THEN', 'line_no': 35}, {'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}, {'indent': 8, 'line': '        END IF;', 'line_no': 37}, {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}, {'indent': 8, 'line': '        SET', 'line_no': 39}, {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}, {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}, {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}, {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}, {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}, {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}, {'indent': 8, 'line': '        WHERE', 'line_no': 49}, {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}]
2025-09-03 00:29:57,675 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 4
2025-09-03 00:29:57,675 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}
2025-09-03 00:29:57,675 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 4, 'line': '    END IF;', 'line_no': 53}
2025-09-03 00:29:57,675 - root - DEBUG - [OracleTriggerAnalyzer.py:1297] - {'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 51}
2025-09-03 00:29:57,676 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 51}, {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}]
2025-09-03 00:29:57,676 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 51}, {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}]
2025-09-03 00:29:57,676 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 51}
2025-09-03 00:29:57,676 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 51 then_i: 51
2025-09-03 00:29:57,676 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 51}, {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}]
2025-09-03 00:29:57,676 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 4
2025-09-03 00:29:57,676 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 4, 'end_if_line_no': 53, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'indent': 12, 'line': '            INSERT INTO V_GLOBAL_CPY_PREFIXES (', 'line_no': 10}, {'indent': 16, 'line': '                GS1_COMP_PREFIX_NO,', 'line_no': 11}, {'indent': 16, 'line': '                GS1_ORG_COUNTRY_CD,', 'line_no': 12}, {'indent': 16, 'line': '                GCP_OWNER_COMP_CD,', 'line_no': 13}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 14}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 15}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 16}, {'indent': 16, 'line': '                SSCC_RELEVANCY_IND,', 'line_no': 17}, {'indent': 16, 'line': '                GLOBAL_CHANGE_ID,', 'line_no': 18}, {'indent': 16, 'line': '                REASON_FOR_CHANGE,', 'line_no': 19}, {'indent': 16, 'line': '                VALID_IND', 'line_no': 20}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 21}, {'indent': 16, 'line': '                :NEW.GS1_COMP_PREFIX_NO,', 'line_no': 22}, {'indent': 16, 'line': '                :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 23}, {'indent': 16, 'line': '                :NEW.GCP_OWNER_COMP_CD,', 'line_no': 24}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 25}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 26}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 27}, {'indent': 16, 'line': '                :NEW.SSCC_RELEVANCY_IND,', 'line_no': 28}, {'indent': 16, 'line': '                :NEW.GLOBAL_CHANGE_ID,', 'line_no': 29}, {'indent': 16, 'line': '                :NEW.REASON_FOR_CHANGE,', 'line_no': 30}, {'indent': 16, 'line': '                :NEW.VALID_IND', 'line_no': 31}, {'indent': 12, 'line': '            );', 'line_no': 32}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 34, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 34, 'then_statements': [{'indent': 8, 'line': '        IF :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO THEN', 'line_no': 35}, {'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}, {'indent': 8, 'line': '        END IF;', 'line_no': 37}, {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}, {'indent': 8, 'line': '        SET', 'line_no': 39}, {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}, {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}, {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}, {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}, {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}, {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}, {'indent': 8, 'line': '        WHERE', 'line_no': 49}, {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}]}, {'type': 'elif_statement', 'elif_line_no': 51, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 51, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}]}], 'else_statements': []}
2025-09-03 00:29:57,676 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'indent': 12, 'line': '            INSERT INTO V_GLOBAL_CPY_PREFIXES (', 'line_no': 10}, {'indent': 16, 'line': '                GS1_COMP_PREFIX_NO,', 'line_no': 11}, {'indent': 16, 'line': '                GS1_ORG_COUNTRY_CD,', 'line_no': 12}, {'indent': 16, 'line': '                GCP_OWNER_COMP_CD,', 'line_no': 13}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 14}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 15}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 16}, {'indent': 16, 'line': '                SSCC_RELEVANCY_IND,', 'line_no': 17}, {'indent': 16, 'line': '                GLOBAL_CHANGE_ID,', 'line_no': 18}, {'indent': 16, 'line': '                REASON_FOR_CHANGE,', 'line_no': 19}, {'indent': 16, 'line': '                VALID_IND', 'line_no': 20}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 21}, {'indent': 16, 'line': '                :NEW.GS1_COMP_PREFIX_NO,', 'line_no': 22}, {'indent': 16, 'line': '                :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 23}, {'indent': 16, 'line': '                :NEW.GCP_OWNER_COMP_CD,', 'line_no': 24}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 25}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 26}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 27}, {'indent': 16, 'line': '                :NEW.SSCC_RELEVANCY_IND,', 'line_no': 28}, {'indent': 16, 'line': '                :NEW.GLOBAL_CHANGE_ID,', 'line_no': 29}, {'indent': 16, 'line': '                :NEW.REASON_FOR_CHANGE,', 'line_no': 30}, {'indent': 16, 'line': '                :NEW.VALID_IND', 'line_no': 31}, {'indent': 12, 'line': '            );', 'line_no': 32}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}
2025-09-03 00:29:57,677 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            INSERT INTO V_GLOBAL_CPY_PREFIXES (', 'line_no': 10}
2025-09-03 00:29:57,677 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                GS1_COMP_PREFIX_NO,', 'line_no': 11}
2025-09-03 00:29:57,677 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                GS1_ORG_COUNTRY_CD,', 'line_no': 12}
2025-09-03 00:29:57,677 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                GCP_OWNER_COMP_CD,', 'line_no': 13}
2025-09-03 00:29:57,677 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 14}
2025-09-03 00:29:57,677 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 15}
2025-09-03 00:29:57,677 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 16}
2025-09-03 00:29:57,677 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SSCC_RELEVANCY_IND,', 'line_no': 17}
2025-09-03 00:29:57,677 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                GLOBAL_CHANGE_ID,', 'line_no': 18}
2025-09-03 00:29:57,677 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                REASON_FOR_CHANGE,', 'line_no': 19}
2025-09-03 00:29:57,678 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                VALID_IND', 'line_no': 20}
2025-09-03 00:29:57,679 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            ) VALUES (', 'line_no': 21}
2025-09-03 00:29:57,680 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.GS1_COMP_PREFIX_NO,', 'line_no': 22}
2025-09-03 00:29:57,680 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 23}
2025-09-03 00:29:57,680 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.GCP_OWNER_COMP_CD,', 'line_no': 24}
2025-09-03 00:29:57,680 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 25}
2025-09-03 00:29:57,680 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 26}
2025-09-03 00:29:57,680 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 27}
2025-09-03 00:29:57,680 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.SSCC_RELEVANCY_IND,', 'line_no': 28}
2025-09-03 00:29:57,680 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.GLOBAL_CHANGE_ID,', 'line_no': 29}
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.REASON_FOR_CHANGE,', 'line_no': 30}
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.VALID_IND', 'line_no': 31}
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            );', 'line_no': 32}
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO THEN', 'line_no': 35}
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 35
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 35 i: 37
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}]
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}
2025-09-03 00:29:57,681 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SET', 'line_no': 39}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 49}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);', 'line_no': 56}
2025-09-03 00:29:57,682 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);', 'line_no': 58}
2025-09-03 00:29:58,094 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 4, 'end_if_line_no': 53, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'indent': 12, 'line': '            INSERT INTO V_GLOBAL_CPY_PREFIXES (', 'line_no': 10}, {'indent': 16, 'line': '                GS1_COMP_PREFIX_NO,', 'line_no': 11}, {'indent': 16, 'line': '                GS1_ORG_COUNTRY_CD,', 'line_no': 12}, {'indent': 16, 'line': '                GCP_OWNER_COMP_CD,', 'line_no': 13}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 14}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 15}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 16}, {'indent': 16, 'line': '                SSCC_RELEVANCY_IND,', 'line_no': 17}, {'indent': 16, 'line': '                GLOBAL_CHANGE_ID,', 'line_no': 18}, {'indent': 16, 'line': '                REASON_FOR_CHANGE,', 'line_no': 19}, {'indent': 16, 'line': '                VALID_IND', 'line_no': 20}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 21}, {'indent': 16, 'line': '                :NEW.GS1_COMP_PREFIX_NO,', 'line_no': 22}, {'indent': 16, 'line': '                :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 23}, {'indent': 16, 'line': '                :NEW.GCP_OWNER_COMP_CD,', 'line_no': 24}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 25}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 26}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 27}, {'indent': 16, 'line': '                :NEW.SSCC_RELEVANCY_IND,', 'line_no': 28}, {'indent': 16, 'line': '                :NEW.GLOBAL_CHANGE_ID,', 'line_no': 29}, {'indent': 16, 'line': '                :NEW.REASON_FOR_CHANGE,', 'line_no': 30}, {'indent': 16, 'line': '                :NEW.VALID_IND', 'line_no': 31}, {'indent': 12, 'line': '            );', 'line_no': 32}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 34, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 34, 'then_statements': [{'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}, {'indent': 8, 'line': '        SET', 'line_no': 39}, {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}, {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}, {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}, {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}, {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}, {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}, {'indent': 8, 'line': '        WHERE', 'line_no': 49}, {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}]}, {'type': 'elif_statement', 'elif_line_no': 51, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 51, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}]}], 'else_statements': []}]
2025-09-03 00:29:58,094 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 00:29:58,111 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'indent': 12, 'line': '            INSERT INTO V_GLOBAL_CPY_PREFIXES (', 'line_no': 10}, {'indent': 16, 'line': '                GS1_COMP_PREFIX_NO,', 'line_no': 11}, {'indent': 16, 'line': '                GS1_ORG_COUNTRY_CD,', 'line_no': 12}, {'indent': 16, 'line': '                GCP_OWNER_COMP_CD,', 'line_no': 13}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 14}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 15}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 16}, {'indent': 16, 'line': '                SSCC_RELEVANCY_IND,', 'line_no': 17}, {'indent': 16, 'line': '                GLOBAL_CHANGE_ID,', 'line_no': 18}, {'indent': 16, 'line': '                REASON_FOR_CHANGE,', 'line_no': 19}, {'indent': 16, 'line': '                VALID_IND', 'line_no': 20}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 21}, {'indent': 16, 'line': '                :NEW.GS1_COMP_PREFIX_NO,', 'line_no': 22}, {'indent': 16, 'line': '                :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 23}, {'indent': 16, 'line': '                :NEW.GCP_OWNER_COMP_CD,', 'line_no': 24}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 25}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 26}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 27}, {'indent': 16, 'line': '                :NEW.SSCC_RELEVANCY_IND,', 'line_no': 28}, {'indent': 16, 'line': '                :NEW.GLOBAL_CHANGE_ID,', 'line_no': 29}, {'indent': 16, 'line': '                :NEW.REASON_FOR_CHANGE,', 'line_no': 30}, {'indent': 16, 'line': '                :NEW.VALID_IND', 'line_no': 31}, {'indent': 12, 'line': '            );', 'line_no': 32}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}]
2025-09-03 00:29:58,111 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 00:29:58,127 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            INSERT INTO V_GLOBAL_CPY_PREFIXES (', 'line_no': 10}, {'indent': 16, 'line': '                GS1_COMP_PREFIX_NO,', 'line_no': 11}, {'indent': 16, 'line': '                GS1_ORG_COUNTRY_CD,', 'line_no': 12}, {'indent': 16, 'line': '                GCP_OWNER_COMP_CD,', 'line_no': 13}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 14}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 15}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 16}, {'indent': 16, 'line': '                SSCC_RELEVANCY_IND,', 'line_no': 17}, {'indent': 16, 'line': '                GLOBAL_CHANGE_ID,', 'line_no': 18}, {'indent': 16, 'line': '                REASON_FOR_CHANGE,', 'line_no': 19}, {'indent': 16, 'line': '                VALID_IND', 'line_no': 20}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 21}, {'indent': 16, 'line': '                :NEW.GS1_COMP_PREFIX_NO,', 'line_no': 22}, {'indent': 16, 'line': '                :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 23}, {'indent': 16, 'line': '                :NEW.GCP_OWNER_COMP_CD,', 'line_no': 24}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 25}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 26}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 27}, {'indent': 16, 'line': '                :NEW.SSCC_RELEVANCY_IND,', 'line_no': 28}, {'indent': 16, 'line': '                :NEW.GLOBAL_CHANGE_ID,', 'line_no': 29}, {'indent': 16, 'line': '                :NEW.REASON_FOR_CHANGE,', 'line_no': 30}, {'indent': 16, 'line': '                :NEW.VALID_IND', 'line_no': 31}, {'indent': 12, 'line': '            );', 'line_no': 32}]
2025-09-03 00:29:58,127 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 00:29:58,127 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            INSERT INTO V_GLOBAL_CPY_PREFIXES (', 'line_no': 10}
2025-09-03 00:29:58,128 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 00:29:58,128 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                GS1_COMP_PREFIX_NO,', 'line_no': 11}
2025-09-03 00:29:58,128 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 00:29:58,128 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                GS1_ORG_COUNTRY_CD,', 'line_no': 12}
2025-09-03 00:29:58,128 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 00:29:58,128 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                GCP_OWNER_COMP_CD,', 'line_no': 13}
2025-09-03 00:29:58,128 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 00:29:58,128 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 14}
2025-09-03 00:29:58,128 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 00:29:58,128 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 15}
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 16}
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SSCC_RELEVANCY_IND,', 'line_no': 17}
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                GLOBAL_CHANGE_ID,', 'line_no': 18}
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                REASON_FOR_CHANGE,', 'line_no': 19}
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                VALID_IND', 'line_no': 20}
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            ) VALUES (', 'line_no': 21}
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 00:29:58,129 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                :NEW.GS1_COMP_PREFIX_NO,', 'line_no': 22}
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 23}
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                :NEW.GCP_OWNER_COMP_CD,', 'line_no': 24}
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 25}
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 26}
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 17
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 27}
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 18
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                :NEW.SSCC_RELEVANCY_IND,', 'line_no': 28}
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 19
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                :NEW.GLOBAL_CHANGE_ID,', 'line_no': 29}
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 20
2025-09-03 00:29:58,130 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                :NEW.REASON_FOR_CHANGE,', 'line_no': 30}
2025-09-03 00:29:58,131 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 21
2025-09-03 00:29:58,131 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                :NEW.VALID_IND', 'line_no': 31}
2025-09-03 00:29:58,131 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 22
2025-09-03 00:29:58,131 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            );', 'line_no': 32}
2025-09-03 00:29:58,145 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}, {'indent': 8, 'line': '        SET', 'line_no': 39}, {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}, {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}, {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}, {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}, {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}, {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}, {'indent': 8, 'line': '        WHERE', 'line_no': 49}, {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}]
2025-09-03 00:29:58,145 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 00:29:58,160 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}]
2025-09-03 00:29:58,160 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 00:29:58,161 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}
2025-09-03 00:29:58,174 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 00:29:58,174 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SET', 'line_no': 39}
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 00:29:58,175 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}
2025-09-03 00:29:58,176 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 00:29:58,176 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}
2025-09-03 00:29:58,176 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 00:29:58,176 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}
2025-09-03 00:29:58,176 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 00:29:58,176 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}
2025-09-03 00:29:58,176 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 00:29:58,176 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 49}
2025-09-03 00:29:58,176 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 00:29:58,176 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}
2025-09-03 00:29:58,197 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}]
2025-09-03 00:29:58,197 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 00:29:58,197 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}
2025-09-03 00:29:58,221 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 00:29:58,241 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);', 'line_no': 56}]
2025-09-03 00:29:58,241 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 00:29:58,241 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);', 'line_no': 56}
2025-09-03 00:29:58,241 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 00:29:58,241 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);
2025-09-03 00:29:58,241 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 56
2025-09-03 00:29:58,241 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 56
2025-09-03 00:29:58,241 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);
2025-09-03 00:29:58,241 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,266 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);', 'line_no': 58}]
2025-09-03 00:29:58,267 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 00:29:58,267 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);', 'line_no': 58}
2025-09-03 00:29:58,267 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 00:29:58,267 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);
2025-09-03 00:29:58,267 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 58
2025-09-03 00:29:58,267 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 58
2025-09-03 00:29:58,267 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);
2025-09-03 00:29:58,267 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,268 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 4, 'end_if_line_no': 53, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'indent': 12, 'line': '            INSERT INTO V_GLOBAL_CPY_PREFIXES (', 'line_no': 10}, {'indent': 16, 'line': '                GS1_COMP_PREFIX_NO,', 'line_no': 11}, {'indent': 16, 'line': '                GS1_ORG_COUNTRY_CD,', 'line_no': 12}, {'indent': 16, 'line': '                GCP_OWNER_COMP_CD,', 'line_no': 13}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 14}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 15}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 16}, {'indent': 16, 'line': '                SSCC_RELEVANCY_IND,', 'line_no': 17}, {'indent': 16, 'line': '                GLOBAL_CHANGE_ID,', 'line_no': 18}, {'indent': 16, 'line': '                REASON_FOR_CHANGE,', 'line_no': 19}, {'indent': 16, 'line': '                VALID_IND', 'line_no': 20}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 21}, {'indent': 16, 'line': '                :NEW.GS1_COMP_PREFIX_NO,', 'line_no': 22}, {'indent': 16, 'line': '                :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 23}, {'indent': 16, 'line': '                :NEW.GCP_OWNER_COMP_CD,', 'line_no': 24}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 25}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 26}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 27}, {'indent': 16, 'line': '                :NEW.SSCC_RELEVANCY_IND,', 'line_no': 28}, {'indent': 16, 'line': '                :NEW.GLOBAL_CHANGE_ID,', 'line_no': 29}, {'indent': 16, 'line': '                :NEW.REASON_FOR_CHANGE,', 'line_no': 30}, {'indent': 16, 'line': '                :NEW.VALID_IND', 'line_no': 31}, {'indent': 12, 'line': '            );', 'line_no': 32}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 34, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 34, 'then_statements': [{'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}, {'indent': 8, 'line': '        SET', 'line_no': 39}, {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}, {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}, {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}, {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}, {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}, {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}, {'indent': 8, 'line': '        WHERE', 'line_no': 49}, {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}]}, {'type': 'elif_statement', 'elif_line_no': 51, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 51, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}]}], 'else_statements': []}]
2025-09-03 00:29:58,268 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 00:29:58,269 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'indent': 12, 'line': '            INSERT INTO V_GLOBAL_CPY_PREFIXES (', 'line_no': 10}, {'indent': 16, 'line': '                GS1_COMP_PREFIX_NO,', 'line_no': 11}, {'indent': 16, 'line': '                GS1_ORG_COUNTRY_CD,', 'line_no': 12}, {'indent': 16, 'line': '                GCP_OWNER_COMP_CD,', 'line_no': 13}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 14}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 15}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 16}, {'indent': 16, 'line': '                SSCC_RELEVANCY_IND,', 'line_no': 17}, {'indent': 16, 'line': '                GLOBAL_CHANGE_ID,', 'line_no': 18}, {'indent': 16, 'line': '                REASON_FOR_CHANGE,', 'line_no': 19}, {'indent': 16, 'line': '                VALID_IND', 'line_no': 20}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 21}, {'indent': 16, 'line': '                :NEW.GS1_COMP_PREFIX_NO,', 'line_no': 22}, {'indent': 16, 'line': '                :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 23}, {'indent': 16, 'line': '                :NEW.GCP_OWNER_COMP_CD,', 'line_no': 24}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 25}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 26}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 27}, {'indent': 16, 'line': '                :NEW.SSCC_RELEVANCY_IND,', 'line_no': 28}, {'indent': 16, 'line': '                :NEW.GLOBAL_CHANGE_ID,', 'line_no': 29}, {'indent': 16, 'line': '                :NEW.REASON_FOR_CHANGE,', 'line_no': 30}, {'indent': 16, 'line': '                :NEW.VALID_IND', 'line_no': 31}, {'indent': 12, 'line': '            );', 'line_no': 32}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}]
2025-09-03 00:29:58,269 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 00:29:58,269 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            INSERT INTO V_GLOBAL_CPY_PREFIXES (', 'line_no': 10}, {'indent': 16, 'line': '                GS1_COMP_PREFIX_NO,', 'line_no': 11}, {'indent': 16, 'line': '                GS1_ORG_COUNTRY_CD,', 'line_no': 12}, {'indent': 16, 'line': '                GCP_OWNER_COMP_CD,', 'line_no': 13}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 14}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 15}, {'indent': 16, 'line': '                GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 16}, {'indent': 16, 'line': '                SSCC_RELEVANCY_IND,', 'line_no': 17}, {'indent': 16, 'line': '                GLOBAL_CHANGE_ID,', 'line_no': 18}, {'indent': 16, 'line': '                REASON_FOR_CHANGE,', 'line_no': 19}, {'indent': 16, 'line': '                VALID_IND', 'line_no': 20}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 21}, {'indent': 16, 'line': '                :NEW.GS1_COMP_PREFIX_NO,', 'line_no': 22}, {'indent': 16, 'line': '                :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 23}, {'indent': 16, 'line': '                :NEW.GCP_OWNER_COMP_CD,', 'line_no': 24}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 25}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 26}, {'indent': 16, 'line': '                :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 27}, {'indent': 16, 'line': '                :NEW.SSCC_RELEVANCY_IND,', 'line_no': 28}, {'indent': 16, 'line': '                :NEW.GLOBAL_CHANGE_ID,', 'line_no': 29}, {'indent': 16, 'line': '                :NEW.REASON_FOR_CHANGE,', 'line_no': 30}, {'indent': 16, 'line': '                :NEW.VALID_IND', 'line_no': 31}, {'indent': 12, 'line': '            );', 'line_no': 32}]
2025-09-03 00:29:58,270 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 00:29:58,270 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             INSERT INTO V_GLOBAL_CPY_PREFIXES ( || 10 || 12
2025-09-03 00:29:58,270 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 10 || insert_statement || INSERT
2025-09-03 00:29:58,270 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 10 || insert_statement
2025-09-03 00:29:58,270 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 10 || insert_statement
2025-09-03 00:29:58,270 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 32 || insert_statement
2025-09-03 00:29:58,270 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );
2025-09-03 00:29:58,271 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        UPDATE V_GLOBAL_CPY_PREFIXES', 'line_no': 38}, {'indent': 8, 'line': '        SET', 'line_no': 39}, {'indent': 12, 'line': '            GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD,', 'line_no': 40}, {'indent': 12, 'line': '            GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD,', 'line_no': 41}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD,', 'line_no': 42}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD,', 'line_no': 43}, {'indent': 12, 'line': '            GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD,', 'line_no': 44}, {'indent': 12, 'line': '            SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND,', 'line_no': 45}, {'indent': 12, 'line': '            GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID,', 'line_no': 46}, {'indent': 12, 'line': '            REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,', 'line_no': 47}, {'indent': 12, 'line': '            VALID_IND = :NEW.VALID_IND', 'line_no': 48}, {'indent': 8, 'line': '        WHERE', 'line_no': 49}, {'indent': 12, 'line': '            GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'line_no': 50}]
2025-09-03 00:29:58,271 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 00:29:58,271 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_UPD;', 'line_no': 36}]
2025-09-03 00:29:58,271 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 00:29:58,271 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_UPD; || 36 || 12
2025-09-03 00:29:58,271 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 36 || raise_statement || RAISE
2025-09-03 00:29:58,271 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 36 || raise_statement
2025-09-03 00:29:58,271 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 36 || raise_statement
2025-09-03 00:29:58,271 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 36 || raise_statement
2025-09-03 00:29:58,271 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         UPDATE V_GLOBAL_CPY_PREFIXES || 38 || 8
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 38 || update_statement || UPDATE
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 38 || update_statement
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 38 || update_statement
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 50 || update_statement
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 52}]
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         RAISE ERR_DEL; || 52 || 8
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 52 || raise_statement || RAISE
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 52 || raise_statement
2025-09-03 00:29:58,272 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 52 || raise_statement
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 52 || raise_statement
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 7, 'begin_indent': 0, 'begin_end_statements': [{'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 4, 'end_if_line_no': 53, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_line_no': 10, 'statement_indent': 12}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 34, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 34, 'then_statements': [{'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 36, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_line_no': 38, 'statement_indent': 8}]}, {'type': 'elif_statement', 'elif_line_no': 51, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 51, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 52, 'statement_indent': 8}]}], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 55, 'when_indent': 4, 'then_line_no': 55, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 57, 'when_indent': 4, 'then_line_no': 57, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}], 'exception_line_no': 54, 'end_line_no': 59}
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 4, 'end_if_line_no': 53, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_line_no': 10, 'statement_indent': 12}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 34, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 34, 'then_statements': [{'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 36, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_line_no': 38, 'statement_indent': 8}]}, {'type': 'elif_statement', 'elif_line_no': 51, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 51, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 52, 'statement_indent': 8}]}], 'else_statements': []}
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_line_no': 10, 'statement_indent': 12}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_line_no': 10, 'statement_indent': 12}
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 34, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 34, 'then_statements': [{'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 36, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_line_no': 38, 'statement_indent': 8}]}
2025-09-03 00:29:58,273 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 36, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,274 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 36, 'statement_indent': 12}
2025-09-03 00:29:58,274 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_line_no': 38, 'statement_indent': 8}
2025-09-03 00:29:58,274 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 51, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 51, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 52, 'statement_indent': 8}]}
2025-09-03 00:29:58,274 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 52, 'statement_indent': 8}
2025-09-03 00:29:58,274 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 55, 'when_indent': 4, 'then_line_no': 55, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,274 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,274 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 57, 'when_indent': 4, 'then_line_no': 57, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,274 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,274 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list []
2025-09-03 00:29:58,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:     filename                                           line  line_no  indent
0    zzz.sql            INSERT INTO V_GLOBAL_CPY_PREFIXES (       10      12
1    zzz.sql                            GS1_COMP_PREFIX_NO,       11      16
2    zzz.sql                            GS1_ORG_COUNTRY_CD,       12      16
3    zzz.sql                             GCP_OWNER_COMP_CD,       13      16
4    zzz.sql                       GTIN_ALLOC_TYPE_PRIM_CD,       14      16
..       ...                                            ...      ...     ...
147  zzz.sql    REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE,       47      12
148  zzz.sql                     VALID_IND = :NEW.VALID_IND       48      12
149  zzz.sql                                          WHERE       49       8
150  zzz.sql  GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;       50      12
151  zzz.sql                                 RAISE ERR_DEL;       52       8

[152 rows x 4 columns]
2025-09-03 00:29:58,292 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 00:29:58,292 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.6236112117767334 seconds
2025-09-03 00:29:58,292 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 00:29:58,292 - root - DEBUG - [common.py:105] - File details: zzz.sql
2025-09-03 00:29:58,292 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 00:29:58,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 1 vars, 0 consts, 2 excs, 0 comments
2025-09-03 00:29:58,293 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 00:29:58,293 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 00:29:58,293 - root - DEBUG - [common.py:105] - File details in metadata: zzz.sql (2345 bytes)
2025-09-03 00:29:58,293 - root - DEBUG - [common.py:105] - Analysis statistics: 1 vars, 0 consts, 2 excs, 0 comments
2025-09-03 00:29:58,293 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\zzz_analysis.json
2025-09-03 00:29:58,294 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\zzz_analysis.json
2025-09-03 00:29:58,294 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger zzz.sql ===
2025-09-03 00:29:58,294 - root - DEBUG - [common.py:105] - âœ“ Created zzz_analysis.json
2025-09-03 00:29:58,294 - root - INFO - [common.py:110] - === File processing complete ===
2025-09-03 00:29:58,294 - root - INFO - [common.py:110] - Successfully processed: 1 files
2025-09-03 00:29:58,295 - root - INFO - [common.py:110] - === Oracle triggers to JSON conversion complete ===
2025-09-03 00:29:58,295 - root - DEBUG - [common.py:105] - Phase 1 complete: Oracle SQL files converted to JSON analysis structure with file metadata
2025-09-03 00:29:58,295 - root - INFO - [common.py:110] - âœ“ JSON conversion complete! (Duration: 0.63 seconds)
2025-09-03 00:29:58,295 - root - DEBUG - [common.py:105] - Step 1 completed in 0.63 seconds
2025-09-03 00:29:58,295 - root - INFO - [common.py:110] - Step 2: Converting JSON analysis back to formatted SQL...
2025-09-03 00:29:58,296 - root - DEBUG - [common.py:105] - Starting Step 2: JSON analysis â†’ formatted Oracle SQL
2025-09-03 00:29:58,296 - root - INFO - [common.py:110] - === Starting JSON analysis to formatted Oracle SQL conversion ===
2025-09-03 00:29:58,296 - root - INFO - [common.py:110] - === Starting file processing ===
2025-09-03 00:29:58,296 - root - INFO - [common.py:110] - Source directory: 'files/format_json'
2025-09-03 00:29:58,296 - root - INFO - [common.py:110] - Target directory: 'files/format_sql'
2025-09-03 00:29:58,297 - root - INFO - [common.py:110] - File pattern: '_analysis.json'
2025-09-03 00:29:58,297 - root - INFO - [common.py:110] - Output suffix: '.sql'
2025-09-03 00:29:58,297 - root - DEBUG - [common.py:105] - Ensuring target directory exists...
2025-09-03 00:29:58,297 - root - DEBUG - [common.py:105] - Directory already exists: files/format_sql
2025-09-03 00:29:58,297 - root - DEBUG - [common.py:105] - Found 1 files in source directory
2025-09-03 00:29:58,297 - root - DEBUG - [common.py:105] - Files matching pattern '_analysis.json': ['zzz_analysis.json']
2025-09-03 00:29:58,298 - root - DEBUG - [common.py:105] - === Processing file 1/1: zzz_analysis.json ===
2025-09-03 00:29:58,298 - root - DEBUG - [common.py:105] - Source path: files/format_json\zzz_analysis.json
2025-09-03 00:29:58,298 - root - DEBUG - [common.py:105] - Output path: files/format_sql\zzz_analysis.sql
2025-09-03 00:29:58,298 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger zzz_analysis.json ===
2025-09-03 00:29:58,298 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\zzz_analysis.json
2025-09-03 00:29:58,299 - root - DEBUG - [main.py:363] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 00:29:58,299 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 00:29:58,299 - root - DEBUG - [common.py:105] - JSON contains 14 total statements
2025-09-03 00:29:58,299 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 00:29:58,299 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 00:29:58,300 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 00:29:58,320 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 00:29:58,320 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 00:29:58,335 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 00:29:58,335 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 00:29:58,335 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 00:29:58,335 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 00:29:58,335 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 00:29:58,335 - root - DEBUG - [common.py:105] - Analysis contains 1 variables, 0 constants, 2 exceptions
2025-09-03 00:29:58,336 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 00:29:58,336 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:349] - Rendering 1 variables
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:377] - Rendering 2 exceptions
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 00:29:58,336 - root - DEBUG - [common.py:105] - Generated 4 lines of declarations
2025-09-03 00:29:58,336 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 00:29:58,336 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 4, 'end_if_line_no': 53, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_line_no': 10, 'statement_indent': 12}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 34, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 34, 'then_statements': [{'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 36, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_line_no': 38, 'statement_indent': 8}]}, {'type': 'elif_statement', 'elif_line_no': 51, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 51, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 52, 'statement_indent': 8}]}], 'else_statements': []}
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_line_no': 10, 'statement_indent': 12}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 33}
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: begin_end
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_line_no': 10, 'statement_indent': 12}
2025-09-03 00:29:58,336 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 8, 'end_if_line_no': 37, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 36, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 36, 'statement_indent': 12}
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_line_no': 38, 'statement_indent': 8}
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 52, 'statement_indent': 8}
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:456] - Processing 2 exception handlers
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 00:29:58,337 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 00:29:58,337 - root - DEBUG - [common.py:105] - Generated 17 lines in main execution block
2025-09-03 00:29:58,337 - root - DEBUG - [common.py:105] - Main block rendering took 0.001s
2025-09-03 00:29:58,337 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 00:29:58,337 - root - DEBUG - [common.py:105] - Final SQL contains 21 lines, 1449 characters
2025-09-03 00:29:58,337 - root - DEBUG - [common.py:105] - Oracle SQL generation: 21 lines generated in 0.002s
2025-09-03 00:29:58,338 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 00:29:58,338 - root - DEBUG - [common.py:105] - Rendered SQL length: 1449 characters
2025-09-03 00:29:58,338 - root - DEBUG - [common.py:105] - SQL rendering took: 0.002 seconds
2025-09-03 00:29:58,340 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\zzz_analysis.sql
2025-09-03 00:29:58,341 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\zzz_analysis.sql
2025-09-03 00:29:58,341 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger zzz_analysis.json ===
2025-09-03 00:29:58,342 - root - DEBUG - [common.py:105] - âœ“ Created zzz_analysis.sql
2025-09-03 00:29:58,342 - root - INFO - [common.py:110] - === File processing complete ===
2025-09-03 00:29:58,342 - root - INFO - [common.py:110] - Successfully processed: 1 files
2025-09-03 00:29:58,342 - root - INFO - [common.py:110] - === Starting comparison with original files ===
2025-09-03 00:29:58,343 - root - DEBUG - [common.py:105] - Comparison complete for zzz.sql: 61 original, 1 generated lines
2025-09-03 00:29:58,343 - root - INFO - [common.py:110] - === Conversion Statistics ===
2025-09-03 00:29:58,343 - root - INFO - [common.py:110] - Total files processed: 1
2025-09-03 00:29:58,343 - root - INFO - [common.py:110] - Successful conversions: 0
2025-09-03 00:29:58,344 - root - INFO - [common.py:110] - Failed conversions: 0
2025-09-03 00:29:58,344 - root - INFO - [common.py:110] - Files with validation warnings: 1
2025-09-03 00:29:58,344 - root - INFO - [common.py:110] - === Comparison Results ===
2025-09-03 00:29:58,344 - root - WARNING - [common.py:115] - File zzz.sql: Significant line count difference: 98.3%
2025-09-03 00:29:58,344 - root - INFO - [common.py:110] - === JSON analysis to formatted Oracle SQL conversion complete ===
2025-09-03 00:29:58,344 - root - INFO - [common.py:110] - âœ“ SQL formatting complete! (Duration: 0.05 seconds)
2025-09-03 00:29:58,345 - root - DEBUG - [common.py:105] - Step 2 completed in 0.05 seconds
2025-09-03 00:29:58,345 - root - INFO - [common.py:110] - Step 3: Cleaning JSON files...
2025-09-03 00:29:58,345 - root - DEBUG - [common.py:105] - Starting Step 3: Cleaning and optimizing JSON files
2025-09-03 00:29:58,345 - root - DEBUG - [common.py:105] - Starting JSON cleaning process in directory: files/format_json
2025-09-03 00:29:58,345 - root - DEBUG - [common.py:105] - Found 1 JSON files to clean
2025-09-03 00:29:58,345 - root - DEBUG - [common.py:105] - Processing file: zzz_analysis.json
2025-09-03 00:29:58,346 - root - DEBUG - [common.py:105] - Successfully loaded JSON data (4354 bytes)
2025-09-03 00:29:58,346 - root - DEBUG - [common.py:105] - Cleaned JSON data in 0.000 seconds
2025-09-03 00:29:58,346 - root - DEBUG - [common.py:358] - âœ… Cleaned zzz_analysis.json
2025-09-03 00:29:58,346 - root - INFO - [common.py:110] - JSON cleaning complete: 1 files cleaned, 0 errors
2025-09-03 00:29:58,347 - root - INFO - [common.py:110] - âœ“ JSON cleaning complete! (Duration: 0.00 seconds)
2025-09-03 00:29:58,347 - root - DEBUG - [common.py:105] - Step 3 completed in 0.00 seconds
2025-09-03 00:29:58,347 - root - INFO - [common.py:110] - Step 5: Converting JSON to PL/JSON...
2025-09-03 00:29:58,347 - root - DEBUG - [common.py:105] - Starting Step 5: JSON â†’ PostgreSQL-compatible PL/JSON
2025-09-03 00:29:58,348 - root - DEBUG - [common.py:105] - processing zzz_analysis.json
2025-09-03 00:29:58,348 - root - DEBUG - [common.py:105] - === Starting to_sql() conversion process ===
2025-09-03 00:29:58,348 - root - DEBUG - [common.py:105] - Creating deep copies of JSON data for each operation type
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] - JSON data structure:
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] -   - Main blocks: 4 items
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] -   - Declarations: 1 variables, 0 constants, 2 exceptions
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] - === Processing INSERT operations ===
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'INSERTING'
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,350 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': True, 'on_update': False, 'on_delete': False} on_insert INSERTING
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_insert keywords
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] - Starting condition modification: ' INSERTING '
2025-09-03 00:29:58,350 - root - DEBUG - [common.py:105] - Stripped condition: 'INSERTING'
2025-09-03 00:29:58,351 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': 'INSERTING' â†’ ''
2025-09-03 00:29:58,352 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,352 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'UPDATING'
2025-09-03 00:29:58,352 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,352 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,352 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-03 00:29:58,352 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,352 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': True, 'on_delete': False} on_insert UPDATING
2025-09-03 00:29:58,352 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-03 00:29:58,352 - root - DEBUG - [common.py:105] - Starting condition modification: 'UPDATING'
2025-09-03 00:29:58,352 - root - DEBUG - [common.py:105] - Stripped condition: 'UPDATING'
2025-09-03 00:29:58,352 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': 'UPDATING' â†’ ''
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'DELETING'
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-03 00:29:58,353 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': False, 'on_delete': True} on_insert DELETING
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] - Starting condition modification: 'DELETING'
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] - Stripped condition: 'DELETING'
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] - Removed keyword 'DELETING': 'DELETING' â†’ ''
2025-09-03 00:29:58,353 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - === Processing UPDATE operations ===
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'INSERTING'
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,354 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': True, 'on_update': False, 'on_delete': False} on_update INSERTING
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - Starting condition modification: ' INSERTING '
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - Stripped condition: 'INSERTING'
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': 'INSERTING' â†’ ''
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'UPDATING'
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,354 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': True, 'on_delete': False} on_update UPDATING
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_update keywords
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - Starting condition modification: 'UPDATING'
2025-09-03 00:29:58,354 - root - DEBUG - [common.py:105] - Stripped condition: 'UPDATING'
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': 'UPDATING' â†’ ''
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO'
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,355 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': False, 'on_delete': False} on_update :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO '
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO'
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO'
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'DELETING'
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,355 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-03 00:29:58,356 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': False, 'on_delete': True} on_update DELETING
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - Starting condition modification: 'DELETING'
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - Stripped condition: 'DELETING'
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - Removed keyword 'DELETING': 'DELETING' â†’ ''
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - Starting condition modification: 'TRUE'
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - Stripped condition: 'TRUE'
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - Final modified condition: 'TRUE'
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - === Processing DELETE operations ===
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'INSERTING'
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,356 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,356 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': True, 'on_update': False, 'on_delete': False} on_delete INSERTING
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_delete
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - Starting condition modification: ' INSERTING '
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - Stripped condition: 'INSERTING'
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': 'INSERTING' â†’ ''
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'UPDATING'
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,357 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': True, 'on_delete': False} on_delete UPDATING
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_delete
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - Starting condition modification: 'UPDATING'
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - Stripped condition: 'UPDATING'
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': 'UPDATING' â†’ ''
2025-09-03 00:29:58,357 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,358 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'DELETING'
2025-09-03 00:29:58,358 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,358 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,358 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,358 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-03 00:29:58,358 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': False, 'on_delete': True} on_delete DELETING
2025-09-03 00:29:58,358 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_delete keywords
2025-09-03 00:29:58,359 - root - DEBUG - [common.py:105] - Starting condition modification: 'DELETING'
2025-09-03 00:29:58,359 - root - DEBUG - [common.py:105] - Stripped condition: 'DELETING'
2025-09-03 00:29:58,359 - root - DEBUG - [common.py:105] - Removed keyword 'DELETING': 'DELETING' â†’ ''
2025-09-03 00:29:58,359 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,359 - root - DEBUG - [common.py:105] - Starting condition modification: 'TRUE'
2025-09-03 00:29:58,359 - root - DEBUG - [common.py:105] - Stripped condition: 'TRUE'
2025-09-03 00:29:58,359 - root - DEBUG - [common.py:105] - Final modified condition: 'TRUE'
2025-09-03 00:29:58,359 - root - DEBUG - [common.py:105] - Building final converted structure
2025-09-03 00:29:58,360 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'begin_end', 'begin_indent': 0, 'begin_end_statements': [{'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'begin_end', 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}], 'exception_handlers': []}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}]}
2025-09-03 00:29:58,360 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'begin_end', 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}], 'exception_handlers': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,360 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'begin_end', 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}], 'exception_handlers': []}
2025-09-03 00:29:58,360 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}
2025-09-03 00:29:58,360 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,360 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,360 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,360 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,361 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'begin_end', 'begin_indent': 0, 'begin_end_statements': [{'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'condition': ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO', 'type': 'if_else', 'if_indent': 8, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}]}
2025-09-03 00:29:58,361 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'condition': ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO', 'type': 'if_else', 'if_indent': 8, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,361 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'condition': ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO', 'type': 'if_else', 'if_indent': 8, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,361 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}
2025-09-03 00:29:58,361 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_indent': 8}
2025-09-03 00:29:58,361 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,361 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,361 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,361 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,362 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'begin_end', 'begin_indent': 0, 'begin_end_statements': [{'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}]}
2025-09-03 00:29:58,362 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,362 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_indent': 8}
2025-09-03 00:29:58,362 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,362 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,362 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,362 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,362 - root - DEBUG - [common.py:105] - Converting to JSON string
2025-09-03 00:29:58,362 - root - DEBUG - [common.py:105] - Generated JSON string with 10356 characters
2025-09-03 00:29:58,363 - root - DEBUG - [common.py:105] - === to_sql() conversion complete ===
2025-09-03 00:29:58,363 - root - DEBUG - [common.py:105] - === Starting to_sql() conversion process ===
2025-09-03 00:29:58,363 - root - DEBUG - [common.py:105] - Creating deep copies of JSON data for each operation type
2025-09-03 00:29:58,363 - root - DEBUG - [common.py:105] - JSON data structure:
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] -   - Main blocks: 4 items
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] -   - Declarations: 1 variables, 0 constants, 2 exceptions
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] - === Processing INSERT operations ===
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'INSERTING'
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,364 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': True, 'on_update': False, 'on_delete': False} on_insert INSERTING
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_insert keywords
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] - Starting condition modification: ' INSERTING '
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] - Stripped condition: 'INSERTING'
2025-09-03 00:29:58,364 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': 'INSERTING' â†’ ''
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'UPDATING'
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,365 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': True, 'on_delete': False} on_insert UPDATING
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] - Starting condition modification: 'UPDATING'
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] - Stripped condition: 'UPDATING'
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': 'UPDATING' â†’ ''
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,365 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'DELETING'
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-03 00:29:58,366 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': False, 'on_delete': True} on_insert DELETING
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] - Starting condition modification: 'DELETING'
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] - Stripped condition: 'DELETING'
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] - Removed keyword 'DELETING': 'DELETING' â†’ ''
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] - === Processing UPDATE operations ===
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'INSERTING'
2025-09-03 00:29:58,366 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,367 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-03 00:29:58,367 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,367 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,367 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': True, 'on_update': False, 'on_delete': False} on_update INSERTING
2025-09-03 00:29:58,367 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-03 00:29:58,367 - root - DEBUG - [common.py:105] - Starting condition modification: ' INSERTING '
2025-09-03 00:29:58,367 - root - DEBUG - [common.py:105] - Stripped condition: 'INSERTING'
2025-09-03 00:29:58,367 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': 'INSERTING' â†’ ''
2025-09-03 00:29:58,367 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,367 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'UPDATING'
2025-09-03 00:29:58,367 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,368 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,368 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-03 00:29:58,368 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,368 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': True, 'on_delete': False} on_update UPDATING
2025-09-03 00:29:58,368 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_update keywords
2025-09-03 00:29:58,368 - root - DEBUG - [common.py:105] - Starting condition modification: 'UPDATING'
2025-09-03 00:29:58,368 - root - DEBUG - [common.py:105] - Stripped condition: 'UPDATING'
2025-09-03 00:29:58,368 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': 'UPDATING' â†’ ''
2025-09-03 00:29:58,369 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,369 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO'
2025-09-03 00:29:58,369 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,369 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,369 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,369 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,369 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': False, 'on_delete': False} on_update :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO
2025-09-03 00:29:58,370 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-03 00:29:58,370 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO '
2025-09-03 00:29:58,370 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO'
2025-09-03 00:29:58,370 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO'
2025-09-03 00:29:58,370 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'DELETING'
2025-09-03 00:29:58,370 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,370 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,370 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,370 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-03 00:29:58,370 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': False, 'on_delete': True} on_update DELETING
2025-09-03 00:29:58,371 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-03 00:29:58,371 - root - DEBUG - [common.py:105] - Starting condition modification: 'DELETING'
2025-09-03 00:29:58,371 - root - DEBUG - [common.py:105] - Stripped condition: 'DELETING'
2025-09-03 00:29:58,371 - root - DEBUG - [common.py:105] - Removed keyword 'DELETING': 'DELETING' â†’ ''
2025-09-03 00:29:58,371 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,371 - root - DEBUG - [common.py:105] - Starting condition modification: 'TRUE'
2025-09-03 00:29:58,371 - root - DEBUG - [common.py:105] - Stripped condition: 'TRUE'
2025-09-03 00:29:58,371 - root - DEBUG - [common.py:105] - Final modified condition: 'TRUE'
2025-09-03 00:29:58,371 - root - DEBUG - [common.py:105] - === Processing DELETE operations ===
2025-09-03 00:29:58,371 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'INSERTING'
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,372 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': True, 'on_update': False, 'on_delete': False} on_delete INSERTING
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_delete
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Starting condition modification: ' INSERTING '
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Stripped condition: 'INSERTING'
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': 'INSERTING' â†’ ''
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'UPDATING'
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-03 00:29:58,372 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': True, 'on_delete': False} on_delete UPDATING
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_delete
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Starting condition modification: 'UPDATING'
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Stripped condition: 'UPDATING'
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': 'UPDATING' â†’ ''
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'DELETING'
2025-09-03 00:29:58,372 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-03 00:29:58,373 - root - DEBUG - [JSONTOPLJSON.py:184] - condition_dict: {'on_insert': False, 'on_update': False, 'on_delete': True} on_delete DELETING
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_delete keywords
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] - Starting condition modification: 'DELETING'
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] - Stripped condition: 'DELETING'
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] - Removed keyword 'DELETING': 'DELETING' â†’ ''
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] - Starting condition modification: 'TRUE'
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] - Stripped condition: 'TRUE'
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] - Final modified condition: 'TRUE'
2025-09-03 00:29:58,373 - root - DEBUG - [common.py:105] - Building final converted structure
2025-09-03 00:29:58,373 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'begin_end', 'begin_indent': 0, 'begin_end_statements': [{'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'begin_end', 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}], 'exception_handlers': []}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}]}
2025-09-03 00:29:58,373 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'begin_end', 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}], 'exception_handlers': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,373 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'begin_end', 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}], 'exception_handlers': []}
2025-09-03 00:29:58,373 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}
2025-09-03 00:29:58,373 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,373 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,373 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'begin_end', 'begin_indent': 0, 'begin_end_statements': [{'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'condition': ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO', 'type': 'if_else', 'if_indent': 8, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}]}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'condition': ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO', 'type': 'if_else', 'if_indent': 8, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'condition': ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO', 'type': 'if_else', 'if_indent': 8, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_indent': 8}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'begin_end', 'begin_indent': 0, 'begin_end_statements': [{'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}]}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_indent': 8}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_indent': 4, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}
2025-09-03 00:29:58,374 - root - DEBUG - [JSONTOPLJSON.py:329] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,374 - root - DEBUG - [common.py:105] - Converting to JSON string
2025-09-03 00:29:58,375 - root - DEBUG - [common.py:105] - Generated JSON string with 10356 characters
2025-09-03 00:29:58,375 - root - DEBUG - [common.py:105] - === to_sql() conversion complete ===
2025-09-03 00:29:58,375 - root - DEBUG - [common.py:105] - Created zzz.json
2025-09-03 00:29:58,375 - root - INFO - [common.py:110] - âœ“ PL/JSON conversion complete! (Duration: 0.03 seconds)
2025-09-03 00:29:58,375 - root - DEBUG - [common.py:105] - Step 5 completed in 0.03 seconds
2025-09-03 00:29:58,376 - root - INFO - [common.py:110] - Step 6: Converting PL/JSON to PostgreSQL format...
2025-09-03 00:29:58,376 - root - DEBUG - [common.py:105] - Starting Step 6: PL/JSON â†’ PostgreSQL format JSON
2025-09-03 00:29:58,376 - root - INFO - [common.py:110] - === Starting PL/JSON to PostgreSQL format conversion ===
2025-09-03 00:29:58,376 - root - INFO - [common.py:110] - === Starting file processing ===
2025-09-03 00:29:58,376 - root - INFO - [common.py:110] - Source directory: 'files/format_pl_json'
2025-09-03 00:29:58,376 - root - INFO - [common.py:110] - Target directory: 'files/format_plsql'
2025-09-03 00:29:58,376 - root - INFO - [common.py:110] - File pattern: '.json'
2025-09-03 00:29:58,377 - root - INFO - [common.py:110] - Output suffix: '_postgresql.json'
2025-09-03 00:29:58,377 - root - DEBUG - [common.py:105] - Ensuring target directory exists...
2025-09-03 00:29:58,377 - root - DEBUG - [common.py:105] - Directory already exists: files/format_plsql
2025-09-03 00:29:58,377 - root - DEBUG - [common.py:105] - Found 1 files in source directory
2025-09-03 00:29:58,377 - root - DEBUG - [common.py:105] - Files matching pattern '.json': ['zzz.json']
2025-09-03 00:29:58,377 - root - DEBUG - [common.py:105] - === Processing file 1/1: zzz.json ===
2025-09-03 00:29:58,377 - root - DEBUG - [common.py:105] - Source path: files/format_pl_json\zzz.json
2025-09-03 00:29:58,377 - root - DEBUG - [common.py:105] - Output path: files/format_plsql\zzz_postgresql.json
2025-09-03 00:29:58,377 - root - DEBUG - [common.py:105] - === Converting PL/JSON to PostgreSQL format for trigger zzz.json ===
2025-09-03 00:29:58,377 - root - DEBUG - [common.py:105] - Reading PL/JSON file: files/format_pl_json\zzz.json
2025-09-03 00:29:58,380 - root - DEBUG - [common.py:105] - Successfully loaded PL/JSON data with keys: ['on_insert', 'on_update', 'on_delete', 'metadata']
2025-09-03 00:29:58,381 - root - DEBUG - [common.py:105] - Converting to PostgreSQL format...
2025-09-03 00:29:58,381 - root - DEBUG - [common.py:105] - Converting complex structure to PostgreSQL SQL
2025-09-03 00:29:58,381 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 00:29:58,405 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 00:29:58,405 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 00:29:58,425 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 00:29:58,425 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 00:29:58,425 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted PostgreSQL SQL
2025-09-03 00:29:58,425 - root - DEBUG - [common.py:105] - Analysis contains 1 variables, 0 constants, 2 exceptions
2025-09-03 00:29:58,426 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for PostgreSQL
2025-09-03 00:29:58,426 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 00:29:58,426 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering PostgreSQL declarations ===
2025-09-03 00:29:58,426 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === PostgreSQL declarations complete ===
2025-09-03 00:29:58,426 - root - DEBUG - [common.py:105] - Generated 0 lines of declarations
2025-09-03 00:29:58,426 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 00:29:58,426 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 00:29:58,426 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for PostgreSQL ===
2025-09-03 00:29:58,426 - utilities.FormatSQL - DEBUG - [FormatSQL.py:417] - Rendering 1 variables for PostgreSQL
2025-09-03 00:29:58,426 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 00:29:58,426 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 00:29:58,426 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'begin_end', 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}], 'exception_handlers': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,426 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 00:29:58,433 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'begin_end', 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}], 'exception_handlers': []}
2025-09-03 00:29:58,433 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: begin_end
2025-09-03 00:29:58,433 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for PostgreSQL ===
2025-09-03 00:29:58,433 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 00:29:58,433 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 00:29:58,433 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}
2025-09-03 00:29:58,434 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 00:29:58,435 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for PostgreSQL ===
2025-09-03 00:29:58,435 - utilities.FormatSQL - DEBUG - [FormatSQL.py:456] - Processing 2 exception handlers
2025-09-03 00:29:58,436 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,436 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 00:29:58,436 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,436 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 00:29:58,436 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for PostgreSQL ===
2025-09-03 00:29:58,436 - root - DEBUG - [common.py:105] - Generated 12 lines in main execution block
2025-09-03 00:29:58,436 - root - DEBUG - [common.py:105] - Main block rendering took 0.010s
2025-09-03 00:29:58,436 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 00:29:58,436 - root - DEBUG - [common.py:105] - Final SQL contains 12 lines, 769 characters
2025-09-03 00:29:58,436 - root - DEBUG - [common.py:105] - PostgreSQL SQL generation: 12 lines generated in 0.011s
2025-09-03 00:29:58,436 - root - DEBUG - [common.py:105] - Successfully converted complex structure to PostgreSQL SQL
2025-09-03 00:29:58,436 - root - DEBUG - [common.py:105] - Converting complex structure to PostgreSQL SQL
2025-09-03 00:29:58,436 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 00:29:58,454 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 00:29:58,454 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 00:29:58,468 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 00:29:58,468 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 00:29:58,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted PostgreSQL SQL
2025-09-03 00:29:58,469 - root - DEBUG - [common.py:105] - Analysis contains 1 variables, 0 constants, 2 exceptions
2025-09-03 00:29:58,469 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for PostgreSQL
2025-09-03 00:29:58,469 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 00:29:58,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering PostgreSQL declarations ===
2025-09-03 00:29:58,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === PostgreSQL declarations complete ===
2025-09-03 00:29:58,469 - root - DEBUG - [common.py:105] - Generated 0 lines of declarations
2025-09-03 00:29:58,469 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 00:29:58,469 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 00:29:58,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for PostgreSQL ===
2025-09-03 00:29:58,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:417] - Rendering 1 variables for PostgreSQL
2025-09-03 00:29:58,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 00:29:58,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 00:29:58,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'condition': ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO', 'type': 'if_else', 'if_indent': 8, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 00:29:58,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ':NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO', 'type': 'if_else', 'if_indent': 8, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 00:29:58,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}
2025-09-03 00:29:58,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 00:29:58,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_indent': 8}
2025-09-03 00:29:58,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 00:29:58,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:456] - Processing 2 exception handlers
2025-09-03 00:29:58,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 00:29:58,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 00:29:58,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for PostgreSQL ===
2025-09-03 00:29:58,473 - root - DEBUG - [common.py:105] - Generated 15 lines in main execution block
2025-09-03 00:29:58,473 - root - DEBUG - [common.py:105] - Main block rendering took 0.004s
2025-09-03 00:29:58,473 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 00:29:58,473 - root - DEBUG - [common.py:105] - Final SQL contains 15 lines, 851 characters
2025-09-03 00:29:58,474 - root - DEBUG - [common.py:105] - PostgreSQL SQL generation: 15 lines generated in 0.005s
2025-09-03 00:29:58,474 - root - DEBUG - [common.py:105] - Successfully converted complex structure to PostgreSQL SQL
2025-09-03 00:29:58,474 - root - DEBUG - [common.py:105] - Converting complex structure to PostgreSQL SQL
2025-09-03 00:29:58,474 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 00:29:58,491 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 00:29:58,491 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 00:29:58,505 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 00:29:58,505 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 00:29:58,505 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted PostgreSQL SQL
2025-09-03 00:29:58,505 - root - DEBUG - [common.py:105] - Analysis contains 1 variables, 0 constants, 2 exceptions
2025-09-03 00:29:58,505 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for PostgreSQL
2025-09-03 00:29:58,505 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 00:29:58,506 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering PostgreSQL declarations ===
2025-09-03 00:29:58,506 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === PostgreSQL declarations complete ===
2025-09-03 00:29:58,506 - root - DEBUG - [common.py:105] - Generated 0 lines of declarations
2025-09-03 00:29:58,506 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 00:29:58,506 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 00:29:58,506 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for PostgreSQL ===
2025-09-03 00:29:58,506 - utilities.FormatSQL - DEBUG - [FormatSQL.py:417] - Rendering 1 variables for PostgreSQL
2025-09-03 00:29:58,506 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 00:29:58,506 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 00:29:58,506 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': 'TRUE', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,506 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 00:29:58,506 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_indent': 8}
2025-09-03 00:29:58,506 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 00:29:58,507 - utilities.FormatSQL - DEBUG - [FormatSQL.py:456] - Processing 2 exception handlers
2025-09-03 00:29:58,507 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,507 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 00:29:58,507 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,507 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 00:29:58,507 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for PostgreSQL ===
2025-09-03 00:29:58,507 - root - DEBUG - [common.py:105] - Generated 12 lines in main execution block
2025-09-03 00:29:58,507 - root - DEBUG - [common.py:105] - Main block rendering took 0.001s
2025-09-03 00:29:58,507 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 00:29:58,507 - root - DEBUG - [common.py:105] - Final SQL contains 12 lines, 286 characters
2025-09-03 00:29:58,507 - root - DEBUG - [common.py:105] - PostgreSQL SQL generation: 12 lines generated in 0.002s
2025-09-03 00:29:58,507 - root - DEBUG - [common.py:105] - Successfully converted complex structure to PostgreSQL SQL
2025-09-03 00:29:58,507 - root - DEBUG - [common.py:105] - PostgreSQL format conversion completed
2025-09-03 00:29:58,507 - root - DEBUG - [common.py:105] - Writing PostgreSQL format to: files/format_plsql\zzz_postgresql.json
2025-09-03 00:29:58,508 - root - DEBUG - [common.py:105] - Successfully wrote PostgreSQL format to files/format_plsql\zzz_postgresql.json
2025-09-03 00:29:58,508 - root - DEBUG - [common.py:105] - === PL/JSON to PostgreSQL format conversion complete for trigger zzz.json ===
2025-09-03 00:29:58,508 - root - DEBUG - [common.py:105] - âœ“ Created zzz_postgresql.json
2025-09-03 00:29:58,508 - root - INFO - [common.py:110] - === File processing complete ===
2025-09-03 00:29:58,508 - root - INFO - [common.py:110] - Successfully processed: 1 files
2025-09-03 00:29:58,508 - root - INFO - [common.py:110] - === PL/JSON to PostgreSQL format conversion complete ===
2025-09-03 00:29:58,508 - root - INFO - [common.py:110] - âœ“ PostgreSQL format conversion complete! (Duration: 0.13 seconds)
2025-09-03 00:29:58,509 - root - DEBUG - [common.py:105] - Step 6 completed in 0.13 seconds
2025-09-03 00:29:58,509 - root - INFO - [common.py:110] - Step 7: Converting JSON analysis directly to PostgreSQL SQL...
2025-09-03 00:29:58,509 - root - DEBUG - [common.py:105] - Starting Step 7: JSON analysis â†’ PostgreSQL SQL
2025-09-03 00:29:58,509 - root - INFO - [common.py:110] - === Starting JSON analysis to PostgreSQL SQL conversion ===
2025-09-03 00:29:58,509 - root - INFO - [common.py:110] - === Starting file processing ===
2025-09-03 00:29:58,510 - root - INFO - [common.py:110] - Source directory: 'files/format_json'
2025-09-03 00:29:58,510 - root - INFO - [common.py:110] - Target directory: 'files/format_plsql'
2025-09-03 00:29:58,510 - root - INFO - [common.py:110] - File pattern: '_analysis.json'
2025-09-03 00:29:58,510 - root - INFO - [common.py:110] - Output suffix: '_postgresql.sql'
2025-09-03 00:29:58,510 - root - DEBUG - [common.py:105] - Ensuring target directory exists...
2025-09-03 00:29:58,511 - root - DEBUG - [common.py:105] - Directory already exists: files/format_plsql
2025-09-03 00:29:58,511 - root - DEBUG - [common.py:105] - Found 1 files in source directory
2025-09-03 00:29:58,511 - root - DEBUG - [common.py:105] - Files matching pattern '_analysis.json': ['zzz_analysis.json']
2025-09-03 00:29:58,511 - root - DEBUG - [common.py:105] - === Processing file 1/1: zzz_analysis.json ===
2025-09-03 00:29:58,511 - root - DEBUG - [common.py:105] - Source path: files/format_json\zzz_analysis.json
2025-09-03 00:29:58,511 - root - DEBUG - [common.py:105] - Output path: files/format_plsql\zzz_analysis_postgresql.sql
2025-09-03 00:29:58,511 - root - DEBUG - [common.py:105] - === JSON to PostgreSQL SQL processing for trigger zzz_analysis.json ===
2025-09-03 00:29:58,511 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\zzz_analysis.json
2025-09-03 00:29:58,512 - root - DEBUG - [main.py:831] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 00:29:58,512 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 00:29:58,512 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 00:29:58,536 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 00:29:58,536 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 00:29:58,555 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 00:29:58,555 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 00:29:58,555 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 00:29:58,555 - root - DEBUG - [common.py:105] - Rendering PostgreSQL SQL from analysis...
2025-09-03 00:29:58,555 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted PostgreSQL SQL
2025-09-03 00:29:58,555 - root - DEBUG - [common.py:105] - Analysis contains 1 variables, 0 constants, 2 exceptions
2025-09-03 00:29:58,555 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for PostgreSQL
2025-09-03 00:29:58,555 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 00:29:58,555 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering PostgreSQL declarations ===
2025-09-03 00:29:58,555 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === PostgreSQL declarations complete ===
2025-09-03 00:29:58,555 - root - DEBUG - [common.py:105] - Generated 0 lines of declarations
2025-09-03 00:29:58,555 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 00:29:58,555 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 00:29:58,555 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for PostgreSQL ===
2025-09-03 00:29:58,555 - utilities.FormatSQL - DEBUG - [FormatSQL.py:417] - Rendering 1 variables for PostgreSQL
2025-09-03 00:29:58,555 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 00:29:58,555 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 00:29:58,556 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' INSERTING ', 'type': 'if_else', 'if_indent': 4, 'then_statements': [{'type': 'begin_end', 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}], 'exception_handlers': []}], 'if_elses': [{'type': 'elif_statement', 'elif_indent': 4, 'condition': 'UPDATING', 'then_statements': [{'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_indent': 8, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_indent': 8}]}, {'type': 'elif_statement', 'elif_indent': 4, 'condition': 'DELETING', 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_indent': 8}]}], 'else_statements': []}
2025-09-03 00:29:58,556 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 00:29:58,556 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'begin_end', 'begin_indent': 8, 'begin_end_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}], 'exception_handlers': []}
2025-09-03 00:29:58,556 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: begin_end
2025-09-03 00:29:58,556 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for PostgreSQL ===
2025-09-03 00:29:58,556 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 00:29:58,556 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 00:29:58,556 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_GLOBAL_CPY_PREFIXES ( GS1_COMP_PREFIX_NO, GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID, REASON_FOR_CHANGE, VALID_IND ) VALUES ( :NEW.GS1_COMP_PREFIX_NO, :NEW.GS1_ORG_COUNTRY_CD, :NEW.GCP_OWNER_COMP_CD, :NEW.GTIN_ALLOC_TYPE_PRIM_CD, :NEW.GTIN_ALLOC_TYPE_SEC_CD, :NEW.GTIN_ALLOC_TYPE_TER_CD, :NEW.SSCC_RELEVANCY_IND, :NEW.GLOBAL_CHANGE_ID, :NEW.REASON_FOR_CHANGE, :NEW.VALID_IND );', 'statement_indent': 12}
2025-09-03 00:29:58,556 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 00:29:58,558 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for PostgreSQL ===
2025-09-03 00:29:58,559 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' :NEW.GS1_COMP_PREFIX_NO <> :OLD.GS1_COMP_PREFIX_NO ', 'type': 'if_else', 'if_indent': 8, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 00:29:58,559 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 00:29:58,559 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_indent': 12}
2025-09-03 00:29:58,560 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 00:29:58,560 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE V_GLOBAL_CPY_PREFIXES SET GS1_ORG_COUNTRY_CD = :NEW.GS1_ORG_COUNTRY_CD, GCP_OWNER_COMP_CD = :NEW.GCP_OWNER_COMP_CD, GTIN_ALLOC_TYPE_PRIM_CD = :NEW.GTIN_ALLOC_TYPE_PRIM_CD, GTIN_ALLOC_TYPE_SEC_CD = :NEW.GTIN_ALLOC_TYPE_SEC_CD, GTIN_ALLOC_TYPE_TER_CD = :NEW.GTIN_ALLOC_TYPE_TER_CD, SSCC_RELEVANCY_IND = :NEW.SSCC_RELEVANCY_IND, GLOBAL_CHANGE_ID = :NEW.GLOBAL_CHANGE_ID, REASON_FOR_CHANGE = :NEW.REASON_FOR_CHANGE, VALID_IND = :NEW.VALID_IND WHERE GS1_COMP_PREFIX_NO = :NEW.GS1_COMP_PREFIX_NO;', 'statement_indent': 8}
2025-09-03 00:29:58,560 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 00:29:58,562 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_indent': 8}
2025-09-03 00:29:58,562 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 00:29:58,562 - utilities.FormatSQL - DEBUG - [FormatSQL.py:456] - Processing 2 exception handlers
2025-09-03 00:29:58,562 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,562 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 00:29:58,563 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 00:29:58,563 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 00:29:58,563 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for PostgreSQL ===
2025-09-03 00:29:58,563 - root - DEBUG - [common.py:105] - Generated 19 lines in main execution block
2025-09-03 00:29:58,563 - root - DEBUG - [common.py:105] - Main block rendering took 0.007s
2025-09-03 00:29:58,563 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 00:29:58,563 - root - DEBUG - [common.py:105] - Final SQL contains 19 lines, 1413 characters
2025-09-03 00:29:58,563 - root - DEBUG - [common.py:105] - PostgreSQL SQL generation: 19 lines generated in 0.008s
2025-09-03 00:29:58,563 - root - DEBUG - [common.py:105] - PostgreSQL SQL rendering completed successfully
2025-09-03 00:29:58,563 - root - DEBUG - [common.py:105] - Rendered SQL length: 1413 characters
2025-09-03 00:29:58,563 - root - DEBUG - [common.py:105] - Writing formatted PostgreSQL SQL to: files/format_plsql\zzz_analysis_postgresql.sql
2025-09-03 00:29:58,563 - root - DEBUG - [common.py:105] - Successfully wrote formatted PostgreSQL SQL to files/format_plsql\zzz_analysis_postgresql.sql
2025-09-03 00:29:58,563 - root - DEBUG - [common.py:105] - === JSON to PostgreSQL SQL processing complete for trigger zzz_analysis.json ===
2025-09-03 00:29:58,564 - root - DEBUG - [common.py:105] - âœ“ Created zzz_analysis_postgresql.sql
2025-09-03 00:29:58,564 - root - INFO - [common.py:110] - === File processing complete ===
2025-09-03 00:29:58,564 - root - INFO - [common.py:110] - Successfully processed: 1 files
2025-09-03 00:29:58,564 - root - INFO - [common.py:110] - === JSON analysis to PostgreSQL SQL conversion complete ===
2025-09-03 00:29:58,564 - root - INFO - [common.py:110] - âœ“ Direct PostgreSQL SQL conversion complete! (Duration: 0.05 seconds)
2025-09-03 00:29:58,564 - root - DEBUG - [common.py:105] - Step 7 completed in 0.05 seconds
2025-09-03 00:29:58,565 - root - INFO - [common.py:110] - Step 8: Converting PostgreSQL format JSON to final SQL...
2025-09-03 00:29:58,565 - root - DEBUG - [common.py:105] - Starting Step 8: PostgreSQL JSON â†’ SQL output files
2025-09-03 00:29:58,565 - root - INFO - [common.py:110] - === Starting PostgreSQL format to SQL conversion ===
2025-09-03 00:29:58,565 - root - INFO - [common.py:110] - === Starting file processing ===
2025-09-03 00:29:58,565 - root - INFO - [common.py:110] - Source directory: 'files/format_plsql'
2025-09-03 00:29:58,565 - root - INFO - [common.py:110] - Target directory: 'files/format_plsql'
2025-09-03 00:29:58,566 - root - INFO - [common.py:110] - File pattern: '_postgresql.json'
2025-09-03 00:29:58,566 - root - INFO - [common.py:110] - Output suffix: '.sql'
2025-09-03 00:29:58,566 - root - DEBUG - [common.py:105] - Ensuring target directory exists...
2025-09-03 00:29:58,566 - root - DEBUG - [common.py:105] - Directory already exists: files/format_plsql
2025-09-03 00:29:58,566 - root - DEBUG - [common.py:105] - Found 1 files in source directory
2025-09-03 00:29:58,566 - root - DEBUG - [common.py:105] - Files matching pattern '_postgresql.json': ['zzz_postgresql.json']
2025-09-03 00:29:58,566 - root - DEBUG - [common.py:105] - === Processing file 1/1: zzz_postgresql.json ===
2025-09-03 00:29:58,566 - root - DEBUG - [common.py:105] - Source path: files/format_plsql\zzz_postgresql.json
2025-09-03 00:29:58,566 - root - DEBUG - [common.py:105] - Output path: files/format_plsql\zzz_postgresql.sql
2025-09-03 00:29:58,567 - root - DEBUG - [common.py:105] - === Converting PostgreSQL format to SQL for trigger zzz_postgresql.json ===
2025-09-03 00:29:58,567 - root - DEBUG - [common.py:105] - Reading PostgreSQL format file: files/format_plsql\zzz_postgresql.json
2025-09-03 00:29:58,567 - root - DEBUG - [common.py:105] - Successfully loaded PostgreSQL format data with keys: ['on_insert', 'on_update', 'on_delete']
2025-09-03 00:29:58,567 - root - DEBUG - [common.py:105] - Extracting SQL content...
2025-09-03 00:29:58,567 - root - DEBUG - [common.py:105] - SQL content extraction completed
2025-09-03 00:29:58,567 - root - DEBUG - [common.py:105] - Writing SQL to: files/format_plsql\zzz_postgresql.sql
2025-09-03 00:29:58,567 - root - DEBUG - [common.py:105] - Successfully wrote SQL to files/format_plsql\zzz_postgresql.sql
2025-09-03 00:29:58,567 - root - DEBUG - [common.py:105] - === PostgreSQL format to SQL conversion complete for trigger zzz_postgresql.json ===
2025-09-03 00:29:58,567 - root - DEBUG - [common.py:105] - âœ“ Created zzz_postgresql.sql
2025-09-03 00:29:58,567 - root - INFO - [common.py:110] - === File processing complete ===
2025-09-03 00:29:58,568 - root - INFO - [common.py:110] - Successfully processed: 1 files
2025-09-03 00:29:58,568 - root - INFO - [common.py:110] - === PostgreSQL format to SQL conversion complete ===
2025-09-03 00:29:58,568 - root - INFO - [common.py:110] - âœ“ Final SQL generation complete! (Duration: 0.00 seconds)
2025-09-03 00:29:58,568 - root - DEBUG - [common.py:105] - Step 8 completed in 0.00 seconds
2025-09-03 00:29:58,568 - root - INFO - [common.py:110] - === Batch conversion finished successfully ===
2025-09-03 00:29:58,568 - root - INFO - [common.py:110] - Total execution time: 0.91 seconds
2025-09-03 00:29:58,569 - root - INFO - [common.py:110] - Performance breakdown by step:
2025-09-03 00:29:58,569 - root - INFO - [common.py:110] -   - Step 1 (SQL â†’ JSON):              0.63 seconds (69.6%)
2025-09-03 00:29:58,569 - root - INFO - [common.py:110] -   - Step 2 (JSON â†’ Oracle SQL):       0.05 seconds (5.4%)
2025-09-03 00:29:58,569 - root - INFO - [common.py:110] -   - Step 3 (JSON cleaning):           0.00 seconds (0.2%)
2025-09-03 00:29:58,569 - root - INFO - [common.py:110] -   - Step 5 (JSON â†’ PL/JSON):          0.03 seconds (3.1%)
2025-09-03 00:29:58,570 - root - INFO - [common.py:110] -   - Step 6 (PL/JSON â†’ PostgreSQL):    0.13 seconds (14.7%)
2025-09-03 00:29:58,570 - root - INFO - [common.py:110] -   - Step 7 (JSON â†’ PostgreSQL SQL):   0.05 seconds (6.1%)
2025-09-03 00:29:58,570 - root - INFO - [common.py:110] -   - Step 8 (PostgreSQL JSON â†’ SQL):   0.00 seconds (0.3%)
2025-09-03 00:29:58,570 - root - DEBUG - [common.py:105] - Main conversion workflow completed successfully
