2025-08-14 12:34:58,313 - root - INFO - [common.py:73] - === Starting Oracle Trigger Conversion Process ===
2025-08-14 12:34:58,314 - root - INFO - [common.py:73] - Logging to: output\oracle_conversion_20250814_123458.log
2025-08-14 12:34:58,314 - root - INFO - [common.py:73] - Step 1: Converting Oracle SQL files to JSON analysis...
2025-08-14 12:34:58,314 - root - INFO - [common.py:73] - === Starting Oracle triggers to JSON conversion ===
2025-08-14 12:34:58,314 - root - INFO - [common.py:73] - === Starting file processing ===
2025-08-14 12:34:58,315 - root - INFO - [common.py:73] - Source directory: 'files/oracle'
2025-08-14 12:34:58,315 - root - INFO - [common.py:73] - Target directory: 'files/format_json'
2025-08-14 12:34:58,316 - root - INFO - [common.py:73] - File pattern: '.sql'
2025-08-14 12:34:58,316 - root - INFO - [common.py:73] - Output suffix: '_analysis.json'
2025-08-14 12:34:58,316 - root - DEBUG - [common.py:69] - Ensuring target directory exists...
2025-08-14 12:34:58,316 - root - DEBUG - [common.py:69] - Directory already exists: files/format_json
2025-08-14 12:34:58,316 - root - DEBUG - [common.py:69] - Found 6 files in source directory
2025-08-14 12:34:58,316 - root - DEBUG - [common.py:69] - Files matching pattern '.sql': ['trigger1.sql', 'trigger2.sql', 'trigger3.sql', 'trigger4.sql', 'trigger5.sql', 'trigger6.sql']
2025-08-14 12:34:58,316 - root - DEBUG - [common.py:69] - === Processing file 1/6: trigger1.sql ===
2025-08-14 12:34:58,317 - root - DEBUG - [common.py:69] - Extracted trigger number: 1
2025-08-14 12:34:58,317 - root - DEBUG - [common.py:69] - Source path: files/oracle\trigger1.sql
2025-08-14 12:34:58,317 - root - DEBUG - [common.py:69] - Output path: files/format_json\trigger1_analysis.json
2025-08-14 12:34:58,317 - root - DEBUG - [common.py:69] - === SQL to JSON processing for trigger 1 ===
2025-08-14 12:34:58,317 - root - DEBUG - [common.py:69] - Reading SQL file: files/oracle\trigger1.sql
2025-08-14 12:34:58,317 - root - DEBUG - [common.py:69] - Successfully read 29058 characters from files/oracle\trigger1.sql
2025-08-14 12:34:58,317 - root - DEBUG - [common.py:69] - Creating OracleTriggerAnalyzer instance...
2025-08-14 12:34:58,317 - root - DEBUG - [common.py:69] - Initializing OracleTriggerAnalyzer with 29058 characters of SQL
2025-08-14 12:34:58,317 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing: 0 lines processed
2025-08-14 12:34:58,317 - root - INFO - [common.py:97] - 🔄 Starting SQL section parsing parsing
2025-08-14 12:34:58,317 - root - INFO - [common.py:97] - 🔄 Starting structured lines conversion parsing
2025-08-14 12:34:58,318 - root - DEBUG - [common.py:69] - Converting SQL content to structured lines
2025-08-14 12:34:58,318 - root - DEBUG - [common.py:69] - Structured lines conversion complete: 750 total, 213 with semicolons, 69 empty lines skipped
2025-08-14 12:34:58,318 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing
2025-08-14 12:34:58,319 - root - DEBUG - [OracleTriggerAnalyzer.py:226] - Block comment stripping complete: 0 comments extracted, 750 lines cleaned
2025-08-14 12:34:58,319 - root - DEBUG - [OracleTriggerAnalyzer.py:298] - Removed block comments from main section
2025-08-14 12:34:58,319 - root - DEBUG - [OracleTriggerAnalyzer.py:273] - Inline comment stripping complete: 63 comments extracted, 697 lines cleaned
2025-08-14 12:34:58,319 - root - DEBUG - [OracleTriggerAnalyzer.py:302] - Removed inline comments from main section
2025-08-14 12:34:58,319 - root - DEBUG - [OracleTriggerAnalyzer.py:314] - Found DECLARE at line 1
2025-08-14 12:34:58,319 - root - DEBUG - [OracleTriggerAnalyzer.py:319] - Found BEGIN at line 51
2025-08-14 12:34:58,319 - root - DEBUG - [OracleTriggerAnalyzer.py:325] - DECLARE section: lines 1-50
2025-08-14 12:34:58,319 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Main section: lines 51
2025-08-14 12:34:58,319 - root - DEBUG - [OracleTriggerAnalyzer.py:359] - Starting declaration parsing
2025-08-14 12:34:58,319 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: INVALID_THEME_NO
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: DELETE_NO_MORE_POSSIBLE
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: THEME_NO_ONLY_INSERT
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: DESCRIPTION_TOO_LONG
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: THEME_DESC_PROPOSAL_TOO_LONG
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: THEME_DESC_ALT_TOO_LONG
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: THEME_NO_CANNOT_BE_INSERTED
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ONLYONEOFFICIALCHANGEPERDAY
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: INSERTSMUSTBEOFFICIAL
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: THEMEDESCRIPTIONMANDATORY
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: THEME_DESC_NOT_UNIQUE
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: IN_PREP_NOT_PORTF_PROJ
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: IN_PREP_NOT_CLOSED
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: INVALID_MOLECULE_ID
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: SEC_MOL_LIST_NOT_EMPTY
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ADMIN_UPDATE_ONLY
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: PORTF_PROJ_MOL_CRE_ERR
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: DEBUGGING
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_COUNTER
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_CODE
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_ODG_NO
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_RESGRP_CD
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_RESLIN_CD
2025-08-14 12:34:58,320 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_STATUS_CD
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_DBA_CD
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_PORTF_PROJ_CD
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_DESCRIPTION
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_RESLIN_DESC
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_THEME_DESC_LENGTH
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_D_REGISTRAT_DATE
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_D_INS_DATE
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_FUTURE_REGISTRAT
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_VALID_TO
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_USERID
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_IS_ADMIN_CNT
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_SEC_MOL_CNT
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_MOLECULE_ID
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_MOLECULE_RG_NO
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_MOLEC_IN_LIC_PRTNR
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_NEW_RG_NO
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_COMPARATOR_IND
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_THEME_DESC_PROPOSAL
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_SHORT_NAME
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:417] - Processed constant: C_MOLECULE_TYPE_ID
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:417] - Processed constant: C_PHARMACOLOGICAL_TYPE_ID
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_EVOLVED_NMP_CNT
2025-08-14 12:34:58,321 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_TRADEMARK_NO
2025-08-14 12:34:58,322 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_MOLECULE_TYPE_ID
2025-08-14 12:34:58,322 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_PHARMACOLOGICAL_TYPE_ID
2025-08-14 12:34:58,322 - root - DEBUG - [common.py:69] - Processing main section from lines 51
2025-08-14 12:34:58,322 - root - INFO - [common.py:97] - 🔄 Starting First BEGIN blocks parsing
2025-08-14 12:34:58,322 - root - DEBUG - [OracleTriggerAnalyzer.py:792] - Starting top-level BEGIN blocks parsing
2025-08-14 12:34:58,322 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - Collected 647 lines from main section
2025-08-14 12:34:58,322 - root - DEBUG - [OracleTriggerAnalyzer.py:821] - Found top-level BEGIN block at line 51 (indent 0)
2025-08-14 12:34:58,322 - root - DEBUG - [OracleTriggerAnalyzer.py:891] - Parsing top-level BEGIN-END block starting at line 51 (indent 0)
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:926] - Found EXCEPTION at line 782
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - Found END; at line 819
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ADMIN_UPDATE_ONLY
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20115', 'handler_string': "'MDM_V_THEMES_IOF'"}
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: IN_PREP_NOT_PORTF_PROJ
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20116', 'handler_string': "'MDM_V_THEMES_IOF'"}
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: IN_PREP_NOT_CLOSED
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20117', 'handler_string': "'MDM_V_THEMES_IOF'"}
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: INVALID_MOLECULE_ID
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20118', 'handler_string': "'This is not a valid Molecule ID'"}
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: SEC_MOL_LIST_NOT_EMPTY
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20119', 'handler_string': "'MDM_V_THEMES_IOF'"}
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: INVALID_THEME_NO
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20101', 'handler_string': "'This is not a valid Theme No'"}
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: DELETE_NO_MORE_POSSIBLE
2025-08-14 12:34:58,323 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20400', 'handler_string': "'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"}
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: THEME_NO_ONLY_INSERT
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20400', 'handler_string': "'Theme No cannot be updated'"}
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: DESCRIPTION_TOO_LONG
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20400', 'handler_string': '\'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''}
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: THEME_DESC_PROPOSAL_TOO_LONG
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20400', 'handler_string': '\'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''}
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: THEME_DESC_ALT_TOO_LONG
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20400', 'handler_string': '\'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''}
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: THEME_NO_CANNOT_BE_INSERTED
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20400', 'handler_string': "'This Theme No already exists'"}
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ONLYONEOFFICIALCHANGEPERDAY
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20400', 'handler_string': "'Official Change for this Theme No and Day already exists'"}
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: INSERTSMUSTBEOFFICIAL
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20400', 'handler_string': "'New Themes can only be inserted by Official Changes'"}
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: THEMEDESCRIPTIONMANDATORY
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20400', 'handler_string': '\'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''}
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: THEME_DESC_NOT_UNIQUE
2025-08-14 12:34:58,324 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20400', 'handler_string': "'This Theme Description already exists'"}
2025-08-14 12:34:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: PORTF_PROJ_MOL_CRE_ERR
2025-08-14 12:34:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20120', 'handler_string': "'MDM_V_THEMES_IOF'"}
2025-08-14 12:34:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: DEBUGGING
2025-08-14 12:34:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20900', 'handler_string': "'Debug in Themes IOF standard'"}
2025-08-14 12:34:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:3664] - Parsed exception section: 18 handlers
2025-08-14 12:34:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:957] - Successfully parsed top-level BEGIN-END block: 608 statements, 18 exception handlers
2025-08-14 12:34:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - Successfully parsed top-level BEGIN-END block from line 51 to 819
2025-08-14 12:34:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:858] - Top-level BEGIN blocks parsing complete: 1 items in main_section_lines
2025-08-14 12:34:58,325 - root - INFO - [common.py:104] - ✅ Completed First BEGIN blocks parsing
2025-08-14 12:34:58,325 - root - INFO - [common.py:97] - 🔄 Starting CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:2537] - Starting CASE WHEN ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:2555] - Found CASE statement at line 241 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:2953] - Starting enhanced CASE statement parsing from index 210
2025-08-14 12:34:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:2973] - CASE statement - Type: with expression, Expression: 'LENGTH(:NEW.THEME_NO)', Indent: 6
2025-08-14 12:34:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:2995] - Found END CASE; at line 252 (indent 6)
2025-08-14 12:34:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 242 (indent 9, case indent 6)
2025-08-14 12:34:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 246 (indent 9, case indent 6)
2025-08-14 12:34:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 250 (indent 9, case indent 6)
2025-08-14 12:34:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: 4
2025-08-14 12:34:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: 5
2025-08-14 12:34:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:3400] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:3412] - Processing nested structures in enhanced CASE statement
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:3093] - Completed enhanced CASE statement parsing: 2 when clauses, ELSE at line 250, end at line 252
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:2567] - Parsed complete CASE statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:2555] - Found CASE statement at line 555 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:2953] - Starting enhanced CASE statement parsing from index 474
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:2973] - CASE statement - Type: simple, Expression: '', Indent: 6
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:2995] - Found END CASE; at line 606 (indent 6)
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 556 (indent 9, case indent 6)
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 570 (indent 9, case indent 6)
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 581 (indent 9, case indent 6)
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 592 (indent 12, case indent 6)
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 604 (indent 9, case indent 6)
2025-08-14 12:34:58,327 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,328 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,328 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,329 - root - DEBUG - [OracleTriggerAnalyzer.py:3400] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,329 - root - DEBUG - [OracleTriggerAnalyzer.py:3412] - Processing nested structures in enhanced CASE statement
2025-08-14 12:34:58,329 - root - DEBUG - [OracleTriggerAnalyzer.py:3093] - Completed enhanced CASE statement parsing: 3 when clauses, ELSE at line 604, end at line 606
2025-08-14 12:34:58,329 - root - DEBUG - [OracleTriggerAnalyzer.py:2567] - Parsed complete CASE statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,329 - root - DEBUG - [OracleTriggerAnalyzer.py:2666] - CASE WHEN ELSE parsing complete
2025-08-14 12:34:58,329 - root - INFO - [common.py:104] - ✅ Completed CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,329 - root - INFO - [common.py:97] - 🔄 Starting IF-ELSE statements in main section parsing
2025-08-14 12:34:58,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1434] - Starting IF-ELSIF-ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 95 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 87
2025-08-14 12:34:58,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.IN_PREP_IND = 'Y')', Indent: 3
2025-08-14 12:34:58,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 107 (indent 3)
2025-08-14 12:34:58,330 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 107
2025-08-14 12:34:58,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 96 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 88
2025-08-14 12:34:58,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.PORTF_PROJ_CD <> 'Y')', Indent: 6
2025-08-14 12:34:58,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 98 (indent 6)
2025-08-14 12:34:58,331 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 98
2025-08-14 12:34:58,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 100 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 91
2025-08-14 12:34:58,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0)', Indent: 6
2025-08-14 12:34:58,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 102 (indent 6)
2025-08-14 12:34:58,331 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 102
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 104 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 94
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_ID IS NULL)', Indent: 6
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 106 (indent 6)
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 106
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 111 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 98
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_ID IS NOT NULL)', Indent: 3
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 140 (indent 3)
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 140
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 127 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 113
2025-08-14 12:34:58,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_MOLECULE_RG_NO IS NULL)', Indent: 6
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 139 (indent 6)
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 139
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 128 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 114
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_COMPARATOR_IND = 'Y')', Indent: 9
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 138 (indent 9)
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 130 (indent 9)
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 5 statements
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 130, end at line 138
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 149 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 129
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.STATUS_DESC IS NOT NULL)', Indent: 3
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 158 (indent 3)
2025-08-14 12:34:58,333 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 156 (indent 3)
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 156, end at line 158
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 160 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 139
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.DBA_DESC_CONCAT IS NOT NULL)', Indent: 3
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 171 (indent 3)
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 169 (indent 3)
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 169, end at line 171
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 174 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 152
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.OFFICIAL_IND = 'N')', Indent: 3
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 178 (indent 3)
2025-08-14 12:34:58,334 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 176 (indent 3)
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 176, end at line 178
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 181 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 158
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30)', Indent: 3
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 183 (indent 3)
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 183
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 186 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 162
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INSERTING)', Indent: 3
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 624 (indent 3)
2025-08-14 12:34:58,335 - root - DEBUG - [OracleTriggerAnalyzer.py:1691] - Found ELSIF clause at line 406 (indent 3)
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:1691] - Found ELSIF clause at line 607 (indent 3)
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:2002] - Parsed ELSIF clause: (UPDATING)
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:2002] - Parsed ELSIF clause: (DELETING)
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:2953] - Starting enhanced CASE statement parsing from index 210
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:2973] - CASE statement - Type: with expression, Expression: 'LENGTH(:NEW.THEME_NO)', Indent: 6
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:2995] - Found END CASE; at line 252 (indent 6)
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 242 (indent 9, case indent 6)
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 246 (indent 9, case indent 6)
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 250 (indent 9, case indent 6)
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: 4
2025-08-14 12:34:58,336 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: 5
2025-08-14 12:34:58,337 - root - DEBUG - [OracleTriggerAnalyzer.py:3400] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,337 - root - DEBUG - [OracleTriggerAnalyzer.py:3412] - Processing nested structures in enhanced CASE statement
2025-08-14 12:34:58,337 - root - DEBUG - [OracleTriggerAnalyzer.py:3093] - Completed enhanced CASE statement parsing: 2 when clauses, ELSE at line 250, end at line 252
2025-08-14 12:34:58,337 - root - DEBUG - [OracleTriggerAnalyzer.py:2953] - Starting enhanced CASE statement parsing from index 474
2025-08-14 12:34:58,337 - root - DEBUG - [OracleTriggerAnalyzer.py:2973] - CASE statement - Type: simple, Expression: '', Indent: 6
2025-08-14 12:34:58,338 - root - DEBUG - [OracleTriggerAnalyzer.py:2995] - Found END CASE; at line 606 (indent 6)
2025-08-14 12:34:58,338 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 556 (indent 9, case indent 6)
2025-08-14 12:34:58,338 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 570 (indent 9, case indent 6)
2025-08-14 12:34:58,338 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 581 (indent 9, case indent 6)
2025-08-14 12:34:58,338 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 592 (indent 12, case indent 6)
2025-08-14 12:34:58,338 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 604 (indent 9, case indent 6)
2025-08-14 12:34:58,338 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,338 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,338 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,339 - root - DEBUG - [OracleTriggerAnalyzer.py:3400] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,339 - root - DEBUG - [OracleTriggerAnalyzer.py:3412] - Processing nested structures in enhanced CASE statement
2025-08-14 12:34:58,339 - root - DEBUG - [OracleTriggerAnalyzer.py:3093] - Completed enhanced CASE statement parsing: 3 when clauses, ELSE at line 604, end at line 606
2025-08-14 12:34:58,339 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 2 else_if clauses, ELSE at line None, end at line 624
2025-08-14 12:34:58,339 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,339 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 187 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,339 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 163
2025-08-14 12:34:58,339 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0)', Indent: 6
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 189 (indent 6)
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 189
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 195 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 167
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL)', Indent: 6
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 239 (indent 6)
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 239
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 196 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 168
2025-08-14 12:34:58,341 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL)', Indent: 9
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 238 (indent 9)
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 198 (indent 9)
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 37 statements
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 198, end at line 238
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 243 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 212
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9)', Indent: 12
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 245 (indent 12)
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 245
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 247 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 216
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9)', Indent: 12
2025-08-14 12:34:58,342 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 249 (indent 12)
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 249
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 274 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 240
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_COUNTER > 0)', Indent: 6
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 276 (indent 6)
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 276
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 282 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 245
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.OFFICIAL_IND = 'N')', Indent: 6
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 284 (indent 6)
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 284
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 286 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,343 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 248
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(UPPER(:NEW.PORTF_PROJ_CD) = 'N')', Indent: 6
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 290 (indent 6)
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 290
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 287 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 249
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0)', Indent: 9
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 289 (indent 9)
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 289
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 294 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 253
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(UPPER(:NEW.PORTF_PROJ_CD) = 'Y')', Indent: 6
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 319 (indent 6)
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 314 (indent 6)
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 2 statements
2025-08-14 12:34:58,344 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 314, end at line 319
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 308 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 267
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(LENGTH(V_DESCRIPTION) > 90)', Indent: 9
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 310 (indent 9)
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 310
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 328 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 283
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_COUNTER > 0)', Indent: 6
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 330 (indent 6)
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 330
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 388 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 342
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL)', Indent: 6
2025-08-14 12:34:58,345 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 402 (indent 6)
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 402
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 409 in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 356
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0', Indent: 6
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 411 (indent 6)
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 411
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 413 in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 359
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.THEME_NO <> :OLD.THEME_NO)', Indent: 6
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 415 (indent 6)
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 415
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 421 in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 362
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.OFFICIAL_IND = 'N')', Indent: 6
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 428 (indent 6)
2025-08-14 12:34:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 425 (indent 6)
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 425, end at line 428
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 430 in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 367
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD)', Indent: 6
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 453 (indent 6)
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 446 (indent 6)
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 6 statements
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 446, end at line 453
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 447 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 384
2025-08-14 12:34:58,347 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0)', Indent: 9
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 452 (indent 9)
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 449 (indent 9)
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 2 statements
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 449, end at line 452
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements.else_statements
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 455 in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 391
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(LENGTH(V_DESCRIPTION) > 90)', Indent: 6
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 457 (indent 6)
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 457
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 470 in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 402
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_COUNTER > 0)', Indent: 6
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 472 (indent 6)
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 472
2025-08-14 12:34:58,348 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 477 in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 406
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.OFFICIAL_IND = 'N')', Indent: 6
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 550 (indent 6)
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 504 (indent 6)
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 39 statements
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 504, end at line 550
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 518 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 442
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_COUNTER > 0)', Indent: 9
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 520 (indent 9)
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 520
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements.else_statements
2025-08-14 12:34:58,349 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 590 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 505
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_SEC_MOL_CNT > 0)', Indent: 12
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 603 (indent 12)
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 592 (indent 12)
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 8 statements
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 592, end at line 603
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements.then_statements
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 608 in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 521
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0)', Indent: 6
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 610 (indent 6)
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,350 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 610
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 616 in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 524
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE))', Indent: 6
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 623 (indent 6)
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 621 (indent 6)
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 621, end at line 623
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 243 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 212
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9)', Indent: 12
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 245 (indent 12)
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 245
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 247 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 216
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9)', Indent: 12
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 249 (indent 12)
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 249
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 590 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 505
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_SEC_MOL_CNT > 0)', Indent: 12
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 603 (indent 12)
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 592 (indent 12)
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 8 statements
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 592, end at line 603
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,352 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 628 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 533
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INSERTING OR UPDATING)', Indent: 3
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 709 (indent 3)
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 709
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 629 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 534
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL)', Indent: 6
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 683 (indent 6)
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 653 (indent 6)
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 25 statements
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 653, end at line 683
2025-08-14 12:34:58,353 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 643 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 542
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_EVOLVED_NMP_CNT = 0)', Indent: 9
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 652 (indent 9)
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 652
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 654 in main_section_lines.begin_end_statements.then_statements.else_statements
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 553
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL)', Indent: 9
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 682 (indent 9)
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 661 (indent 9)
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 16 statements
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,354 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 661, end at line 682
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.else_statements
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 662 in main_section_lines.begin_end_statements.then_statements.else_statements.else_statements
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 561
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID)', Indent: 12
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 681 (indent 12)
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 681
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.else_statements.else_statements
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 687 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 579
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-'))', Indent: 6
2025-08-14 12:34:58,355 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 708 (indent 6)
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 708
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 697 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 587
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_EVOLVED_NMP_CNT > 0)', Indent: 9
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 707 (indent 9)
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 707
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 713 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 598
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INSERTING AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y')', Indent: 3
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 761 (indent 3)
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 761
2025-08-14 12:34:58,356 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 714 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 599
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.PROPOSAL_ID IS NOT NULL)', Indent: 6
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 723 (indent 6)
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 723
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 727 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 609
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0))', Indent: 6
2025-08-14 12:34:58,357 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 760 (indent 6)
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 760
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 728 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 610
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_ID IS NOT NULL)', Indent: 9
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 743 (indent 9)
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 743
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,358 - root - DEBUG - [OracleTriggerAnalyzer.py:1563] - IF-ELSIF-ELSE parsing complete
2025-08-14 12:34:58,358 - root - INFO - [common.py:104] - ✅ Completed IF-ELSE statements in main section parsing
2025-08-14 12:34:58,358 - root - INFO - [common.py:97] - 🔄 Starting BEGIN blocks in main section parsing
2025-08-14 12:34:58,359 - root - DEBUG - [OracleTriggerAnalyzer.py:2681] - Starting nested BEGIN block parsing
2025-08-14 12:34:58,359 - root - DEBUG - [OracleTriggerAnalyzer.py:2699] - Found nested BEGIN block at line 112 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,359 - root - DEBUG - [OracleTriggerAnalyzer.py:2824] - Parsing BEGIN-END block starting at line 112
2025-08-14 12:34:58,359 - root - DEBUG - [OracleTriggerAnalyzer.py:2880] - Found EXCEPTION section at line 122
2025-08-14 12:34:58,359 - root - DEBUG - [OracleTriggerAnalyzer.py:2891] - Parsed exception handler: NO_DATA_FOUND
2025-08-14 12:34:58,359 - root - DEBUG - [OracleTriggerAnalyzer.py:2871] - Ended main BEGIN block at line 125
2025-08-14 12:34:58,359 - root - DEBUG - [OracleTriggerAnalyzer.py:2712] - Parsed complete nested BEGIN block structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,359 - root - DEBUG - [OracleTriggerAnalyzer.py:2699] - Found nested BEGIN block at line 729 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,359 - root - DEBUG - [OracleTriggerAnalyzer.py:2824] - Parsing BEGIN-END block starting at line 729
2025-08-14 12:34:58,360 - root - DEBUG - [OracleTriggerAnalyzer.py:2880] - Found EXCEPTION section at line 739
2025-08-14 12:34:58,360 - root - DEBUG - [OracleTriggerAnalyzer.py:2891] - Parsed exception handler: NO_DATA_FOUND
2025-08-14 12:34:58,360 - root - DEBUG - [OracleTriggerAnalyzer.py:2871] - Ended main BEGIN block at line 742
2025-08-14 12:34:58,360 - root - DEBUG - [OracleTriggerAnalyzer.py:2712] - Parsed complete nested BEGIN block structure in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,360 - root - DEBUG - [OracleTriggerAnalyzer.py:2699] - Found nested BEGIN block at line 763 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,360 - root - DEBUG - [OracleTriggerAnalyzer.py:2824] - Parsing BEGIN-END block starting at line 763
2025-08-14 12:34:58,360 - root - DEBUG - [OracleTriggerAnalyzer.py:2871] - Ended main BEGIN block at line 781
2025-08-14 12:34:58,360 - root - DEBUG - [OracleTriggerAnalyzer.py:2712] - Parsed complete nested BEGIN block structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,360 - root - DEBUG - [OracleTriggerAnalyzer.py:2806] - Nested BEGIN block parsing complete
2025-08-14 12:34:58,360 - root - INFO - [common.py:104] - ✅ Completed BEGIN blocks in main section parsing
2025-08-14 12:34:58,360 - root - INFO - [common.py:97] - 🔄 Starting FOR loops in main section parsing
2025-08-14 12:34:58,361 - root - DEBUG - [OracleTriggerAnalyzer.py:1129] - Starting FOR loop parsing
2025-08-14 12:34:58,361 - root - DEBUG - [OracleTriggerAnalyzer.py:1150] - Found FOR loop at line 767 in main_section_lines.begin_end_statements.begin_end_statements
2025-08-14 12:34:58,361 - root - DEBUG - [OracleTriggerAnalyzer.py:1274] - Parsing FOR loop structure starting at line 767: FOR I1 IN (
2025-08-14 12:34:58,361 - root - DEBUG - [OracleTriggerAnalyzer.py:1352] - Found END LOOP at line 780
2025-08-14 12:34:58,362 - root - DEBUG - [OracleTriggerAnalyzer.py:1381] - Successfully parsed FOR loop: I1 IN (SELECT A.THEME_NO, A.REGISTRAT)
2025-08-14 12:34:58,362 - root - DEBUG - [OracleTriggerAnalyzer.py:1162] - Parsed complete FOR loop structure in main_section_lines.begin_end_statements.begin_end_statements
2025-08-14 12:34:58,362 - root - DEBUG - [OracleTriggerAnalyzer.py:1256] - FOR loop parsing complete
2025-08-14 12:34:58,362 - root - INFO - [common.py:104] - ✅ Completed FOR loops in main section parsing
2025-08-14 12:34:58,362 - root - INFO - [common.py:97] - 🔄 Starting assignment statements in main section parsing
2025-08-14 12:34:58,362 - root - DEBUG - [OracleTriggerAnalyzer.py:2159] - Starting assignment statements parsing
2025-08-14 12:34:58,362 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 145 in main_section_lines.begin_end_statements: V_ODG_NO := SUBSTR(:NEW.RESLIN
2025-08-14 12:34:58,362 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_ODG_NO
2025-08-14 12:34:58,362 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 146 in main_section_lines.begin_end_statements: V_RESGRP_CD := SUBSTR(:NEW.RES
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_RESGRP_CD
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 147 in main_section_lines.begin_end_statements: V_RESLIN_CD := SUBSTR(:NEW.RES
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_RESLIN_CD
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 148 in main_section_lines.begin_end_statements: V_RESLIN_DESC := SUBSTR(:NEW.R
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_RESLIN_DESC
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 157 in main_section_lines.begin_end_statements.else_statements: V_STATUS_CD := NULL;
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_STATUS_CD
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 170 in main_section_lines.begin_end_statements.else_statements: V_DBA_CD := NULL;
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_DBA_CD
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 173 in main_section_lines.begin_end_statements: V_MOLEC_IN_LIC_PRTNR := GMD_UT
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_MOLEC_IN_LIC_PRTNR
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 175 in main_section_lines.begin_end_statements.then_statements: V_TRADEMARK_NO := :NEW.TRADEMA
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_TRADEMARK_NO
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 177 in main_section_lines.begin_end_statements.else_statements: V_TRADEMARK_NO := :OLD.TRADEMA
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_TRADEMARK_NO
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 180 in main_section_lines.begin_end_statements: V_THEME_DESC_PROPOSAL := GMD_U
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_THEME_DESC_PROPOSAL
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 185 in main_section_lines.begin_end_statements: V_SHORT_NAME := COALESCE(:NEW.
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_SHORT_NAME
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 194 in main_section_lines.begin_end_statements.then_statements: V_MOLECULE_ID := :NEW.MOLECULE
2025-08-14 12:34:58,363 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_MOLECULE_ID
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 254 in main_section_lines.begin_end_statements.then_statements: V_COUNTER := NULL;
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_COUNTER
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 278 in main_section_lines.begin_end_statements.then_statements: V_COUNTER := NULL;
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_COUNTER
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 279 in main_section_lines.begin_end_statements.then_statements: V_D_REGISTRAT_DATE := SYSDATE;
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_D_REGISTRAT_DATE
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 295 in main_section_lines.begin_end_statements.then_statements.then_statements: V_DESCRIPTION := GMD.GMD_UTIL_
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2243] - Parsed multi-line assignment statement: V_DESCRIPTION
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 312 in main_section_lines.begin_end_statements.then_statements.then_statements: V_DESCRIPTION := TRIM(V_DESCRI
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_DESCRIPTION
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 313 in main_section_lines.begin_end_statements.then_statements.then_statements: V_PORTF_PROJ_CD := 'Y';
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_PORTF_PROJ_CD
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 317 in main_section_lines.begin_end_statements.then_statements.else_statements: V_DESCRIPTION := :NEW.THEME_DE
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_DESCRIPTION
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 318 in main_section_lines.begin_end_statements.then_statements.else_statements: V_PORTF_PROJ_CD := 'N';
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_PORTF_PROJ_CD
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 321 in main_section_lines.begin_end_statements.then_statements: V_COUNTER := NULL;
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_COUNTER
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 332 in main_section_lines.begin_end_statements.then_statements: V_COUNTER := NULL;
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_COUNTER
2025-08-14 12:34:58,364 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 333 in main_section_lines.begin_end_statements.then_statements: V_VALID_TO := TO_DATE('09.09.9
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_VALID_TO
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 334 in main_section_lines.begin_end_statements.then_statements: V_SHORT_NAME := NVL(:NEW.MANUA
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_SHORT_NAME
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 424 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: V_D_REGISTRAT_DATE := TO_DATE(
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_D_REGISTRAT_DATE
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 427 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements: V_D_REGISTRAT_DATE := SYSDATE;
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_D_REGISTRAT_DATE
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 431 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: V_DESCRIPTION := GMD.GMD_UTIL_
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2243] - Parsed multi-line assignment statement: V_DESCRIPTION
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 444 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: V_DESCRIPTION := TRIM(V_DESCRI
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_DESCRIPTION
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 445 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: V_PORTF_PROJ_CD := 'Y';
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_PORTF_PROJ_CD
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 450 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements.else_statements: V_DESCRIPTION := :NEW.THEME_DE
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_DESCRIPTION
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 451 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements.else_statements: V_PORTF_PROJ_CD := :NEW.PORTF_
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_PORTF_PROJ_CD
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 462 in main_section_lines.begin_end_statements.else_if.then_statements: V_COUNTER := NULL;
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_COUNTER
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 474 in main_section_lines.begin_end_statements.else_if.then_statements: V_COUNTER := NULL;
2025-08-14 12:34:58,365 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_COUNTER
2025-08-14 12:34:58,366 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 508 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements: V_COUNTER := NULL;
2025-08-14 12:34:58,366 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_COUNTER
2025-08-14 12:34:58,366 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 522 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements: V_COUNTER := NULL;
2025-08-14 12:34:58,366 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_COUNTER
2025-08-14 12:34:58,366 - root - DEBUG - [OracleTriggerAnalyzer.py:2325] - Assignment statements parsing complete
2025-08-14 12:34:58,366 - root - INFO - [common.py:104] - ✅ Completed assignment statements in main section parsing
2025-08-14 12:34:58,366 - root - INFO - [common.py:97] - 🔄 Starting SQL statements in main section parsing
2025-08-14 12:34:58,366 - root - DEBUG - [OracleTriggerAnalyzer.py:2369] - Starting SQL statements parsing
2025-08-14 12:34:58,366 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 54 in main_section_lines.begin_end_statements: SELECT
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 61 in main_section_lines.begin_end_statements: SELECT
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 70 in main_section_lines.begin_end_statements: SELECT
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 97 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE IN_PREP_NOT_PO
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 101 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE IN_PREP_NOT_CL
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 113 in main_section_lines.begin_end_statements.then_statements.begin_end_statements: SELECT
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 124 in main_section_lines.begin_end_statements.then_statements.exception_statements: RAISE INVALID_MOLECU
2025-08-14 12:34:58,367 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 133 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements: UPDATE V_THEME_MOLEC
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 150 in main_section_lines.begin_end_statements.then_statements: SELECT
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 161 in main_section_lines.begin_end_statements.then_statements: SELECT
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 182 in main_section_lines.begin_end_statements.then_statements: RAISE THEME_DESC_PRO
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 188 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE ADMIN_UPDATE_O
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,368 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 197 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: RAISE PORTF_PROJ_MOL
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 199 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements: INSERT INTO MDM_V_TH
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 214 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements: SELECT
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 227 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements: INSERT INTO THEME_MO
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 244 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: RAISE INVALID_THEME_
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 248 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: RAISE INVALID_THEME_
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 251 in main_section_lines.begin_end_statements.then_statements.else_statements: RAISE INVALID_THEME_
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 257 in main_section_lines.begin_end_statements.then_statements: SELECT
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,369 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 275 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE THEME_NO_CANNO
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 283 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE INSERTSMUSTBEO
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 288 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: RAISE THEMEDESCRIPTI
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 309 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: RAISE DESCRIPTION_TO
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 322 in main_section_lines.begin_end_statements.then_statements: SELECT
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 329 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE THEME_DESC_NOT
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 335 in main_section_lines.begin_end_statements.then_statements: INSERT INTO GMD.THEM
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 391 in main_section_lines.begin_end_statements.then_statements.then_statements: INSERT INTO MDM_V_TH
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 410 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: RAISE ADMIN_UPDATE_O
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 414 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: RAISE THEME_NO_ONLY_
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 448 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements.then_statements: RAISE THEMEDESCRIPTI
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 456 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: RAISE DESCRIPTION_TO
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 463 in main_section_lines.begin_end_statements.else_if.then_statements: SELECT
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 471 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: RAISE THEME_DESC_NOT
2025-08-14 12:34:58,371 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 478 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: UPDATE GMD.THEMES
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 511 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements: SELECT
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 519 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements.then_statements: RAISE ONLYONEOFFICIA
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 523 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements: UPDATE GMD.THEMES
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 559 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: INSERT INTO MDM_V_TH
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 573 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: UPDATE MDM_V_THEME_M
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 582 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: SELECT
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 591 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements.then_statements: RAISE SEC_MOL_LIST_N
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 595 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements.else_statements: UPDATE MDM_V_THEME_M
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 609 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: RAISE ADMIN_UPDATE_O
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,372 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 617 in main_section_lines.begin_end_statements.else_if.then_statements.then_statements: DELETE FROM GMD.THEM
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: delete_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 622 in main_section_lines.begin_end_statements.else_if.then_statements.else_statements: RAISE DELETE_NO_MORE
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 244 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE INVALID_THEME_
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 248 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE INVALID_THEME_
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 251 in main_section_lines.begin_end_statements.else_statements: RAISE INVALID_THEME_
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 559 in main_section_lines.begin_end_statements.then_statements: INSERT INTO MDM_V_TH
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 573 in main_section_lines.begin_end_statements.then_statements: UPDATE MDM_V_THEME_M
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 582 in main_section_lines.begin_end_statements.then_statements: SELECT
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 591 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE SEC_MOL_LIST_N
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 595 in main_section_lines.begin_end_statements.then_statements.else_statements: UPDATE MDM_V_THEME_M
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 632 in main_section_lines.begin_end_statements.then_statements.then_statements: SELECT
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,373 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 644 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: UPDATE MDM_V_NEW_MED
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 655 in main_section_lines.begin_end_statements.then_statements.else_statements.then_statements: UPDATE MDM_V_NEW_MED
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 665 in main_section_lines.begin_end_statements.then_statements.else_statements.else_statements.then_statements: UPDATE MDM_V_NEW_MED
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 673 in main_section_lines.begin_end_statements.then_statements.else_statements.else_statements.then_statements: UPDATE MDM_V_NEW_MED
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 690 in main_section_lines.begin_end_statements.then_statements.then_statements: SELECT
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 700 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: UPDATE MDM_V_NEW_MED
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 715 in main_section_lines.begin_end_statements.then_statements.then_statements: SELECT
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 730 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.begin_end_statements: SELECT
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 741 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.exception_statements: RAISE INVALID_MOLECU
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 745 in main_section_lines.begin_end_statements.then_statements.then_statements: INSERT INTO MDM_V_NE
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 776 in main_section_lines.begin_end_statements.begin_end_statements.loop_statements: DELETE FROM GMD.THEM
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: delete_statement
2025-08-14 12:34:58,374 - root - DEBUG - [OracleTriggerAnalyzer.py:2528] - SQL statements parsing complete
2025-08-14 12:34:58,375 - root - INFO - [common.py:104] - ✅ Completed SQL statements in main section parsing
2025-08-14 12:34:58,375 - root - INFO - [common.py:97] - 🔄 Starting final statement in main section parsing
2025-08-14 12:34:58,375 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: TXO_UTIL.SET_WARNING('No Molec
2025-08-14 12:34:58,375 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: NULL;
2025-08-14 12:34:58,375 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: NULL;
2025-08-14 12:34:58,375 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: NULL;
2025-08-14 12:34:58,375 - root - DEBUG - [OracleTriggerAnalyzer.py:1114] - Final statement parsing complete
2025-08-14 12:34:58,375 - root - INFO - [common.py:104] - ✅ Completed final statement in main section parsing
2025-08-14 12:34:58,376 - root - DEBUG - [OracleTriggerAnalyzer.py:782] - About to remove duplicate case_when structures
2025-08-14 12:34:58,376 - root - DEBUG - [OracleTriggerAnalyzer.py:3867] - Removing duplicate case_when structures
2025-08-14 12:34:58,376 - root - DEBUG - [OracleTriggerAnalyzer.py:3884] - Found case_when structure: case_line_no=241, end_case_line_no=252
2025-08-14 12:34:58,376 - root - DEBUG - [OracleTriggerAnalyzer.py:3895] - Adding new case_when structure: lines 241-252
2025-08-14 12:34:58,376 - root - DEBUG - [OracleTriggerAnalyzer.py:3884] - Found case_when structure: case_line_no=555, end_case_line_no=606
2025-08-14 12:34:58,376 - root - DEBUG - [OracleTriggerAnalyzer.py:3895] - Adding new case_when structure: lines 555-606
2025-08-14 12:34:58,376 - root - DEBUG - [OracleTriggerAnalyzer.py:3884] - Found case_when structure: case_line_no=241, end_case_line_no=252
2025-08-14 12:34:58,376 - root - DEBUG - [OracleTriggerAnalyzer.py:3891] - Removing duplicate case_when structure: lines 241-252
2025-08-14 12:34:58,376 - root - DEBUG - [OracleTriggerAnalyzer.py:3884] - Found case_when structure: case_line_no=555, end_case_line_no=606
2025-08-14 12:34:58,376 - root - DEBUG - [OracleTriggerAnalyzer.py:3891] - Removing duplicate case_when structure: lines 555-606
2025-08-14 12:34:58,377 - root - DEBUG - [OracleTriggerAnalyzer.py:3941] - Duplicate case_when structures removal complete
2025-08-14 12:34:58,377 - root - DEBUG - [OracleTriggerAnalyzer.py:784] - Finished removing duplicate case_when structures
2025-08-14 12:34:58,377 - root - INFO - [common.py:104] - ✅ Completed SQL section parsing parsing
2025-08-14 12:34:58,377 - root - INFO - [common.py:97] - 🔄 Starting rule validation parsing
2025-08-14 12:34:58,378 - root - DEBUG - [OracleTriggerAnalyzer.py:732] - Rule validation complete: found 0 violations
2025-08-14 12:34:58,378 - root - INFO - [common.py:104] - ✅ Completed rule validation parsing
2025-08-14 12:34:58,378 - root - DEBUG - [common.py:127] - ⏱️ OracleTriggerAnalyzer initialization completed in 0.061s
2025-08-14 12:34:58,378 - root - DEBUG - [common.py:69] - OracleTriggerAnalyzer created successfully
2025-08-14 12:34:58,378 - root - DEBUG - [common.py:69] - Generating JSON analysis...
2025-08-14 12:34:58,378 - root - INFO - [common.py:73] - JSON conversion complete: 29 vars, 2 consts, 18 excs, 63 comments
2025-08-14 12:34:58,378 - root - DEBUG - [common.py:69] - JSON analysis generated successfully
2025-08-14 12:34:58,379 - root - DEBUG - [common.py:69] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_strings', 'conversion_stats', 'metadata']
2025-08-14 12:34:58,379 - root - DEBUG - [common.py:69] - Analysis statistics: 29 vars, 2 consts, 18 excs, 63 comments
2025-08-14 12:34:58,379 - root - DEBUG - [common.py:69] - Writing analysis JSON to: files/format_json\trigger1_analysis.json
2025-08-14 12:34:58,384 - root - DEBUG - [common.py:69] - Successfully wrote analysis JSON to files/format_json\trigger1_analysis.json
2025-08-14 12:34:58,384 - root - DEBUG - [common.py:69] - === SQL to JSON processing complete for trigger 1 ===
2025-08-14 12:34:58,384 - root - INFO - [common.py:73] - ✓ Created trigger1_analysis.json
2025-08-14 12:34:58,384 - root - DEBUG - [common.py:69] - === Processing file 2/6: trigger2.sql ===
2025-08-14 12:34:58,384 - root - DEBUG - [common.py:69] - Extracted trigger number: 2
2025-08-14 12:34:58,384 - root - DEBUG - [common.py:69] - Source path: files/oracle\trigger2.sql
2025-08-14 12:34:58,384 - root - DEBUG - [common.py:69] - Output path: files/format_json\trigger2_analysis.json
2025-08-14 12:34:58,384 - root - DEBUG - [common.py:69] - === SQL to JSON processing for trigger 2 ===
2025-08-14 12:34:58,385 - root - DEBUG - [common.py:69] - Reading SQL file: files/oracle\trigger2.sql
2025-08-14 12:34:58,385 - root - DEBUG - [common.py:69] - Successfully read 18805 characters from files/oracle\trigger2.sql
2025-08-14 12:34:58,385 - root - DEBUG - [common.py:69] - Creating OracleTriggerAnalyzer instance...
2025-08-14 12:34:58,385 - root - DEBUG - [common.py:69] - Initializing OracleTriggerAnalyzer with 18805 characters of SQL
2025-08-14 12:34:58,385 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing: 0 lines processed
2025-08-14 12:34:58,385 - root - INFO - [common.py:97] - 🔄 Starting SQL section parsing parsing
2025-08-14 12:34:58,385 - root - INFO - [common.py:97] - 🔄 Starting structured lines conversion parsing
2025-08-14 12:34:58,386 - root - DEBUG - [common.py:69] - Converting SQL content to structured lines
2025-08-14 12:34:58,386 - root - DEBUG - [common.py:69] - Structured lines conversion complete: 422 total, 89 with semicolons, 43 empty lines skipped
2025-08-14 12:34:58,386 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing
2025-08-14 12:34:58,388 - root - DEBUG - [OracleTriggerAnalyzer.py:226] - Block comment stripping complete: 6 comments extracted, 364 lines cleaned
2025-08-14 12:34:58,388 - root - DEBUG - [OracleTriggerAnalyzer.py:298] - Removed block comments from main section
2025-08-14 12:34:58,388 - root - DEBUG - [OracleTriggerAnalyzer.py:273] - Inline comment stripping complete: 67 comments extracted, 315 lines cleaned
2025-08-14 12:34:58,388 - root - DEBUG - [OracleTriggerAnalyzer.py:302] - Removed inline comments from main section
2025-08-14 12:34:58,388 - root - DEBUG - [OracleTriggerAnalyzer.py:314] - Found DECLARE at line 1
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:319] - Found BEGIN at line 18
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:325] - DECLARE section: lines 1-17
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Main section: lines 18
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:359] - Starting declaration parsing
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_MAP_EXISTS
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_MOLEC_ID_MISSING
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_NO_PORTF_MOLECULE_LEFT
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_UPD_INV_MAP
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_INS_INV_MAP
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_INV_MOL_SEQUENCE
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: UPDATE_UPD
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_COUNT_T_MOL_MAP
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_MOLECULE_SEQ_NO
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_SEQ_NO_DUPLICATE_CNT
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,389 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_MANUAL_SHORT_DESC
2025-08-14 12:34:58,390 - root - DEBUG - [common.py:69] - Processing main section from lines 18
2025-08-14 12:34:58,390 - root - INFO - [common.py:97] - 🔄 Starting First BEGIN blocks parsing
2025-08-14 12:34:58,390 - root - DEBUG - [OracleTriggerAnalyzer.py:792] - Starting top-level BEGIN blocks parsing
2025-08-14 12:34:58,390 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - Collected 301 lines from main section
2025-08-14 12:34:58,390 - root - DEBUG - [OracleTriggerAnalyzer.py:821] - Found top-level BEGIN block at line 18 (indent 0)
2025-08-14 12:34:58,390 - root - DEBUG - [OracleTriggerAnalyzer.py:891] - Parsing top-level BEGIN-END block starting at line 18 (indent 0)
2025-08-14 12:34:58,391 - root - DEBUG - [OracleTriggerAnalyzer.py:926] - Found EXCEPTION at line 439
2025-08-14 12:34:58,391 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - Found END; at line 465
2025-08-14 12:34:58,391 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ERR_MAP_EXISTS
2025-08-14 12:34:58,391 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20110', 'handler_string': "'MDM_THEME_MOLECULE_MAP_IOF'"}
2025-08-14 12:34:58,391 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ERR_MOLEC_ID_MISSING
2025-08-14 12:34:58,391 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20111', 'handler_string': "'MDM_THEME_MOLECULE_MAP_IOF'"}
2025-08-14 12:34:58,391 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ERR_UPD_INV_MAP
2025-08-14 12:34:58,391 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20112', 'handler_string': "'MDM_THEME_MOLECULE_MAP_IOF'"}
2025-08-14 12:34:58,391 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ERR_INS_INV_MAP
2025-08-14 12:34:58,391 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20113', 'handler_string': "'MDM_THEME_MOLECULE_MAP_IOF'"}
2025-08-14 12:34:58,392 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ERR_INV_MOL_SEQUENCE
2025-08-14 12:34:58,392 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20120', 'handler_string': "'MDM_THEME_MOLECULE_MAP_IOF'"}
2025-08-14 12:34:58,392 - root - DEBUG - [OracleTriggerAnalyzer.py:3664] - Parsed exception section: 5 handlers
2025-08-14 12:34:58,392 - root - DEBUG - [OracleTriggerAnalyzer.py:957] - Successfully parsed top-level BEGIN-END block: 288 statements, 5 exception handlers
2025-08-14 12:34:58,392 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - Successfully parsed top-level BEGIN-END block from line 18 to 465
2025-08-14 12:34:58,392 - root - DEBUG - [OracleTriggerAnalyzer.py:858] - Top-level BEGIN blocks parsing complete: 1 items in main_section_lines
2025-08-14 12:34:58,392 - root - INFO - [common.py:104] - ✅ Completed First BEGIN blocks parsing
2025-08-14 12:34:58,392 - root - INFO - [common.py:97] - 🔄 Starting CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,392 - root - DEBUG - [OracleTriggerAnalyzer.py:2537] - Starting CASE WHEN ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:2555] - Found CASE statement at line 125 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:2953] - Starting enhanced CASE statement parsing from index 83
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:2973] - CASE statement - Type: simple, Expression: '', Indent: 12
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:2995] - Found END CASE; at line 200 (indent 12)
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 126 (indent 16, case indent 12)
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 137 (indent 20, case indent 12)
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 156 (indent 16, case indent 12)
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 177 (indent 20, case indent 12)
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 196 (indent 16, case indent 12)
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:3400] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:3412] - Processing nested structures in enhanced CASE statement
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:3093] - Completed enhanced CASE statement parsing: 2 when clauses, ELSE at line 196, end at line 200
2025-08-14 12:34:58,393 - root - DEBUG - [OracleTriggerAnalyzer.py:2567] - Parsed complete CASE statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,394 - root - DEBUG - [OracleTriggerAnalyzer.py:2666] - CASE WHEN ELSE parsing complete
2025-08-14 12:34:58,394 - root - INFO - [common.py:104] - ✅ Completed CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,394 - root - INFO - [common.py:97] - 🔄 Starting IF-ELSE statements in main section parsing
2025-08-14 12:34:58,394 - root - DEBUG - [OracleTriggerAnalyzer.py:1434] - Starting IF-ELSIF-ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,394 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 27 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,394 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 21
2025-08-14 12:34:58,394 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(DELETING)', Indent: 4
2025-08-14 12:34:58,394 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 58 (indent 4)
2025-08-14 12:34:58,394 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,394 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 58
2025-08-14 12:34:58,394 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 60 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 42
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INSERTING OR UPDATING)', Indent: 4
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 401 (indent 4)
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:2953] - Starting enhanced CASE statement parsing from index 83
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:2973] - CASE statement - Type: simple, Expression: '', Indent: 12
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:2995] - Found END CASE; at line 200 (indent 12)
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 126 (indent 16, case indent 12)
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 137 (indent 20, case indent 12)
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 156 (indent 16, case indent 12)
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 177 (indent 20, case indent 12)
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 196 (indent 16, case indent 12)
2025-08-14 12:34:58,395 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:3400] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:3412] - Processing nested structures in enhanced CASE statement
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:3093] - Completed enhanced CASE statement parsing: 2 when clauses, ELSE at line 196, end at line 200
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 401
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 68 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 50
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_ID IS NULL)', Indent: 8
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 87 (indent 8)
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 87
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 89 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 53
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(UPDATING)', Indent: 8
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 93 (indent 8)
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,396 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 93
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 90 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 54
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS)', Indent: 12
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 92 (indent 12)
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 92
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 98 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 58
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1'))', Indent: 8
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 122 (indent 8)
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 122
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,397 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 107 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,398 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 67
2025-08-14 12:34:58,398 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_COUNT_T_MOL_MAP > 0)', Indent: 12
2025-08-14 12:34:58,398 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 109 (indent 12)
2025-08-14 12:34:58,398 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,398 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 109
2025-08-14 12:34:58,398 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,398 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 119 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,398 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 78
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_COUNT_T_MOL_MAP > 0)', Indent: 12
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 121 (indent 12)
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 121
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 124 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 82
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INSERTING)', Indent: 8
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 201 (indent 8)
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:2953] - Starting enhanced CASE statement parsing from index 83
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:2973] - CASE statement - Type: simple, Expression: '', Indent: 12
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:2995] - Found END CASE; at line 200 (indent 12)
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 126 (indent 16, case indent 12)
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 137 (indent 20, case indent 12)
2025-08-14 12:34:58,399 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 156 (indent 16, case indent 12)
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 177 (indent 20, case indent 12)
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 196 (indent 16, case indent 12)
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: :NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:3400] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:3412] - Processing nested structures in enhanced CASE statement
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:3093] - Completed enhanced CASE statement parsing: 2 when clauses, ELSE at line 196, end at line 200
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 201
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 127 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 85
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INVALID_MAPPING_EXISTS)', Indent: 20
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 152 (indent 20)
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 137 (indent 20)
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 13 statements
2025-08-14 12:34:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 137, end at line 152
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 167 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 116
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INVALID_MAPPING_EXISTS)', Indent: 20
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 192 (indent 20)
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 177 (indent 20)
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 13 statements
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 177, end at line 192
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 127 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 85
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INVALID_MAPPING_EXISTS)', Indent: 20
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 152 (indent 20)
2025-08-14 12:34:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 137 (indent 20)
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 13 statements
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 137, end at line 152
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 167 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 116
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INVALID_MAPPING_EXISTS)', Indent: 20
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 192 (indent 20)
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 177 (indent 20)
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 13 statements
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 177, end at line 192
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 202 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 143
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(UPDATING)', Indent: 8
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 393 (indent 8)
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 393
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 203 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 144
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_ID IS NOT NULL)', Indent: 12
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 289 (indent 12)
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 289
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 204 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,403 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 145
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR)', Indent: 16
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 211 (indent 16)
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 211
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 213 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 153
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)', Indent: 16
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 285 (indent 16)
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 285
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 228 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 160
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO)', Indent: 20
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 250 (indent 20)
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 239 (indent 20)
2025-08-14 12:34:58,404 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 8 statements
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 239, end at line 250
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 254 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 179
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INVALID_MAPPING_EXISTS)', Indent: 20
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 280 (indent 20)
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 265 (indent 20)
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 13 statements
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 265, end at line 280
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 291 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 205
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO)', Indent: 12
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 351 (indent 12)
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,405 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 351
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 320 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 220
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INVALID_MAPPING_EXISTS)', Indent: 16
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 346 (indent 16)
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 331 (indent 16)
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 13 statements
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 331, end at line 346
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 352 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 245
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO', Indent: 12
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 392 (indent 12)
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 392
2025-08-14 12:34:58,406 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 363 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 253
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INVALID_MAPPING_EXISTS)', Indent: 16
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 387 (indent 16)
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 374 (indent 16)
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 11 statements
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 374, end at line 387
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 127 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 85
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INVALID_MAPPING_EXISTS)', Indent: 20
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 152 (indent 20)
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 137 (indent 20)
2025-08-14 12:34:58,407 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 13 statements
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 137, end at line 152
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 167 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 116
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INVALID_MAPPING_EXISTS)', Indent: 20
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 192 (indent 20)
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 177 (indent 20)
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 13 statements
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 177, end at line 192
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 419 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 300
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_SEQ_NO_DUPLICATE_CNT > 0)', Indent: 4
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 421 (indent 4)
2025-08-14 12:34:58,408 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,409 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 421
2025-08-14 12:34:58,409 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,409 - root - DEBUG - [OracleTriggerAnalyzer.py:1563] - IF-ELSIF-ELSE parsing complete
2025-08-14 12:34:58,409 - root - INFO - [common.py:104] - ✅ Completed IF-ELSE statements in main section parsing
2025-08-14 12:34:58,409 - root - INFO - [common.py:97] - 🔄 Starting BEGIN blocks in main section parsing
2025-08-14 12:34:58,409 - root - DEBUG - [OracleTriggerAnalyzer.py:2681] - Starting nested BEGIN block parsing
2025-08-14 12:34:58,410 - root - DEBUG - [OracleTriggerAnalyzer.py:2806] - Nested BEGIN block parsing complete
2025-08-14 12:34:58,410 - root - INFO - [common.py:104] - ✅ Completed BEGIN blocks in main section parsing
2025-08-14 12:34:58,410 - root - INFO - [common.py:97] - 🔄 Starting FOR loops in main section parsing
2025-08-14 12:34:58,410 - root - DEBUG - [OracleTriggerAnalyzer.py:1129] - Starting FOR loop parsing
2025-08-14 12:34:58,411 - root - DEBUG - [OracleTriggerAnalyzer.py:1256] - FOR loop parsing complete
2025-08-14 12:34:58,411 - root - INFO - [common.py:104] - ✅ Completed FOR loops in main section parsing
2025-08-14 12:34:58,411 - root - INFO - [common.py:97] - 🔄 Starting assignment statements in main section parsing
2025-08-14 12:34:58,411 - root - DEBUG - [OracleTriggerAnalyzer.py:2159] - Starting assignment statements parsing
2025-08-14 12:34:58,411 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 120 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: INVALID_MAPPING_EXISTS := TRUE
2025-08-14 12:34:58,412 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,412 - root - DEBUG - [OracleTriggerAnalyzer.py:2325] - Assignment statements parsing complete
2025-08-14 12:34:58,412 - root - INFO - [common.py:104] - ✅ Completed assignment statements in main section parsing
2025-08-14 12:34:58,412 - root - INFO - [common.py:97] - 🔄 Starting SQL statements in main section parsing
2025-08-14 12:34:58,412 - root - DEBUG - [OracleTriggerAnalyzer.py:2369] - Starting SQL statements parsing
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 21 in main_section_lines.begin_end_statements: SELECT
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 33 in main_section_lines.begin_end_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 41 in main_section_lines.begin_end_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 61 in main_section_lines.begin_end_statements.then_statements: SELECT
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 69 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE ERR_MOLEC_ID_M
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 91 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: RAISE ERR_UPD_INV_MA
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 99 in main_section_lines.begin_end_statements.then_statements.then_statements: SELECT
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 108 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: RAISE ERR_MAP_EXISTS
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 111 in main_section_lines.begin_end_statements.then_statements.then_statements: SELECT
2025-08-14 12:34:58,413 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 130 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 139 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.else_statements: INSERT INTO THEME_MO
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 158 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 170 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 179 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.else_statements: INSERT INTO THEME_MO
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 199 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements: RAISE ERR_INS_INV_MA
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 130 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 139 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements: INSERT INTO THEME_MO
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 158 in main_section_lines.begin_end_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 170 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 179 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements: INSERT INTO THEME_MO
2025-08-14 12:34:58,414 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 199 in main_section_lines.begin_end_statements.then_statements.else_statements: RAISE ERR_INS_INV_MA
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 205 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 222 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 231 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 242 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements.else_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 257 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 267 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements.else_statements: INSERT INTO THEME_MO
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 302 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 310 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 323 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 333 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.else_statements: INSERT INTO THEME_MO
2025-08-14 12:34:58,415 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 355 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 366 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 376 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements.else_statements: INSERT INTO THEME_MO
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 130 in main_section_lines.begin_end_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 139 in main_section_lines.begin_end_statements.then_statements.else_statements: INSERT INTO THEME_MO
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 158 in main_section_lines.begin_end_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 170 in main_section_lines.begin_end_statements.then_statements.then_statements: UPDATE THEME_MOLECUL
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 179 in main_section_lines.begin_end_statements.then_statements.else_statements: INSERT INTO THEME_MO
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 199 in main_section_lines.begin_end_statements.else_statements: RAISE ERR_INS_INV_MA
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 403 in main_section_lines.begin_end_statements: SELECT
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 420 in main_section_lines.begin_end_statements.then_statements: RAISE ERR_INV_MOL_SE
2025-08-14 12:34:58,416 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,417 - root - DEBUG - [OracleTriggerAnalyzer.py:2528] - SQL statements parsing complete
2025-08-14 12:34:58,417 - root - INFO - [common.py:104] - ✅ Completed SQL statements in main section parsing
2025-08-14 12:34:58,417 - root - INFO - [common.py:97] - 🔄 Starting final statement in main section parsing
2025-08-14 12:34:58,417 - root - DEBUG - [OracleTriggerAnalyzer.py:989] - Found multi-line statement starting at line 52 in main_section_lines.begin_end_statements.then_statements: MDMAPPL.MDM_UTIL_THEMES.REFRES
2025-08-14 12:34:58,417 - root - DEBUG - [OracleTriggerAnalyzer.py:1027] - Parsed multi-line final statement: MDMAPPL.MDM_UTIL_THEMES.REFRES
2025-08-14 12:34:58,418 - root - DEBUG - [OracleTriggerAnalyzer.py:989] - Found multi-line statement starting at line 395 in main_section_lines.begin_end_statements.then_statements: MDMAPPL.MDM_UTIL_THEMES.REFRES
2025-08-14 12:34:58,418 - root - DEBUG - [OracleTriggerAnalyzer.py:1027] - Parsed multi-line final statement: MDMAPPL.MDM_UTIL_THEMES.REFRES
2025-08-14 12:34:58,418 - root - DEBUG - [OracleTriggerAnalyzer.py:1114] - Final statement parsing complete
2025-08-14 12:34:58,418 - root - INFO - [common.py:104] - ✅ Completed final statement in main section parsing
2025-08-14 12:34:58,419 - root - DEBUG - [OracleTriggerAnalyzer.py:782] - About to remove duplicate case_when structures
2025-08-14 12:34:58,419 - root - DEBUG - [OracleTriggerAnalyzer.py:3867] - Removing duplicate case_when structures
2025-08-14 12:34:58,419 - root - DEBUG - [OracleTriggerAnalyzer.py:3884] - Found case_when structure: case_line_no=125, end_case_line_no=200
2025-08-14 12:34:58,419 - root - DEBUG - [OracleTriggerAnalyzer.py:3895] - Adding new case_when structure: lines 125-200
2025-08-14 12:34:58,419 - root - DEBUG - [OracleTriggerAnalyzer.py:3884] - Found case_when structure: case_line_no=125, end_case_line_no=200
2025-08-14 12:34:58,419 - root - DEBUG - [OracleTriggerAnalyzer.py:3891] - Removing duplicate case_when structure: lines 125-200
2025-08-14 12:34:58,419 - root - DEBUG - [OracleTriggerAnalyzer.py:3884] - Found case_when structure: case_line_no=125, end_case_line_no=200
2025-08-14 12:34:58,419 - root - DEBUG - [OracleTriggerAnalyzer.py:3891] - Removing duplicate case_when structure: lines 125-200
2025-08-14 12:34:58,419 - root - DEBUG - [OracleTriggerAnalyzer.py:3941] - Duplicate case_when structures removal complete
2025-08-14 12:34:58,419 - root - DEBUG - [OracleTriggerAnalyzer.py:784] - Finished removing duplicate case_when structures
2025-08-14 12:34:58,420 - root - INFO - [common.py:104] - ✅ Completed SQL section parsing parsing
2025-08-14 12:34:58,420 - root - INFO - [common.py:97] - 🔄 Starting rule validation parsing
2025-08-14 12:34:58,420 - root - DEBUG - [OracleTriggerAnalyzer.py:732] - Rule validation complete: found 0 violations
2025-08-14 12:34:58,420 - root - INFO - [common.py:104] - ✅ Completed rule validation parsing
2025-08-14 12:34:58,421 - root - DEBUG - [common.py:127] - ⏱️ OracleTriggerAnalyzer initialization completed in 0.036s
2025-08-14 12:34:58,421 - root - DEBUG - [common.py:69] - OracleTriggerAnalyzer created successfully
2025-08-14 12:34:58,421 - root - DEBUG - [common.py:69] - Generating JSON analysis...
2025-08-14 12:34:58,421 - root - INFO - [common.py:73] - JSON conversion complete: 6 vars, 0 consts, 7 excs, 73 comments
2025-08-14 12:34:58,421 - root - DEBUG - [common.py:69] - JSON analysis generated successfully
2025-08-14 12:34:58,421 - root - DEBUG - [common.py:69] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_strings', 'conversion_stats', 'metadata']
2025-08-14 12:34:58,421 - root - DEBUG - [common.py:69] - Analysis statistics: 6 vars, 0 consts, 7 excs, 73 comments
2025-08-14 12:34:58,422 - root - DEBUG - [common.py:69] - Writing analysis JSON to: files/format_json\trigger2_analysis.json
2025-08-14 12:34:58,425 - root - DEBUG - [common.py:69] - Successfully wrote analysis JSON to files/format_json\trigger2_analysis.json
2025-08-14 12:34:58,425 - root - DEBUG - [common.py:69] - === SQL to JSON processing complete for trigger 2 ===
2025-08-14 12:34:58,426 - root - INFO - [common.py:73] - ✓ Created trigger2_analysis.json
2025-08-14 12:34:58,426 - root - DEBUG - [common.py:69] - === Processing file 3/6: trigger3.sql ===
2025-08-14 12:34:58,426 - root - DEBUG - [common.py:69] - Extracted trigger number: 3
2025-08-14 12:34:58,426 - root - DEBUG - [common.py:69] - Source path: files/oracle\trigger3.sql
2025-08-14 12:34:58,426 - root - DEBUG - [common.py:69] - Output path: files/format_json\trigger3_analysis.json
2025-08-14 12:34:58,426 - root - DEBUG - [common.py:69] - === SQL to JSON processing for trigger 3 ===
2025-08-14 12:34:58,426 - root - DEBUG - [common.py:69] - Reading SQL file: files/oracle\trigger3.sql
2025-08-14 12:34:58,426 - root - DEBUG - [common.py:69] - Successfully read 12985 characters from files/oracle\trigger3.sql
2025-08-14 12:34:58,426 - root - DEBUG - [common.py:69] - Creating OracleTriggerAnalyzer instance...
2025-08-14 12:34:58,426 - root - DEBUG - [common.py:69] - Initializing OracleTriggerAnalyzer with 12985 characters of SQL
2025-08-14 12:34:58,426 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing: 0 lines processed
2025-08-14 12:34:58,427 - root - INFO - [common.py:97] - 🔄 Starting SQL section parsing parsing
2025-08-14 12:34:58,427 - root - INFO - [common.py:97] - 🔄 Starting structured lines conversion parsing
2025-08-14 12:34:58,427 - root - DEBUG - [common.py:69] - Converting SQL content to structured lines
2025-08-14 12:34:58,428 - root - DEBUG - [common.py:69] - Structured lines conversion complete: 244 total, 58 with semicolons, 21 empty lines skipped
2025-08-14 12:34:58,428 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing
2025-08-14 12:34:58,428 - root - DEBUG - [OracleTriggerAnalyzer.py:226] - Block comment stripping complete: 0 comments extracted, 244 lines cleaned
2025-08-14 12:34:58,428 - root - DEBUG - [OracleTriggerAnalyzer.py:298] - Removed block comments from main section
2025-08-14 12:34:58,428 - root - DEBUG - [OracleTriggerAnalyzer.py:273] - Inline comment stripping complete: 17 comments extracted, 227 lines cleaned
2025-08-14 12:34:58,428 - root - DEBUG - [OracleTriggerAnalyzer.py:302] - Removed inline comments from main section
2025-08-14 12:34:58,428 - root - DEBUG - [OracleTriggerAnalyzer.py:314] - Found DECLARE at line 1
2025-08-14 12:34:58,428 - root - DEBUG - [OracleTriggerAnalyzer.py:319] - Found BEGIN at line 14
2025-08-14 12:34:58,428 - root - DEBUG - [OracleTriggerAnalyzer.py:325] - DECLARE section: lines 1-13
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Main section: lines 14
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:359] - Starting declaration parsing
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_TRIGGER_NAME
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: CNTR
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_UPD
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_INS
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_CTRY_CHG
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_NOT_ALLOWED_TO_INVALIDATE
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_USERID
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: TEST_ERR
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_COUNTRY_CD
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_COMPANY_TYPE_CD
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: ERR_INS_LEGAL_ADDR
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_VALID_FROM
2025-08-14 12:34:58,429 - root - DEBUG - [common.py:69] - Processing main section from lines 14
2025-08-14 12:34:58,429 - root - INFO - [common.py:97] - 🔄 Starting First BEGIN blocks parsing
2025-08-14 12:34:58,429 - root - DEBUG - [OracleTriggerAnalyzer.py:792] - Starting top-level BEGIN blocks parsing
2025-08-14 12:34:58,430 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - Collected 214 lines from main section
2025-08-14 12:34:58,430 - root - DEBUG - [OracleTriggerAnalyzer.py:821] - Found top-level BEGIN block at line 14 (indent 0)
2025-08-14 12:34:58,430 - root - DEBUG - [OracleTriggerAnalyzer.py:891] - Parsing top-level BEGIN-END block starting at line 14 (indent 0)
2025-08-14 12:34:58,430 - root - DEBUG - [OracleTriggerAnalyzer.py:926] - Found EXCEPTION at line 252
2025-08-14 12:34:58,430 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - Found END; at line 265
2025-08-14 12:34:58,430 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ERR_UPD
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20111', 'handler_string': "'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"}
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ERR_INS
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20112', 'handler_string': "'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"}
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ERR_CTRY_CHG
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20113', 'handler_string': "'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"}
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: TEST_ERR
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20113', 'handler_string': "'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"}
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ERR_INS_LEGAL_ADDR
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20113', 'handler_string': "'The legal address cannot be inserted for this type of company'"}
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: ERR_NOT_ALLOWED_TO_INVALIDATE
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20113', 'handler_string': "'It is not allowed to invalidate/delete this type of address'"}
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:3664] - Parsed exception section: 6 handlers
2025-08-14 12:34:58,431 - root - DEBUG - [OracleTriggerAnalyzer.py:957] - Successfully parsed top-level BEGIN-END block: 199 statements, 6 exception handlers
2025-08-14 12:34:58,432 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - Successfully parsed top-level BEGIN-END block from line 14 to 265
2025-08-14 12:34:58,432 - root - DEBUG - [OracleTriggerAnalyzer.py:858] - Top-level BEGIN blocks parsing complete: 1 items in main_section_lines
2025-08-14 12:34:58,432 - root - INFO - [common.py:104] - ✅ Completed First BEGIN blocks parsing
2025-08-14 12:34:58,432 - root - INFO - [common.py:97] - 🔄 Starting CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,432 - root - DEBUG - [OracleTriggerAnalyzer.py:2537] - Starting CASE WHEN ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,432 - root - DEBUG - [OracleTriggerAnalyzer.py:2666] - CASE WHEN ELSE parsing complete
2025-08-14 12:34:58,432 - root - INFO - [common.py:104] - ✅ Completed CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,432 - root - INFO - [common.py:97] - 🔄 Starting IF-ELSE statements in main section parsing
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1434] - Starting IF-ELSIF-ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 30 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 28
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INSERTING)', Indent: 4
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 34 (indent 4)
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 34
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 31 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 29
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(CNTR > 0)', Indent: 8
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 33 (indent 8)
2025-08-14 12:34:58,433 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 33
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 36 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 33
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INSERTING OR UPDATING)', Indent: 4
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 243 (indent 4)
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 243
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 43 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 40
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L'))', Indent: 8
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 45 (indent 8)
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 45
2025-08-14 12:34:58,434 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 47 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 43
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L'))', Indent: 8
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 196 (indent 8)
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 196
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 48 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 44
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID)', Indent: 12
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 50 (indent 12)
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 50
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 52 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,435 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 47
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(CNTR = 0)', Indent: 12
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 195 (indent 12)
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 73 (indent 12)
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 96 statements
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 73, end at line 195
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 76 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 67
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID)', Indent: 16
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 194 (indent 16)
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 173 (indent 16)
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 18 statements
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 173, end at line 194
2025-08-14 12:34:58,436 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 114 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 96
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0)', Indent: 20
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 172 (indent 20)
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 172
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 126 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 103
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01')', Indent: 24
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 134 (indent 24)
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 130 (indent 24)
2025-08-14 12:34:58,437 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,438 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,438 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 130, end at line 134
2025-08-14 12:34:58,438 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements
2025-08-14 12:34:58,438 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 148 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements
2025-08-14 12:34:58,438 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 118
2025-08-14 12:34:58,438 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(V_COMPANY_TYPE_CD = 'L')', Indent: 24
2025-08-14 12:34:58,438 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 171 (indent 24)
2025-08-14 12:34:58,438 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 171
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 198 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 165
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L'))', Indent: 8
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 242 (indent 8)
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 242
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 199 in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 166
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(CNTR = 0)', Indent: 12
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 241 (indent 12)
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:1700] - Found ELSE clause at line 220 (indent 12)
2025-08-14 12:34:58,439 - root - DEBUG - [OracleTriggerAnalyzer.py:2042] - Parsed ELSE clause with 18 statements
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line 220, end at line 241
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements.then_statements
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 245 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 207
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(DELETING)', Indent: 4
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 251 (indent 4)
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 251
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 246 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 208
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P'))', Indent: 8
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 248 (indent 8)
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 248
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,440 - root - DEBUG - [OracleTriggerAnalyzer.py:1563] - IF-ELSIF-ELSE parsing complete
2025-08-14 12:34:58,440 - root - INFO - [common.py:104] - ✅ Completed IF-ELSE statements in main section parsing
2025-08-14 12:34:58,441 - root - INFO - [common.py:97] - 🔄 Starting BEGIN blocks in main section parsing
2025-08-14 12:34:58,441 - root - DEBUG - [OracleTriggerAnalyzer.py:2681] - Starting nested BEGIN block parsing
2025-08-14 12:34:58,441 - root - DEBUG - [OracleTriggerAnalyzer.py:2699] - Found nested BEGIN block at line 15 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,441 - root - DEBUG - [OracleTriggerAnalyzer.py:2824] - Parsing BEGIN-END block starting at line 15
2025-08-14 12:34:58,441 - root - DEBUG - [OracleTriggerAnalyzer.py:2880] - Found EXCEPTION section at line 17
2025-08-14 12:34:58,441 - root - DEBUG - [OracleTriggerAnalyzer.py:2891] - Parsed exception handler: OTHERS
2025-08-14 12:34:58,441 - root - DEBUG - [OracleTriggerAnalyzer.py:2871] - Ended main BEGIN block at line 20
2025-08-14 12:34:58,441 - root - DEBUG - [OracleTriggerAnalyzer.py:2712] - Parsed complete nested BEGIN block structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,442 - root - DEBUG - [OracleTriggerAnalyzer.py:2806] - Nested BEGIN block parsing complete
2025-08-14 12:34:58,442 - root - INFO - [common.py:104] - ✅ Completed BEGIN blocks in main section parsing
2025-08-14 12:34:58,442 - root - INFO - [common.py:97] - 🔄 Starting FOR loops in main section parsing
2025-08-14 12:34:58,442 - root - DEBUG - [OracleTriggerAnalyzer.py:1129] - Starting FOR loop parsing
2025-08-14 12:34:58,442 - root - DEBUG - [OracleTriggerAnalyzer.py:1150] - Found FOR loop at line 149 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,442 - root - DEBUG - [OracleTriggerAnalyzer.py:1274] - Parsing FOR loop structure starting at line 149: FOR V_REC IN (
2025-08-14 12:34:58,442 - root - DEBUG - [OracleTriggerAnalyzer.py:1352] - Found END LOOP at line 170
2025-08-14 12:34:58,442 - root - DEBUG - [OracleTriggerAnalyzer.py:1381] - Successfully parsed FOR loop: V_REC IN (SELECT COMPANY_CD FROM CFG_V_C)
2025-08-14 12:34:58,442 - root - DEBUG - [OracleTriggerAnalyzer.py:1162] - Parsed complete FOR loop structure in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements.then_statements
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:1256] - FOR loop parsing complete
2025-08-14 12:34:58,443 - root - INFO - [common.py:104] - ✅ Completed FOR loops in main section parsing
2025-08-14 12:34:58,443 - root - INFO - [common.py:97] - 🔄 Starting assignment statements in main section parsing
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2159] - Starting assignment statements parsing
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 16 in main_section_lines.begin_end_statements.begin_end_statements: V_USERID := TXO_UTIL.GET_USERI
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_USERID
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 19 in main_section_lines.begin_end_statements.exception_statements: V_USERID := USER;
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_USERID
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 22 in main_section_lines.begin_end_statements: CNTR := 0;
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: CNTR
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 102 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements: CNTR := 0;
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: CNTR
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 129 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements.then_statements: V_VALID_FROM := TO_DATE(ADD_MO
2025-08-14 12:34:58,443 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_VALID_FROM
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 133 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements.else_statements: V_VALID_FROM := TO_DATE(ADD_MO
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_VALID_FROM
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2325] - Assignment statements parsing complete
2025-08-14 12:34:58,444 - root - INFO - [common.py:104] - ✅ Completed assignment statements in main section parsing
2025-08-14 12:34:58,444 - root - INFO - [common.py:97] - 🔄 Starting SQL statements in main section parsing
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2369] - Starting SQL statements parsing
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 23 in main_section_lines.begin_end_statements: SELECT
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 32 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE ERR_INS;
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 37 in main_section_lines.begin_end_statements.then_statements: SELECT
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,444 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 44 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE ERR_INS_LEGAL_
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 49 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: RAISE ERR_CTRY_CHG;
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 105 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements: SELECT
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 118 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements: SELECT
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: select_statement
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 247 in main_section_lines.begin_end_statements.then_statements.then_statements: RAISE ERR_NOT_ALLOWE
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:2528] - SQL statements parsing complete
2025-08-14 12:34:58,445 - root - INFO - [common.py:104] - ✅ Completed SQL statements in main section parsing
2025-08-14 12:34:58,445 - root - INFO - [common.py:97] - 🔄 Starting final statement in main section parsing
2025-08-14 12:34:58,445 - root - DEBUG - [OracleTriggerAnalyzer.py:989] - Found multi-line statement starting at line 55 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:1027] - Parsed multi-line final statement: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:989] - Found multi-line statement starting at line 82 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:1027] - Parsed multi-line final statement: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:989] - Found multi-line statement starting at line 136 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements: MDM_UTIL_COMPANIES.MODIFYCOMPA
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:1027] - Parsed multi-line final statement: MDM_UTIL_COMPANIES.MODIFYCOMPA
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:989] - Found multi-line statement starting at line 160 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.then_statements.then_statements.then_statements.loop_statements: MDM_UTIL_COMPANIES.MODIFYCOMPA
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:1027] - Parsed multi-line final statement: MDM_UTIL_COMPANIES.MODIFYCOMPA
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:989] - Found multi-line statement starting at line 176 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements.else_statements: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:1027] - Parsed multi-line final statement: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:989] - Found multi-line statement starting at line 202 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:1027] - Parsed multi-line final statement: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:989] - Found multi-line statement starting at line 223 in main_section_lines.begin_end_statements.then_statements.then_statements.else_statements: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:1027] - Parsed multi-line final statement: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: MDM_UTIL_ADDRESSES.MODIFY_COMP
2025-08-14 12:34:58,446 - root - DEBUG - [OracleTriggerAnalyzer.py:1114] - Final statement parsing complete
2025-08-14 12:34:58,446 - root - INFO - [common.py:104] - ✅ Completed final statement in main section parsing
2025-08-14 12:34:58,447 - root - DEBUG - [OracleTriggerAnalyzer.py:782] - About to remove duplicate case_when structures
2025-08-14 12:34:58,447 - root - DEBUG - [OracleTriggerAnalyzer.py:3867] - Removing duplicate case_when structures
2025-08-14 12:34:58,447 - root - DEBUG - [OracleTriggerAnalyzer.py:3941] - Duplicate case_when structures removal complete
2025-08-14 12:34:58,447 - root - DEBUG - [OracleTriggerAnalyzer.py:784] - Finished removing duplicate case_when structures
2025-08-14 12:34:58,447 - root - INFO - [common.py:104] - ✅ Completed SQL section parsing parsing
2025-08-14 12:34:58,447 - root - INFO - [common.py:97] - 🔄 Starting rule validation parsing
2025-08-14 12:34:58,448 - root - DEBUG - [OracleTriggerAnalyzer.py:732] - Rule validation complete: found 0 violations
2025-08-14 12:34:58,448 - root - INFO - [common.py:104] - ✅ Completed rule validation parsing
2025-08-14 12:34:58,448 - root - DEBUG - [common.py:127] - ⏱️ OracleTriggerAnalyzer initialization completed in 0.021s
2025-08-14 12:34:58,448 - root - DEBUG - [common.py:69] - OracleTriggerAnalyzer created successfully
2025-08-14 12:34:58,448 - root - DEBUG - [common.py:69] - Generating JSON analysis...
2025-08-14 12:34:58,448 - root - INFO - [common.py:73] - JSON conversion complete: 6 vars, 0 consts, 6 excs, 17 comments
2025-08-14 12:34:58,448 - root - DEBUG - [common.py:69] - JSON analysis generated successfully
2025-08-14 12:34:58,448 - root - DEBUG - [common.py:69] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_strings', 'conversion_stats', 'metadata']
2025-08-14 12:34:58,448 - root - DEBUG - [common.py:69] - Analysis statistics: 6 vars, 0 consts, 6 excs, 17 comments
2025-08-14 12:34:58,449 - root - DEBUG - [common.py:69] - Writing analysis JSON to: files/format_json\trigger3_analysis.json
2025-08-14 12:34:58,451 - root - DEBUG - [common.py:69] - Successfully wrote analysis JSON to files/format_json\trigger3_analysis.json
2025-08-14 12:34:58,451 - root - DEBUG - [common.py:69] - === SQL to JSON processing complete for trigger 3 ===
2025-08-14 12:34:58,451 - root - INFO - [common.py:73] - ✓ Created trigger3_analysis.json
2025-08-14 12:34:58,451 - root - DEBUG - [common.py:69] - === Processing file 4/6: trigger4.sql ===
2025-08-14 12:34:58,451 - root - DEBUG - [common.py:69] - Extracted trigger number: 4
2025-08-14 12:34:58,451 - root - DEBUG - [common.py:69] - Source path: files/oracle\trigger4.sql
2025-08-14 12:34:58,451 - root - DEBUG - [common.py:69] - Output path: files/format_json\trigger4_analysis.json
2025-08-14 12:34:58,451 - root - DEBUG - [common.py:69] - === SQL to JSON processing for trigger 4 ===
2025-08-14 12:34:58,451 - root - DEBUG - [common.py:69] - Reading SQL file: files/oracle\trigger4.sql
2025-08-14 12:34:58,452 - root - DEBUG - [common.py:69] - Successfully read 4077 characters from files/oracle\trigger4.sql
2025-08-14 12:34:58,452 - root - DEBUG - [common.py:69] - Creating OracleTriggerAnalyzer instance...
2025-08-14 12:34:58,452 - root - DEBUG - [common.py:69] - Initializing OracleTriggerAnalyzer with 4077 characters of SQL
2025-08-14 12:34:58,452 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing: 0 lines processed
2025-08-14 12:34:58,452 - root - INFO - [common.py:97] - 🔄 Starting SQL section parsing parsing
2025-08-14 12:34:58,453 - root - INFO - [common.py:97] - 🔄 Starting structured lines conversion parsing
2025-08-14 12:34:58,453 - root - DEBUG - [common.py:69] - Converting SQL content to structured lines
2025-08-14 12:34:58,453 - root - DEBUG - [common.py:69] - Structured lines conversion complete: 22 total, 16 with semicolons, 1 empty lines skipped
2025-08-14 12:34:58,453 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing
2025-08-14 12:34:58,453 - root - DEBUG - [OracleTriggerAnalyzer.py:226] - Block comment stripping complete: 0 comments extracted, 22 lines cleaned
2025-08-14 12:34:58,453 - root - DEBUG - [OracleTriggerAnalyzer.py:298] - Removed block comments from main section
2025-08-14 12:34:58,453 - root - DEBUG - [OracleTriggerAnalyzer.py:273] - Inline comment stripping complete: 0 comments extracted, 22 lines cleaned
2025-08-14 12:34:58,453 - root - DEBUG - [OracleTriggerAnalyzer.py:302] - Removed inline comments from main section
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:314] - Found DECLARE at line 1
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:319] - Found BEGIN at line 9
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:325] - DECLARE section: lines 1-8
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Main section: lines 9
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:359] - Starting declaration parsing
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_ACTION
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: COL_NAMES
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: COL_NEW_VALUES
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: COL_OLD_VALUES
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_TABLE_NAME
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_SCHEMA_NAME
2025-08-14 12:34:58,454 - root - DEBUG - [common.py:69] - Processing main section from lines 9
2025-08-14 12:34:58,454 - root - INFO - [common.py:97] - 🔄 Starting First BEGIN blocks parsing
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:792] - Starting top-level BEGIN blocks parsing
2025-08-14 12:34:58,454 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - Collected 14 lines from main section
2025-08-14 12:34:58,455 - root - DEBUG - [OracleTriggerAnalyzer.py:821] - Found top-level BEGIN block at line 9 (indent 0)
2025-08-14 12:34:58,455 - root - DEBUG - [OracleTriggerAnalyzer.py:891] - Parsing top-level BEGIN-END block starting at line 9 (indent 0)
2025-08-14 12:34:58,455 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - Found END; at line 23
2025-08-14 12:34:58,455 - root - DEBUG - [OracleTriggerAnalyzer.py:957] - Successfully parsed top-level BEGIN-END block: 12 statements, 0 exception handlers
2025-08-14 12:34:58,455 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - Successfully parsed top-level BEGIN-END block from line 9 to 23
2025-08-14 12:34:58,455 - root - DEBUG - [OracleTriggerAnalyzer.py:858] - Top-level BEGIN blocks parsing complete: 1 items in main_section_lines
2025-08-14 12:34:58,455 - root - INFO - [common.py:104] - ✅ Completed First BEGIN blocks parsing
2025-08-14 12:34:58,455 - root - INFO - [common.py:97] - 🔄 Starting CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,455 - root - DEBUG - [OracleTriggerAnalyzer.py:2537] - Starting CASE WHEN ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,455 - root - DEBUG - [OracleTriggerAnalyzer.py:2666] - CASE WHEN ELSE parsing complete
2025-08-14 12:34:58,455 - root - INFO - [common.py:104] - ✅ Completed CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,456 - root - INFO - [common.py:97] - 🔄 Starting IF-ELSE statements in main section parsing
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:1434] - Starting IF-ELSIF-ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 10 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 9
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: 'TG_OP = 'INSERT'', Indent: 4
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 16 (indent 4)
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:1691] - Found ELSIF clause at line 12 (indent 4)
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:1691] - Found ELSIF clause at line 14 (indent 4)
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:2002] - Parsed ELSIF clause: TG_OP = 'UPDATE'
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:2002] - Parsed ELSIF clause: TG_OP = 'DELETE'
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 2 else_if clauses, ELSE at line None, end at line 16
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,456 - root - DEBUG - [OracleTriggerAnalyzer.py:1563] - IF-ELSIF-ELSE parsing complete
2025-08-14 12:34:58,456 - root - INFO - [common.py:104] - ✅ Completed IF-ELSE statements in main section parsing
2025-08-14 12:34:58,457 - root - INFO - [common.py:97] - 🔄 Starting BEGIN blocks in main section parsing
2025-08-14 12:34:58,457 - root - DEBUG - [OracleTriggerAnalyzer.py:2681] - Starting nested BEGIN block parsing
2025-08-14 12:34:58,457 - root - DEBUG - [OracleTriggerAnalyzer.py:2806] - Nested BEGIN block parsing complete
2025-08-14 12:34:58,457 - root - INFO - [common.py:104] - ✅ Completed BEGIN blocks in main section parsing
2025-08-14 12:34:58,457 - root - INFO - [common.py:97] - 🔄 Starting FOR loops in main section parsing
2025-08-14 12:34:58,458 - root - DEBUG - [OracleTriggerAnalyzer.py:1129] - Starting FOR loop parsing
2025-08-14 12:34:58,458 - root - DEBUG - [OracleTriggerAnalyzer.py:1256] - FOR loop parsing complete
2025-08-14 12:34:58,458 - root - INFO - [common.py:104] - ✅ Completed FOR loops in main section parsing
2025-08-14 12:34:58,458 - root - INFO - [common.py:97] - 🔄 Starting assignment statements in main section parsing
2025-08-14 12:34:58,458 - root - DEBUG - [OracleTriggerAnalyzer.py:2159] - Starting assignment statements parsing
2025-08-14 12:34:58,458 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 11 in main_section_lines.begin_end_statements.then_statements: V_ACTION := 'I';
2025-08-14 12:34:58,458 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_ACTION
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 13 in main_section_lines.begin_end_statements.else_if.then_statements: V_ACTION := 'U';
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_ACTION
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 15 in main_section_lines.begin_end_statements.else_if.then_statements: V_ACTION := 'D';
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_ACTION
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 18 in main_section_lines.begin_end_statements: COL_NAMES := ARRAY[ 'explorato
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: COL_NAMES
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 19 in main_section_lines.begin_end_statements: COL_NEW_VALUES := ARRAY[ CASE 
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: COL_NEW_VALUES
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 20 in main_section_lines.begin_end_statements: COL_OLD_VALUES := ARRAY[ CASE 
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: COL_OLD_VALUES
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2325] - Assignment statements parsing complete
2025-08-14 12:34:58,459 - root - INFO - [common.py:104] - ✅ Completed assignment statements in main section parsing
2025-08-14 12:34:58,459 - root - INFO - [common.py:97] - 🔄 Starting SQL statements in main section parsing
2025-08-14 12:34:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:2369] - Starting SQL statements parsing
2025-08-14 12:34:58,460 - root - DEBUG - [OracleTriggerAnalyzer.py:2528] - SQL statements parsing complete
2025-08-14 12:34:58,460 - root - INFO - [common.py:104] - ✅ Completed SQL statements in main section parsing
2025-08-14 12:34:58,460 - root - INFO - [common.py:97] - 🔄 Starting final statement in main section parsing
2025-08-14 12:34:58,460 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: PERFORM MDMTOOL."mdmt_util_his
2025-08-14 12:34:58,460 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: RETURN NULL;
2025-08-14 12:34:58,460 - root - DEBUG - [OracleTriggerAnalyzer.py:1114] - Final statement parsing complete
2025-08-14 12:34:58,460 - root - INFO - [common.py:104] - ✅ Completed final statement in main section parsing
2025-08-14 12:34:58,461 - root - DEBUG - [OracleTriggerAnalyzer.py:782] - About to remove duplicate case_when structures
2025-08-14 12:34:58,461 - root - DEBUG - [OracleTriggerAnalyzer.py:3867] - Removing duplicate case_when structures
2025-08-14 12:34:58,461 - root - DEBUG - [OracleTriggerAnalyzer.py:3941] - Duplicate case_when structures removal complete
2025-08-14 12:34:58,461 - root - DEBUG - [OracleTriggerAnalyzer.py:784] - Finished removing duplicate case_when structures
2025-08-14 12:34:58,461 - root - INFO - [common.py:104] - ✅ Completed SQL section parsing parsing
2025-08-14 12:34:58,461 - root - INFO - [common.py:97] - 🔄 Starting rule validation parsing
2025-08-14 12:34:58,461 - root - DEBUG - [OracleTriggerAnalyzer.py:732] - Rule validation complete: found 0 violations
2025-08-14 12:34:58,462 - root - INFO - [common.py:104] - ✅ Completed rule validation parsing
2025-08-14 12:34:58,462 - root - DEBUG - [common.py:127] - ⏱️ OracleTriggerAnalyzer initialization completed in 0.010s
2025-08-14 12:34:58,462 - root - DEBUG - [common.py:69] - OracleTriggerAnalyzer created successfully
2025-08-14 12:34:58,462 - root - DEBUG - [common.py:69] - Generating JSON analysis...
2025-08-14 12:34:58,462 - root - INFO - [common.py:73] - JSON conversion complete: 6 vars, 0 consts, 0 excs, 0 comments
2025-08-14 12:34:58,462 - root - DEBUG - [common.py:69] - JSON analysis generated successfully
2025-08-14 12:34:58,462 - root - DEBUG - [common.py:69] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_strings', 'conversion_stats', 'metadata']
2025-08-14 12:34:58,463 - root - DEBUG - [common.py:69] - Analysis statistics: 6 vars, 0 consts, 0 excs, 0 comments
2025-08-14 12:34:58,463 - root - DEBUG - [common.py:69] - Writing analysis JSON to: files/format_json\trigger4_analysis.json
2025-08-14 12:34:58,463 - root - DEBUG - [common.py:69] - Successfully wrote analysis JSON to files/format_json\trigger4_analysis.json
2025-08-14 12:34:58,463 - root - DEBUG - [common.py:69] - === SQL to JSON processing complete for trigger 4 ===
2025-08-14 12:34:58,463 - root - INFO - [common.py:73] - ✓ Created trigger4_analysis.json
2025-08-14 12:34:58,464 - root - DEBUG - [common.py:69] - === Processing file 5/6: trigger5.sql ===
2025-08-14 12:34:58,464 - root - DEBUG - [common.py:69] - Extracted trigger number: 5
2025-08-14 12:34:58,464 - root - DEBUG - [common.py:69] - Source path: files/oracle\trigger5.sql
2025-08-14 12:34:58,464 - root - DEBUG - [common.py:69] - Output path: files/format_json\trigger5_analysis.json
2025-08-14 12:34:58,464 - root - DEBUG - [common.py:69] - === SQL to JSON processing for trigger 5 ===
2025-08-14 12:34:58,464 - root - DEBUG - [common.py:69] - Reading SQL file: files/oracle\trigger5.sql
2025-08-14 12:34:58,464 - root - DEBUG - [common.py:69] - Successfully read 1503 characters from files/oracle\trigger5.sql
2025-08-14 12:34:58,464 - root - DEBUG - [common.py:69] - Creating OracleTriggerAnalyzer instance...
2025-08-14 12:34:58,464 - root - DEBUG - [common.py:69] - Initializing OracleTriggerAnalyzer with 1503 characters of SQL
2025-08-14 12:34:58,464 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing: 0 lines processed
2025-08-14 12:34:58,464 - root - INFO - [common.py:97] - 🔄 Starting SQL section parsing parsing
2025-08-14 12:34:58,465 - root - INFO - [common.py:97] - 🔄 Starting structured lines conversion parsing
2025-08-14 12:34:58,465 - root - DEBUG - [common.py:69] - Converting SQL content to structured lines
2025-08-14 12:34:58,465 - root - DEBUG - [common.py:69] - Structured lines conversion complete: 34 total, 13 with semicolons, 2 empty lines skipped
2025-08-14 12:34:58,465 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing
2025-08-14 12:34:58,465 - root - DEBUG - [OracleTriggerAnalyzer.py:226] - Block comment stripping complete: 0 comments extracted, 34 lines cleaned
2025-08-14 12:34:58,465 - root - DEBUG - [OracleTriggerAnalyzer.py:298] - Removed block comments from main section
2025-08-14 12:34:58,465 - root - DEBUG - [OracleTriggerAnalyzer.py:273] - Inline comment stripping complete: 0 comments extracted, 34 lines cleaned
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:302] - Removed inline comments from main section
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:314] - Found DECLARE at line 1
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:319] - Found BEGIN at line 4
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:325] - DECLARE section: lines 1-3
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Main section: lines 4
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:359] - Starting declaration parsing
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_USERID
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_TRG_UPD_DATE_STR
2025-08-14 12:34:58,466 - root - DEBUG - [common.py:69] - Processing main section from lines 4
2025-08-14 12:34:58,466 - root - INFO - [common.py:97] - 🔄 Starting First BEGIN blocks parsing
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:792] - Starting top-level BEGIN blocks parsing
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - Collected 31 lines from main section
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:821] - Found top-level BEGIN block at line 4 (indent 0)
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:891] - Parsing top-level BEGIN-END block starting at line 4 (indent 0)
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - Found END; at line 36
2025-08-14 12:34:58,466 - root - DEBUG - [OracleTriggerAnalyzer.py:957] - Successfully parsed top-level BEGIN-END block: 29 statements, 0 exception handlers
2025-08-14 12:34:58,467 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - Successfully parsed top-level BEGIN-END block from line 4 to 36
2025-08-14 12:34:58,467 - root - DEBUG - [OracleTriggerAnalyzer.py:858] - Top-level BEGIN blocks parsing complete: 1 items in main_section_lines
2025-08-14 12:34:58,467 - root - INFO - [common.py:104] - ✅ Completed First BEGIN blocks parsing
2025-08-14 12:34:58,467 - root - INFO - [common.py:97] - 🔄 Starting CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,467 - root - DEBUG - [OracleTriggerAnalyzer.py:2537] - Starting CASE WHEN ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,467 - root - DEBUG - [OracleTriggerAnalyzer.py:2555] - Found CASE statement at line 9 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,467 - root - DEBUG - [OracleTriggerAnalyzer.py:2953] - Starting enhanced CASE statement parsing from index 8
2025-08-14 12:34:58,467 - root - DEBUG - [OracleTriggerAnalyzer.py:2973] - CASE statement - Type: simple, Expression: '', Indent: 12
2025-08-14 12:34:58,467 - root - DEBUG - [OracleTriggerAnalyzer.py:2995] - Found END CASE; at line 24 (indent 12)
2025-08-14 12:34:58,468 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 10 (indent 16, case indent 12)
2025-08-14 12:34:58,468 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 16 (indent 16, case indent 12)
2025-08-14 12:34:58,468 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 22 (indent 16, case indent 12)
2025-08-14 12:34:58,468 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')
2025-08-14 12:34:58,468 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')
2025-08-14 12:34:58,468 - root - DEBUG - [OracleTriggerAnalyzer.py:3400] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,468 - root - DEBUG - [OracleTriggerAnalyzer.py:3412] - Processing nested structures in enhanced CASE statement
2025-08-14 12:34:58,468 - root - DEBUG - [OracleTriggerAnalyzer.py:3093] - Completed enhanced CASE statement parsing: 2 when clauses, ELSE at line 22, end at line 24
2025-08-14 12:34:58,468 - root - DEBUG - [OracleTriggerAnalyzer.py:2567] - Parsed complete CASE statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,468 - root - DEBUG - [OracleTriggerAnalyzer.py:2666] - CASE WHEN ELSE parsing complete
2025-08-14 12:34:58,468 - root - INFO - [common.py:104] - ✅ Completed CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,469 - root - INFO - [common.py:97] - 🔄 Starting IF-ELSE statements in main section parsing
2025-08-14 12:34:58,469 - root - DEBUG - [OracleTriggerAnalyzer.py:1434] - Starting IF-ELSIF-ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,469 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 7 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,469 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 6
2025-08-14 12:34:58,469 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: 'TG_OP = 'UPDATE'', Indent: 4
2025-08-14 12:34:58,469 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 33 (indent 4)
2025-08-14 12:34:58,469 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,469 - root - DEBUG - [OracleTriggerAnalyzer.py:2953] - Starting enhanced CASE statement parsing from index 8
2025-08-14 12:34:58,470 - root - DEBUG - [OracleTriggerAnalyzer.py:2973] - CASE statement - Type: simple, Expression: '', Indent: 12
2025-08-14 12:34:58,470 - root - DEBUG - [OracleTriggerAnalyzer.py:2995] - Found END CASE; at line 24 (indent 12)
2025-08-14 12:34:58,470 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 10 (indent 16, case indent 12)
2025-08-14 12:34:58,470 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 16 (indent 16, case indent 12)
2025-08-14 12:34:58,470 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 22 (indent 16, case indent 12)
2025-08-14 12:34:58,470 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')
2025-08-14 12:34:58,470 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')
2025-08-14 12:34:58,470 - root - DEBUG - [OracleTriggerAnalyzer.py:3400] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,470 - root - DEBUG - [OracleTriggerAnalyzer.py:3412] - Processing nested structures in enhanced CASE statement
2025-08-14 12:34:58,470 - root - DEBUG - [OracleTriggerAnalyzer.py:3093] - Completed enhanced CASE statement parsing: 2 when clauses, ELSE at line 22, end at line 24
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 33
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 8 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 7
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: 'COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')', Indent: 8
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 32 (indent 8)
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:2953] - Starting enhanced CASE statement parsing from index 8
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:2973] - CASE statement - Type: simple, Expression: '', Indent: 12
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:2995] - Found END CASE; at line 24 (indent 12)
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 10 (indent 16, case indent 12)
2025-08-14 12:34:58,471 - root - DEBUG - [OracleTriggerAnalyzer.py:3044] - Found WHEN clause at line 16 (indent 16, case indent 12)
2025-08-14 12:34:58,472 - root - DEBUG - [OracleTriggerAnalyzer.py:3054] - Found ELSE clause at line 22 (indent 16, case indent 12)
2025-08-14 12:34:58,472 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')
2025-08-14 12:34:58,472 - root - DEBUG - [OracleTriggerAnalyzer.py:3341] - Parsed WHEN clause: NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')
2025-08-14 12:34:58,472 - root - DEBUG - [OracleTriggerAnalyzer.py:3400] - Parsed ELSE clause with 1 statements
2025-08-14 12:34:58,472 - root - DEBUG - [OracleTriggerAnalyzer.py:3412] - Processing nested structures in enhanced CASE statement
2025-08-14 12:34:58,472 - root - DEBUG - [OracleTriggerAnalyzer.py:3093] - Completed enhanced CASE statement parsing: 2 when clauses, ELSE at line 22, end at line 24
2025-08-14 12:34:58,472 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 32
2025-08-14 12:34:58,472 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,472 - root - DEBUG - [OracleTriggerAnalyzer.py:1563] - IF-ELSIF-ELSE parsing complete
2025-08-14 12:34:58,472 - root - INFO - [common.py:104] - ✅ Completed IF-ELSE statements in main section parsing
2025-08-14 12:34:58,472 - root - INFO - [common.py:97] - 🔄 Starting BEGIN blocks in main section parsing
2025-08-14 12:34:58,473 - root - DEBUG - [OracleTriggerAnalyzer.py:2681] - Starting nested BEGIN block parsing
2025-08-14 12:34:58,473 - root - DEBUG - [OracleTriggerAnalyzer.py:2806] - Nested BEGIN block parsing complete
2025-08-14 12:34:58,473 - root - INFO - [common.py:104] - ✅ Completed BEGIN blocks in main section parsing
2025-08-14 12:34:58,473 - root - INFO - [common.py:97] - 🔄 Starting FOR loops in main section parsing
2025-08-14 12:34:58,473 - root - DEBUG - [OracleTriggerAnalyzer.py:1129] - Starting FOR loop parsing
2025-08-14 12:34:58,473 - root - DEBUG - [OracleTriggerAnalyzer.py:1256] - FOR loop parsing complete
2025-08-14 12:34:58,474 - root - INFO - [common.py:104] - ✅ Completed FOR loops in main section parsing
2025-08-14 12:34:58,474 - root - INFO - [common.py:97] - 🔄 Starting assignment statements in main section parsing
2025-08-14 12:34:58,474 - root - DEBUG - [OracleTriggerAnalyzer.py:2159] - Starting assignment statements parsing
2025-08-14 12:34:58,474 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 5 in main_section_lines.begin_end_statements: V_USERID := COALESCE(NEW.UPD_U
2025-08-14 12:34:58,474 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_USERID
2025-08-14 12:34:58,474 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 6 in main_section_lines.begin_end_statements: V_TRG_UPD_DATE_STR := TO_CHAR(
2025-08-14 12:34:58,474 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_TRG_UPD_DATE_STR
2025-08-14 12:34:58,474 - root - DEBUG - [OracleTriggerAnalyzer.py:2325] - Assignment statements parsing complete
2025-08-14 12:34:58,475 - root - INFO - [common.py:104] - ✅ Completed assignment statements in main section parsing
2025-08-14 12:34:58,475 - root - INFO - [common.py:97] - 🔄 Starting SQL statements in main section parsing
2025-08-14 12:34:58,475 - root - DEBUG - [OracleTriggerAnalyzer.py:2369] - Starting SQL statements parsing
2025-08-14 12:34:58,475 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 11 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: UPDATE GMD.THEME_MOL
2025-08-14 12:34:58,475 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 17 in main_section_lines.begin_end_statements.then_statements.then_statements.then_statements: UPDATE GMD.THEME_MOL
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 11 in main_section_lines.begin_end_statements.then_statements.then_statements: UPDATE GMD.THEME_MOL
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 17 in main_section_lines.begin_end_statements.then_statements.then_statements: UPDATE GMD.THEME_MOL
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 11 in main_section_lines.begin_end_statements.then_statements: UPDATE GMD.THEME_MOL
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 17 in main_section_lines.begin_end_statements.then_statements: UPDATE GMD.THEME_MOL
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,476 - root - DEBUG - [OracleTriggerAnalyzer.py:2528] - SQL statements parsing complete
2025-08-14 12:34:58,476 - root - INFO - [common.py:104] - ✅ Completed SQL statements in main section parsing
2025-08-14 12:34:58,476 - root - INFO - [common.py:97] - 🔄 Starting final statement in main section parsing
2025-08-14 12:34:58,477 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: NULL;
2025-08-14 12:34:58,477 - root - DEBUG - [OracleTriggerAnalyzer.py:989] - Found multi-line statement starting at line 26 in main_section_lines.begin_end_statements.then_statements.then_statements: CALL GMD.GMD_UTIL_THEMES$UPD_T
2025-08-14 12:34:58,477 - root - DEBUG - [OracleTriggerAnalyzer.py:1027] - Parsed multi-line final statement: CALL GMD.GMD_UTIL_THEMES$UPD_T
2025-08-14 12:34:58,477 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: NULL;
2025-08-14 12:34:58,477 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: NULL;
2025-08-14 12:34:58,477 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: RETURN NULL;
2025-08-14 12:34:58,477 - root - DEBUG - [OracleTriggerAnalyzer.py:1114] - Final statement parsing complete
2025-08-14 12:34:58,477 - root - INFO - [common.py:104] - ✅ Completed final statement in main section parsing
2025-08-14 12:34:58,477 - root - DEBUG - [OracleTriggerAnalyzer.py:782] - About to remove duplicate case_when structures
2025-08-14 12:34:58,478 - root - DEBUG - [OracleTriggerAnalyzer.py:3867] - Removing duplicate case_when structures
2025-08-14 12:34:58,478 - root - DEBUG - [OracleTriggerAnalyzer.py:3884] - Found case_when structure: case_line_no=9, end_case_line_no=24
2025-08-14 12:34:58,478 - root - DEBUG - [OracleTriggerAnalyzer.py:3895] - Adding new case_when structure: lines 9-24
2025-08-14 12:34:58,478 - root - DEBUG - [OracleTriggerAnalyzer.py:3884] - Found case_when structure: case_line_no=9, end_case_line_no=24
2025-08-14 12:34:58,478 - root - DEBUG - [OracleTriggerAnalyzer.py:3891] - Removing duplicate case_when structure: lines 9-24
2025-08-14 12:34:58,478 - root - DEBUG - [OracleTriggerAnalyzer.py:3884] - Found case_when structure: case_line_no=9, end_case_line_no=24
2025-08-14 12:34:58,478 - root - DEBUG - [OracleTriggerAnalyzer.py:3891] - Removing duplicate case_when structure: lines 9-24
2025-08-14 12:34:58,478 - root - DEBUG - [OracleTriggerAnalyzer.py:3941] - Duplicate case_when structures removal complete
2025-08-14 12:34:58,478 - root - DEBUG - [OracleTriggerAnalyzer.py:784] - Finished removing duplicate case_when structures
2025-08-14 12:34:58,479 - root - INFO - [common.py:104] - ✅ Completed SQL section parsing parsing
2025-08-14 12:34:58,479 - root - INFO - [common.py:97] - 🔄 Starting rule validation parsing
2025-08-14 12:34:58,479 - root - DEBUG - [OracleTriggerAnalyzer.py:732] - Rule validation complete: found 0 violations
2025-08-14 12:34:58,479 - root - INFO - [common.py:104] - ✅ Completed rule validation parsing
2025-08-14 12:34:58,479 - root - DEBUG - [common.py:127] - ⏱️ OracleTriggerAnalyzer initialization completed in 0.015s
2025-08-14 12:34:58,480 - root - DEBUG - [common.py:69] - OracleTriggerAnalyzer created successfully
2025-08-14 12:34:58,480 - root - DEBUG - [common.py:69] - Generating JSON analysis...
2025-08-14 12:34:58,480 - root - INFO - [common.py:73] - JSON conversion complete: 2 vars, 0 consts, 0 excs, 0 comments
2025-08-14 12:34:58,480 - root - DEBUG - [common.py:69] - JSON analysis generated successfully
2025-08-14 12:34:58,480 - root - DEBUG - [common.py:69] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_strings', 'conversion_stats', 'metadata']
2025-08-14 12:34:58,480 - root - DEBUG - [common.py:69] - Analysis statistics: 2 vars, 0 consts, 0 excs, 0 comments
2025-08-14 12:34:58,480 - root - DEBUG - [common.py:69] - Writing analysis JSON to: files/format_json\trigger5_analysis.json
2025-08-14 12:34:58,482 - root - DEBUG - [common.py:69] - Successfully wrote analysis JSON to files/format_json\trigger5_analysis.json
2025-08-14 12:34:58,482 - root - DEBUG - [common.py:69] - === SQL to JSON processing complete for trigger 5 ===
2025-08-14 12:34:58,482 - root - INFO - [common.py:73] - ✓ Created trigger5_analysis.json
2025-08-14 12:34:58,482 - root - DEBUG - [common.py:69] - === Processing file 6/6: trigger6.sql ===
2025-08-14 12:34:58,482 - root - DEBUG - [common.py:69] - Extracted trigger number: 6
2025-08-14 12:34:58,482 - root - DEBUG - [common.py:69] - Source path: files/oracle\trigger6.sql
2025-08-14 12:34:58,482 - root - DEBUG - [common.py:69] - Output path: files/format_json\trigger6_analysis.json
2025-08-14 12:34:58,482 - root - DEBUG - [common.py:69] - === SQL to JSON processing for trigger 6 ===
2025-08-14 12:34:58,483 - root - DEBUG - [common.py:69] - Reading SQL file: files/oracle\trigger6.sql
2025-08-14 12:34:58,483 - root - DEBUG - [common.py:69] - Successfully read 3810 characters from files/oracle\trigger6.sql
2025-08-14 12:34:58,483 - root - DEBUG - [common.py:69] - Creating OracleTriggerAnalyzer instance...
2025-08-14 12:34:58,483 - root - DEBUG - [common.py:69] - Initializing OracleTriggerAnalyzer with 3810 characters of SQL
2025-08-14 12:34:58,483 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing: 0 lines processed
2025-08-14 12:34:58,483 - root - INFO - [common.py:97] - 🔄 Starting SQL section parsing parsing
2025-08-14 12:34:58,483 - root - INFO - [common.py:97] - 🔄 Starting structured lines conversion parsing
2025-08-14 12:34:58,484 - root - DEBUG - [common.py:69] - Converting SQL content to structured lines
2025-08-14 12:34:58,484 - root - DEBUG - [common.py:69] - Structured lines conversion complete: 81 total, 32 with semicolons, 8 empty lines skipped
2025-08-14 12:34:58,484 - root - INFO - [common.py:104] - ✅ Completed structured lines conversion parsing
2025-08-14 12:34:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:226] - Block comment stripping complete: 0 comments extracted, 81 lines cleaned
2025-08-14 12:34:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:298] - Removed block comments from main section
2025-08-14 12:34:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:273] - Inline comment stripping complete: 6 comments extracted, 75 lines cleaned
2025-08-14 12:34:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:302] - Removed inline comments from main section
2025-08-14 12:34:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:314] - Found DECLARE at line 1
2025-08-14 12:34:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:319] - Found BEGIN at line 12
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:325] - DECLARE section: lines 1-11
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Main section: lines 12
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:359] - Starting declaration parsing
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_TRIGGER_NAME
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_EVOLVED_THEME_NO
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: V_PROPOSAL_ID
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: C_PROPOSAL_STATUS_ACTIVE
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:402] - Processed variable: C_PROPOSAL_STATUS_TERMINATED
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: V_NO_UPDATE_TO_EVOLVED
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: V_NO_UPDATE_TERMINATED_TO_ACTIVE
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: V_NO_UPDATE_EVOLVED_TO_TERMINATED
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:432] - Processed exception: V_EXPLORATORY_THEMENO_NOT_NULL
2025-08-14 12:34:58,485 - root - DEBUG - [common.py:69] - Processing main section from lines 12
2025-08-14 12:34:58,485 - root - INFO - [common.py:97] - 🔄 Starting First BEGIN blocks parsing
2025-08-14 12:34:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:792] - Starting top-level BEGIN blocks parsing
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - Collected 64 lines from main section
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:821] - Found top-level BEGIN block at line 12 (indent 0)
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:891] - Parsing top-level BEGIN-END block starting at line 12 (indent 0)
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:926] - Found EXCEPTION at line 80
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - Found END; at line 89
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: DUP_VAL_ON_INDEX
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20600', 'handler_string': 'V_TRIGGER_NAME'}
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: V_NO_UPDATE_EVOLVED_TO_TERMINATED
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20800', 'handler_string': 'V_TRIGGER_NAME'}
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: V_NO_UPDATE_TO_EVOLVED
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20900', 'handler_string': 'V_TRIGGER_NAME'}
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:3622] - Found exception handler: V_EXPLORATORY_THEMENO_NOT_NULL
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:3644] - Added RAISE_APPLICATION_ERROR function call: {'handler_code': '-20940', 'handler_string': 'V_TRIGGER_NAME'}
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:3664] - Parsed exception section: 4 handlers
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:957] - Successfully parsed top-level BEGIN-END block: 53 statements, 4 exception handlers
2025-08-14 12:34:58,486 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - Successfully parsed top-level BEGIN-END block from line 12 to 89
2025-08-14 12:34:58,487 - root - DEBUG - [OracleTriggerAnalyzer.py:858] - Top-level BEGIN blocks parsing complete: 1 items in main_section_lines
2025-08-14 12:34:58,487 - root - INFO - [common.py:104] - ✅ Completed First BEGIN blocks parsing
2025-08-14 12:34:58,487 - root - INFO - [common.py:97] - 🔄 Starting CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2537] - Starting CASE WHEN ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2666] - CASE WHEN ELSE parsing complete
2025-08-14 12:34:58,487 - root - INFO - [common.py:104] - ✅ Completed CASE-WHEN statements in main section parsing
2025-08-14 12:34:58,488 - root - INFO - [common.py:97] - 🔄 Starting IF-ELSE statements in main section parsing
2025-08-14 12:34:58,488 - root - DEBUG - [OracleTriggerAnalyzer.py:1434] - Starting IF-ELSIF-ELSE parsing with indentation-based nesting
2025-08-14 12:34:58,488 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 18 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,488 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 13
2025-08-14 12:34:58,488 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME)', Indent: 4
2025-08-14 12:34:58,488 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 20 (indent 4)
2025-08-14 12:34:58,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,488 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 20
2025-08-14 12:34:58,488 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 24 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 16
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED)', Indent: 4
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 26 (indent 4)
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 26
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 30 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 19
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL)', Indent: 4
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 32 (indent 4)
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 32
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 36 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 22
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL)', Indent: 4
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 38 (indent 4)
2025-08-14 12:34:58,489 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 38
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 40 in main_section_lines.begin_end_statements
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 25
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: '(INSERTING)', Indent: 4
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 79 (indent 4)
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1691] - Found ELSIF clause at line 64 (indent 4)
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:2002] - Parsed ELSIF clause: (UPDATING)
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 1 else_if clauses, ELSE at line None, end at line 79
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 61 in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 46
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: ':NEW.PARTNER_ID IS NOT NULL', Indent: 8
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 63 (indent 8)
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 63
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.then_statements
2025-08-14 12:34:58,490 - root - DEBUG - [OracleTriggerAnalyzer.py:1452] - Found IF statement at line 76 in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,491 - root - DEBUG - [OracleTriggerAnalyzer.py:1576] - Starting enhanced IF statement parsing from index 61
2025-08-14 12:34:58,491 - root - DEBUG - [OracleTriggerAnalyzer.py:1627] - IF statement - Condition: 'NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')', Indent: 8
2025-08-14 12:34:58,491 - root - DEBUG - [OracleTriggerAnalyzer.py:1646] - Found END IF; at line 78 (indent 8)
2025-08-14 12:34:58,491 - root - DEBUG - [OracleTriggerAnalyzer.py:2052] - Processing nested structures in enhanced IF statement
2025-08-14 12:34:58,491 - root - DEBUG - [OracleTriggerAnalyzer.py:1754] - Completed enhanced IF statement parsing: 0 else_if clauses, ELSE at line None, end at line 78
2025-08-14 12:34:58,491 - root - DEBUG - [OracleTriggerAnalyzer.py:1464] - Parsed complete IF statement structure in main_section_lines.begin_end_statements.else_if.then_statements
2025-08-14 12:34:58,491 - root - DEBUG - [OracleTriggerAnalyzer.py:1563] - IF-ELSIF-ELSE parsing complete
2025-08-14 12:34:58,491 - root - INFO - [common.py:104] - ✅ Completed IF-ELSE statements in main section parsing
2025-08-14 12:34:58,491 - root - INFO - [common.py:97] - 🔄 Starting BEGIN blocks in main section parsing
2025-08-14 12:34:58,491 - root - DEBUG - [OracleTriggerAnalyzer.py:2681] - Starting nested BEGIN block parsing
2025-08-14 12:34:58,491 - root - DEBUG - [OracleTriggerAnalyzer.py:2806] - Nested BEGIN block parsing complete
2025-08-14 12:34:58,492 - root - INFO - [common.py:104] - ✅ Completed BEGIN blocks in main section parsing
2025-08-14 12:34:58,492 - root - INFO - [common.py:97] - 🔄 Starting FOR loops in main section parsing
2025-08-14 12:34:58,492 - root - DEBUG - [OracleTriggerAnalyzer.py:1129] - Starting FOR loop parsing
2025-08-14 12:34:58,492 - root - DEBUG - [OracleTriggerAnalyzer.py:1256] - FOR loop parsing complete
2025-08-14 12:34:58,492 - root - INFO - [common.py:104] - ✅ Completed FOR loops in main section parsing
2025-08-14 12:34:58,492 - root - INFO - [common.py:97] - 🔄 Starting assignment statements in main section parsing
2025-08-14 12:34:58,493 - root - DEBUG - [OracleTriggerAnalyzer.py:2159] - Starting assignment statements parsing
2025-08-14 12:34:58,493 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 13 in main_section_lines.begin_end_statements: V_EVOLVED_THEME_NO := :NEW.EVO
2025-08-14 12:34:58,493 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_EVOLVED_THEME_NO
2025-08-14 12:34:58,493 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 31 in main_section_lines.begin_end_statements.then_statements: V_EVOLVED_THEME_NO := NULL;
2025-08-14 12:34:58,493 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_EVOLVED_THEME_NO
2025-08-14 12:34:58,493 - root - DEBUG - [OracleTriggerAnalyzer.py:2176] - Found assignment statement at line 41 in main_section_lines.begin_end_statements.then_statements: V_PROPOSAL_ID := PREDMD.SEQ_NM
2025-08-14 12:34:58,493 - root - DEBUG - [OracleTriggerAnalyzer.py:2196] - Parsed single-line assignment statement: V_PROPOSAL_ID
2025-08-14 12:34:58,493 - root - DEBUG - [OracleTriggerAnalyzer.py:2325] - Assignment statements parsing complete
2025-08-14 12:34:58,493 - root - INFO - [common.py:104] - ✅ Completed assignment statements in main section parsing
2025-08-14 12:34:58,493 - root - INFO - [common.py:97] - 🔄 Starting SQL statements in main section parsing
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2369] - Starting SQL statements parsing
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 19 in main_section_lines.begin_end_statements.then_statements: RAISE V_NO_UPDATE_TO
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 25 in main_section_lines.begin_end_statements.then_statements: RAISE V_NO_UPDATE_EV
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 37 in main_section_lines.begin_end_statements.then_statements: RAISE V_EXPLORATORY_
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2414] - Parsed single-line SQL statement: raise_statement
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 42 in main_section_lines.begin_end_statements.then_statements: INSERT INTO V_NEW_ME
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: insert_statement
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2402] - Found SQL statement at line 65 in main_section_lines.begin_end_statements.else_if.then_statements: UPDATE V_NEW_MEDICIN
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2449] - Parsed multi-line SQL statement: update_statement
2025-08-14 12:34:58,494 - root - DEBUG - [OracleTriggerAnalyzer.py:2528] - SQL statements parsing complete
2025-08-14 12:34:58,494 - root - INFO - [common.py:104] - ✅ Completed SQL statements in main section parsing
2025-08-14 12:34:58,494 - root - INFO - [common.py:97] - 🔄 Starting final statement in main section parsing
2025-08-14 12:34:58,495 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: MDMAPPL.MDM_LOAD_NPM_PARTNER_D
2025-08-14 12:34:58,495 - root - DEBUG - [OracleTriggerAnalyzer.py:1038] - Parsed single-line final statement: MDMAPPL.MDM_LOAD_NPM_PARTNER_D
2025-08-14 12:34:58,495 - root - DEBUG - [OracleTriggerAnalyzer.py:1114] - Final statement parsing complete
2025-08-14 12:34:58,495 - root - INFO - [common.py:104] - ✅ Completed final statement in main section parsing
2025-08-14 12:34:58,495 - root - DEBUG - [OracleTriggerAnalyzer.py:782] - About to remove duplicate case_when structures
2025-08-14 12:34:58,495 - root - DEBUG - [OracleTriggerAnalyzer.py:3867] - Removing duplicate case_when structures
2025-08-14 12:34:58,495 - root - DEBUG - [OracleTriggerAnalyzer.py:3941] - Duplicate case_when structures removal complete
2025-08-14 12:34:58,495 - root - DEBUG - [OracleTriggerAnalyzer.py:784] - Finished removing duplicate case_when structures
2025-08-14 12:34:58,495 - root - INFO - [common.py:104] - ✅ Completed SQL section parsing parsing
2025-08-14 12:34:58,496 - root - INFO - [common.py:97] - 🔄 Starting rule validation parsing
2025-08-14 12:34:58,496 - root - DEBUG - [OracleTriggerAnalyzer.py:732] - Rule validation complete: found 0 violations
2025-08-14 12:34:58,496 - root - INFO - [common.py:104] - ✅ Completed rule validation parsing
2025-08-14 12:34:58,496 - root - DEBUG - [common.py:127] - ⏱️ OracleTriggerAnalyzer initialization completed in 0.013s
2025-08-14 12:34:58,496 - root - DEBUG - [common.py:69] - OracleTriggerAnalyzer created successfully
2025-08-14 12:34:58,496 - root - DEBUG - [common.py:69] - Generating JSON analysis...
2025-08-14 12:34:58,496 - root - INFO - [common.py:73] - JSON conversion complete: 6 vars, 0 consts, 4 excs, 6 comments
2025-08-14 12:34:58,496 - root - DEBUG - [common.py:69] - JSON analysis generated successfully
2025-08-14 12:34:58,497 - root - DEBUG - [common.py:69] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_strings', 'conversion_stats', 'metadata']
2025-08-14 12:34:58,497 - root - DEBUG - [common.py:69] - Analysis statistics: 6 vars, 0 consts, 4 excs, 6 comments
2025-08-14 12:34:58,497 - root - DEBUG - [common.py:69] - Writing analysis JSON to: files/format_json\trigger6_analysis.json
2025-08-14 12:34:58,498 - root - DEBUG - [common.py:69] - Successfully wrote analysis JSON to files/format_json\trigger6_analysis.json
2025-08-14 12:34:58,498 - root - DEBUG - [common.py:69] - === SQL to JSON processing complete for trigger 6 ===
2025-08-14 12:34:58,498 - root - INFO - [common.py:73] - ✓ Created trigger6_analysis.json
2025-08-14 12:34:58,499 - root - INFO - [common.py:73] - === File processing complete ===
2025-08-14 12:34:58,499 - root - INFO - [common.py:73] - Successfully processed: 6 files
2025-08-14 12:34:58,499 - root - INFO - [common.py:73] - === Oracle triggers to JSON conversion complete ===
2025-08-14 12:34:58,499 - root - INFO - [common.py:73] - ✓ JSON conversion complete! (Duration: 0.19 seconds)
2025-08-14 12:34:58,499 - root - INFO - [common.py:73] - Step 2: Converting JSON analysis back to formatted SQL...
2025-08-14 12:34:58,506 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,506 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,506 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,506 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,506 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,507 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,507 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,507 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,507 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,507 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,507 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,507 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,507 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,508 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,508 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,508 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,508 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,508 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,508 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,509 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,509 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,509 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,509 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,509 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,509 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,509 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,509 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,510 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,510 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,510 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,510 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,510 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,511 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,511 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,511 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,511 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,511 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,511 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,511 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,512 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,512 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,512 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,512 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,512 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,512 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,512 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,512 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,513 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,513 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,513 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,513 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,513 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,513 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,513 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,514 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,514 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,514 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,514 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,514 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,514 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,514 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,514 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,514 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,514 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,515 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,516 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,517 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,517 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,517 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,517 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,517 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,517 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,517 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,517 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,517 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,518 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,518 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,518 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,518 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,518 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,518 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,518 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,518 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,518 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,518 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,519 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,519 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,519 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,519 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,519 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,519 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,519 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,520 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,521 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,521 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,521 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,521 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,521 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,521 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,521 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,521 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,521 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,522 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,522 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,522 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,522 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,522 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,522 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,522 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,522 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,522 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,523 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,524 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,524 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,524 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,524 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,524 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,524 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,524 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,530 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,531 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,531 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,531 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,531 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,531 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,531 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,531 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,531 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,531 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,531 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,532 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,532 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,532 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,532 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,532 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,532 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,532 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,532 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,532 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,532 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,533 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,533 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,533 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,533 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,533 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,533 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,533 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,533 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,533 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,533 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,534 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,535 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,535 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,535 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,535 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,535 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,535 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,535 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,535 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,535 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,535 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,536 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,536 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,536 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,536 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,536 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,536 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,536 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,536 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,536 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,537 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,537 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,537 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,537 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,537 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,537 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,537 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,538 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,538 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,538 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,538 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,538 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,538 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,539 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,539 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,539 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,539 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,539 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,539 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,540 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,540 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,540 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,540 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,540 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,541 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,541 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,541 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,541 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,541 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,541 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,541 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,541 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,542 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,543 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,544 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,545 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,545 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,545 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,545 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,545 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,545 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,545 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,545 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,545 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,545 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,546 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,547 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,547 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,552 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,553 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,554 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,555 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,556 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,557 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,557 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,557 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,557 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,557 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,557 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,557 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,557 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,558 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,558 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,558 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,558 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,558 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,558 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,558 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,558 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,559 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,561 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,561 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,561 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,561 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,561 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,561 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,562 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,563 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,564 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,565 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,566 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,566 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,566 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,566 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,566 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,566 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,566 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,566 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,566 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,566 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,567 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,567 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,567 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,567 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,567 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,567 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,571 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,571 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,572 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,572 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,572 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,572 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,572 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,572 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,572 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,572 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,572 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,573 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,574 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,575 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,575 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,575 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,575 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,575 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,575 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,575 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,575 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,576 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,576 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,576 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,576 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,577 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,578 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,578 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,578 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,578 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,578 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,578 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,578 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,578 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,578 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,579 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,579 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,579 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,579 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,579 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,579 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,579 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,579 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,580 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,580 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,580 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,580 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,580 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,581 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,581 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,581 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,581 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,581 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,581 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,581 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,581 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,581 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,582 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,582 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,582 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,582 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,582 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,582 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,582 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,582 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,582 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,582 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,583 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,583 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,583 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,585 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,585 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,585 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,585 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,585 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,586 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,586 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,586 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,586 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,587 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,587 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,588 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,588 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,588 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,588 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,588 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,588 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,588 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,591 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,592 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,592 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,592 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,592 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,592 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,593 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,593 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,593 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,593 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,593 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,593 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,595 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,595 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,595 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,595 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,595 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,595 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,595 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,596 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,596 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,596 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,596 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,596 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,596 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,596 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,596 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,596 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,597 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,597 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,597 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,597 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,597 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,597 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,597 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,597 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,598 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,599 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,599 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,599 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,599 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,599 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,599 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,599 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,599 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,599 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,600 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,600 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,600 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,600 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,600 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,600 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,600 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,600 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,600 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,601 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,601 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,601 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,601 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,601 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,602 - root - INFO - [common.py:73] - ✓ SQL formatting complete! (Duration: 0.10 seconds)
2025-08-14 12:34:58,602 - root - INFO - [common.py:73] - Step 3: Cleaning JSON...
2025-08-14 12:34:58,618 - root - INFO - [common.py:73] - ✓ JSON cleaning complete! (Duration: 0.02 seconds)
2025-08-14 12:34:58,618 - root - INFO - [common.py:73] - Step 3: Validating conversion results...
2025-08-14 12:34:58,618 - root - INFO - [common.py:73] - === Starting conversion validation ===
2025-08-14 12:34:58,618 - root - DEBUG - [common.py:69] - Checking original files in: files/oracle
2025-08-14 12:34:58,619 - root - DEBUG - [common.py:69] - Found 6 original SQL files
2025-08-14 12:34:58,619 - root - DEBUG - [common.py:69] - Checking converted files in: files/format_sql
2025-08-14 12:34:58,619 - root - DEBUG - [common.py:69] - Found 6 converted SQL files
2025-08-14 12:34:58,619 - root - INFO - [common.py:73] - Validation summary: 6 original files and 6 converted files
2025-08-14 12:34:58,620 - root - INFO - [common.py:73] - ✓ File count validation passed
2025-08-14 12:34:58,620 - root - DEBUG - [common.py:69] - ✓ Found converted file: trigger1.sql
2025-08-14 12:34:58,620 - root - DEBUG - [common.py:69] - ✓ Found converted file: trigger2.sql
2025-08-14 12:34:58,620 - root - DEBUG - [common.py:69] - ✓ Found converted file: trigger3.sql
2025-08-14 12:34:58,620 - root - DEBUG - [common.py:69] - ✓ Found converted file: trigger4.sql
2025-08-14 12:34:58,620 - root - DEBUG - [common.py:69] - ✓ Found converted file: trigger5.sql
2025-08-14 12:34:58,620 - root - DEBUG - [common.py:69] - ✓ Found converted file: trigger6.sql
2025-08-14 12:34:58,620 - root - INFO - [common.py:73] - ✓ All expected converted files found
2025-08-14 12:34:58,620 - root - INFO - [common.py:73] - Successfully validated 6 converted files
2025-08-14 12:34:58,620 - root - INFO - [common.py:73] - === Conversion validation complete ===
2025-08-14 12:34:58,621 - root - INFO - [common.py:73] - ✓ Validation complete! (Duration: 0.00 seconds)
2025-08-14 12:34:58,621 - root - INFO - [common.py:73] - Step 4: Converting JSON to PL/JSON...
2025-08-14 12:34:58,625 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,625 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,626 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,626 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,626 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,626 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,626 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,626 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,626 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,626 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,626 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,627 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,627 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,627 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,627 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,627 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,627 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,627 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,628 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,628 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,628 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,628 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,628 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,628 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,628 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,628 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,628 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,628 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,629 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,629 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,629 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,629 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,629 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,629 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,629 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,629 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,629 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,630 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,630 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,630 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,630 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,630 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,630 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,630 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,630 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,630 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,631 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,631 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,631 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,631 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,631 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,631 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,631 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,631 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,631 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,632 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,632 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,632 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,632 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,632 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,632 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,632 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,632 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,632 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,633 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,633 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,633 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,633 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,633 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,633 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,633 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,633 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,633 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,633 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,634 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,634 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,634 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,634 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,634 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,634 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,634 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,634 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,635 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,635 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,635 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,635 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,635 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,635 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,636 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,636 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,636 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,636 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,636 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,636 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,636 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,636 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,637 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,637 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,637 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,637 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,637 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,637 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,637 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,638 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,638 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,638 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,638 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,638 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,639 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,639 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,639 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,639 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,639 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,639 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,639 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,639 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,639 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,639 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,640 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,640 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,640 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,640 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,640 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,641 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,641 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,641 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,641 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,641 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,641 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,642 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,642 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,642 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,642 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,642 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,642 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,642 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,642 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,643 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,643 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,643 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,643 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,643 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,643 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,643 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,643 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,643 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,644 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,644 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,644 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,644 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,651 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,651 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,651 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,651 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,652 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,652 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,652 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,652 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,652 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,653 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,653 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,653 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,653 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,653 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,653 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,653 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,653 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,654 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,654 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,654 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,654 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,654 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,654 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,654 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,654 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,654 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,654 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,655 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,655 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,655 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,655 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,655 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,655 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,655 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,655 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,655 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,655 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,656 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,656 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,656 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,656 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,656 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,656 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,656 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,656 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,656 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,656 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,657 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,657 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,657 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,657 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,657 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,657 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,657 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,657 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,657 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,658 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,658 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,658 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,658 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,658 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,658 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,658 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,659 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,659 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,659 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,659 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,659 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,659 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,659 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,660 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,660 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,660 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,660 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,660 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,660 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,661 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,661 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,661 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,661 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,661 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,661 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,661 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,661 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,661 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,662 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,662 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,662 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,662 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,662 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,662 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,662 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,662 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'Y'
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD <> 'Y'
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,663 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_MOLECULE_RG_NO IS NULL
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPARATOR_IND = 'Y'
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.STATUS_DESC IS NOT NULL
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.DBA_DESC_CONCAT IS NOT NULL
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,664 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_NO <> :OLD.THEME_NO
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEC_MOL_CNT > 0
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)
2025-08-14 12:34:58,665 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0
2025-08-14 12:34:58,666 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,666 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL
2025-08-14 12:34:58,666 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,666 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9
2025-08-14 12:34:58,666 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,666 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.OFFICIAL_IND = 'N'
2025-08-14 12:34:58,666 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'N'
2025-08-14 12:34:58,666 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0
2025-08-14 12:34:58,667 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: UPPER(:NEW.PORTF_PROJ_CD) = 'Y'
2025-08-14 12:34:58,667 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: LENGTH(V_DESCRIPTION) > 90
2025-08-14 12:34:58,667 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNTER > 0
2025-08-14 12:34:58,667 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,667 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,667 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL
2025-08-14 12:34:58,667 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT = 0
2025-08-14 12:34:58,668 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL AND :OLD.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,668 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NOT NULL AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID
2025-08-14 12:34:58,668 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')
2025-08-14 12:34:58,668 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_EVOLVED_NMP_CNT > 0
2025-08-14 12:34:58,668 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y'
2025-08-14 12:34:58,668 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NOT NULL
2025-08-14 12:34:58,669 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)
2025-08-14 12:34:58,669 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,674 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,674 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,674 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,674 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,674 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,674 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,674 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,674 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,674 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,675 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,675 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,675 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,675 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,675 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,675 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,675 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,675 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,675 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,675 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,676 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,677 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,677 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,677 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,677 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,677 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,677 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,677 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,678 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,678 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,678 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,678 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,678 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,678 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,678 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,678 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,678 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,678 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,679 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,680 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,680 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,680 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,680 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,680 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,680 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,682 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,682 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,682 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,682 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,682 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,682 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,682 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,683 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,683 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,683 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,683 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,683 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,683 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,683 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,683 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,683 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,684 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,684 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,684 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,684 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,684 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,684 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,684 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,684 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,684 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,684 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,685 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,685 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,685 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,685 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,685 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,685 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,685 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,685 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,685 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,686 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,686 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,686 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,686 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,686 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,686 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,686 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,686 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,687 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,687 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,687 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,687 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NULL
2025-08-14 12:34:58,687 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,687 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS
2025-08-14 12:34:58,687 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')
2025-08-14 12:34:58,688 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,688 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COUNT_T_MOL_MAP > 0
2025-08-14 12:34:58,688 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,688 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,688 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,689 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,689 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID IS NOT NULL
2025-08-14 12:34:58,689 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR
2025-08-14 12:34:58,689 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,689 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO
2025-08-14 12:34:58,690 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,690 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,690 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,690 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO
2025-08-14 12:34:58,690 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: INVALID_MAPPING_EXISTS
2025-08-14 12:34:58,690 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_SEQ_NO_DUPLICATE_CNT > 0
2025-08-14 12:34:58,693 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,693 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,693 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,694 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,694 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,694 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,694 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,694 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,694 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,694 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,694 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,694 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,695 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,695 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,695 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,695 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,695 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,695 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,695 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,695 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,695 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,695 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,696 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,696 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,696 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,696 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,696 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,696 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,696 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,696 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,696 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,697 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,697 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,697 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,697 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,697 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,697 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,697 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,698 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,698 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,698 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,698 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,698 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,698 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,698 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,700 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,700 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,700 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,700 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,700 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,700 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,700 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,701 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,702 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,703 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,703 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,703 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR > 0
2025-08-14 12:34:58,703 - root - DEBUG - [JSONTOPLJSON.py:119] - condition:  OR 
2025-08-14 12:34:58,703 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')
2025-08-14 12:34:58,703 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')
2025-08-14 12:34:58,703 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,703 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,703 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID
2025-08-14 12:34:58,703 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0
2025-08-14 12:34:58,704 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01'
2025-08-14 12:34:58,704 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: V_COMPANY_TYPE_CD = 'L'
2025-08-14 12:34:58,704 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')
2025-08-14 12:34:58,704 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: CNTR = 0
2025-08-14 12:34:58,704 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,704 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')
2025-08-14 12:34:58,705 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,706 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,706 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,706 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,706 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,706 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,706 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,706 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,706 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,707 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,707 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,707 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,707 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,707 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,707 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,707 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,707 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,707 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,709 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,710 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,710 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,710 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,710 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,710 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,711 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,711 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,711 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,711 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,712 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TG_OP = ''
2025-08-14 12:34:58,712 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X')
2025-08-14 12:34:58,714 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,714 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,714 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,714 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,714 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,714 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,715 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,715 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,715 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,715 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,715 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,715 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,715 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,715 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,715 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,716 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,716 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,716 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,716 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,716 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,716 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,716 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,716 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,716 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,717 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,718 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,718 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,718 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,718 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,719 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,719 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,719 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,719 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,720 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,720 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,720 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,720 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,720 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,720 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,720 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,720 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME
2025-08-14 12:34:58,721 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED
2025-08-14 12:34:58,721 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL
2025-08-14 12:34:58,721 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL
2025-08-14 12:34:58,721 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,721 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: TRUE
2025-08-14 12:34:58,721 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL')
2025-08-14 12:34:58,721 - root - DEBUG - [JSONTOPLJSON.py:119] - condition: :NEW.PARTNER_ID IS NOT NULL
2025-08-14 12:34:58,722 - root - INFO - [common.py:73] - ✓ PL/JSON conversion complete! (Duration: 0.10 seconds)
2025-08-14 12:34:58,723 - root - INFO - [common.py:73] - Step 5: Converting JSON to PL/SQL...
2025-08-14 12:34:58,723 - root - INFO - [common.py:73] - === Starting PL/JSON to PostgreSQL format conversion ===
2025-08-14 12:34:58,723 - root - INFO - [common.py:73] - === Starting file processing ===
2025-08-14 12:34:58,723 - root - INFO - [common.py:73] - Source directory: 'files/format_pl_json'
2025-08-14 12:34:58,724 - root - INFO - [common.py:73] - Target directory: 'files/format_plsql'
2025-08-14 12:34:58,724 - root - INFO - [common.py:73] - File pattern: '.json'
2025-08-14 12:34:58,724 - root - INFO - [common.py:73] - Output suffix: '_postgresql.json'
2025-08-14 12:34:58,724 - root - DEBUG - [common.py:69] - Ensuring target directory exists...
2025-08-14 12:34:58,724 - root - DEBUG - [common.py:69] - Directory already exists: files/format_plsql
2025-08-14 12:34:58,724 - root - DEBUG - [common.py:69] - Found 6 files in source directory
2025-08-14 12:34:58,725 - root - DEBUG - [common.py:69] - Files matching pattern '.json': ['trigger1.json', 'trigger2.json', 'trigger3.json', 'trigger4.json', 'trigger5.json', 'trigger6.json']
2025-08-14 12:34:58,725 - root - DEBUG - [common.py:69] - === Processing file 1/6: trigger1.json ===
2025-08-14 12:34:58,725 - root - DEBUG - [common.py:69] - Extracted trigger number: 1
2025-08-14 12:34:58,725 - root - DEBUG - [common.py:69] - Source path: files/format_pl_json\trigger1.json
2025-08-14 12:34:58,725 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger1_postgresql.json
2025-08-14 12:34:58,725 - root - DEBUG - [common.py:69] - === Converting PL/JSON to PostgreSQL format for trigger 1 ===
2025-08-14 12:34:58,725 - root - DEBUG - [common.py:69] - Reading PL/JSON file: files/format_pl_json\trigger1.json
2025-08-14 12:34:58,727 - root - DEBUG - [common.py:69] - Successfully loaded PL/JSON data with keys: ['declarations', 'on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:58,727 - root - DEBUG - [common.py:69] - Converting to PostgreSQL format...
2025-08-14 12:34:58,727 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,727 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,727 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,727 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,728 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,728 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,728 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,728 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,728 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,728 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 20 statements in begin_end block
2025-08-14 12:34:58,728 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=20) ===
2025-08-14 12:34:58,728 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/20: type=select_statement
2025-08-14 12:34:58,729 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COALESCE(TXO_SECURITY.GET_USERID, current_u...
2025-08-14 12:34:58,729 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/20: type=select_statement
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS...
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/20: type=select_statement
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NE...
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/20: type=if_else
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=3) ===
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=if_else
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,730 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: In-prep theme m...
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=if_else
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: In-prep status ...
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: TXO_UTIL.SET_WARNING('No Molecule assigned to In-P...
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,731 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 9 lines ===
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/20: type=if_else
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=begin_end
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_...
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:334] - Nested block has 1 exception handlers
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: NO_DATA_FOUND
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Molecule ID';...
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,732 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: NULL;...
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE V_THEME_MOLECULES SET RG_NO = V_NEW_RG_NO W...
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 13 lines ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/20: type=assignment_statement
2025-08-14 12:34:58,733 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ODG_NO := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2)
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/20: type=assignment_statement
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_RESGRP_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2)
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 8/20: type=assignment_statement
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_RESLIN_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2)
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 9/20: type=assignment_statement
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_RESLIN_DESC := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT))
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 10/20: type=if_else
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME...
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_STATUS_CD := NULL
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 11/20: type=if_else
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,734 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIO...
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DBA_CD := NULL
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 12/20: type=assignment_statement
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID)
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 13/20: type=if_else
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_TRADEMARK_NO := :NEW.TRADEMARK_NO
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_TRADEMARK_NO := :OLD.TRADEMARK_NO
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 14/20: type=assignment_statement
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N')
2025-08-14 12:34:58,735 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 15/20: type=if_else
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'The automatically generated Short...
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 16/20: type=assignment_statement
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL)
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 17/20: type=if_else
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=20) ===
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/20: type=if_else
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Admin access re...
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,736 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/20: type=assignment_statement
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_MOLECULE_ID := :NEW.MOLECULE_ID
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/20: type=if_else
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Portfolio proje...
2025-08-14 12:34:58,737 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=3) ===
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=insert_statement
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_THEME_MOLECULES_MTN( MOLECULE_DE...
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=select_statement
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT MOLECULE_ID INTO V_MOLECULE_ID FROM V_THEME...
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=insert_statement
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMMAP( TMMAP.THEME_...
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 7 lines ===
2025-08-14 12:34:58,738 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/20: type=case_when
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=2) ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Theme No';...
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Theme No';...
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,739 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Theme No';...
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/20: type=assignment_statement
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/20: type=select_statement
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SEL...
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/20: type=if_else
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This Theme No already exists';...
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 8/20: type=assignment_statement
2025-08-14 12:34:58,740 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 9/20: type=assignment_statement
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_D_REGISTRAT_DATE := SYSDATE
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 10/20: type=if_else
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'New Themes can only be inserted b...
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 11/20: type=if_else
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'If Pharma Rx Portfolio Project is...
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,741 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 12/20: type=if_else
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=4) ===
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=assignment_statement
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' )
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'The automatically generated Theme...
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=assignment_statement
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := TRIM(V_DESCRIPTION)
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=assignment_statement
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := 'Y'
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,742 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=assignment_statement
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := :NEW.THEME_DESC
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=assignment_statement
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := 'N'
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 2 lines ===
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 13/20: type=assignment_statement
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 14/20: type=select_statement
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THE...
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 15/20: type=if_else
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This Theme Description already ex...
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 16/20: type=assignment_statement
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 17/20: type=assignment_statement
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY')
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 18/20: type=assignment_statement
2025-08-14 12:34:58,743 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30))
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 19/20: type=insert_statement
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ...
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 20/20: type=if_else
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEM...
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 63 lines ===
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=11) ===
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/11: type=if_else
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,744 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Admin access re...
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/11: type=if_else
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'Theme No cannot be updated';...
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/11: type=if_else
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy')
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_D_REGISTRAT_DATE := SYSDATE
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/11: type=if_else
2025-08-14 12:34:58,745 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=3) ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=assignment_statement
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' )
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=assignment_statement
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := TRIM(V_DESCRIPTION)
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=assignment_statement
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := 'Y'
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'If Pharma Rx Portfolio Project is...
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=assignment_statement
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := :NEW.THEME_DESC
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=assignment_statement
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 2 lines ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,746 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/11: type=if_else
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'The automatically generated Theme...
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/11: type=assignment_statement
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/11: type=select_statement
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THE...
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 8/11: type=if_else
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This Theme Description already ex...
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,747 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 9/11: type=assignment_statement
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 10/11: type=if_else
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD...
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=5) ===
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/5: type=assignment_statement
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/5: type=select_statement
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_COUNTER FROM V_THEMES T WHE...
2025-08-14 12:34:58,748 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/5: type=if_else
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'Official Change for this Theme No...
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/5: type=assignment_statement
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/5: type=update_statement
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD...
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 7 lines ===
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 11/11: type=case_when
2025-08-14 12:34:58,749 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=2) ===
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEM...
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_I...
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=select_statement
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEM...
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,750 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Secondary molec...
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.VALID_IND ...
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: NULL;...
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 58 lines ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,751 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Admin access re...
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=delete_statement
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering delete_statement: DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.T...
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'Theme cannot be deleted when the ...
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 8 lines ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,752 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 18/20: type=if_else
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=select_statement
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_...
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,753 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=2) ===
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=update_statement
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 2 lines ===
2025-08-14 12:34:58,754 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 8 lines ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=select_statement
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_...
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NM...
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,755 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 21 lines ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 19/20: type=if_else
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_...
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,756 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=begin_end
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID I...
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:334] - Nested block has 1 exception handlers
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: NO_DATA_FOUND
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Molecule ID';...
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,757 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=insert_statement
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PRO...
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 9 lines ===
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 14 lines ===
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 20/20: type=begin_end
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=for_loop
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:320] - Rendering FOR loop structure
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:506] - === Rendering FOR loop structure (indent=2) ===
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=delete_statement
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering delete_statement: DELETE FROM GMD.THEMES WHERE THEME_NO = I1.THEME_N...
2025-08-14 12:34:58,758 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:529] - === FOR loop structure complete ===
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 231 lines ===
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 18 exception handlers
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/18: ADMIN_UPDATE_ONLY
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ADMIN_UPDATE_ONLY
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/18: IN_PREP_NOT_PORTF_PROJ
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: IN_PREP_NOT_PORTF_PROJ
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/18: IN_PREP_NOT_CLOSED
2025-08-14 12:34:58,759 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: IN_PREP_NOT_CLOSED
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/18: INVALID_MOLECULE_ID
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: INVALID_MOLECULE_ID
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,760 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 5/18: SEC_MOL_LIST_NOT_EMPTY
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: SEC_MOL_LIST_NOT_EMPTY
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 6/18: INVALID_THEME_NO
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: INVALID_THEME_NO
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 7/18: DELETE_NO_MORE_POSSIBLE
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DELETE_NO_MORE_POSSIBLE
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 8/18: THEME_NO_ONLY_INSERT
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_NO_ONLY_INSERT
2025-08-14 12:34:58,761 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 9/18: DESCRIPTION_TOO_LONG
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DESCRIPTION_TOO_LONG
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 10/18: THEME_DESC_PROPOSAL_TOO_LONG
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_DESC_PROPOSAL_TOO_LONG
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 11/18: THEME_DESC_ALT_TOO_LONG
2025-08-14 12:34:58,762 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_DESC_ALT_TOO_LONG
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 12/18: THEME_NO_CANNOT_BE_INSERTED
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_NO_CANNOT_BE_INSERTED
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 13/18: ONLYONEOFFICIALCHANGEPERDAY
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ONLYONEOFFICIALCHANGEPERDAY
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 14/18: INSERTSMUSTBEOFFICIAL
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: INSERTSMUSTBEOFFICIAL
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,763 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 15/18: THEMEDESCRIPTIONMANDATORY
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEMEDESCRIPTIONMANDATORY
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 16/18: THEME_DESC_NOT_UNIQUE
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_DESC_NOT_UNIQUE
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 17/18: PORTF_PROJ_MOL_CRE_ERR
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: PORTF_PROJ_MOL_CRE_ERR
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 18/18: DEBUGGING
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DEBUGGING
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,764 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,765 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,765 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,765 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 270 lines ===
2025-08-14 12:34:58,765 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 19519 characters
2025-08-14 12:34:58,765 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,765 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,765 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,765 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,765 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,765 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,765 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,765 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 20 statements in begin_end block
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=20) ===
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/20: type=select_statement
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COALESCE(TXO_SECURITY.GET_USERID, current_u...
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/20: type=select_statement
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS...
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/20: type=select_statement
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NE...
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/20: type=if_else
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=3) ===
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=if_else
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: In-prep theme m...
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,766 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=if_else
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: In-prep status ...
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: TXO_UTIL.SET_WARNING('No Molecule assigned to In-P...
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 9 lines ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/20: type=if_else
2025-08-14 12:34:58,767 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=begin_end
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_...
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:334] - Nested block has 1 exception handlers
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: NO_DATA_FOUND
2025-08-14 12:34:58,768 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Molecule ID';...
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: NULL;...
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE V_THEME_MOLECULES SET RG_NO = V_NEW_RG_NO W...
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 13 lines ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/20: type=assignment_statement
2025-08-14 12:34:58,769 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ODG_NO := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2)
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/20: type=assignment_statement
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_RESGRP_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2)
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 8/20: type=assignment_statement
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_RESLIN_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2)
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 9/20: type=assignment_statement
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_RESLIN_DESC := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT))
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 10/20: type=if_else
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME...
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_STATUS_CD := NULL
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 11/20: type=if_else
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIO...
2025-08-14 12:34:58,770 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DBA_CD := NULL
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 12/20: type=assignment_statement
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID)
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 13/20: type=if_else
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_TRADEMARK_NO := :NEW.TRADEMARK_NO
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_TRADEMARK_NO := :OLD.TRADEMARK_NO
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 14/20: type=assignment_statement
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N')
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 15/20: type=if_else
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,771 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'The automatically generated Short...
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 16/20: type=assignment_statement
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL)
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 17/20: type=if_else
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=20) ===
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/20: type=if_else
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Admin access re...
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/20: type=assignment_statement
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_MOLECULE_ID := :NEW.MOLECULE_ID
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/20: type=if_else
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,772 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Portfolio proje...
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=3) ===
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=insert_statement
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_THEME_MOLECULES_MTN( MOLECULE_DE...
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=select_statement
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT MOLECULE_ID INTO V_MOLECULE_ID FROM V_THEME...
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=insert_statement
2025-08-14 12:34:58,773 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMMAP( TMMAP.THEME_...
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 7 lines ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/20: type=case_when
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=2) ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Theme No';...
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,774 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Theme No';...
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Theme No';...
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/20: type=assignment_statement
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/20: type=select_statement
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SEL...
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/20: type=if_else
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This Theme No already exists';...
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 8/20: type=assignment_statement
2025-08-14 12:34:58,775 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 9/20: type=assignment_statement
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_D_REGISTRAT_DATE := SYSDATE
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 10/20: type=if_else
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'New Themes can only be inserted b...
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 11/20: type=if_else
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'If Pharma Rx Portfolio Project is...
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 12/20: type=if_else
2025-08-14 12:34:58,776 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=4) ===
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=assignment_statement
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' )
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'The automatically generated Theme...
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=assignment_statement
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := TRIM(V_DESCRIPTION)
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=assignment_statement
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := 'Y'
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,777 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=assignment_statement
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := :NEW.THEME_DESC
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=assignment_statement
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := 'N'
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 2 lines ===
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 13/20: type=assignment_statement
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 14/20: type=select_statement
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THE...
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 15/20: type=if_else
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,778 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This Theme Description already ex...
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 16/20: type=assignment_statement
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 17/20: type=assignment_statement
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY')
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 18/20: type=assignment_statement
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30))
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 19/20: type=insert_statement
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ...
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 20/20: type=if_else
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,779 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEM...
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 63 lines ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=11) ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/11: type=if_else
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Admin access re...
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/11: type=if_else
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'Theme No cannot be updated';...
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/11: type=if_else
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,780 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy')
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_D_REGISTRAT_DATE := SYSDATE
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/11: type=if_else
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=3) ===
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=assignment_statement
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' )
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=assignment_statement
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := TRIM(V_DESCRIPTION)
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=assignment_statement
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := 'Y'
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'If Pharma Rx Portfolio Project is...
2025-08-14 12:34:58,781 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=assignment_statement
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := :NEW.THEME_DESC
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=assignment_statement
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 2 lines ===
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/11: type=if_else
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'The automatically generated Theme...
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/11: type=assignment_statement
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/11: type=select_statement
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THE...
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 8/11: type=if_else
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,782 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This Theme Description already ex...
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 9/11: type=assignment_statement
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 10/11: type=if_else
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,783 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD...
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=5) ===
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/5: type=assignment_statement
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/5: type=select_statement
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_COUNTER FROM V_THEMES T WHE...
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/5: type=if_else
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'Official Change for this Theme No...
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,784 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/5: type=assignment_statement
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/5: type=update_statement
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD...
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 7 lines ===
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 11/11: type=case_when
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=2) ===
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEM...
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,785 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_I...
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=select_statement
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEM...
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Secondary molec...
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,786 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.VALID_IND ...
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: NULL;...
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 58 lines ===
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,787 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Admin access re...
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=delete_statement
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering delete_statement: DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.T...
2025-08-14 12:34:58,788 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'Theme cannot be deleted when the ...
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 8 lines ===
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 18/20: type=if_else
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,789 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,790 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,790 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=select_statement
2025-08-14 12:34:58,790 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_...
2025-08-14 12:34:58,790 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,790 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,790 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,790 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,790 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,791 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,792 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,792 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,792 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,792 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,792 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,792 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=2) ===
2025-08-14 12:34:58,792 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,792 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,792 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=update_statement
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 2 lines ===
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 8 lines ===
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,793 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,794 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=select_statement
2025-08-14 12:34:58,794 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_...
2025-08-14 12:34:58,794 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,794 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,794 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,794 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,794 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NM...
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 21 lines ===
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 19/20: type=if_else
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,795 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,796 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,796 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,796 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,796 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,796 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_...
2025-08-14 12:34:58,796 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,796 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,796 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,796 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=begin_end
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,797 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID I...
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:334] - Nested block has 1 exception handlers
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: NO_DATA_FOUND
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Molecule ID';...
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,798 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=insert_statement
2025-08-14 12:34:58,799 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PRO...
2025-08-14 12:34:58,799 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 9 lines ===
2025-08-14 12:34:58,799 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,799 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 14 lines ===
2025-08-14 12:34:58,799 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,799 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 20/20: type=begin_end
2025-08-14 12:34:58,799 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,799 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,799 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=for_loop
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:320] - Rendering FOR loop structure
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:506] - === Rendering FOR loop structure (indent=2) ===
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=delete_statement
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering delete_statement: DELETE FROM GMD.THEMES WHERE THEME_NO = I1.THEME_N...
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:529] - === FOR loop structure complete ===
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 231 lines ===
2025-08-14 12:34:58,800 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 18 exception handlers
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/18: ADMIN_UPDATE_ONLY
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ADMIN_UPDATE_ONLY
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/18: IN_PREP_NOT_PORTF_PROJ
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: IN_PREP_NOT_PORTF_PROJ
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/18: IN_PREP_NOT_CLOSED
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: IN_PREP_NOT_CLOSED
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,801 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/18: INVALID_MOLECULE_ID
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: INVALID_MOLECULE_ID
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 5/18: SEC_MOL_LIST_NOT_EMPTY
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: SEC_MOL_LIST_NOT_EMPTY
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 6/18: INVALID_THEME_NO
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: INVALID_THEME_NO
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,802 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 7/18: DELETE_NO_MORE_POSSIBLE
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DELETE_NO_MORE_POSSIBLE
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 8/18: THEME_NO_ONLY_INSERT
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_NO_ONLY_INSERT
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,803 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 9/18: DESCRIPTION_TOO_LONG
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DESCRIPTION_TOO_LONG
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 10/18: THEME_DESC_PROPOSAL_TOO_LONG
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_DESC_PROPOSAL_TOO_LONG
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 11/18: THEME_DESC_ALT_TOO_LONG
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_DESC_ALT_TOO_LONG
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,804 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 12/18: THEME_NO_CANNOT_BE_INSERTED
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_NO_CANNOT_BE_INSERTED
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 13/18: ONLYONEOFFICIALCHANGEPERDAY
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ONLYONEOFFICIALCHANGEPERDAY
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 14/18: INSERTSMUSTBEOFFICIAL
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: INSERTSMUSTBEOFFICIAL
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,805 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 15/18: THEMEDESCRIPTIONMANDATORY
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEMEDESCRIPTIONMANDATORY
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 16/18: THEME_DESC_NOT_UNIQUE
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_DESC_NOT_UNIQUE
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 17/18: PORTF_PROJ_MOL_CRE_ERR
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: PORTF_PROJ_MOL_CRE_ERR
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 18/18: DEBUGGING
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DEBUGGING
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,806 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,807 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,807 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,807 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 270 lines ===
2025-08-14 12:34:58,807 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 19519 characters
2025-08-14 12:34:58,807 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,807 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,807 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 20 statements in begin_end block
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=20) ===
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/20: type=select_statement
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COALESCE(TXO_SECURITY.GET_USERID, current_u...
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/20: type=select_statement
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS...
2025-08-14 12:34:58,808 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/20: type=select_statement
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NE...
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/20: type=if_else
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=3) ===
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=if_else
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: In-prep theme m...
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=if_else
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,809 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: In-prep status ...
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: TXO_UTIL.SET_WARNING('No Molecule assigned to In-P...
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 9 lines ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/20: type=if_else
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=begin_end
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,810 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_...
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:334] - Nested block has 1 exception handlers
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: NO_DATA_FOUND
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Molecule ID';...
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,811 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: NULL;...
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE V_THEME_MOLECULES SET RG_NO = V_NEW_RG_NO W...
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 13 lines ===
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/20: type=assignment_statement
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ODG_NO := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2)
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/20: type=assignment_statement
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_RESGRP_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2)
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 8/20: type=assignment_statement
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_RESLIN_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2)
2025-08-14 12:34:58,812 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 9/20: type=assignment_statement
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_RESLIN_DESC := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT))
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 10/20: type=if_else
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME...
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_STATUS_CD := NULL
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 11/20: type=if_else
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIO...
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,813 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DBA_CD := NULL
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 12/20: type=assignment_statement
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID)
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 13/20: type=if_else
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_TRADEMARK_NO := :NEW.TRADEMARK_NO
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_TRADEMARK_NO := :OLD.TRADEMARK_NO
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 14/20: type=assignment_statement
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N')
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 15/20: type=if_else
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,814 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'The automatically generated Short...
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 16/20: type=assignment_statement
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL)
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 17/20: type=if_else
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=20) ===
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/20: type=if_else
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Admin access re...
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/20: type=assignment_statement
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_MOLECULE_ID := :NEW.MOLECULE_ID
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/20: type=if_else
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,815 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Portfolio proje...
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=3) ===
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=insert_statement
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_THEME_MOLECULES_MTN( MOLECULE_DE...
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=select_statement
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT MOLECULE_ID INTO V_MOLECULE_ID FROM V_THEME...
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=insert_statement
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMMAP( TMMAP.THEME_...
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 7 lines ===
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,816 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/20: type=case_when
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=2) ===
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Theme No';...
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,817 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Theme No';...
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,818 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Theme No';...
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/20: type=assignment_statement
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/20: type=select_statement
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SEL...
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/20: type=if_else
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This Theme No already exists';...
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,819 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 8/20: type=assignment_statement
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 9/20: type=assignment_statement
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_D_REGISTRAT_DATE := SYSDATE
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 10/20: type=if_else
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'New Themes can only be inserted b...
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 11/20: type=if_else
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,820 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'If Pharma Rx Portfolio Project is...
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 12/20: type=if_else
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=4) ===
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=assignment_statement
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' )
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,821 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'The automatically generated Theme...
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=assignment_statement
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := TRIM(V_DESCRIPTION)
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=assignment_statement
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := 'Y'
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=assignment_statement
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := :NEW.THEME_DESC
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=assignment_statement
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := 'N'
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 2 lines ===
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 13/20: type=assignment_statement
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 14/20: type=select_statement
2025-08-14 12:34:58,822 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THE...
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 15/20: type=if_else
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This Theme Description already ex...
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 16/20: type=assignment_statement
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 17/20: type=assignment_statement
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY')
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 18/20: type=assignment_statement
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30))
2025-08-14 12:34:58,823 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 19/20: type=insert_statement
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ...
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 20/20: type=if_else
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEM...
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 63 lines ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=11) ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/11: type=if_else
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Admin access re...
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/11: type=if_else
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,824 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'Theme No cannot be updated';...
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/11: type=if_else
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy')
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_D_REGISTRAT_DATE := SYSDATE
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/11: type=if_else
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=3) ===
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=assignment_statement
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' )
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=assignment_statement
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := TRIM(V_DESCRIPTION)
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=assignment_statement
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := 'Y'
2025-08-14 12:34:58,825 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'If Pharma Rx Portfolio Project is...
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=assignment_statement
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_DESCRIPTION := :NEW.THEME_DESC
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=assignment_statement
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 2 lines ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/11: type=if_else
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'The automatically generated Theme...
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/11: type=assignment_statement
2025-08-14 12:34:58,826 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/11: type=select_statement
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THE...
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 8/11: type=if_else
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This Theme Description already ex...
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 9/11: type=assignment_statement
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 10/11: type=if_else
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,827 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD...
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=5) ===
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/5: type=assignment_statement
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/5: type=select_statement
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_COUNTER FROM V_THEMES T WHE...
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/5: type=if_else
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'Official Change for this Theme No...
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/5: type=assignment_statement
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_COUNTER := NULL
2025-08-14 12:34:58,828 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/5: type=update_statement
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD...
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 7 lines ===
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 11/11: type=case_when
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=2) ===
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEM...
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,829 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_I...
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=select_statement
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEM...
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Secondary molec...
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.VALID_IND ...
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,830 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: NULL;...
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 58 lines ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_V_THEMES_IOF: Admin access re...
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,831 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=delete_statement
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering delete_statement: DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.T...
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'Theme cannot be deleted when the ...
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 8 lines ===
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 18/20: type=if_else
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=select_statement
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_...
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,832 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,833 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=2) ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=update_statement
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOS...
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 2 lines ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 8 lines ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,834 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=select_statement
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_...
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NM...
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 21 lines ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 19/20: type=if_else
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,835 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_...
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=begin_end
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=select_statement
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID I...
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:334] - Nested block has 1 exception handlers
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: NO_DATA_FOUND
2025-08-14 12:34:58,836 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'This is not a valid Molecule ID';...
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=insert_statement
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PRO...
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 9 lines ===
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 14 lines ===
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 20/20: type=begin_end
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,837 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=for_loop
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:320] - Rendering FOR loop structure
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:506] - === Rendering FOR loop structure (indent=2) ===
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=delete_statement
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering delete_statement: DELETE FROM GMD.THEMES WHERE THEME_NO = I1.THEME_N...
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:529] - === FOR loop structure complete ===
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 231 lines ===
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 18 exception handlers
2025-08-14 12:34:58,838 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/18: ADMIN_UPDATE_ONLY
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ADMIN_UPDATE_ONLY
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/18: IN_PREP_NOT_PORTF_PROJ
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: IN_PREP_NOT_PORTF_PROJ
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/18: IN_PREP_NOT_CLOSED
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: IN_PREP_NOT_CLOSED
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,839 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/18: INVALID_MOLECULE_ID
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: INVALID_MOLECULE_ID
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 5/18: SEC_MOL_LIST_NOT_EMPTY
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: SEC_MOL_LIST_NOT_EMPTY
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 6/18: INVALID_THEME_NO
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: INVALID_THEME_NO
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 7/18: DELETE_NO_MORE_POSSIBLE
2025-08-14 12:34:58,840 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DELETE_NO_MORE_POSSIBLE
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 8/18: THEME_NO_ONLY_INSERT
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_NO_ONLY_INSERT
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 9/18: DESCRIPTION_TOO_LONG
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DESCRIPTION_TOO_LONG
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 10/18: THEME_DESC_PROPOSAL_TOO_LONG
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_DESC_PROPOSAL_TOO_LONG
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,841 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 11/18: THEME_DESC_ALT_TOO_LONG
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_DESC_ALT_TOO_LONG
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 12/18: THEME_NO_CANNOT_BE_INSERTED
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_NO_CANNOT_BE_INSERTED
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 13/18: ONLYONEOFFICIALCHANGEPERDAY
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ONLYONEOFFICIALCHANGEPERDAY
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,842 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 14/18: INSERTSMUSTBEOFFICIAL
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: INSERTSMUSTBEOFFICIAL
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 15/18: THEMEDESCRIPTIONMANDATORY
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEMEDESCRIPTIONMANDATORY
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 16/18: THEME_DESC_NOT_UNIQUE
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: THEME_DESC_NOT_UNIQUE
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 17/18: PORTF_PROJ_MOL_CRE_ERR
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: PORTF_PROJ_MOL_CRE_ERR
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,843 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 18/18: DEBUGGING
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DEBUGGING
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,844 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 270 lines ===
2025-08-14 12:34:58,844 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 19519 characters
2025-08-14 12:34:58,844 - root - DEBUG - [common.py:69] - PostgreSQL format conversion completed
2025-08-14 12:34:58,844 - root - DEBUG - [common.py:69] - Writing PostgreSQL format to: files/format_plsql\trigger1_postgresql.json
2025-08-14 12:34:58,845 - root - DEBUG - [common.py:69] - Successfully wrote PostgreSQL format to files/format_plsql\trigger1_postgresql.json
2025-08-14 12:34:58,845 - root - DEBUG - [common.py:69] - === PL/JSON to PostgreSQL format conversion complete for trigger 1 ===
2025-08-14 12:34:58,845 - root - INFO - [common.py:73] - ✓ Created trigger1_postgresql.json
2025-08-14 12:34:58,845 - root - DEBUG - [common.py:69] - === Processing file 2/6: trigger2.json ===
2025-08-14 12:34:58,845 - root - DEBUG - [common.py:69] - Extracted trigger number: 2
2025-08-14 12:34:58,846 - root - DEBUG - [common.py:69] - Source path: files/format_pl_json\trigger2.json
2025-08-14 12:34:58,846 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger2_postgresql.json
2025-08-14 12:34:58,846 - root - DEBUG - [common.py:69] - === Converting PL/JSON to PostgreSQL format for trigger 2 ===
2025-08-14 12:34:58,846 - root - DEBUG - [common.py:69] - Reading PL/JSON file: files/format_pl_json\trigger2.json
2025-08-14 12:34:58,846 - root - DEBUG - [common.py:69] - Successfully loaded PL/JSON data with keys: ['declarations', 'on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:58,846 - root - DEBUG - [common.py:69] - Converting to PostgreSQL format...
2025-08-14 12:34:58,846 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,846 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 5 statements in begin_end block
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=5) ===
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/5: type=select_statement
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC ...
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/5: type=if_else
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,847 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=3) ===
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=update_statement
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=update_statement
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=unknown_statement
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THE...
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/5: type=if_else
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,848 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=7) ===
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/7: type=select_statement
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_TH...
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/7: type=if_else
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Molec...
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/7: type=if_else
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,849 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Inval...
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/7: type=if_else
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,850 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=4) ===
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=select_statement
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THE...
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Mappi...
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=select_statement
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THE...
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,851 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: INVALID_MAPPING_EXISTS := TRUE
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 8 lines ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/7: type=if_else
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=case_when
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=3) ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,852 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=2) ===
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,853 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Inval...
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 17 lines ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/7: type=if_else
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=3) ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=if_else
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,854 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP...
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=3) ===
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=update_statement
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=if_else
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,855 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 11 lines ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 16 lines ===
2025-08-14 12:34:58,856 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=if_else
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=3) ===
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=update_statement
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=update_statement
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,857 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 7 lines ===
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,858 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 35 lines ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/7: type=unknown_statement
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THE...
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 76 lines ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,859 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/5: type=select_statement
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ...
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/5: type=if_else
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Inval...
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 88 lines ===
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 5 exception handlers
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/5: ERR_MAP_EXISTS
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_MAP_EXISTS
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/5: ERR_MOLEC_ID_MISSING
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_MOLEC_ID_MISSING
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,860 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/5: ERR_UPD_INV_MAP
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_UPD_INV_MAP
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/5: ERR_INS_INV_MAP
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INS_INV_MAP
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 5/5: ERR_INV_MOL_SEQUENCE
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INV_MOL_SEQUENCE
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,861 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 101 lines ===
2025-08-14 12:34:58,862 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 7936 characters
2025-08-14 12:34:58,862 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,862 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,862 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,862 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,862 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,862 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,862 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 5 statements in begin_end block
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=5) ===
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/5: type=select_statement
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC ...
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/5: type=if_else
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=3) ===
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=update_statement
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,863 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=update_statement
2025-08-14 12:34:58,864 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,864 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=unknown_statement
2025-08-14 12:34:58,864 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THE...
2025-08-14 12:34:58,864 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,864 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,864 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/5: type=if_else
2025-08-14 12:34:58,864 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,864 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,864 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=7) ===
2025-08-14 12:34:58,864 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/7: type=select_statement
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_TH...
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/7: type=if_else
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Molec...
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/7: type=if_else
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Inval...
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/7: type=if_else
2025-08-14 12:34:58,865 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=4) ===
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=select_statement
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THE...
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Mappi...
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=select_statement
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THE...
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,866 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: INVALID_MAPPING_EXISTS := TRUE
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 8 lines ===
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/7: type=if_else
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=case_when
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,867 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=3) ===
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=2) ===
2025-08-14 12:34:58,868 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,869 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Inval...
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 17 lines ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/7: type=if_else
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=3) ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=if_else
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP...
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,870 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=3) ===
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=update_statement
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=if_else
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,871 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 11 lines ===
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 16 lines ===
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=if_else
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,872 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=3) ===
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=update_statement
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=update_statement
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,873 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 7 lines ===
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,874 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 35 lines ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/7: type=unknown_statement
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THE...
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 76 lines ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/5: type=select_statement
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ...
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/5: type=if_else
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Inval...
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,875 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 88 lines ===
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 5 exception handlers
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/5: ERR_MAP_EXISTS
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_MAP_EXISTS
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/5: ERR_MOLEC_ID_MISSING
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_MOLEC_ID_MISSING
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/5: ERR_UPD_INV_MAP
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_UPD_INV_MAP
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,876 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/5: ERR_INS_INV_MAP
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INS_INV_MAP
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 5/5: ERR_INV_MOL_SEQUENCE
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INV_MOL_SEQUENCE
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,877 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 101 lines ===
2025-08-14 12:34:58,877 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 7936 characters
2025-08-14 12:34:58,877 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,878 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,878 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,878 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,878 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,878 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,878 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,878 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,878 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,878 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 5 statements in begin_end block
2025-08-14 12:34:58,878 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=5) ===
2025-08-14 12:34:58,878 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/5: type=select_statement
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC ...
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/5: type=if_else
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=3) ===
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=update_statement
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=update_statement
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=unknown_statement
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THE...
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,879 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/5: type=if_else
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=7) ===
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/7: type=select_statement
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_TH...
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/7: type=if_else
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Molec...
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/7: type=if_else
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,880 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Inval...
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/7: type=if_else
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=4) ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=select_statement
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THE...
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,881 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Mappi...
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=select_statement
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THE...
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: INVALID_MAPPING_EXISTS := TRUE
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 8 lines ===
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/7: type=if_else
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=case_when
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,882 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=3) ===
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=2) ===
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,883 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Inval...
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 17 lines ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,884 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/7: type=if_else
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=3) ===
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=if_else
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP...
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=3) ===
2025-08-14 12:34:58,885 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=update_statement
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=if_else
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,886 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=1) ===
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 11 lines ===
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 16 lines ===
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=if_else
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,887 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,888 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=3) ===
2025-08-14 12:34:58,888 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=update_statement
2025-08-14 12:34:58,888 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,888 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=update_statement
2025-08-14 12:34:58,888 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ...
2025-08-14 12:34:58,888 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,888 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,888 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,889 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,889 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,889 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,889 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,889 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,889 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,889 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,889 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 7 lines ===
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=2) ===
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,890 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,891 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,891 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,891 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = ...
2025-08-14 12:34:58,891 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,891 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,891 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=insert_statement
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO THEME_MOLECULE_MAP TMM ( TMM.THEME_NO,...
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 6 lines ===
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 35 lines ===
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 7/7: type=unknown_statement
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THE...
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 76 lines ===
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,892 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/5: type=select_statement
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ...
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/5: type=if_else
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'MDM_THEME_MOLECULE_MAP_IOF: Inval...
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 88 lines ===
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 5 exception handlers
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/5: ERR_MAP_EXISTS
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_MAP_EXISTS
2025-08-14 12:34:58,893 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/5: ERR_MOLEC_ID_MISSING
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_MOLEC_ID_MISSING
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/5: ERR_UPD_INV_MAP
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_UPD_INV_MAP
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/5: ERR_INS_INV_MAP
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INS_INV_MAP
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,894 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 5/5: ERR_INV_MOL_SEQUENCE
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INV_MOL_SEQUENCE
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,895 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 101 lines ===
2025-08-14 12:34:58,895 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 7936 characters
2025-08-14 12:34:58,895 - root - DEBUG - [common.py:69] - PostgreSQL format conversion completed
2025-08-14 12:34:58,896 - root - DEBUG - [common.py:69] - Writing PostgreSQL format to: files/format_plsql\trigger2_postgresql.json
2025-08-14 12:34:58,896 - root - DEBUG - [common.py:69] - Successfully wrote PostgreSQL format to files/format_plsql\trigger2_postgresql.json
2025-08-14 12:34:58,896 - root - DEBUG - [common.py:69] - === PL/JSON to PostgreSQL format conversion complete for trigger 2 ===
2025-08-14 12:34:58,897 - root - INFO - [common.py:73] - ✓ Created trigger2_postgresql.json
2025-08-14 12:34:58,897 - root - DEBUG - [common.py:69] - === Processing file 3/6: trigger3.json ===
2025-08-14 12:34:58,897 - root - DEBUG - [common.py:69] - Extracted trigger number: 3
2025-08-14 12:34:58,897 - root - DEBUG - [common.py:69] - Source path: files/format_pl_json\trigger3.json
2025-08-14 12:34:58,897 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger3_postgresql.json
2025-08-14 12:34:58,897 - root - DEBUG - [common.py:69] - === Converting PL/JSON to PostgreSQL format for trigger 3 ===
2025-08-14 12:34:58,898 - root - DEBUG - [common.py:69] - Reading PL/JSON file: files/format_pl_json\trigger3.json
2025-08-14 12:34:58,898 - root - DEBUG - [common.py:69] - Successfully loaded PL/JSON data with keys: ['declarations', 'on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:58,898 - root - DEBUG - [common.py:69] - Converting to PostgreSQL format...
2025-08-14 12:34:58,899 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,899 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,899 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,899 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,899 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,899 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,899 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,899 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,899 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,899 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 6 statements in begin_end block
2025-08-14 12:34:58,899 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=6) ===
2025-08-14 12:34:58,899 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/6: type=begin_end
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_USERID := TXO_UTIL.GET_USERID
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:334] - Nested block has 1 exception handlers
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: OTHERS
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_USERID := USER
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/6: type=assignment_statement
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: CNTR := 0
2025-08-14 12:34:58,900 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/6: type=select_statement
2025-08-14 12:34:58,901 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANY_ADDR...
2025-08-14 12:34:58,901 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/6: type=if_else
2025-08-14 12:34:58,901 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,901 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,901 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,901 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,901 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,901 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,901 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_INS';...
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/6: type=if_else
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=4) ===
2025-08-14 12:34:58,902 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=select_statement
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM...
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_INS_LEGAL_ADDR';...
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=if_else
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_CTRY_CHG';...
2025-08-14 12:34:58,903 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=4) ===
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=unknown_statement
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=assignment_statement
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: CNTR := 0
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=select_statement
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANIES WHE...
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,904 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=4) ===
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=select_statement
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNTRY_CD INTO V_COUNTRY_CD FROM MDM_V_COU...
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=6) ===
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy')
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy')
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=unknown_statement
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_...
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,905 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=6) ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=for_loop
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:320] - Rendering FOR loop structure
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:506] - === Rendering FOR loop structure (indent=7) ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=8, count=1) ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_...
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:529] - === FOR loop structure complete ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 12 lines ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 17 lines ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,906 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 21 lines ===
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 28 lines ===
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,907 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 41 lines ===
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/6: type=if_else
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,908 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_NOT_ALLOWED_TO_INVALIDATE';...
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=unknown_statement
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPAN...
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 62 lines ===
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 6 exception handlers
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/6: ERR_UPD
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_UPD
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/6: ERR_INS
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INS
2025-08-14 12:34:58,909 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/6: ERR_CTRY_CHG
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_CTRY_CHG
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/6: TEST_ERR
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: TEST_ERR
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 5/6: ERR_INS_LEGAL_ADDR
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INS_LEGAL_ADDR
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,910 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,911 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,911 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,911 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 6/6: ERR_NOT_ALLOWED_TO_INVALIDATE
2025-08-14 12:34:58,911 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_NOT_ALLOWED_TO_INVALIDATE
2025-08-14 12:34:58,911 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,911 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,911 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,911 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,911 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,911 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 77 lines ===
2025-08-14 12:34:58,911 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 7306 characters
2025-08-14 12:34:58,911 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,912 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 6 statements in begin_end block
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=6) ===
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/6: type=begin_end
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_USERID := TXO_UTIL.GET_USERID
2025-08-14 12:34:58,912 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:334] - Nested block has 1 exception handlers
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: OTHERS
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_USERID := USER
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/6: type=assignment_statement
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: CNTR := 0
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/6: type=select_statement
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANY_ADDR...
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/6: type=if_else
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_INS';...
2025-08-14 12:34:58,913 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/6: type=if_else
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=4) ===
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=select_statement
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM...
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_INS_LEGAL_ADDR';...
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=if_else
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,914 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_CTRY_CHG';...
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=4) ===
2025-08-14 12:34:58,915 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=unknown_statement
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=assignment_statement
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: CNTR := 0
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=select_statement
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANIES WHE...
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=4) ===
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=select_statement
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNTRY_CD INTO V_COUNTRY_CD FROM MDM_V_COU...
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=6) ===
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy')
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,916 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy')
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=unknown_statement
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_...
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=6) ===
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=for_loop
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:320] - Rendering FOR loop structure
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:506] - === Rendering FOR loop structure (indent=7) ===
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=8, count=1) ===
2025-08-14 12:34:58,917 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_...
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:529] - === FOR loop structure complete ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 12 lines ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 17 lines ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 21 lines ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 28 lines ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,918 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,919 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 41 lines ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/6: type=if_else
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_NOT_ALLOWED_TO_INVALIDATE';...
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=unknown_statement
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPAN...
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 62 lines ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 6 exception handlers
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/6: ERR_UPD
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_UPD
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,920 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/6: ERR_INS
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INS
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/6: ERR_CTRY_CHG
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_CTRY_CHG
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/6: TEST_ERR
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: TEST_ERR
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,921 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 5/6: ERR_INS_LEGAL_ADDR
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INS_LEGAL_ADDR
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 6/6: ERR_NOT_ALLOWED_TO_INVALIDATE
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_NOT_ALLOWED_TO_INVALIDATE
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,922 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 77 lines ===
2025-08-14 12:34:58,922 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 7306 characters
2025-08-14 12:34:58,923 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,923 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,923 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,923 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,923 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,923 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,923 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,923 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,923 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 6 statements in begin_end block
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=6) ===
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/6: type=begin_end
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:325] - Rendering nested BEGIN block
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:328] - Nested block contains 1 statements
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_USERID := TXO_UTIL.GET_USERID
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:334] - Nested block has 1 exception handlers
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: OTHERS
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_USERID := USER
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/6: type=assignment_statement
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: CNTR := 0
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/6: type=select_statement
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANY_ADDR...
2025-08-14 12:34:58,924 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/6: type=if_else
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_INS';...
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/6: type=if_else
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=4) ===
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=select_statement
2025-08-14 12:34:58,925 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM...
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_INS_LEGAL_ADDR';...
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=if_else
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_CTRY_CHG';...
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,926 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=4) ===
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=4) ===
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=unknown_statement
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=assignment_statement
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: CNTR := 0
2025-08-14 12:34:58,927 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=select_statement
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNT(*) INTO CNTR FROM CFG_V_COMPANIES WHE...
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=5) ===
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=6, count=4) ===
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=select_statement
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering select_statement: SELECT COUNTRY_CD INTO V_COUNTRY_CD FROM MDM_V_COU...
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=if_else
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=6) ===
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy')
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,928 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy')
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=unknown_statement
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_...
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=6) ===
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=7, count=1) ===
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=for_loop
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:320] - Rendering FOR loop structure
2025-08-14 12:34:58,929 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:506] - === Rendering FOR loop structure (indent=7) ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=8, count=1) ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_...
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:529] - === FOR loop structure complete ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 3 lines ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 12 lines ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 17 lines ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 21 lines ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 28 lines ===
2025-08-14 12:34:58,930 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=if_else
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=3) ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=4, count=1) ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPA...
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 41 lines ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/6: type=if_else
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,931 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=if_else
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'ERR_NOT_ALLOWED_TO_INVALIDATE';...
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=unknown_statement
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPAN...
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 62 lines ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 6 exception handlers
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/6: ERR_UPD
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_UPD
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,932 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/6: ERR_INS
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INS
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/6: ERR_CTRY_CHG
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_CTRY_CHG
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/6: TEST_ERR
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: TEST_ERR
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 5/6: ERR_INS_LEGAL_ADDR
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_INS_LEGAL_ADDR
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,933 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,934 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,934 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,934 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 6/6: ERR_NOT_ALLOWED_TO_INVALIDATE
2025-08-14 12:34:58,934 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: ERR_NOT_ALLOWED_TO_INVALIDATE
2025-08-14 12:34:58,934 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,934 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,934 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,934 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,934 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,934 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 77 lines ===
2025-08-14 12:34:58,934 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 7306 characters
2025-08-14 12:34:58,934 - root - DEBUG - [common.py:69] - PostgreSQL format conversion completed
2025-08-14 12:34:58,934 - root - DEBUG - [common.py:69] - Writing PostgreSQL format to: files/format_plsql\trigger3_postgresql.json
2025-08-14 12:34:58,935 - root - DEBUG - [common.py:69] - Successfully wrote PostgreSQL format to files/format_plsql\trigger3_postgresql.json
2025-08-14 12:34:58,935 - root - DEBUG - [common.py:69] - === PL/JSON to PostgreSQL format conversion complete for trigger 3 ===
2025-08-14 12:34:58,935 - root - INFO - [common.py:73] - ✓ Created trigger3_postgresql.json
2025-08-14 12:34:58,935 - root - DEBUG - [common.py:69] - === Processing file 4/6: trigger4.json ===
2025-08-14 12:34:58,935 - root - DEBUG - [common.py:69] - Extracted trigger number: 4
2025-08-14 12:34:58,935 - root - DEBUG - [common.py:69] - Source path: files/format_pl_json\trigger4.json
2025-08-14 12:34:58,935 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger4_postgresql.json
2025-08-14 12:34:58,935 - root - DEBUG - [common.py:69] - === Converting PL/JSON to PostgreSQL format for trigger 4 ===
2025-08-14 12:34:58,935 - root - DEBUG - [common.py:69] - Reading PL/JSON file: files/format_pl_json\trigger4.json
2025-08-14 12:34:58,936 - root - DEBUG - [common.py:69] - Successfully loaded PL/JSON data with keys: ['declarations', 'on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:58,936 - root - DEBUG - [common.py:69] - Converting to PostgreSQL format...
2025-08-14 12:34:58,936 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,936 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,936 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,936 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,936 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,936 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 6 statements in begin_end block
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=6) ===
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/6: type=if_else
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ACTION := 'I'
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ACTION := 'U'
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,937 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ACTION := 'D'
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/6: type=assignment_statement
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: COL_NAMES := ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ]
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/6: type=assignment_statement
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: COL_NEW_VALUES := ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ]
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/6: type=assignment_statement
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: COL_OLD_VALUES := ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ]
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/6: type=unknown_statement
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: PERFORM MDMTOOL."mdmt_util_history$write_history"(...
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/6: type=unknown_statement
2025-08-14 12:34:58,938 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: RETURN NULL;...
2025-08-14 12:34:58,939 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 12 lines ===
2025-08-14 12:34:58,939 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 14 lines ===
2025-08-14 12:34:58,939 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 3786 characters
2025-08-14 12:34:58,939 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,939 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,939 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,939 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,939 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 6 statements in begin_end block
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=6) ===
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/6: type=if_else
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ACTION := 'I'
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ACTION := 'U'
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,940 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ACTION := 'D'
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/6: type=assignment_statement
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: COL_NAMES := ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ]
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/6: type=assignment_statement
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: COL_NEW_VALUES := ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ]
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/6: type=assignment_statement
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: COL_OLD_VALUES := ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ]
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/6: type=unknown_statement
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: PERFORM MDMTOOL."mdmt_util_history$write_history"(...
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/6: type=unknown_statement
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: RETURN NULL;...
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 12 lines ===
2025-08-14 12:34:58,941 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 14 lines ===
2025-08-14 12:34:58,941 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 3786 characters
2025-08-14 12:34:58,942 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,942 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,942 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,942 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,942 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,942 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,942 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,942 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,942 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,942 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 6 statements in begin_end block
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=6) ===
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/6: type=if_else
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ACTION := 'I'
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ACTION := 'U'
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_ACTION := 'D'
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/6: type=assignment_statement
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: COL_NAMES := ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ]
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/6: type=assignment_statement
2025-08-14 12:34:58,943 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: COL_NEW_VALUES := ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ]
2025-08-14 12:34:58,944 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/6: type=assignment_statement
2025-08-14 12:34:58,944 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: COL_OLD_VALUES := ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ]
2025-08-14 12:34:58,944 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/6: type=unknown_statement
2025-08-14 12:34:58,944 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: PERFORM MDMTOOL."mdmt_util_history$write_history"(...
2025-08-14 12:34:58,944 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/6: type=unknown_statement
2025-08-14 12:34:58,944 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: RETURN NULL;...
2025-08-14 12:34:58,944 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 12 lines ===
2025-08-14 12:34:58,944 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 14 lines ===
2025-08-14 12:34:58,944 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 3786 characters
2025-08-14 12:34:58,944 - root - DEBUG - [common.py:69] - PostgreSQL format conversion completed
2025-08-14 12:34:58,944 - root - DEBUG - [common.py:69] - Writing PostgreSQL format to: files/format_plsql\trigger4_postgresql.json
2025-08-14 12:34:58,945 - root - DEBUG - [common.py:69] - Successfully wrote PostgreSQL format to files/format_plsql\trigger4_postgresql.json
2025-08-14 12:34:58,945 - root - DEBUG - [common.py:69] - === PL/JSON to PostgreSQL format conversion complete for trigger 4 ===
2025-08-14 12:34:58,945 - root - INFO - [common.py:73] - ✓ Created trigger4_postgresql.json
2025-08-14 12:34:58,945 - root - DEBUG - [common.py:69] - === Processing file 5/6: trigger5.json ===
2025-08-14 12:34:58,945 - root - DEBUG - [common.py:69] - Extracted trigger number: 5
2025-08-14 12:34:58,945 - root - DEBUG - [common.py:69] - Source path: files/format_pl_json\trigger5.json
2025-08-14 12:34:58,945 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger5_postgresql.json
2025-08-14 12:34:58,945 - root - DEBUG - [common.py:69] - === Converting PL/JSON to PostgreSQL format for trigger 5 ===
2025-08-14 12:34:58,945 - root - DEBUG - [common.py:69] - Reading PL/JSON file: files/format_pl_json\trigger5.json
2025-08-14 12:34:58,946 - root - DEBUG - [common.py:69] - Successfully loaded PL/JSON data with keys: ['declarations', 'on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:58,946 - root - DEBUG - [common.py:69] - Converting to PostgreSQL format...
2025-08-14 12:34:58,946 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,946 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,946 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,946 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,946 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,946 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,946 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 4 statements in begin_end block
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=4) ===
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=assignment_statement
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_USERID := COALESCE(NEW.UPD_USER, OLD.UPD_USER)
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=assignment_statement
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_TRG_UPD_DATE_STR := TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD')
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=if_else
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,947 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,948 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,948 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=case_when
2025-08-14 12:34:58,948 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,948 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=3) ===
2025-08-14 12:34:58,948 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,948 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,948 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW...
2025-08-14 12:34:58,948 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,948 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,948 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW...
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: NULL;...
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=unknown_statement
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC( ...
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 9 lines ===
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 11 lines ===
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,949 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=unknown_statement
2025-08-14 12:34:58,950 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: RETURN NULL;...
2025-08-14 12:34:58,950 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 16 lines ===
2025-08-14 12:34:58,950 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 18 lines ===
2025-08-14 12:34:58,950 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 1096 characters
2025-08-14 12:34:58,950 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,950 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 4 statements in begin_end block
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=4) ===
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=assignment_statement
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_USERID := COALESCE(NEW.UPD_USER, OLD.UPD_USER)
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=assignment_statement
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_TRG_UPD_DATE_STR := TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD')
2025-08-14 12:34:58,951 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=if_else
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=case_when
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=3) ===
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW...
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW...
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,952 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: NULL;...
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=unknown_statement
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC( ...
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 9 lines ===
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 11 lines ===
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=unknown_statement
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: RETURN NULL;...
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 16 lines ===
2025-08-14 12:34:58,953 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 18 lines ===
2025-08-14 12:34:58,953 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 1096 characters
2025-08-14 12:34:58,954 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,954 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 4 statements in begin_end block
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=4) ===
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/4: type=assignment_statement
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_USERID := COALESCE(NEW.UPD_USER, OLD.UPD_USER)
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/4: type=assignment_statement
2025-08-14 12:34:58,954 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_TRG_UPD_DATE_STR := TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD')
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/4: type=if_else
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=if_else
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=2) ===
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=case_when
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:316] - Rendering CASE-WHEN structure
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:447] - === Rendering CASE-WHEN structure (indent=3) ===
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW...
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=update_statement
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW...
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=5, count=1) ===
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,955 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: NULL;...
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:492] - === CASE-WHEN structure complete ===
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=unknown_statement
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC( ...
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 9 lines ===
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 11 lines ===
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/4: type=unknown_statement
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: RETURN NULL;...
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 16 lines ===
2025-08-14 12:34:58,956 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 18 lines ===
2025-08-14 12:34:58,956 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 1096 characters
2025-08-14 12:34:58,956 - root - DEBUG - [common.py:69] - PostgreSQL format conversion completed
2025-08-14 12:34:58,956 - root - DEBUG - [common.py:69] - Writing PostgreSQL format to: files/format_plsql\trigger5_postgresql.json
2025-08-14 12:34:58,957 - root - DEBUG - [common.py:69] - Successfully wrote PostgreSQL format to files/format_plsql\trigger5_postgresql.json
2025-08-14 12:34:58,957 - root - DEBUG - [common.py:69] - === PL/JSON to PostgreSQL format conversion complete for trigger 5 ===
2025-08-14 12:34:58,957 - root - INFO - [common.py:73] - ✓ Created trigger5_postgresql.json
2025-08-14 12:34:58,957 - root - DEBUG - [common.py:69] - === Processing file 6/6: trigger6.json ===
2025-08-14 12:34:58,957 - root - DEBUG - [common.py:69] - Extracted trigger number: 6
2025-08-14 12:34:58,958 - root - DEBUG - [common.py:69] - Source path: files/format_pl_json\trigger6.json
2025-08-14 12:34:58,958 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger6_postgresql.json
2025-08-14 12:34:58,958 - root - DEBUG - [common.py:69] - === Converting PL/JSON to PostgreSQL format for trigger 6 ===
2025-08-14 12:34:58,958 - root - DEBUG - [common.py:69] - Reading PL/JSON file: files/format_pl_json\trigger6.json
2025-08-14 12:34:58,958 - root - DEBUG - [common.py:69] - Successfully loaded PL/JSON data with keys: ['declarations', 'on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:58,959 - root - DEBUG - [common.py:69] - Converting to PostgreSQL format...
2025-08-14 12:34:58,959 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,959 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,959 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,959 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,959 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,959 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,959 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,959 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 6 statements in begin_end block
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=6) ===
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/6: type=assignment_statement
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/6: type=if_else
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,960 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'V_NO_UPDATE_TO_EVOLVED';...
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/6: type=if_else
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'V_NO_UPDATE_EVOLVED_TO_TERMINATED...
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/6: type=if_else
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_EVOLVED_THEME_NO := NULL
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/6: type=if_else
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,961 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'V_EXPLORATORY_THEMENO_NOT_NULL';...
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/6: type=if_else
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=3) ===
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=assignment_statement
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=insert_statement
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID,...
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,962 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER...
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_TH...
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER...
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,963 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 25 lines ===
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 4 exception handlers
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/4: DUP_VAL_ON_INDEX
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DUP_VAL_ON_INDEX
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/4: V_NO_UPDATE_EVOLVED_TO_TERMINATED
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: V_NO_UPDATE_EVOLVED_TO_TERMINATED
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/4: V_NO_UPDATE_TO_EVOLVED
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: V_NO_UPDATE_TO_EVOLVED
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/4: V_EXPLORATORY_THEMENO_NOT_NULL
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: V_EXPLORATORY_THEMENO_NOT_NULL
2025-08-14 12:34:58,964 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,965 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,965 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,965 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,965 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,965 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 36 lines ===
2025-08-14 12:34:58,965 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 2511 characters
2025-08-14 12:34:58,965 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,965 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,965 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,965 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 6 statements in begin_end block
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=6) ===
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/6: type=assignment_statement
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/6: type=if_else
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'V_NO_UPDATE_TO_EVOLVED';...
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/6: type=if_else
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'V_NO_UPDATE_EVOLVED_TO_TERMINATED...
2025-08-14 12:34:58,966 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/6: type=if_else
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_EVOLVED_THEME_NO := NULL
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/6: type=if_else
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'V_EXPLORATORY_THEMENO_NOT_NULL';...
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/6: type=if_else
2025-08-14 12:34:58,967 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,968 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,968 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=3) ===
2025-08-14 12:34:58,968 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=assignment_statement
2025-08-14 12:34:58,968 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL
2025-08-14 12:34:58,968 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=insert_statement
2025-08-14 12:34:58,969 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID,...
2025-08-14 12:34:58,969 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,969 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,969 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,969 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,969 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,969 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER...
2025-08-14 12:34:58,969 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,970 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,970 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,970 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,970 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,970 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_TH...
2025-08-14 12:34:58,970 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,970 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,970 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,970 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER...
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 25 lines ===
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 4 exception handlers
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/4: DUP_VAL_ON_INDEX
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DUP_VAL_ON_INDEX
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/4: V_NO_UPDATE_EVOLVED_TO_TERMINATED
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: V_NO_UPDATE_EVOLVED_TO_TERMINATED
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,971 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/4: V_NO_UPDATE_TO_EVOLVED
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: V_NO_UPDATE_TO_EVOLVED
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/4: V_EXPLORATORY_THEMENO_NOT_NULL
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: V_EXPLORATORY_THEMENO_NOT_NULL
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,972 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 36 lines ===
2025-08-14 12:34:58,972 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 2511 characters
2025-08-14 12:34:58,972 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:50] - FORMATPostsqlTriggerAnalyzer initialized successfully
2025-08-14 12:34:58,973 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:59] - Starting SQL conversion for PostgreSQL...
2025-08-14 12:34:58,973 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:68] - Rendering declarations...
2025-08-14 12:34:58,973 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:96] - === Rendering declarations for PostgreSQL ===
2025-08-14 12:34:58,973 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:140] - === Declarations complete ===
2025-08-14 12:34:58,973 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:74] - Rendering main execution block...
2025-08-14 12:34:58,973 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:228] - === Rendering main block (indent=0) ===
2025-08-14 12:34:58,973 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:236] - Main block type: begin_end
2025-08-14 12:34:58,973 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:240] - Processing begin_end block structure
2025-08-14 12:34:58,973 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:242] - Found 6 statements in begin_end block
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=1, count=6) ===
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/6: type=assignment_statement
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/6: type=if_else
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'V_NO_UPDATE_TO_EVOLVED';...
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,974 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/6: type=if_else
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'V_NO_UPDATE_EVOLVED_TO_TERMINATED...
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 4/6: type=if_else
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=assignment_statement
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_EVOLVED_THEME_NO := NULL
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 5/6: type=if_else
2025-08-14 12:34:58,975 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=1) ===
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=raise_statement
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:308] - Rendering RAISE statement: RAISE EXCEPTION 'V_EXPLORATORY_THEMENO_NOT_NULL';...
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 6/6: type=if_else
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=1) ===
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=3) ===
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/3: type=assignment_statement
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:300] - Rendering assignment: V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/3: type=insert_statement
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering insert_statement: INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID,...
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 3/3: type=if_else
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,976 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,977 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,977 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,977 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER...
2025-08-14 12:34:58,977 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,977 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,977 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 5 lines ===
2025-08-14 12:34:58,977 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=2, count=2) ===
2025-08-14 12:34:58,977 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/2: type=update_statement
2025-08-14 12:34:58,977 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:292] - Rendering update_statement: UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_TH...
2025-08-14 12:34:58,977 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 2/2: type=if_else
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:312] - Rendering IF-ELSE structure
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:403] - === Rendering IF-ELSE structure (indent=2) ===
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=unknown_statement
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:347] - Rendering unknown statement: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER...
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 4 lines ===
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:433] - === IF-ELSE structure complete ===
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 25 lines ===
2025-08-14 12:34:58,978 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:248] - Processing 4 exception handlers
2025-08-14 12:34:58,979 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 1/4: DUP_VAL_ON_INDEX
2025-08-14 12:34:58,979 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: DUP_VAL_ON_INDEX
2025-08-14 12:34:58,979 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,979 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,979 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,979 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,979 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,979 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 2/4: V_NO_UPDATE_EVOLVED_TO_TERMINATED
2025-08-14 12:34:58,979 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: V_NO_UPDATE_EVOLVED_TO_TERMINATED
2025-08-14 12:34:58,980 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,980 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,980 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,980 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,980 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,980 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 3/4: V_NO_UPDATE_TO_EVOLVED
2025-08-14 12:34:58,980 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: V_NO_UPDATE_TO_EVOLVED
2025-08-14 12:34:58,980 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:251] - Rendering exception handler 4/4: V_EXPLORATORY_THEMENO_NOT_NULL
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:380] - Rendering exception handler: V_EXPLORATORY_THEMENO_NOT_NULL
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:276] - === Rendering statement list (indent=3, count=1) ===
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:285] - Statement 1/1: type=function_calling
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:352] - Rendering function calling statement
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:543] - Rendering function call: raise_application_error
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:366] - === Statement list complete: 1 lines ===
2025-08-14 12:34:58,981 - root - DEBUG - [FORMATPostsqlTriggerAnalyzer.py:262] - === Main block complete: 36 lines ===
2025-08-14 12:34:58,981 - root - INFO - [FORMATPostsqlTriggerAnalyzer.py:83] - SQL conversion complete: 2511 characters
2025-08-14 12:34:58,981 - root - DEBUG - [common.py:69] - PostgreSQL format conversion completed
2025-08-14 12:34:58,981 - root - DEBUG - [common.py:69] - Writing PostgreSQL format to: files/format_plsql\trigger6_postgresql.json
2025-08-14 12:34:58,982 - root - DEBUG - [common.py:69] - Successfully wrote PostgreSQL format to files/format_plsql\trigger6_postgresql.json
2025-08-14 12:34:58,982 - root - DEBUG - [common.py:69] - === PL/JSON to PostgreSQL format conversion complete for trigger 6 ===
2025-08-14 12:34:58,982 - root - INFO - [common.py:73] - ✓ Created trigger6_postgresql.json
2025-08-14 12:34:58,983 - root - INFO - [common.py:73] - === File processing complete ===
2025-08-14 12:34:58,983 - root - INFO - [common.py:73] - Successfully processed: 6 files
2025-08-14 12:34:58,983 - root - INFO - [common.py:73] - === PL/JSON to PostgreSQL format conversion complete ===
2025-08-14 12:34:58,983 - root - INFO - [common.py:73] - ✓ PL/SQL conversion complete! (Duration: 0.26 seconds)
2025-08-14 12:34:58,984 - root - INFO - [common.py:73] - Step 6: Cleaning JSON files...
2025-08-14 12:34:58,984 - root - DEBUG - [common.py:69] - === Starting JSON file cleaning ===
2025-08-14 12:34:58,984 - root - DEBUG - [common.py:69] - Found 6 JSON files to clean
2025-08-14 12:34:58,984 - root - DEBUG - [common.py:69] - Cleaning SQL content in JSON file: files/format_plsql\trigger1_postgresql.json
2025-08-14 12:34:58,986 - root - DEBUG - [common.py:69] - Successfully cleaned JSON file: files/format_plsql\trigger1_postgresql.json
2025-08-14 12:34:58,986 - root - DEBUG - [common.py:69] - Cleaning SQL content in JSON file: files/format_plsql\trigger2_postgresql.json
2025-08-14 12:34:58,988 - root - DEBUG - [common.py:69] - Successfully cleaned JSON file: files/format_plsql\trigger2_postgresql.json
2025-08-14 12:34:58,988 - root - DEBUG - [common.py:69] - Cleaning SQL content in JSON file: files/format_plsql\trigger3_postgresql.json
2025-08-14 12:34:58,990 - root - DEBUG - [common.py:69] - Successfully cleaned JSON file: files/format_plsql\trigger3_postgresql.json
2025-08-14 12:34:58,990 - root - DEBUG - [common.py:69] - Cleaning SQL content in JSON file: files/format_plsql\trigger4_postgresql.json
2025-08-14 12:34:58,991 - root - DEBUG - [common.py:69] - Successfully cleaned JSON file: files/format_plsql\trigger4_postgresql.json
2025-08-14 12:34:58,991 - root - DEBUG - [common.py:69] - Cleaning SQL content in JSON file: files/format_plsql\trigger5_postgresql.json
2025-08-14 12:34:58,992 - root - DEBUG - [common.py:69] - Successfully cleaned JSON file: files/format_plsql\trigger5_postgresql.json
2025-08-14 12:34:58,992 - root - DEBUG - [common.py:69] - Cleaning SQL content in JSON file: files/format_plsql\trigger6_postgresql.json
2025-08-14 12:34:58,992 - root - DEBUG - [common.py:69] - Successfully cleaned JSON file: files/format_plsql\trigger6_postgresql.json
2025-08-14 12:34:58,993 - root - DEBUG - [common.py:69] - === JSON file cleaning complete ===
2025-08-14 12:34:58,993 - root - INFO - [common.py:73] - ✓ JSON cleaning complete! (Duration: 0.01 seconds)
2025-08-14 12:34:58,993 - root - INFO - [common.py:73] - Step 7: Converting PostgreSQL format JSON to SQL...
2025-08-14 12:34:58,993 - root - INFO - [common.py:73] - === Starting PostgreSQL format to SQL conversion ===
2025-08-14 12:34:58,993 - root - INFO - [common.py:73] - === Starting file processing ===
2025-08-14 12:34:58,994 - root - INFO - [common.py:73] - Source directory: 'files/format_plsql'
2025-08-14 12:34:58,994 - root - INFO - [common.py:73] - Target directory: 'files/format_plsql'
2025-08-14 12:34:58,994 - root - INFO - [common.py:73] - File pattern: '_postgresql.json'
2025-08-14 12:34:58,994 - root - INFO - [common.py:73] - Output suffix: '.sql'
2025-08-14 12:34:58,994 - root - DEBUG - [common.py:69] - Ensuring target directory exists...
2025-08-14 12:34:58,994 - root - DEBUG - [common.py:69] - Directory already exists: files/format_plsql
2025-08-14 12:34:58,995 - root - DEBUG - [common.py:69] - Found 6 files in source directory
2025-08-14 12:34:58,995 - root - DEBUG - [common.py:69] - Files matching pattern '_postgresql.json': ['trigger1_postgresql.json', 'trigger2_postgresql.json', 'trigger3_postgresql.json', 'trigger4_postgresql.json', 'trigger5_postgresql.json', 'trigger6_postgresql.json']
2025-08-14 12:34:58,995 - root - DEBUG - [common.py:69] - === Processing file 1/6: trigger1_postgresql.json ===
2025-08-14 12:34:58,995 - root - DEBUG - [common.py:69] - Extracted trigger number: 1
2025-08-14 12:34:58,995 - root - DEBUG - [common.py:69] - Source path: files/format_plsql\trigger1_postgresql.json
2025-08-14 12:34:58,995 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger1.sql
2025-08-14 12:34:58,995 - root - DEBUG - [common.py:69] - === Converting PostgreSQL format to SQL for trigger 1 ===
2025-08-14 12:34:58,995 - root - DEBUG - [common.py:69] - Reading PostgreSQL format file: files/format_plsql\trigger1_postgresql.json
2025-08-14 12:34:58,995 - root - DEBUG - [common.py:69] - Successfully loaded PostgreSQL format data with keys: ['on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:58,995 - root - DEBUG - [common.py:69] - Extracting and cleaning SQL content...
2025-08-14 12:34:58,996 - root - DEBUG - [common.py:69] - SQL content extraction and cleaning completed
2025-08-14 12:34:58,996 - root - DEBUG - [common.py:69] - Writing SQL to: files/format_plsql\trigger1.sql
2025-08-14 12:34:58,996 - root - DEBUG - [common.py:69] - Successfully wrote SQL to files/format_plsql\trigger1.sql
2025-08-14 12:34:58,996 - root - DEBUG - [common.py:69] - === PostgreSQL format to SQL conversion complete for trigger 1 ===
2025-08-14 12:34:58,997 - root - INFO - [common.py:73] - ✓ Created trigger1.sql
2025-08-14 12:34:58,997 - root - DEBUG - [common.py:69] - === Processing file 2/6: trigger2_postgresql.json ===
2025-08-14 12:34:58,997 - root - DEBUG - [common.py:69] - Extracted trigger number: 2
2025-08-14 12:34:58,997 - root - DEBUG - [common.py:69] - Source path: files/format_plsql\trigger2_postgresql.json
2025-08-14 12:34:58,997 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger2.sql
2025-08-14 12:34:58,997 - root - DEBUG - [common.py:69] - === Converting PostgreSQL format to SQL for trigger 2 ===
2025-08-14 12:34:58,997 - root - DEBUG - [common.py:69] - Reading PostgreSQL format file: files/format_plsql\trigger2_postgresql.json
2025-08-14 12:34:58,997 - root - DEBUG - [common.py:69] - Successfully loaded PostgreSQL format data with keys: ['on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:58,998 - root - DEBUG - [common.py:69] - Extracting and cleaning SQL content...
2025-08-14 12:34:58,998 - root - DEBUG - [common.py:69] - SQL content extraction and cleaning completed
2025-08-14 12:34:58,998 - root - DEBUG - [common.py:69] - Writing SQL to: files/format_plsql\trigger2.sql
2025-08-14 12:34:58,998 - root - DEBUG - [common.py:69] - Successfully wrote SQL to files/format_plsql\trigger2.sql
2025-08-14 12:34:58,998 - root - DEBUG - [common.py:69] - === PostgreSQL format to SQL conversion complete for trigger 2 ===
2025-08-14 12:34:58,998 - root - INFO - [common.py:73] - ✓ Created trigger2.sql
2025-08-14 12:34:58,999 - root - DEBUG - [common.py:69] - === Processing file 3/6: trigger3_postgresql.json ===
2025-08-14 12:34:58,999 - root - DEBUG - [common.py:69] - Extracted trigger number: 3
2025-08-14 12:34:58,999 - root - DEBUG - [common.py:69] - Source path: files/format_plsql\trigger3_postgresql.json
2025-08-14 12:34:58,999 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger3.sql
2025-08-14 12:34:58,999 - root - DEBUG - [common.py:69] - === Converting PostgreSQL format to SQL for trigger 3 ===
2025-08-14 12:34:59,000 - root - DEBUG - [common.py:69] - Reading PostgreSQL format file: files/format_plsql\trigger3_postgresql.json
2025-08-14 12:34:59,000 - root - DEBUG - [common.py:69] - Successfully loaded PostgreSQL format data with keys: ['on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:59,000 - root - DEBUG - [common.py:69] - Extracting and cleaning SQL content...
2025-08-14 12:34:59,000 - root - DEBUG - [common.py:69] - SQL content extraction and cleaning completed
2025-08-14 12:34:59,001 - root - DEBUG - [common.py:69] - Writing SQL to: files/format_plsql\trigger3.sql
2025-08-14 12:34:59,001 - root - DEBUG - [common.py:69] - Successfully wrote SQL to files/format_plsql\trigger3.sql
2025-08-14 12:34:59,001 - root - DEBUG - [common.py:69] - === PostgreSQL format to SQL conversion complete for trigger 3 ===
2025-08-14 12:34:59,001 - root - INFO - [common.py:73] - ✓ Created trigger3.sql
2025-08-14 12:34:59,001 - root - DEBUG - [common.py:69] - === Processing file 4/6: trigger4_postgresql.json ===
2025-08-14 12:34:59,001 - root - DEBUG - [common.py:69] - Extracted trigger number: 4
2025-08-14 12:34:59,001 - root - DEBUG - [common.py:69] - Source path: files/format_plsql\trigger4_postgresql.json
2025-08-14 12:34:59,002 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger4.sql
2025-08-14 12:34:59,002 - root - DEBUG - [common.py:69] - === Converting PostgreSQL format to SQL for trigger 4 ===
2025-08-14 12:34:59,002 - root - DEBUG - [common.py:69] - Reading PostgreSQL format file: files/format_plsql\trigger4_postgresql.json
2025-08-14 12:34:59,002 - root - DEBUG - [common.py:69] - Successfully loaded PostgreSQL format data with keys: ['on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:59,002 - root - DEBUG - [common.py:69] - Extracting and cleaning SQL content...
2025-08-14 12:34:59,002 - root - DEBUG - [common.py:69] - SQL content extraction and cleaning completed
2025-08-14 12:34:59,002 - root - DEBUG - [common.py:69] - Writing SQL to: files/format_plsql\trigger4.sql
2025-08-14 12:34:59,003 - root - DEBUG - [common.py:69] - Successfully wrote SQL to files/format_plsql\trigger4.sql
2025-08-14 12:34:59,003 - root - DEBUG - [common.py:69] - === PostgreSQL format to SQL conversion complete for trigger 4 ===
2025-08-14 12:34:59,003 - root - INFO - [common.py:73] - ✓ Created trigger4.sql
2025-08-14 12:34:59,003 - root - DEBUG - [common.py:69] - === Processing file 5/6: trigger5_postgresql.json ===
2025-08-14 12:34:59,003 - root - DEBUG - [common.py:69] - Extracted trigger number: 5
2025-08-14 12:34:59,003 - root - DEBUG - [common.py:69] - Source path: files/format_plsql\trigger5_postgresql.json
2025-08-14 12:34:59,003 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger5.sql
2025-08-14 12:34:59,003 - root - DEBUG - [common.py:69] - === Converting PostgreSQL format to SQL for trigger 5 ===
2025-08-14 12:34:59,003 - root - DEBUG - [common.py:69] - Reading PostgreSQL format file: files/format_plsql\trigger5_postgresql.json
2025-08-14 12:34:59,003 - root - DEBUG - [common.py:69] - Successfully loaded PostgreSQL format data with keys: ['on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:59,003 - root - DEBUG - [common.py:69] - Extracting and cleaning SQL content...
2025-08-14 12:34:59,004 - root - DEBUG - [common.py:69] - SQL content extraction and cleaning completed
2025-08-14 12:34:59,004 - root - DEBUG - [common.py:69] - Writing SQL to: files/format_plsql\trigger5.sql
2025-08-14 12:34:59,004 - root - DEBUG - [common.py:69] - Successfully wrote SQL to files/format_plsql\trigger5.sql
2025-08-14 12:34:59,004 - root - DEBUG - [common.py:69] - === PostgreSQL format to SQL conversion complete for trigger 5 ===
2025-08-14 12:34:59,004 - root - INFO - [common.py:73] - ✓ Created trigger5.sql
2025-08-14 12:34:59,004 - root - DEBUG - [common.py:69] - === Processing file 6/6: trigger6_postgresql.json ===
2025-08-14 12:34:59,004 - root - DEBUG - [common.py:69] - Extracted trigger number: 6
2025-08-14 12:34:59,004 - root - DEBUG - [common.py:69] - Source path: files/format_plsql\trigger6_postgresql.json
2025-08-14 12:34:59,004 - root - DEBUG - [common.py:69] - Output path: files/format_plsql\trigger6.sql
2025-08-14 12:34:59,004 - root - DEBUG - [common.py:69] - === Converting PostgreSQL format to SQL for trigger 6 ===
2025-08-14 12:34:59,004 - root - DEBUG - [common.py:69] - Reading PostgreSQL format file: files/format_plsql\trigger6_postgresql.json
2025-08-14 12:34:59,005 - root - DEBUG - [common.py:69] - Successfully loaded PostgreSQL format data with keys: ['on_insert', 'on_update', 'on_delete']
2025-08-14 12:34:59,005 - root - DEBUG - [common.py:69] - Extracting and cleaning SQL content...
2025-08-14 12:34:59,005 - root - DEBUG - [common.py:69] - SQL content extraction and cleaning completed
2025-08-14 12:34:59,005 - root - DEBUG - [common.py:69] - Writing SQL to: files/format_plsql\trigger6.sql
2025-08-14 12:34:59,005 - root - DEBUG - [common.py:69] - Successfully wrote SQL to files/format_plsql\trigger6.sql
2025-08-14 12:34:59,005 - root - DEBUG - [common.py:69] - === PostgreSQL format to SQL conversion complete for trigger 6 ===
2025-08-14 12:34:59,005 - root - INFO - [common.py:73] - ✓ Created trigger6.sql
2025-08-14 12:34:59,006 - root - INFO - [common.py:73] - === File processing complete ===
2025-08-14 12:34:59,006 - root - INFO - [common.py:73] - Successfully processed: 6 files
2025-08-14 12:34:59,006 - root - INFO - [common.py:73] - === PostgreSQL format to SQL conversion complete ===
2025-08-14 12:34:59,006 - root - INFO - [common.py:73] - ✓ PostgreSQL format to SQL conversion complete! (Duration: 0.01 seconds)
2025-08-14 12:34:59,006 - root - INFO - [common.py:73] - === Batch conversion finished successfully ===
2025-08-14 12:34:59,007 - root - INFO - [common.py:73] - Total execution time: 0.69 seconds
2025-08-14 12:34:59,007 - root - INFO - [common.py:73] - Step breakdown:
2025-08-14 12:34:59,007 - root - INFO - [common.py:73] -   - SQL to JSON: 0.19 seconds
2025-08-14 12:34:59,007 - root - INFO - [common.py:73] -   - JSON to SQL: 0.10 seconds
2025-08-14 12:34:59,008 - root - INFO - [common.py:73] -   - Validation: 0.00 seconds
