2025-09-03 04:09:42,561 - root - INFO - [common.py:110] - === Starting Oracle triggers to JSON conversion ===
2025-09-03 04:09:42,561 - root - DEBUG - [common.py:105] - Workflow Phase 1: Convert Oracle SQL files to JSON analysis structure
2025-09-03 04:09:42,561 - root - DEBUG - [common.py:105] - Source directory: files/oracle
2025-09-03 04:09:42,562 - root - DEBUG - [common.py:105] - Target directory: files/format_json
2025-09-03 04:09:42,562 - root - DEBUG - [common.py:105] - File details will be included in metadata for each processed file
2025-09-03 04:09:42,562 - root - INFO - [common.py:110] - === Starting file processing ===
2025-09-03 04:09:42,563 - root - INFO - [common.py:110] - Source directory: 'files/oracle'
2025-09-03 04:09:42,564 - root - INFO - [common.py:110] - Target directory: 'files/format_json'
2025-09-03 04:09:42,565 - root - INFO - [common.py:110] - File pattern: '.sql'
2025-09-03 04:09:42,565 - root - INFO - [common.py:110] - Output suffix: '_analysis.json'
2025-09-03 04:09:42,565 - root - DEBUG - [common.py:105] - Ensuring target directory exists...
2025-09-03 04:09:42,565 - root - DEBUG - [common.py:105] - Directory already exists: files/format_json
2025-09-03 04:09:42,565 - root - DEBUG - [common.py:105] - Found 10 files in source directory
2025-09-03 04:09:42,566 - root - DEBUG - [common.py:105] - Files matching pattern '.sql': ['bbb.sql', 'eee.sql', 'trigger1.sql', 'trigger2.sql', 'trigger3.sql', 'trigger4.sql', 'trigger5.sql', 'trigger6.sql', 'yyy.sql', 'zzz.sql']
2025-09-03 04:09:42,566 - root - DEBUG - [common.py:105] - === Processing file 1/10: bbb.sql ===
2025-09-03 04:09:42,566 - root - DEBUG - [common.py:105] - Source path: files/oracle\bbb.sql
2025-09-03 04:09:42,566 - root - DEBUG - [common.py:105] - Output path: files/format_json\bbb_analysis.json
2025-09-03 04:09:42,566 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger bbb.sql ===
2025-09-03 04:09:42,566 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 04:09:42,566 - root - DEBUG - [main.py:245] - Reading SQL file: files/oracle\bbb.sql
2025-09-03 04:09:42,566 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 20 characters of SQL
2025-09-03 04:09:42,568 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 04:09:42,569 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 04:09:42,569 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 124 total, 38 with semicolons, 8 empty lines skipped
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 124 lines cleaned
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 10 comments extracted, 119 lines cleaned
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 3
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 15
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 3-14
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_TRIGGER_NAME
2025-09-03 04:09:42,569 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_DEL
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_POSTAL_CODE
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_NULL
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: CNTR
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_RULE_ID
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_PATTERN_ID
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_PATTERN
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_ALLOWED_PATTERN
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 126, 'when_indent': 4, 'then_line_no': 126, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20112, V_TRIGGER_NAME);', 'line_no': 127}]}, {'type': 'exception_handler', 'exception_name': 'ERR_NULL', 'when_line_no': 128, 'when_indent': 4, 'then_line_no': 128, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);', 'line_no': 129}]}, {'type': 'exception_handler', 'exception_name': 'ERR_POSTAL_CODE', 'when_line_no': 130, 'when_indent': 4, 'then_line_no': 130, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20119, V_TRIGGER_NAME);', 'line_no': 131}]}]
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:1389] - case_i: 19 i: 33
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:1460] - line_info : {'indent': 8, 'line': '        WHEN V_PATTERN IS NOT NULL THEN', 'line_no': 20}
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 8, 'line': '        WHEN V_PATTERN IS NOT NULL THEN', 'line_no': 20}, {'indent': 12, 'line': "            IF :NEW.RULE_FLAG = 'N' THEN", 'line_no': 21}, {'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}, {'indent': 12, 'line': '            END IF;', 'line_no': 23}, {'indent': 12, 'line': '            IF NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) THEN', 'line_no': 26}, {'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}, {'indent': 12, 'line': '            END IF;', 'line_no': 28}]
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 20 then_i: 20
2025-09-03 04:09:42,570 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 8, 'line': '        WHEN V_PATTERN IS NOT NULL THEN', 'line_no': 20}, {'indent': 12, 'line': "            IF :NEW.RULE_FLAG = 'N' THEN", 'line_no': 21}, {'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}, {'indent': 12, 'line': '            END IF;', 'line_no': 23}, {'indent': 12, 'line': '            IF NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) THEN', 'line_no': 26}, {'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}, {'indent': 12, 'line': '            END IF;', 'line_no': 28}]
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1485] - {'indent': 12, 'line': "            IF :NEW.RULE_FLAG = 'M' THEN", 'line_no': 30}
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    V_PATTERN := :NEW.PATTERN;', 'line_no': 16}
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 19, 'case_indent': 4, 'end_case_line_no': 33, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 20, 'when_indent': 8, 'condition': 'V_PATTERN IS NOT NULL', 'then_line_no': 20, 'then_statements': [{'indent': 12, 'line': "            IF :NEW.RULE_FLAG = 'N' THEN", 'line_no': 21}, {'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}, {'indent': 12, 'line': '            END IF;', 'line_no': 23}, {'indent': 12, 'line': '            IF NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) THEN', 'line_no': 26}, {'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}, {'indent': 12, 'line': '            END IF;', 'line_no': 28}]}], 'else_statements': [{'indent': 12, 'line': "            IF :NEW.RULE_FLAG = 'M' THEN", 'line_no': 30}, {'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}, {'indent': 12, 'line': '            END IF;', 'line_no': 32}]}
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            IF :NEW.RULE_FLAG = 'N' THEN", 'line_no': 21}
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 21
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 21 i: 23
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}]
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) THEN', 'line_no': 26}
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 26
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 26 i: 28
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}]
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            IF :NEW.RULE_FLAG = 'M' THEN", 'line_no': 30}
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 30
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 30 i: 32
2025-09-03 04:09:42,571 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}]
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " :NEW.RULE_FLAG = 'M' ", 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 12, 'end_if_line_no': 32, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 37}
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        COUNT (*) INTO CNTR', 'line_no': 38}
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    FROM', 'line_no': 39}
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        V_BPA_POSTAL_CODE_RULES', 'line_no': 40}
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    WHERE', 'line_no': 41}
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        COUNTRY_CD = :NEW.COUNTRY_CD;', 'line_no': 42}
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF CNTR = 0 THEN', 'line_no': 43}
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 43
2025-09-03 04:09:42,572 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 43 i: 59
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 17
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 4, 'end_if_line_no': 59, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 44}, {'indent': 12, 'line': '            NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID', 'line_no': 45}, {'indent': 8, 'line': '        FROM', 'line_no': 46}, {'indent': 12, 'line': '            V_BPA_POSTAL_CODE_RULES;', 'line_no': 47}, {'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_RULES (', 'line_no': 48}, {'indent': 12, 'line': '            RULE_ID,', 'line_no': 49}, {'indent': 12, 'line': '            COUNTRY_CD,', 'line_no': 50}, {'indent': 12, 'line': '            RULE_FLAG', 'line_no': 51}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 52}, {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 53}, {'indent': 12, 'line': '            UPPER (:NEW.COUNTRY_CD),', 'line_no': 54}, {'indent': 12, 'line': '            :NEW.RULE_FLAG', 'line_no': 55}, {'indent': 8, 'line': '        );', 'line_no': 56}], 'if_elses': [], 'else_statements': [[{'indent': 8, 'line': '        V_RULE_ID := :NEW.RULE_ID;', 'line_no': 58}, {'indent': 4, 'line': '    END IF;', 'line_no': 59}]]}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 44}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID', 'line_no': 45}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        FROM', 'line_no': 46}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_BPA_POSTAL_CODE_RULES;', 'line_no': 47}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_RULES (', 'line_no': 48}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RULE_ID,', 'line_no': 49}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COUNTRY_CD,', 'line_no': 50}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RULE_FLAG', 'line_no': 51}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        ) VALUES (', 'line_no': 52}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 53}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            UPPER (:NEW.COUNTRY_CD),', 'line_no': 54}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.RULE_FLAG', 'line_no': 55}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        );', 'line_no': 56}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 8, 'line': '        V_RULE_ID := :NEW.RULE_ID;', 'line_no': 58}, {'indent': 4, 'line': '    END IF;', 'line_no': 59}]
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 63}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        NVL (MAX (PATTERN_ID) + 1, 1) INTO V_PATTERN_ID', 'line_no': 64}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    FROM', 'line_no': 65}
2025-09-03 04:09:42,573 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        V_BPA_POSTAL_CODE_PATTERNS;', 'line_no': 66}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF INSERTING AND V_PATTERN IS NOT NULL THEN', 'line_no': 67}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 67
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 67 i: 124
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 57
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1276] - then_statements: 0 14
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        IF :OLD.RULE_FLAG != :NEW.RULE_FLAG THEN', 'line_no': 82}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            SET', 'line_no': 84}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            WHERE', 'line_no': 86}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 88}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        IF :NEW.PATTERN_ID IS NOT NULL THEN', 'line_no': 90}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 91}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                SET', 'line_no': 93}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                WHERE', 'line_no': 97}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            ELSE', 'line_no': 99}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                DELETE FROM V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 100}
2025-09-03 04:09:42,574 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                WHERE', 'line_no': 101}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID', 'line_no': 102}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    AND PATTERN = :OLD.PATTERN;', 'line_no': 103}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            END IF;', 'line_no': 104}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        ELSE', 'line_no': 105}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 106}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 107}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    PATTERN_ID,', 'line_no': 108}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    RULE_ID,', 'line_no': 109}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    PATTERN,', 'line_no': 110}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    VALID_IND', 'line_no': 111}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                ) VALUES (', 'line_no': 112}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    V_PATTERN_ID,', 'line_no': 113}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    V_RULE_ID,', 'line_no': 114}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    V_PATTERN,', 'line_no': 115}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    :NEW.VALID_IND', 'line_no': 116}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                );', 'line_no': 117}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            END IF;', 'line_no': 118}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 119}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 120}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1286] - {'indent': 4, 'line': '    ELSIF UPDATING THEN', 'line_no': 81}
2025-09-03 04:09:42,575 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 4, 'line': '    ELSIF UPDATING THEN', 'line_no': 81}, {'indent': 8, 'line': '        IF :OLD.RULE_FLAG != :NEW.RULE_FLAG THEN', 'line_no': 82}, {'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}, {'indent': 8, 'line': '        END IF;', 'line_no': 88}, {'indent': 8, 'line': '        IF :NEW.PATTERN_ID IS NOT NULL THEN', 'line_no': 90}, {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 91}, {'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}, {'indent': 12, 'line': '            ELSE', 'line_no': 99}, {'indent': 16, 'line': '                DELETE FROM V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 100}, {'indent': 16, 'line': '                WHERE', 'line_no': 101}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID', 'line_no': 102}, {'indent': 20, 'line': '                    AND PATTERN = :OLD.PATTERN;', 'line_no': 103}, {'indent': 12, 'line': '            END IF;', 'line_no': 104}, {'indent': 8, 'line': '        ELSE', 'line_no': 105}, {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 106}, {'indent': 16, 'line': '                INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 107}, {'indent': 20, 'line': '                    PATTERN_ID,', 'line_no': 108}, {'indent': 20, 'line': '                    RULE_ID,', 'line_no': 109}, {'indent': 20, 'line': '                    PATTERN,', 'line_no': 110}, {'indent': 20, 'line': '                    VALID_IND', 'line_no': 111}, {'indent': 16, 'line': '                ) VALUES (', 'line_no': 112}, {'indent': 20, 'line': '                    V_PATTERN_ID,', 'line_no': 113}, {'indent': 20, 'line': '                    V_RULE_ID,', 'line_no': 114}, {'indent': 20, 'line': '                    V_PATTERN,', 'line_no': 115}, {'indent': 20, 'line': '                    :NEW.VALID_IND', 'line_no': 116}, {'indent': 16, 'line': '                );', 'line_no': 117}, {'indent': 12, 'line': '            END IF;', 'line_no': 118}, {'indent': 8, 'line': '        END IF;', 'line_no': 119}]
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 4, 'line': '    ELSIF UPDATING THEN', 'line_no': 81}, {'indent': 8, 'line': '        IF :OLD.RULE_FLAG != :NEW.RULE_FLAG THEN', 'line_no': 82}, {'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}, {'indent': 8, 'line': '        END IF;', 'line_no': 88}, {'indent': 8, 'line': '        IF :NEW.PATTERN_ID IS NOT NULL THEN', 'line_no': 90}, {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 91}, {'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}, {'indent': 12, 'line': '            ELSE', 'line_no': 99}, {'indent': 16, 'line': '                DELETE FROM V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 100}, {'indent': 16, 'line': '                WHERE', 'line_no': 101}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID', 'line_no': 102}, {'indent': 20, 'line': '                    AND PATTERN = :OLD.PATTERN;', 'line_no': 103}, {'indent': 12, 'line': '            END IF;', 'line_no': 104}, {'indent': 8, 'line': '        ELSE', 'line_no': 105}, {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 106}, {'indent': 16, 'line': '                INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 107}, {'indent': 20, 'line': '                    PATTERN_ID,', 'line_no': 108}, {'indent': 20, 'line': '                    RULE_ID,', 'line_no': 109}, {'indent': 20, 'line': '                    PATTERN,', 'line_no': 110}, {'indent': 20, 'line': '                    VALID_IND', 'line_no': 111}, {'indent': 16, 'line': '                ) VALUES (', 'line_no': 112}, {'indent': 20, 'line': '                    V_PATTERN_ID,', 'line_no': 113}, {'indent': 20, 'line': '                    V_RULE_ID,', 'line_no': 114}, {'indent': 20, 'line': '                    V_PATTERN,', 'line_no': 115}, {'indent': 20, 'line': '                    :NEW.VALID_IND', 'line_no': 116}, {'indent': 16, 'line': '                );', 'line_no': 117}, {'indent': 12, 'line': '            END IF;', 'line_no': 118}, {'indent': 8, 'line': '        END IF;', 'line_no': 119}]
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 4, 'line': '    ELSIF UPDATING THEN', 'line_no': 81}
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 81 then_i: 81
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 4, 'line': '    ELSIF UPDATING THEN', 'line_no': 81}, {'indent': 8, 'line': '        IF :OLD.RULE_FLAG != :NEW.RULE_FLAG THEN', 'line_no': 82}, {'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}, {'indent': 8, 'line': '        END IF;', 'line_no': 88}, {'indent': 8, 'line': '        IF :NEW.PATTERN_ID IS NOT NULL THEN', 'line_no': 90}, {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 91}, {'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}, {'indent': 12, 'line': '            ELSE', 'line_no': 99}, {'indent': 16, 'line': '                DELETE FROM V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 100}, {'indent': 16, 'line': '                WHERE', 'line_no': 101}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID', 'line_no': 102}, {'indent': 20, 'line': '                    AND PATTERN = :OLD.PATTERN;', 'line_no': 103}, {'indent': 12, 'line': '            END IF;', 'line_no': 104}, {'indent': 8, 'line': '        ELSE', 'line_no': 105}, {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 106}, {'indent': 16, 'line': '                INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 107}, {'indent': 20, 'line': '                    PATTERN_ID,', 'line_no': 108}, {'indent': 20, 'line': '                    RULE_ID,', 'line_no': 109}, {'indent': 20, 'line': '                    PATTERN,', 'line_no': 110}, {'indent': 20, 'line': '                    VALID_IND', 'line_no': 111}, {'indent': 16, 'line': '                ) VALUES (', 'line_no': 112}, {'indent': 20, 'line': '                    V_PATTERN_ID,', 'line_no': 113}, {'indent': 20, 'line': '                    V_RULE_ID,', 'line_no': 114}, {'indent': 20, 'line': '                    V_PATTERN,', 'line_no': 115}, {'indent': 20, 'line': '                    :NEW.VALID_IND', 'line_no': 116}, {'indent': 16, 'line': '                );', 'line_no': 117}, {'indent': 12, 'line': '            END IF;', 'line_no': 118}, {'indent': 8, 'line': '        END IF;', 'line_no': 119}]
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 4
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        WHERE', 'line_no': 122}
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 4, 'line': '    END IF;', 'line_no': 124}
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1297] - {'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 120}
2025-09-03 04:09:42,576 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 120}, {'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}, {'indent': 8, 'line': '        WHERE', 'line_no': 122}, {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}]
2025-09-03 04:09:42,577 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 120}, {'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}, {'indent': 8, 'line': '        WHERE', 'line_no': 122}, {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}]
2025-09-03 04:09:42,577 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 120}
2025-09-03 04:09:42,577 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 120 then_i: 120
2025-09-03 04:09:42,577 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 120}, {'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}, {'indent': 8, 'line': '        WHERE', 'line_no': 122}, {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}]
2025-09-03 04:09:42,577 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 4
2025-09-03 04:09:42,578 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' INSERTING AND V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 67, 'then_line_no': 67, 'if_indent': 4, 'end_if_line_no': 124, 'then_statements': [{'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 68}, {'indent': 12, 'line': '            PATTERN_ID,', 'line_no': 69}, {'indent': 12, 'line': '            RULE_ID,', 'line_no': 70}, {'indent': 12, 'line': '            PATTERN,', 'line_no': 71}, {'indent': 12, 'line': '            DESCRIPTION,', 'line_no': 72}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 73}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 74}, {'indent': 12, 'line': '            V_PATTERN_ID,', 'line_no': 75}, {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 76}, {'indent': 12, 'line': '            V_PATTERN,', 'line_no': 77}, {'indent': 12, 'line': '            :NEW.DESCRIPTION,', 'line_no': 78}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 79}, {'indent': 8, 'line': '        );', 'line_no': 80}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 81, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 81, 'then_statements': [{'indent': 8, 'line': '        IF :OLD.RULE_FLAG != :NEW.RULE_FLAG THEN', 'line_no': 82}, {'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}, {'indent': 8, 'line': '        END IF;', 'line_no': 88}, {'indent': 8, 'line': '        IF :NEW.PATTERN_ID IS NOT NULL THEN', 'line_no': 90}, {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 91}, {'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}, {'indent': 12, 'line': '            ELSE', 'line_no': 99}, {'indent': 16, 'line': '                DELETE FROM V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 100}, {'indent': 16, 'line': '                WHERE', 'line_no': 101}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID', 'line_no': 102}, {'indent': 20, 'line': '                    AND PATTERN = :OLD.PATTERN;', 'line_no': 103}, {'indent': 12, 'line': '            END IF;', 'line_no': 104}, {'indent': 8, 'line': '        ELSE', 'line_no': 105}, {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 106}, {'indent': 16, 'line': '                INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 107}, {'indent': 20, 'line': '                    PATTERN_ID,', 'line_no': 108}, {'indent': 20, 'line': '                    RULE_ID,', 'line_no': 109}, {'indent': 20, 'line': '                    PATTERN,', 'line_no': 110}, {'indent': 20, 'line': '                    VALID_IND', 'line_no': 111}, {'indent': 16, 'line': '                ) VALUES (', 'line_no': 112}, {'indent': 20, 'line': '                    V_PATTERN_ID,', 'line_no': 113}, {'indent': 20, 'line': '                    V_RULE_ID,', 'line_no': 114}, {'indent': 20, 'line': '                    V_PATTERN,', 'line_no': 115}, {'indent': 20, 'line': '                    :NEW.VALID_IND', 'line_no': 116}, {'indent': 16, 'line': '                );', 'line_no': 117}, {'indent': 12, 'line': '            END IF;', 'line_no': 118}, {'indent': 8, 'line': '        END IF;', 'line_no': 119}]}, {'type': 'elif_statement', 'elif_line_no': 120, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 120, 'then_statements': [{'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}, {'indent': 8, 'line': '        WHERE', 'line_no': 122}, {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}]}], 'else_statements': []}
2025-09-03 04:09:42,578 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 68}
2025-09-03 04:09:42,578 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PATTERN_ID,', 'line_no': 69}
2025-09-03 04:09:42,578 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RULE_ID,', 'line_no': 70}
2025-09-03 04:09:42,578 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PATTERN,', 'line_no': 71}
2025-09-03 04:09:42,579 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            DESCRIPTION,', 'line_no': 72}
2025-09-03 04:09:42,579 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            VALID_IND', 'line_no': 73}
2025-09-03 04:09:42,579 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        ) VALUES (', 'line_no': 74}
2025-09-03 04:09:42,579 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_PATTERN_ID,', 'line_no': 75}
2025-09-03 04:09:42,579 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 76}
2025-09-03 04:09:42,580 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_PATTERN,', 'line_no': 77}
2025-09-03 04:09:42,580 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.DESCRIPTION,', 'line_no': 78}
2025-09-03 04:09:42,580 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 79}
2025-09-03 04:09:42,580 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        );', 'line_no': 80}
2025-09-03 04:09:42,580 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF :OLD.RULE_FLAG != :NEW.RULE_FLAG THEN', 'line_no': 82}
2025-09-03 04:09:42,580 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 82
2025-09-03 04:09:42,580 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 82 i: 88
2025-09-03 04:09:42,581 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 7
2025-09-03 04:09:42,581 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}]
2025-09-03 04:09:42,581 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,581 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}
2025-09-03 04:09:42,581 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SET', 'line_no': 84}
2025-09-03 04:09:42,582 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}
2025-09-03 04:09:42,582 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 86}
2025-09-03 04:09:42,582 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}
2025-09-03 04:09:42,582 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF :NEW.PATTERN_ID IS NOT NULL THEN', 'line_no': 90}
2025-09-03 04:09:42,582 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 90
2025-09-03 04:09:42,582 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 90 i: 119
2025-09-03 04:09:42,582 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 30
2025-09-03 04:09:42,583 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 91}, {'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}, {'indent': 12, 'line': '            ELSE', 'line_no': 99}, {'indent': 16, 'line': '                DELETE FROM V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 100}, {'indent': 16, 'line': '                WHERE', 'line_no': 101}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID', 'line_no': 102}, {'indent': 20, 'line': '                    AND PATTERN = :OLD.PATTERN;', 'line_no': 103}, {'indent': 12, 'line': '            END IF;', 'line_no': 104}], 'if_elses': [], 'else_statements': [[{'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 106}, {'indent': 16, 'line': '                INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 107}, {'indent': 20, 'line': '                    PATTERN_ID,', 'line_no': 108}, {'indent': 20, 'line': '                    RULE_ID,', 'line_no': 109}, {'indent': 20, 'line': '                    PATTERN,', 'line_no': 110}, {'indent': 20, 'line': '                    VALID_IND', 'line_no': 111}, {'indent': 16, 'line': '                ) VALUES (', 'line_no': 112}, {'indent': 20, 'line': '                    V_PATTERN_ID,', 'line_no': 113}, {'indent': 20, 'line': '                    V_RULE_ID,', 'line_no': 114}, {'indent': 20, 'line': '                    V_PATTERN,', 'line_no': 115}, {'indent': 20, 'line': '                    :NEW.VALID_IND', 'line_no': 116}, {'indent': 16, 'line': '                );', 'line_no': 117}, {'indent': 12, 'line': '            END IF;', 'line_no': 118}, {'indent': 8, 'line': '        END IF;', 'line_no': 119}]]}
2025-09-03 04:09:42,583 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 91}
2025-09-03 04:09:42,583 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 91
2025-09-03 04:09:42,583 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 91 i: 104
2025-09-03 04:09:42,583 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 14
2025-09-03 04:09:42,584 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}], 'if_elses': [], 'else_statements': [[{'indent': 16, 'line': '                DELETE FROM V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 100}, {'indent': 16, 'line': '                WHERE', 'line_no': 101}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID', 'line_no': 102}, {'indent': 20, 'line': '                    AND PATTERN = :OLD.PATTERN;', 'line_no': 103}, {'indent': 12, 'line': '            END IF;', 'line_no': 104}]]}
2025-09-03 04:09:42,584 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}
2025-09-03 04:09:42,584 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SET', 'line_no': 93}
2025-09-03 04:09:42,584 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}
2025-09-03 04:09:42,584 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}
2025-09-03 04:09:42,585 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}
2025-09-03 04:09:42,585 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 97}
2025-09-03 04:09:42,585 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}
2025-09-03 04:09:42,585 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 16, 'line': '                DELETE FROM V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 100}, {'indent': 16, 'line': '                WHERE', 'line_no': 101}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID', 'line_no': 102}, {'indent': 20, 'line': '                    AND PATTERN = :OLD.PATTERN;', 'line_no': 103}, {'indent': 12, 'line': '            END IF;', 'line_no': 104}]
2025-09-03 04:09:42,585 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 12, 'line': '            IF V_PATTERN IS NOT NULL THEN', 'line_no': 106}, {'indent': 16, 'line': '                INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 107}, {'indent': 20, 'line': '                    PATTERN_ID,', 'line_no': 108}, {'indent': 20, 'line': '                    RULE_ID,', 'line_no': 109}, {'indent': 20, 'line': '                    PATTERN,', 'line_no': 110}, {'indent': 20, 'line': '                    VALID_IND', 'line_no': 111}, {'indent': 16, 'line': '                ) VALUES (', 'line_no': 112}, {'indent': 20, 'line': '                    V_PATTERN_ID,', 'line_no': 113}, {'indent': 20, 'line': '                    V_RULE_ID,', 'line_no': 114}, {'indent': 20, 'line': '                    V_PATTERN,', 'line_no': 115}, {'indent': 20, 'line': '                    :NEW.VALID_IND', 'line_no': 116}, {'indent': 16, 'line': '                );', 'line_no': 117}, {'indent': 12, 'line': '            END IF;', 'line_no': 118}, {'indent': 8, 'line': '        END IF;', 'line_no': 119}]
2025-09-03 04:09:42,586 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}
2025-09-03 04:09:42,586 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 122}
2025-09-03 04:09:42,586 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}
2025-09-03 04:09:42,586 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20112, V_TRIGGER_NAME);', 'line_no': 127}
2025-09-03 04:09:42,586 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);', 'line_no': 129}
2025-09-03 04:09:42,586 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20119, V_TRIGGER_NAME);', 'line_no': 131}
2025-09-03 04:09:42,764 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 4, 'line': '    V_PATTERN := :NEW.PATTERN;', 'line_no': 16}, {'condition': '', 'type': 'case_when', 'case_line_no': 19, 'case_indent': 4, 'end_case_line_no': 33, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 20, 'when_indent': 8, 'condition': 'V_PATTERN IS NOT NULL', 'then_line_no': 20, 'then_statements': [{'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}], 'if_elses': [], 'else_statements': []}, {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'condition': " :NEW.RULE_FLAG = 'M' ", 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 12, 'end_if_line_no': 32, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}], 'if_elses': [], 'else_statements': []}]}, {'indent': 4, 'line': '    SELECT', 'line_no': 37}, {'indent': 8, 'line': '        COUNT (*) INTO CNTR', 'line_no': 38}, {'indent': 4, 'line': '    FROM', 'line_no': 39}, {'indent': 8, 'line': '        V_BPA_POSTAL_CODE_RULES', 'line_no': 40}, {'indent': 4, 'line': '    WHERE', 'line_no': 41}, {'indent': 8, 'line': '        COUNTRY_CD = :NEW.COUNTRY_CD;', 'line_no': 42}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 4, 'end_if_line_no': 59, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 44}, {'indent': 12, 'line': '            NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID', 'line_no': 45}, {'indent': 8, 'line': '        FROM', 'line_no': 46}, {'indent': 12, 'line': '            V_BPA_POSTAL_CODE_RULES;', 'line_no': 47}, {'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_RULES (', 'line_no': 48}, {'indent': 12, 'line': '            RULE_ID,', 'line_no': 49}, {'indent': 12, 'line': '            COUNTRY_CD,', 'line_no': 50}, {'indent': 12, 'line': '            RULE_FLAG', 'line_no': 51}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 52}, {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 53}, {'indent': 12, 'line': '            UPPER (:NEW.COUNTRY_CD),', 'line_no': 54}, {'indent': 12, 'line': '            :NEW.RULE_FLAG', 'line_no': 55}, {'indent': 8, 'line': '        );', 'line_no': 56}], 'if_elses': [], 'else_statements': []}, {'indent': 4, 'line': '    SELECT', 'line_no': 63}, {'indent': 8, 'line': '        NVL (MAX (PATTERN_ID) + 1, 1) INTO V_PATTERN_ID', 'line_no': 64}, {'indent': 4, 'line': '    FROM', 'line_no': 65}, {'indent': 8, 'line': '        V_BPA_POSTAL_CODE_PATTERNS;', 'line_no': 66}, {'condition': ' INSERTING AND V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 67, 'then_line_no': 67, 'if_indent': 4, 'end_if_line_no': 124, 'then_statements': [{'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 68}, {'indent': 12, 'line': '            PATTERN_ID,', 'line_no': 69}, {'indent': 12, 'line': '            RULE_ID,', 'line_no': 70}, {'indent': 12, 'line': '            PATTERN,', 'line_no': 71}, {'indent': 12, 'line': '            DESCRIPTION,', 'line_no': 72}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 73}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 74}, {'indent': 12, 'line': '            V_PATTERN_ID,', 'line_no': 75}, {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 76}, {'indent': 12, 'line': '            V_PATTERN,', 'line_no': 77}, {'indent': 12, 'line': '            :NEW.DESCRIPTION,', 'line_no': 78}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 79}, {'indent': 8, 'line': '        );', 'line_no': 80}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 81, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 81, 'then_statements': [{'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]}, {'type': 'elif_statement', 'elif_line_no': 120, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 120, 'then_statements': [{'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}, {'indent': 8, 'line': '        WHERE', 'line_no': 122}, {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}]}], 'else_statements': []}]
2025-09-03 04:09:42,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,764 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    V_PATTERN := :NEW.PATTERN;', 'line_no': 16}
2025-09-03 04:09:42,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:42,772 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}], 'if_elses': [], 'else_statements': []}, {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:42,772 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,783 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}]
2025-09-03 04:09:42,783 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,783 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}
2025-09-03 04:09:42,792 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:42,792 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:42,800 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}]
2025-09-03 04:09:42,800 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,800 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}
2025-09-03 04:09:42,808 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:42,815 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " :NEW.RULE_FLAG = 'M' ", 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 12, 'end_if_line_no': 32, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:42,815 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,823 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}]
2025-09-03 04:09:42,823 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,823 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}
2025-09-03 04:09:42,831 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:42,831 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:42,831 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 37}
2025-09-03 04:09:42,831 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:42,831 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        COUNT (*) INTO CNTR', 'line_no': 38}
2025-09-03 04:09:42,831 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:42,831 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    FROM', 'line_no': 39}
2025-09-03 04:09:42,831 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:42,832 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        V_BPA_POSTAL_CODE_RULES', 'line_no': 40}
2025-09-03 04:09:42,832 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:42,832 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    WHERE', 'line_no': 41}
2025-09-03 04:09:42,832 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:42,832 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        COUNTRY_CD = :NEW.COUNTRY_CD;', 'line_no': 42}
2025-09-03 04:09:42,832 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:42,839 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        SELECT', 'line_no': 44}, {'indent': 12, 'line': '            NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID', 'line_no': 45}, {'indent': 8, 'line': '        FROM', 'line_no': 46}, {'indent': 12, 'line': '            V_BPA_POSTAL_CODE_RULES;', 'line_no': 47}, {'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_RULES (', 'line_no': 48}, {'indent': 12, 'line': '            RULE_ID,', 'line_no': 49}, {'indent': 12, 'line': '            COUNTRY_CD,', 'line_no': 50}, {'indent': 12, 'line': '            RULE_FLAG', 'line_no': 51}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 52}, {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 53}, {'indent': 12, 'line': '            UPPER (:NEW.COUNTRY_CD),', 'line_no': 54}, {'indent': 12, 'line': '            :NEW.RULE_FLAG', 'line_no': 55}, {'indent': 8, 'line': '        );', 'line_no': 56}]
2025-09-03 04:09:42,839 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,839 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 44}
2025-09-03 04:09:42,839 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:42,839 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID', 'line_no': 45}
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        FROM', 'line_no': 46}
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_BPA_POSTAL_CODE_RULES;', 'line_no': 47}
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_RULES (', 'line_no': 48}
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RULE_ID,', 'line_no': 49}
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COUNTRY_CD,', 'line_no': 50}
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RULE_FLAG', 'line_no': 51}
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        ) VALUES (', 'line_no': 52}
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 53}
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            UPPER (:NEW.COUNTRY_CD),', 'line_no': 54}
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:42,840 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.RULE_FLAG', 'line_no': 55}
2025-09-03 04:09:42,841 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:42,841 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        );', 'line_no': 56}
2025-09-03 04:09:42,848 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:42,848 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:42,848 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 63}
2025-09-03 04:09:42,848 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:42,848 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        NVL (MAX (PATTERN_ID) + 1, 1) INTO V_PATTERN_ID', 'line_no': 64}
2025-09-03 04:09:42,848 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:42,848 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    FROM', 'line_no': 65}
2025-09-03 04:09:42,848 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:42,848 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        V_BPA_POSTAL_CODE_PATTERNS;', 'line_no': 66}
2025-09-03 04:09:42,848 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:42,856 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 68}, {'indent': 12, 'line': '            PATTERN_ID,', 'line_no': 69}, {'indent': 12, 'line': '            RULE_ID,', 'line_no': 70}, {'indent': 12, 'line': '            PATTERN,', 'line_no': 71}, {'indent': 12, 'line': '            DESCRIPTION,', 'line_no': 72}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 73}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 74}, {'indent': 12, 'line': '            V_PATTERN_ID,', 'line_no': 75}, {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 76}, {'indent': 12, 'line': '            V_PATTERN,', 'line_no': 77}, {'indent': 12, 'line': '            :NEW.DESCRIPTION,', 'line_no': 78}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 79}, {'indent': 8, 'line': '        );', 'line_no': 80}]
2025-09-03 04:09:42,856 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,856 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 68}
2025-09-03 04:09:42,856 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:42,856 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PATTERN_ID,', 'line_no': 69}
2025-09-03 04:09:42,856 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:42,856 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RULE_ID,', 'line_no': 70}
2025-09-03 04:09:42,856 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:42,856 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PATTERN,', 'line_no': 71}
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            DESCRIPTION,', 'line_no': 72}
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            VALID_IND', 'line_no': 73}
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        ) VALUES (', 'line_no': 74}
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_PATTERN_ID,', 'line_no': 75}
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 76}
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_PATTERN,', 'line_no': 77}
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.DESCRIPTION,', 'line_no': 78}
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 79}
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:42,857 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        );', 'line_no': 80}
2025-09-03 04:09:42,865 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:42,865 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,872 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}]
2025-09-03 04:09:42,872 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,872 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}
2025-09-03 04:09:42,873 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:42,873 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SET', 'line_no': 84}
2025-09-03 04:09:42,873 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:42,873 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}
2025-09-03 04:09:42,873 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:42,873 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 86}
2025-09-03 04:09:42,873 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:42,873 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}
2025-09-03 04:09:42,882 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:42,883 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:42,890 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:42,890 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,898 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}]
2025-09-03 04:09:42,898 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,898 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}
2025-09-03 04:09:42,898 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:42,898 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SET', 'line_no': 93}
2025-09-03 04:09:42,898 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:42,898 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}
2025-09-03 04:09:42,898 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:42,898 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}
2025-09-03 04:09:42,899 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:42,899 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}
2025-09-03 04:09:42,899 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:42,899 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 97}
2025-09-03 04:09:42,899 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:42,899 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}
2025-09-03 04:09:42,907 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:42,922 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:42,934 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}, {'indent': 8, 'line': '        WHERE', 'line_no': 122}, {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}]
2025-09-03 04:09:42,934 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,934 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}
2025-09-03 04:09:42,934 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:42,934 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 122}
2025-09-03 04:09:42,934 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:42,934 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}
2025-09-03 04:09:42,943 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:42,952 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20112, V_TRIGGER_NAME);', 'line_no': 127}]
2025-09-03 04:09:42,952 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,952 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20112, V_TRIGGER_NAME);', 'line_no': 127}
2025-09-03 04:09:42,952 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:42,952 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20112, V_TRIGGER_NAME);
2025-09-03 04:09:42,952 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 127
2025-09-03 04:09:42,953 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 127
2025-09-03 04:09:42,953 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20112, V_TRIGGER_NAME);
2025-09-03 04:09:42,953 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20112, V_TRIGGER_NAME'}}
2025-09-03 04:09:42,961 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);', 'line_no': 129}]
2025-09-03 04:09:42,961 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,961 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);', 'line_no': 129}
2025-09-03 04:09:42,961 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:42,961 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);
2025-09-03 04:09:42,961 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 129
2025-09-03 04:09:42,962 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 129
2025-09-03 04:09:42,962 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);
2025-09-03 04:09:42,962 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20114', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20114, V_TRIGGER_NAME'}}
2025-09-03 04:09:42,970 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20119, V_TRIGGER_NAME);', 'line_no': 131}]
2025-09-03 04:09:42,970 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:42,970 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20119, V_TRIGGER_NAME);', 'line_no': 131}
2025-09-03 04:09:42,970 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:42,970 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20119, V_TRIGGER_NAME);
2025-09-03 04:09:42,970 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 131
2025-09-03 04:09:42,970 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 131
2025-09-03 04:09:42,970 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20119, V_TRIGGER_NAME);
2025-09-03 04:09:42,970 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20119', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20119, V_TRIGGER_NAME'}}
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 4, 'line': '    V_PATTERN := :NEW.PATTERN;', 'line_no': 16}, {'condition': '', 'type': 'case_when', 'case_line_no': 19, 'case_indent': 4, 'end_case_line_no': 33, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 20, 'when_indent': 8, 'condition': 'V_PATTERN IS NOT NULL', 'then_line_no': 20, 'then_statements': [{'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}], 'if_elses': [], 'else_statements': []}, {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'condition': " :NEW.RULE_FLAG = 'M' ", 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 12, 'end_if_line_no': 32, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}], 'if_elses': [], 'else_statements': []}]}, {'indent': 4, 'line': '    SELECT', 'line_no': 37}, {'indent': 8, 'line': '        COUNT (*) INTO CNTR', 'line_no': 38}, {'indent': 4, 'line': '    FROM', 'line_no': 39}, {'indent': 8, 'line': '        V_BPA_POSTAL_CODE_RULES', 'line_no': 40}, {'indent': 4, 'line': '    WHERE', 'line_no': 41}, {'indent': 8, 'line': '        COUNTRY_CD = :NEW.COUNTRY_CD;', 'line_no': 42}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 4, 'end_if_line_no': 59, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 44}, {'indent': 12, 'line': '            NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID', 'line_no': 45}, {'indent': 8, 'line': '        FROM', 'line_no': 46}, {'indent': 12, 'line': '            V_BPA_POSTAL_CODE_RULES;', 'line_no': 47}, {'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_RULES (', 'line_no': 48}, {'indent': 12, 'line': '            RULE_ID,', 'line_no': 49}, {'indent': 12, 'line': '            COUNTRY_CD,', 'line_no': 50}, {'indent': 12, 'line': '            RULE_FLAG', 'line_no': 51}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 52}, {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 53}, {'indent': 12, 'line': '            UPPER (:NEW.COUNTRY_CD),', 'line_no': 54}, {'indent': 12, 'line': '            :NEW.RULE_FLAG', 'line_no': 55}, {'indent': 8, 'line': '        );', 'line_no': 56}], 'if_elses': [], 'else_statements': []}, {'indent': 4, 'line': '    SELECT', 'line_no': 63}, {'indent': 8, 'line': '        NVL (MAX (PATTERN_ID) + 1, 1) INTO V_PATTERN_ID', 'line_no': 64}, {'indent': 4, 'line': '    FROM', 'line_no': 65}, {'indent': 8, 'line': '        V_BPA_POSTAL_CODE_PATTERNS;', 'line_no': 66}, {'condition': ' INSERTING AND V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 67, 'then_line_no': 67, 'if_indent': 4, 'end_if_line_no': 124, 'then_statements': [{'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 68}, {'indent': 12, 'line': '            PATTERN_ID,', 'line_no': 69}, {'indent': 12, 'line': '            RULE_ID,', 'line_no': 70}, {'indent': 12, 'line': '            PATTERN,', 'line_no': 71}, {'indent': 12, 'line': '            DESCRIPTION,', 'line_no': 72}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 73}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 74}, {'indent': 12, 'line': '            V_PATTERN_ID,', 'line_no': 75}, {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 76}, {'indent': 12, 'line': '            V_PATTERN,', 'line_no': 77}, {'indent': 12, 'line': '            :NEW.DESCRIPTION,', 'line_no': 78}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 79}, {'indent': 8, 'line': '        );', 'line_no': 80}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 81, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 81, 'then_statements': [{'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]}, {'type': 'elif_statement', 'elif_line_no': 120, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 120, 'then_statements': [{'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}, {'indent': 8, 'line': '        WHERE', 'line_no': 122}, {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}]}], 'else_statements': []}]
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     V_PATTERN := :NEW.PATTERN; || 16 || 4
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 16 || assignment
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 16 || assignment
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_PATTERN', 'assignment_operator': ':=', 'expression': ':NEW.PATTERN;', 'assignment_line_no': 16, 'assignment_indent': 4}
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}], 'if_elses': [], 'else_statements': []}, {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_NULL;', 'line_no': 22}]
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 RAISE ERR_NULL; || 22 || 16
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 22 || raise_statement || RAISE
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 22 || raise_statement
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 22 || raise_statement
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 22 || raise_statement
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 27}]
2025-09-03 04:09:42,971 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 RAISE ERR_POSTAL_CODE; || 27 || 16
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 27 || raise_statement || RAISE
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 27 || raise_statement
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 27 || raise_statement
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 27 || raise_statement
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " :NEW.RULE_FLAG = 'M' ", 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 12, 'end_if_line_no': 32, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_POSTAL_CODE;', 'line_no': 31}]
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 RAISE ERR_POSTAL_CODE; || 31 || 16
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 31 || raise_statement || RAISE
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 31 || raise_statement
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 31 || raise_statement
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 31 || raise_statement
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     SELECT || 37 || 4
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 37 || select_statement || SELECT
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 37 || select_statement
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 37 || select_statement
2025-09-03 04:09:42,972 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 42 || select_statement
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO CNTR FROM V_BPA_POSTAL_CODE_RULES WHERE COUNTRY_CD = :NEW.COUNTRY_CD;
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 8
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        SELECT', 'line_no': 44}, {'indent': 12, 'line': '            NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID', 'line_no': 45}, {'indent': 8, 'line': '        FROM', 'line_no': 46}, {'indent': 12, 'line': '            V_BPA_POSTAL_CODE_RULES;', 'line_no': 47}, {'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_RULES (', 'line_no': 48}, {'indent': 12, 'line': '            RULE_ID,', 'line_no': 49}, {'indent': 12, 'line': '            COUNTRY_CD,', 'line_no': 50}, {'indent': 12, 'line': '            RULE_FLAG', 'line_no': 51}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 52}, {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 53}, {'indent': 12, 'line': '            UPPER (:NEW.COUNTRY_CD),', 'line_no': 54}, {'indent': 12, 'line': '            :NEW.RULE_FLAG', 'line_no': 55}, {'indent': 8, 'line': '        );', 'line_no': 56}]
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         SELECT || 44 || 8
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 44 || select_statement || SELECT
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 44 || select_statement
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 44 || select_statement
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 47 || select_statement
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID FROM V_BPA_POSTAL_CODE_RULES;
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 4
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         INSERT INTO V_BPA_POSTAL_CODE_RULES ( || 48 || 8
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 48 || insert_statement || INSERT
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 48 || insert_statement
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 48 || insert_statement
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 56 || insert_statement
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - INSERT INTO V_BPA_POSTAL_CODE_RULES ( RULE_ID, COUNTRY_CD, RULE_FLAG ) VALUES ( V_RULE_ID, UPPER (:NEW.COUNTRY_CD), :NEW.RULE_FLAG );
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 9
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     SELECT || 63 || 4
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 63 || select_statement || SELECT
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 63 || select_statement
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 63 || select_statement
2025-09-03 04:09:42,973 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 66 || select_statement
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT NVL (MAX (PATTERN_ID) + 1, 1) INTO V_PATTERN_ID FROM V_BPA_POSTAL_CODE_PATTERNS;
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 13
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        INSERT INTO V_BPA_POSTAL_CODE_PATTERNS (', 'line_no': 68}, {'indent': 12, 'line': '            PATTERN_ID,', 'line_no': 69}, {'indent': 12, 'line': '            RULE_ID,', 'line_no': 70}, {'indent': 12, 'line': '            PATTERN,', 'line_no': 71}, {'indent': 12, 'line': '            DESCRIPTION,', 'line_no': 72}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 73}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 74}, {'indent': 12, 'line': '            V_PATTERN_ID,', 'line_no': 75}, {'indent': 12, 'line': '            V_RULE_ID,', 'line_no': 76}, {'indent': 12, 'line': '            V_PATTERN,', 'line_no': 77}, {'indent': 12, 'line': '            :NEW.DESCRIPTION,', 'line_no': 78}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 79}, {'indent': 8, 'line': '        );', 'line_no': 80}]
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         INSERT INTO V_BPA_POSTAL_CODE_PATTERNS ( || 68 || 8
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 68 || insert_statement || INSERT
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 68 || insert_statement
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 68 || insert_statement
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 80 || insert_statement
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - INSERT INTO V_BPA_POSTAL_CODE_PATTERNS ( PATTERN_ID, RULE_ID, PATTERN, DESCRIPTION, VALID_IND ) VALUES ( V_PATTERN_ID, V_RULE_ID, V_PATTERN, :NEW.DESCRIPTION, :NEW.VALID_IND );
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            UPDATE V_BPA_POSTAL_CODE_RULES', 'line_no': 83}, {'indent': 12, 'line': '            SET', 'line_no': 84}, {'indent': 16, 'line': '                RULE_FLAG = :NEW.RULE_FLAG', 'line_no': 85}, {'indent': 12, 'line': '            WHERE', 'line_no': 86}, {'indent': 16, 'line': '                RULE_ID = V_RULE_ID;', 'line_no': 87}]
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             UPDATE V_BPA_POSTAL_CODE_RULES || 83 || 12
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 83 || update_statement || UPDATE
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 83 || update_statement
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 83 || update_statement
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 87 || update_statement
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE V_BPA_POSTAL_CODE_RULES SET RULE_FLAG = :NEW.RULE_FLAG WHERE RULE_ID = V_RULE_ID;
2025-09-03 04:09:42,974 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                UPDATE V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 92}, {'indent': 16, 'line': '                SET', 'line_no': 93}, {'indent': 20, 'line': '                    PATTERN = V_PATTERN,', 'line_no': 94}, {'indent': 20, 'line': '                    DESCRIPTION = :NEW.DESCRIPTION,', 'line_no': 95}, {'indent': 20, 'line': '                    VALID_IND = :NEW.VALID_IND', 'line_no': 96}, {'indent': 16, 'line': '                WHERE', 'line_no': 97}, {'indent': 20, 'line': '                    PATTERN_ID = :NEW.PATTERN_ID;', 'line_no': 98}]
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 UPDATE V_BPA_POSTAL_CODE_PATTERNS || 92 || 16
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 92 || update_statement || UPDATE
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 92 || update_statement
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 92 || update_statement
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 98 || update_statement
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS', 'line_no': 121}, {'indent': 8, 'line': '        WHERE', 'line_no': 122}, {'indent': 12, 'line': '            PATTERN_ID = :OLD.PATTERN_ID;', 'line_no': 123}]
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS || 121 || 8
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 121 || delete_statement || DELETE
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 121 || delete_statement
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 121 || delete_statement
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 123 || delete_statement
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS WHERE PATTERN_ID = :OLD.PATTERN_ID;
2025-09-03 04:09:42,975 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20112, V_TRIGGER_NAME'}}]
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20114', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20114, V_TRIGGER_NAME'}}]
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20119', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20119, V_TRIGGER_NAME'}}]
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 15, 'begin_indent': 0, 'begin_end_statements': [{'type': 'assignment', 'variable_name': 'V_PATTERN', 'assignment_operator': ':=', 'expression': ':NEW.PATTERN;', 'assignment_line_no': 16, 'assignment_indent': 4}, {'condition': '', 'type': 'case_when', 'case_line_no': 19, 'case_indent': 4, 'end_case_line_no': 33, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 20, 'when_indent': 8, 'condition': 'V_PATTERN IS NOT NULL', 'then_line_no': 20, 'then_statements': [{'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NULL;', 'statement_line_no': 22, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 27, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'condition': " :NEW.RULE_FLAG = 'M' ", 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 12, 'end_if_line_no': 32, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 31, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}]}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM V_BPA_POSTAL_CODE_RULES WHERE COUNTRY_CD = :NEW.COUNTRY_CD;', 'statement_line_no': 37, 'statement_indent': 4}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 4, 'end_if_line_no': 59, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID FROM V_BPA_POSTAL_CODE_RULES;', 'statement_line_no': 44, 'statement_indent': 8}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_BPA_POSTAL_CODE_RULES ( RULE_ID, COUNTRY_CD, RULE_FLAG ) VALUES ( V_RULE_ID, UPPER (:NEW.COUNTRY_CD), :NEW.RULE_FLAG );', 'statement_line_no': 48, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT NVL (MAX (PATTERN_ID) + 1, 1) INTO V_PATTERN_ID FROM V_BPA_POSTAL_CODE_PATTERNS;', 'statement_line_no': 63, 'statement_indent': 4}, {'condition': ' INSERTING AND V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 67, 'then_line_no': 67, 'if_indent': 4, 'end_if_line_no': 124, 'then_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_BPA_POSTAL_CODE_PATTERNS ( PATTERN_ID, RULE_ID, PATTERN, DESCRIPTION, VALID_IND ) VALUES ( V_PATTERN_ID, V_RULE_ID, V_PATTERN, :NEW.DESCRIPTION, :NEW.VALID_IND );', 'statement_line_no': 68, 'statement_indent': 8}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 81, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 81, 'then_statements': [{'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_RULES SET RULE_FLAG = :NEW.RULE_FLAG WHERE RULE_ID = V_RULE_ID;', 'statement_line_no': 83, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;', 'statement_line_no': 92, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]}, {'type': 'elif_statement', 'elif_line_no': 120, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 120, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS WHERE PATTERN_ID = :OLD.PATTERN_ID;', 'statement_line_no': 121, 'statement_indent': 8}]}], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 126, 'when_indent': 4, 'then_line_no': 126, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20112, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_NULL', 'when_line_no': 128, 'when_indent': 4, 'then_line_no': 128, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20114', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20114, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_POSTAL_CODE', 'when_line_no': 130, 'when_indent': 4, 'then_line_no': 130, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20119', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20119, V_TRIGGER_NAME'}}]}], 'exception_line_no': 125, 'end_line_no': 132}
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_PATTERN', 'assignment_operator': ':=', 'expression': ':NEW.PATTERN;', 'assignment_line_no': 16, 'assignment_indent': 4}
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 19, 'case_indent': 4, 'end_case_line_no': 33, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 20, 'when_indent': 8, 'condition': 'V_PATTERN IS NOT NULL', 'then_line_no': 20, 'then_statements': [{'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NULL;', 'statement_line_no': 22, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 27, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'condition': " :NEW.RULE_FLAG = 'M' ", 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 12, 'end_if_line_no': 32, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 31, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 20, 'when_indent': 8, 'condition': 'V_PATTERN IS NOT NULL', 'then_line_no': 20, 'then_statements': [{'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NULL;', 'statement_line_no': 22, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 27, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NULL;', 'statement_line_no': 22, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NULL;', 'statement_line_no': 22, 'statement_indent': 16}
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 27, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 27, 'statement_indent': 16}
2025-09-03 04:09:42,976 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " :NEW.RULE_FLAG = 'M' ", 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 12, 'end_if_line_no': 32, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 31, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 31, 'statement_indent': 16}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM V_BPA_POSTAL_CODE_RULES WHERE COUNTRY_CD = :NEW.COUNTRY_CD;', 'statement_line_no': 37, 'statement_indent': 4}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 4, 'end_if_line_no': 59, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID FROM V_BPA_POSTAL_CODE_RULES;', 'statement_line_no': 44, 'statement_indent': 8}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_BPA_POSTAL_CODE_RULES ( RULE_ID, COUNTRY_CD, RULE_FLAG ) VALUES ( V_RULE_ID, UPPER (:NEW.COUNTRY_CD), :NEW.RULE_FLAG );', 'statement_line_no': 48, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID FROM V_BPA_POSTAL_CODE_RULES;', 'statement_line_no': 44, 'statement_indent': 8}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_BPA_POSTAL_CODE_RULES ( RULE_ID, COUNTRY_CD, RULE_FLAG ) VALUES ( V_RULE_ID, UPPER (:NEW.COUNTRY_CD), :NEW.RULE_FLAG );', 'statement_line_no': 48, 'statement_indent': 8}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT NVL (MAX (PATTERN_ID) + 1, 1) INTO V_PATTERN_ID FROM V_BPA_POSTAL_CODE_PATTERNS;', 'statement_line_no': 63, 'statement_indent': 4}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' INSERTING AND V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 67, 'then_line_no': 67, 'if_indent': 4, 'end_if_line_no': 124, 'then_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_BPA_POSTAL_CODE_PATTERNS ( PATTERN_ID, RULE_ID, PATTERN, DESCRIPTION, VALID_IND ) VALUES ( V_PATTERN_ID, V_RULE_ID, V_PATTERN, :NEW.DESCRIPTION, :NEW.VALID_IND );', 'statement_line_no': 68, 'statement_indent': 8}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 81, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 81, 'then_statements': [{'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_RULES SET RULE_FLAG = :NEW.RULE_FLAG WHERE RULE_ID = V_RULE_ID;', 'statement_line_no': 83, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;', 'statement_line_no': 92, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]}, {'type': 'elif_statement', 'elif_line_no': 120, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 120, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS WHERE PATTERN_ID = :OLD.PATTERN_ID;', 'statement_line_no': 121, 'statement_indent': 8}]}], 'else_statements': []}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_BPA_POSTAL_CODE_PATTERNS ( PATTERN_ID, RULE_ID, PATTERN, DESCRIPTION, VALID_IND ) VALUES ( V_PATTERN_ID, V_RULE_ID, V_PATTERN, :NEW.DESCRIPTION, :NEW.VALID_IND );', 'statement_line_no': 68, 'statement_indent': 8}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 81, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 81, 'then_statements': [{'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_RULES SET RULE_FLAG = :NEW.RULE_FLAG WHERE RULE_ID = V_RULE_ID;', 'statement_line_no': 83, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;', 'statement_line_no': 92, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_RULES SET RULE_FLAG = :NEW.RULE_FLAG WHERE RULE_ID = V_RULE_ID;', 'statement_line_no': 83, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_RULES SET RULE_FLAG = :NEW.RULE_FLAG WHERE RULE_ID = V_RULE_ID;', 'statement_line_no': 83, 'statement_indent': 12}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;', 'statement_line_no': 92, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;', 'statement_line_no': 92, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;', 'statement_line_no': 92, 'statement_indent': 16}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 120, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 120, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS WHERE PATTERN_ID = :OLD.PATTERN_ID;', 'statement_line_no': 121, 'statement_indent': 8}]}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS WHERE PATTERN_ID = :OLD.PATTERN_ID;', 'statement_line_no': 121, 'statement_indent': 8}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 126, 'when_indent': 4, 'then_line_no': 126, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20112, V_TRIGGER_NAME'}}]}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20112, V_TRIGGER_NAME'}}
2025-09-03 04:09:42,977 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_NULL', 'when_line_no': 128, 'when_indent': 4, 'then_line_no': 128, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20114', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20114, V_TRIGGER_NAME'}}]}
2025-09-03 04:09:42,978 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20114', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20114, V_TRIGGER_NAME'}}
2025-09-03 04:09:42,978 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_POSTAL_CODE', 'when_line_no': 130, 'when_indent': 4, 'then_line_no': 130, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20119', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20119, V_TRIGGER_NAME'}}]}
2025-09-03 04:09:42,978 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20119', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20119, V_TRIGGER_NAME'}}
2025-09-03 04:09:42,978 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list []
2025-09-03 04:09:42,991 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:   filename                                               line  line_no  indent
0  zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
1  zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
2  zzz.sql                              ELSIF (DELETING) THEN      192     8.0
3  zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
4  zzz.sql                                            END IF;      196     8.0
2025-09-03 04:09:42,991 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 04:09:42,992 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.42543816566467285 seconds
2025-09-03 04:09:42,992 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 04:09:42,992 - root - DEBUG - [common.py:105] - File details: bbb.sql
2025-09-03 04:09:42,992 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 04:09:42,992 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 6 vars, 0 consts, 3 excs, 10 comments
2025-09-03 04:09:42,992 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 04:09:42,992 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:42,992 - root - DEBUG - [common.py:105] - File details in metadata: bbb.sql (4273 bytes)
2025-09-03 04:09:42,993 - root - DEBUG - [common.py:105] - Analysis statistics: 6 vars, 0 consts, 3 excs, 10 comments
2025-09-03 04:09:42,993 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\bbb_analysis.json
2025-09-03 04:09:42,994 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\bbb_analysis.json
2025-09-03 04:09:42,994 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger bbb.sql ===
2025-09-03 04:09:42,994 - root - DEBUG - [common.py:105] - ✓ Created bbb_analysis.json
2025-09-03 04:09:42,994 - root - DEBUG - [common.py:105] - === Processing file 2/10: eee.sql ===
2025-09-03 04:09:42,995 - root - DEBUG - [common.py:105] - Source path: files/oracle\eee.sql
2025-09-03 04:09:42,995 - root - DEBUG - [common.py:105] - Output path: files/format_json\eee_analysis.json
2025-09-03 04:09:42,995 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger eee.sql ===
2025-09-03 04:09:42,995 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 04:09:42,995 - root - DEBUG - [main.py:245] - Reading SQL file: files/oracle\eee.sql
2025-09-03 04:09:42,995 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 20 characters of SQL
2025-09-03 04:09:42,995 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 04:09:42,996 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 04:09:42,996 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 25 total, 12 with semicolons, 3 empty lines skipped
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 25 lines cleaned
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 1 comments extracted, 24 lines cleaned
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 4
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 5
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 5-3
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:1591] - Begin line: {'indent': 4, 'line': '    BEGIN', 'line_no': 8} 3
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:1601] - End line: {'indent': 4, 'line': '    END;', 'line_no': 26} 17
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    DECLARE', 'line_no': 5}
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        v_outer_counter NUMBER := 1;', 'line_no': 6}
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        v_inner_counter NUMBER;', 'line_no': 7}
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'type': 'begin_end', 'begin_line_no': 8, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        <<outer_loop>>', 'line_no': 10}, {'indent': 8, 'line': '        LOOP', 'line_no': 11}, {'indent': 12, 'line': '            v_inner_counter := 1;', 'line_no': 12}, {'indent': 12, 'line': '            <<inner_loop>>', 'line_no': 14}, {'indent': 12, 'line': '            LOOP', 'line_no': 15}, {'indent': 16, 'line': '                INSERT INTO sales_analytics', 'line_no': 16}, {'indent': 16, 'line': '                VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'line_no': 17}, {'indent': 16, 'line': '                v_inner_counter := v_inner_counter + 1;', 'line_no': 19}, {'indent': 16, 'line': '                EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20}, {'indent': 12, 'line': '            END LOOP inner_loop;', 'line_no': 21}, {'indent': 12, 'line': '            v_outer_counter := v_outer_counter + 1;', 'line_no': 23}, {'indent': 12, 'line': '            EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24}, {'indent': 8, 'line': '        END LOOP outer_loop;', 'line_no': 25}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 26}
2025-09-03 04:09:42,996 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        <<outer_loop>>', 'line_no': 10}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        LOOP', 'line_no': 11}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            v_inner_counter := 1;', 'line_no': 12}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            <<inner_loop>>', 'line_no': 14}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            LOOP', 'line_no': 15}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                INSERT INTO sales_analytics', 'line_no': 16}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'line_no': 17}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                v_inner_counter := v_inner_counter + 1;', 'line_no': 19}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            END LOOP inner_loop;', 'line_no': 21}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            v_outer_counter := v_outer_counter + 1;', 'line_no': 23}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24}
2025-09-03 04:09:42,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        END LOOP outer_loop;', 'line_no': 25}
2025-09-03 04:09:43,005 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 4, 'line': '    DECLARE', 'line_no': 5}, {'indent': 8, 'line': '        v_outer_counter NUMBER := 1;', 'line_no': 6}, {'indent': 8, 'line': '        v_inner_counter NUMBER;', 'line_no': 7}, {'type': 'begin_end', 'begin_line_no': 8, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        <<outer_loop>>', 'line_no': 10}, {'indent': 8, 'line': '        LOOP', 'line_no': 11}, {'indent': 12, 'line': '            v_inner_counter := 1;', 'line_no': 12}, {'indent': 12, 'line': '            <<inner_loop>>', 'line_no': 14}, {'indent': 12, 'line': '            LOOP', 'line_no': 15}, {'indent': 16, 'line': '                INSERT INTO sales_analytics', 'line_no': 16}, {'indent': 16, 'line': '                VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'line_no': 17}, {'indent': 16, 'line': '                v_inner_counter := v_inner_counter + 1;', 'line_no': 19}, {'indent': 16, 'line': '                EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20}, {'indent': 12, 'line': '            END LOOP inner_loop;', 'line_no': 21}, {'indent': 12, 'line': '            v_outer_counter := v_outer_counter + 1;', 'line_no': 23}, {'indent': 12, 'line': '            EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24}, {'indent': 8, 'line': '        END LOOP outer_loop;', 'line_no': 25}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 26}]
2025-09-03 04:09:43,005 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,005 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    DECLARE', 'line_no': 5}
2025-09-03 04:09:43,005 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,005 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        v_outer_counter NUMBER := 1;', 'line_no': 6}
2025-09-03 04:09:43,005 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,005 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        v_inner_counter NUMBER;', 'line_no': 7}
2025-09-03 04:09:43,006 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,015 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        <<outer_loop>>', 'line_no': 10}, {'indent': 8, 'line': '        LOOP', 'line_no': 11}, {'indent': 12, 'line': '            v_inner_counter := 1;', 'line_no': 12}, {'indent': 12, 'line': '            <<inner_loop>>', 'line_no': 14}, {'indent': 12, 'line': '            LOOP', 'line_no': 15}, {'indent': 16, 'line': '                INSERT INTO sales_analytics', 'line_no': 16}, {'indent': 16, 'line': '                VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'line_no': 17}, {'indent': 16, 'line': '                v_inner_counter := v_inner_counter + 1;', 'line_no': 19}, {'indent': 16, 'line': '                EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20}, {'indent': 12, 'line': '            END LOOP inner_loop;', 'line_no': 21}, {'indent': 12, 'line': '            v_outer_counter := v_outer_counter + 1;', 'line_no': 23}, {'indent': 12, 'line': '            EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24}, {'indent': 8, 'line': '        END LOOP outer_loop;', 'line_no': 25}]
2025-09-03 04:09:43,015 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,015 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        <<outer_loop>>', 'line_no': 10}
2025-09-03 04:09:43,015 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,015 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        LOOP', 'line_no': 11}
2025-09-03 04:09:43,015 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,015 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            v_inner_counter := 1;', 'line_no': 12}
2025-09-03 04:09:43,015 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,015 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            <<inner_loop>>', 'line_no': 14}
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            LOOP', 'line_no': 15}
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                INSERT INTO sales_analytics', 'line_no': 16}
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'line_no': 17}
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                v_inner_counter := v_inner_counter + 1;', 'line_no': 19}
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20}
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            END LOOP inner_loop;', 'line_no': 21}
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            v_outer_counter := v_outer_counter + 1;', 'line_no': 23}
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24}
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:43,016 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        END LOOP outer_loop;', 'line_no': 25}
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 4, 'line': '    DECLARE', 'line_no': 5}, {'indent': 8, 'line': '        v_outer_counter NUMBER := 1;', 'line_no': 6}, {'indent': 8, 'line': '        v_inner_counter NUMBER;', 'line_no': 7}, {'type': 'begin_end', 'begin_line_no': 8, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        <<outer_loop>>', 'line_no': 10}, {'indent': 8, 'line': '        LOOP', 'line_no': 11}, {'indent': 12, 'line': '            v_inner_counter := 1;', 'line_no': 12}, {'indent': 12, 'line': '            <<inner_loop>>', 'line_no': 14}, {'indent': 12, 'line': '            LOOP', 'line_no': 15}, {'indent': 16, 'line': '                INSERT INTO sales_analytics', 'line_no': 16}, {'indent': 16, 'line': '                VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'line_no': 17}, {'indent': 16, 'line': '                v_inner_counter := v_inner_counter + 1;', 'line_no': 19}, {'indent': 16, 'line': '                EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20}, {'indent': 12, 'line': '            END LOOP inner_loop;', 'line_no': 21}, {'indent': 12, 'line': '            v_outer_counter := v_outer_counter + 1;', 'line_no': 23}, {'indent': 12, 'line': '            EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24}, {'indent': 8, 'line': '        END LOOP outer_loop;', 'line_no': 25}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 26}]
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     DECLARE || 5 || 4
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         v_outer_counter NUMBER := 1; || 6 || 8
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 6 || assignment
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 6 || assignment
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'v_outer_counter NUMBER', 'assignment_operator': ':=', 'expression': '1;', 'assignment_line_no': 6, 'assignment_indent': 8}
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         v_inner_counter NUMBER; || 7 || 8
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 3
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        <<outer_loop>>', 'line_no': 10}, {'indent': 8, 'line': '        LOOP', 'line_no': 11}, {'indent': 12, 'line': '            v_inner_counter := 1;', 'line_no': 12}, {'indent': 12, 'line': '            <<inner_loop>>', 'line_no': 14}, {'indent': 12, 'line': '            LOOP', 'line_no': 15}, {'indent': 16, 'line': '                INSERT INTO sales_analytics', 'line_no': 16}, {'indent': 16, 'line': '                VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'line_no': 17}, {'indent': 16, 'line': '                v_inner_counter := v_inner_counter + 1;', 'line_no': 19}, {'indent': 16, 'line': '                EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20}, {'indent': 12, 'line': '            END LOOP inner_loop;', 'line_no': 21}, {'indent': 12, 'line': '            v_outer_counter := v_outer_counter + 1;', 'line_no': 23}, {'indent': 12, 'line': '            EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24}, {'indent': 8, 'line': '        END LOOP outer_loop;', 'line_no': 25}]
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         <<outer_loop>> || 10 || 8
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         LOOP || 11 || 8
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             v_inner_counter := 1; || 12 || 12
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 12 || assignment
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 12 || assignment
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': '1;', 'assignment_line_no': 12, 'assignment_indent': 12}
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 3
2025-09-03 04:09:43,017 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             <<inner_loop>> || 14 || 12
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 4
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             LOOP || 15 || 12
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 5
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 INSERT INTO sales_analytics || 16 || 16
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 16 || insert_statement || INSERT
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 16 || insert_statement
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 16 || insert_statement
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 17 || insert_statement
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - INSERT INTO sales_analytics VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 v_inner_counter := v_inner_counter + 1; || 19 || 16
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 19 || assignment
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 19 || assignment
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': 'v_inner_counter + 1;', 'assignment_line_no': 19, 'assignment_indent': 16}
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 8
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 EXIT inner_loop WHEN v_inner_counter > 3; || 20 || 16
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 9
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             END LOOP inner_loop; || 21 || 12
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 10
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             v_outer_counter := v_outer_counter + 1; || 23 || 12
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 23 || assignment
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 23 || assignment
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'v_outer_counter', 'assignment_operator': ':=', 'expression': 'v_outer_counter + 1;', 'assignment_line_no': 23, 'assignment_indent': 12}
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 11
2025-09-03 04:09:43,018 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             EXIT outer_loop WHEN v_outer_counter > 5; || 24 || 12
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 12
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         END LOOP outer_loop; || 25 || 8
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 4, 'begin_indent': 0, 'begin_end_statements': [{'indent': 4, 'line': '    DECLARE', 'line_no': 5}, {'type': 'assignment', 'variable_name': 'v_outer_counter NUMBER', 'assignment_operator': ':=', 'expression': '1;', 'assignment_line_no': 6, 'assignment_indent': 8}, {'indent': 8, 'line': '        v_inner_counter NUMBER;', 'line_no': 7}, {'type': 'begin_end', 'begin_line_no': 8, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        <<outer_loop>>', 'line_no': 10}, {'indent': 8, 'line': '        LOOP', 'line_no': 11}, {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': '1;', 'assignment_line_no': 12, 'assignment_indent': 12}, {'indent': 12, 'line': '            <<inner_loop>>', 'line_no': 14}, {'indent': 12, 'line': '            LOOP', 'line_no': 15}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO sales_analytics VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'statement_line_no': 16, 'statement_indent': 16}, {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': 'v_inner_counter + 1;', 'assignment_line_no': 19, 'assignment_indent': 16}, {'indent': 16, 'line': '                EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20}, {'indent': 12, 'line': '            END LOOP inner_loop;', 'line_no': 21}, {'type': 'assignment', 'variable_name': 'v_outer_counter', 'assignment_operator': ':=', 'expression': 'v_outer_counter + 1;', 'assignment_line_no': 23, 'assignment_indent': 12}, {'indent': 12, 'line': '            EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24}, {'indent': 8, 'line': '        END LOOP outer_loop;', 'line_no': 25}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 26}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 27}
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -     DECLARE
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'v_outer_counter NUMBER', 'assignment_operator': ':=', 'expression': '1;', 'assignment_line_no': 6, 'assignment_indent': 8}
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -         v_inner_counter NUMBER;
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 8, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        <<outer_loop>>', 'line_no': 10}, {'indent': 8, 'line': '        LOOP', 'line_no': 11}, {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': '1;', 'assignment_line_no': 12, 'assignment_indent': 12}, {'indent': 12, 'line': '            <<inner_loop>>', 'line_no': 14}, {'indent': 12, 'line': '            LOOP', 'line_no': 15}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO sales_analytics VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'statement_line_no': 16, 'statement_indent': 16}, {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': 'v_inner_counter + 1;', 'assignment_line_no': 19, 'assignment_indent': 16}, {'indent': 16, 'line': '                EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20}, {'indent': 12, 'line': '            END LOOP inner_loop;', 'line_no': 21}, {'type': 'assignment', 'variable_name': 'v_outer_counter', 'assignment_operator': ':=', 'expression': 'v_outer_counter + 1;', 'assignment_line_no': 23, 'assignment_indent': 12}, {'indent': 12, 'line': '            EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24}, {'indent': 8, 'line': '        END LOOP outer_loop;', 'line_no': 25}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 26}
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -         <<outer_loop>>
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -         LOOP
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': '1;', 'assignment_line_no': 12, 'assignment_indent': 12}
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -             <<inner_loop>>
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -             LOOP
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO sales_analytics VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'statement_line_no': 16, 'statement_indent': 16}
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': 'v_inner_counter + 1;', 'assignment_line_no': 19, 'assignment_indent': 16}
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -                 EXIT inner_loop WHEN v_inner_counter > 3;
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -             END LOOP inner_loop;
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'v_outer_counter', 'assignment_operator': ':=', 'expression': 'v_outer_counter + 1;', 'assignment_line_no': 23, 'assignment_indent': 12}
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -             EXIT outer_loop WHEN v_outer_counter > 5;
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -         END LOOP outer_loop;
2025-09-03 04:09:43,019 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list [{'indent': 4, 'line': 'DECLARE', 'line_no': 5, 'filename': 'eee.sql'}, {'indent': 8, 'line': 'v_inner_counter NUMBER;', 'line_no': 7, 'filename': 'eee.sql'}, {'indent': 8, 'line': '<<outer_loop>>', 'line_no': 10, 'filename': 'eee.sql'}, {'indent': 8, 'line': 'LOOP', 'line_no': 11, 'filename': 'eee.sql'}, {'indent': 12, 'line': '<<inner_loop>>', 'line_no': 14, 'filename': 'eee.sql'}, {'indent': 12, 'line': 'LOOP', 'line_no': 15, 'filename': 'eee.sql'}, {'indent': 16, 'line': 'EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20, 'filename': 'eee.sql'}, {'indent': 12, 'line': 'END LOOP inner_loop;', 'line_no': 21, 'filename': 'eee.sql'}, {'indent': 12, 'line': 'EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24, 'filename': 'eee.sql'}, {'indent': 8, 'line': 'END LOOP outer_loop;', 'line_no': 25, 'filename': 'eee.sql'}]
2025-09-03 04:09:43,028 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:    filename                                               line  line_no  indent
0   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
1   zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
2   zzz.sql                              ELSIF (DELETING) THEN      192     8.0
3   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
4   zzz.sql                                            END IF;      196     8.0
5   eee.sql                                            DECLARE        5     4.0
6   eee.sql                            v_inner_counter NUMBER;        7     8.0
7   eee.sql                                     <<outer_loop>>       10     8.0
8   eee.sql                                               LOOP       11     8.0
9   eee.sql                                     <<inner_loop>>       14    12.0
10  eee.sql                                               LOOP       15    12.0
11  eee.sql          EXIT inner_loop WHEN v_inner_counter > 3;       20    16.0
12  eee.sql                               END LOOP inner_loop;       21    12.0
13  eee.sql          EXIT outer_loop WHEN v_outer_counter > 5;       24    12.0
14  eee.sql                               END LOOP outer_loop;       25     8.0
2025-09-03 04:09:43,028 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 04:09:43,028 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.03324246406555176 seconds
2025-09-03 04:09:43,028 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 04:09:43,029 - root - DEBUG - [common.py:105] - File details: eee.sql
2025-09-03 04:09:43,029 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 04:09:43,029 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 0 vars, 0 consts, 0 excs, 1 comments
2025-09-03 04:09:43,029 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 04:09:43,029 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:43,029 - root - DEBUG - [common.py:105] - File details in metadata: eee.sql (849 bytes)
2025-09-03 04:09:43,029 - root - DEBUG - [common.py:105] - Analysis statistics: 0 vars, 0 consts, 0 excs, 1 comments
2025-09-03 04:09:43,029 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\eee_analysis.json
2025-09-03 04:09:43,030 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\eee_analysis.json
2025-09-03 04:09:43,031 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger eee.sql ===
2025-09-03 04:09:43,031 - root - DEBUG - [common.py:105] - ✓ Created eee_analysis.json
2025-09-03 04:09:43,031 - root - DEBUG - [common.py:105] - === Processing file 3/10: trigger1.sql ===
2025-09-03 04:09:43,031 - root - DEBUG - [common.py:105] - Source path: files/oracle\trigger1.sql
2025-09-03 04:09:43,032 - root - DEBUG - [common.py:105] - Output path: files/format_json\trigger1_analysis.json
2025-09-03 04:09:43,032 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger trigger1.sql ===
2025-09-03 04:09:43,032 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 04:09:43,032 - root - DEBUG - [main.py:245] - Reading SQL file: files/oracle\trigger1.sql
2025-09-03 04:09:43,032 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 25 characters of SQL
2025-09-03 04:09:43,033 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 04:09:43,033 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 04:09:43,033 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 04:09:43,033 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 04:09:43,034 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 801 total, 214 with semicolons, 69 empty lines skipped
2025-09-03 04:09:43,034 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 04:09:43,034 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 801 lines cleaned
2025-09-03 04:09:43,035 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 04:09:43,035 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 63 comments extracted, 748 lines cleaned
2025-09-03 04:09:43,035 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 04:09:43,035 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 1
2025-09-03 04:09:43,035 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 51
2025-09-03 04:09:43,035 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 1-50
2025-09-03 04:09:43,035 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: INVALID_THEME_NO
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: DELETE_NO_MORE_POSSIBLE
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: THEME_NO_ONLY_INSERT
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: DESCRIPTION_TOO_LONG
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: THEME_DESC_PROPOSAL_TOO_LONG
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: THEME_DESC_ALT_TOO_LONG
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: THEME_NO_CANNOT_BE_INSERTED
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ONLYONEOFFICIALCHANGEPERDAY
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: INSERTSMUSTBEOFFICIAL
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: THEMEDESCRIPTIONMANDATORY
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: THEME_DESC_NOT_UNIQUE
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: IN_PREP_NOT_PORTF_PROJ
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: IN_PREP_NOT_CLOSED
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: INVALID_MOLECULE_ID
2025-09-03 04:09:43,036 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: SEC_MOL_LIST_NOT_EMPTY
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ADMIN_UPDATE_ONLY
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: PORTF_PROJ_MOL_CRE_ERR
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: DEBUGGING
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_COUNTER
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_CODE
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_ODG_NO
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_RESGRP_CD
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_RESLIN_CD
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_STATUS_CD
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_DBA_CD
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_PORTF_PROJ_CD
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_DESCRIPTION
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_RESLIN_DESC
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_THEME_DESC_LENGTH
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_D_REGISTRAT_DATE
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_D_INS_DATE
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_FUTURE_REGISTRAT
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_VALID_TO
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_USERID
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_IS_ADMIN_CNT
2025-09-03 04:09:43,037 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_SEC_MOL_CNT
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_MOLECULE_ID
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_MOLECULE_RG_NO
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_MOLEC_IN_LIC_PRTNR
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_NEW_RG_NO
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_COMPARATOR_IND
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_THEME_DESC_PROPOSAL
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_SHORT_NAME
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:446] - Processed constant: C_MOLECULE_TYPE_ID
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:446] - Processed constant: C_PHARMACOLOGICAL_TYPE_ID
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_EVOLVED_NMP_CNT
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_TRADEMARK_NO
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_MOLECULE_TYPE_ID
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_PHARMACOLOGICAL_TYPE_ID
2025-09-03 04:09:43,038 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'ADMIN_UPDATE_ONLY', 'when_line_no': 825, 'when_indent': 3, 'then_line_no': 825, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20115, 'MDM_V_THEMES_IOF');", 'line_no': 826}]}, {'type': 'exception_handler', 'exception_name': 'IN_PREP_NOT_PORTF_PROJ', 'when_line_no': 827, 'when_indent': 3, 'then_line_no': 827, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20116, 'MDM_V_THEMES_IOF');", 'line_no': 828}]}, {'type': 'exception_handler', 'exception_name': 'IN_PREP_NOT_CLOSED', 'when_line_no': 829, 'when_indent': 3, 'then_line_no': 829, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20117, 'MDM_V_THEMES_IOF');", 'line_no': 830}]}, {'type': 'exception_handler', 'exception_name': 'INVALID_MOLECULE_ID', 'when_line_no': 831, 'when_indent': 3, 'then_line_no': 831, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20118, 'This is not a valid Molecule ID');", 'line_no': 832}]}, {'type': 'exception_handler', 'exception_name': 'SEC_MOL_LIST_NOT_EMPTY', 'when_line_no': 833, 'when_indent': 3, 'then_line_no': 833, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20119, 'MDM_V_THEMES_IOF');", 'line_no': 834}]}, {'type': 'exception_handler', 'exception_name': 'INVALID_THEME_NO', 'when_line_no': 835, 'when_indent': 3, 'then_line_no': 835, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20101, 'This is not a valid Theme No');", 'line_no': 836}]}, {'type': 'exception_handler', 'exception_name': 'DELETE_NO_MORE_POSSIBLE', 'when_line_no': 837, 'when_indent': 3, 'then_line_no': 837, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted');", 'line_no': 838}]}, {'type': 'exception_handler', 'exception_name': 'THEME_NO_ONLY_INSERT', 'when_line_no': 839, 'when_indent': 3, 'then_line_no': 839, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Theme No cannot be updated');", 'line_no': 840}]}, {'type': 'exception_handler', 'exception_name': 'DESCRIPTION_TOO_LONG', 'when_line_no': 841, 'when_indent': 3, 'then_line_no': 841, 'exception_statements': [{'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Theme Description "\'', 'line_no': 842}, {'indent': 38, 'line': '                                      || V_DESCRIPTION', 'line_no': 843}, {'indent': 38, 'line': '                                      || \'" is too long\');', 'line_no': 844}]}, {'type': 'exception_handler', 'exception_name': 'THEME_DESC_PROPOSAL_TOO_LONG', 'when_line_no': 845, 'when_indent': 3, 'then_line_no': 845, 'exception_statements': [{'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Short Description Proposal "\'', 'line_no': 846}, {'indent': 38, 'line': '                                      || :OLD.THEME_DESC_PROPOSAL', 'line_no': 847}, {'indent': 38, 'line': '                                      || \'" is too long\');', 'line_no': 848}]}, {'type': 'exception_handler', 'exception_name': 'THEME_DESC_ALT_TOO_LONG', 'when_line_no': 849, 'when_indent': 3, 'then_line_no': 849, 'exception_statements': [{'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Downstream Theme Description "\'', 'line_no': 850}, {'indent': 38, 'line': '                                      || :OLD.THEME_DESC_ALT', 'line_no': 851}, {'indent': 38, 'line': '                                      || \'" is too long\');', 'line_no': 852}]}, {'type': 'exception_handler', 'exception_name': 'THEME_NO_CANNOT_BE_INSERTED', 'when_line_no': 853, 'when_indent': 3, 'then_line_no': 853, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'This Theme No already exists');", 'line_no': 854}]}, {'type': 'exception_handler', 'exception_name': 'ONLYONEOFFICIALCHANGEPERDAY', 'when_line_no': 855, 'when_indent': 3, 'then_line_no': 855, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Official Change for this Theme No and Day already exists');", 'line_no': 856}]}, {'type': 'exception_handler', 'exception_name': 'INSERTSMUSTBEOFFICIAL', 'when_line_no': 857, 'when_indent': 3, 'then_line_no': 857, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'New Themes can only be inserted by Official Changes');", 'line_no': 858}]}, {'type': 'exception_handler', 'exception_name': 'THEMEDESCRIPTIONMANDATORY', 'when_line_no': 859, 'when_indent': 3, 'then_line_no': 859, 'exception_statements': [{'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\' );', 'line_no': 860}]}, {'type': 'exception_handler', 'exception_name': 'THEME_DESC_NOT_UNIQUE', 'when_line_no': 861, 'when_indent': 3, 'then_line_no': 861, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'This Theme Description already exists');", 'line_no': 862}]}, {'type': 'exception_handler', 'exception_name': 'PORTF_PROJ_MOL_CRE_ERR', 'when_line_no': 863, 'when_indent': 3, 'then_line_no': 863, 'exception_statements': [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR( -20120, 'MDM_V_THEMES_IOF');", 'line_no': 864}]}, {'type': 'exception_handler', 'exception_name': 'DEBUGGING', 'when_line_no': 865, 'when_indent': 3, 'then_line_no': 865, 'exception_statements': [{'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(', 'line_no': 866}, {'indent': 9, 'line': '         -20900,', 'line_no': 867}, {'indent': 7, 'line': "       'Debug in Themes IOF standard'", 'line_no': 868}, {'indent': 7, 'line': '       );', 'line_no': 869}]}]
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1591] - Begin line: {'indent': 6, 'line': '      BEGIN', 'line_no': 116} 52
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1598] - Exception line: {'indent': 6, 'line': '      EXCEPTION', 'line_no': 126} 62
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1601] - End line: {'indent': 6, 'line': '      END;', 'line_no': 129} 65
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}]}]
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1591] - Begin line: {'indent': 12, 'line': '            BEGIN', 'line_no': 771} 602
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1598] - Exception line: {'indent': 12, 'line': '            EXCEPTION', 'line_no': 781} 612
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1601] - End line: {'indent': 12, 'line': '            END;', 'line_no': 784} 615
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}]
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1591] - Begin line: {'indent': 3, 'line': '   BEGIN', 'line_no': 805} 634
2025-09-03 04:09:43,039 - root - DEBUG - [OracleTriggerAnalyzer.py:1601] - End line: {'indent': 3, 'line': '   END;', 'line_no': 823} 649
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1389] - case_i: 249 i: 276
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1460] - line_info : {'indent': 9, 'line': '         WHEN 4 THEN', 'line_no': 250}
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 9, 'line': '         WHEN 4 THEN', 'line_no': 250}, {'indent': 12, 'line': '            IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0', 'line_no': 251}, {'indent': 12, 'line': '            AND 9', 'line_no': 252}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0', 'line_no': 253}, {'indent': 12, 'line': '            AND 9', 'line_no': 254}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0', 'line_no': 255}, {'indent': 12, 'line': '            AND 9', 'line_no': 256}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0', 'line_no': 257}, {'indent': 12, 'line': '            AND 9) THEN', 'line_no': 258}, {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}, {'indent': 12, 'line': '            END IF;', 'line_no': 260}]
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 250 then_i: 250
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 9, 'line': '         WHEN 4 THEN', 'line_no': 250}, {'indent': 12, 'line': '            IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0', 'line_no': 251}, {'indent': 12, 'line': '            AND 9', 'line_no': 252}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0', 'line_no': 253}, {'indent': 12, 'line': '            AND 9', 'line_no': 254}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0', 'line_no': 255}, {'indent': 12, 'line': '            AND 9', 'line_no': 256}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0', 'line_no': 257}, {'indent': 12, 'line': '            AND 9) THEN', 'line_no': 258}, {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}, {'indent': 12, 'line': '            END IF;', 'line_no': 260}]
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 9, 'line': '         WHEN 5 THEN', 'line_no': 261}, {'indent': 12, 'line': '            IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0', 'line_no': 262}, {'indent': 12, 'line': '            AND 9', 'line_no': 263}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0', 'line_no': 264}, {'indent': 12, 'line': '            AND 9', 'line_no': 265}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0', 'line_no': 266}, {'indent': 12, 'line': '            AND 9', 'line_no': 267}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0', 'line_no': 268}, {'indent': 12, 'line': '            AND 9', 'line_no': 269}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0', 'line_no': 270}, {'indent': 12, 'line': '            AND 9) THEN', 'line_no': 271}, {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}, {'indent': 12, 'line': '            END IF;', 'line_no': 273}]
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 261 then_i: 261
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 9, 'line': '         WHEN 5 THEN', 'line_no': 261}, {'indent': 12, 'line': '            IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0', 'line_no': 262}, {'indent': 12, 'line': '            AND 9', 'line_no': 263}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0', 'line_no': 264}, {'indent': 12, 'line': '            AND 9', 'line_no': 265}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0', 'line_no': 266}, {'indent': 12, 'line': '            AND 9', 'line_no': 267}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0', 'line_no': 268}, {'indent': 12, 'line': '            AND 9', 'line_no': 269}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0', 'line_no': 270}, {'indent': 12, 'line': '            AND 9) THEN', 'line_no': 271}, {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}, {'indent': 12, 'line': '            END IF;', 'line_no': 273}]
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1485] - {'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1389] - case_i: 586 i: 637
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1460] - line_info : {'indent': 9, 'line': '         WHEN :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL THEN', 'line_no': 587}
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 9, 'line': '         WHEN :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL THEN', 'line_no': 587}, {'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 587 then_i: 587
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 9, 'line': '         WHEN :OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL THEN', 'line_no': 587}, {'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]
2025-09-03 04:09:43,040 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 9, 'line': '         WHEN :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL THEN', 'line_no': 601}, {'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 601 then_i: 601
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 9, 'line': '         WHEN :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL THEN', 'line_no': 601}, {'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 9, 'line': '         WHEN :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL THEN', 'line_no': 612}, {'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'indent': 12, 'line': '            IF (V_SEC_MOL_CNT > 0) THEN', 'line_no': 621}, {'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}, {'indent': 12, 'line': '            ELSE', 'line_no': 623}, {'indent': 15, 'line': '               UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 626}, {'indent': 15, 'line': '               SET', 'line_no': 627}, {'indent': 18, 'line': "                  A.VALID_IND = 'N'", 'line_no': 628}, {'indent': 15, 'line': '               WHERE', 'line_no': 629}, {'indent': 18, 'line': '                  A.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 630}, {'indent': 18, 'line': '                  AND A.THEME_NO = :NEW.THEME_NO', 'line_no': 631}, {'indent': 18, 'line': '                  AND A.MOLECULE_SEQ_NO = 1', 'line_no': 632}, {'indent': 18, 'line': "                  AND A.VALID_IND = 'Y';", 'line_no': 633}, {'indent': 12, 'line': '            END IF;', 'line_no': 634}]
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 612 then_i: 612
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 9, 'line': '         WHEN :OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL THEN', 'line_no': 612}, {'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'indent': 12, 'line': '            IF (V_SEC_MOL_CNT > 0) THEN', 'line_no': 621}, {'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}, {'indent': 12, 'line': '            ELSE', 'line_no': 623}, {'indent': 15, 'line': '               UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 626}, {'indent': 15, 'line': '               SET', 'line_no': 627}, {'indent': 18, 'line': "                  A.VALID_IND = 'N'", 'line_no': 628}, {'indent': 15, 'line': '               WHERE', 'line_no': 629}, {'indent': 18, 'line': '                  A.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 630}, {'indent': 18, 'line': '                  AND A.THEME_NO = :NEW.THEME_NO', 'line_no': 631}, {'indent': 18, 'line': '                  AND A.MOLECULE_SEQ_NO = 1', 'line_no': 632}, {'indent': 18, 'line': "                  AND A.VALID_IND = 'Y';", 'line_no': 633}, {'indent': 12, 'line': '            END IF;', 'line_no': 634}]
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1485] - {'indent': 12, 'line': '            NULL;', 'line_no': 636}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   SELECT', 'line_no': 54}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID', 'line_no': 55}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   FROM', 'line_no': 56}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      DUAL;', 'line_no': 57}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   SELECT', 'line_no': 61}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      COUNT(*) INTO V_IS_ADMIN_CNT', 'line_no': 62}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   FROM', 'line_no': 63}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      TXO_USERS_ROLES_MAP', 'line_no': 64}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   WHERE', 'line_no': 65}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      ROLE_ID IN (315)', 'line_no': 66}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      AND USERID = V_USERID;', 'line_no': 67}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   SELECT', 'line_no': 70}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      NEW_RG_NO INTO V_NEW_RG_NO', 'line_no': 71}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   FROM', 'line_no': 72}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      (', 'line_no': 73}
2025-09-03 04:09:43,041 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 74}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            NEW_RG_NO', 'line_no': 75}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         FROM', 'line_no': 76}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            (', 'line_no': 77}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               SELECT', 'line_no': 78}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': '                  ROWNUM AS NEW_RG_NO', 'line_no': 79}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               FROM', 'line_no': 80}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': '                  DUAL', 'line_no': 81}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               CONNECT BY', 'line_no': 82}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': '                  1 = 1', 'line_no': 83}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': '                  AND ROWNUM <= 6999', 'line_no': 84}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            )', 'line_no': 85}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 86}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            NEW_RG_NO > 5999 MINUS', 'line_no': 87}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 88}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               TO_NUMBER(RG_NO)', 'line_no': 89}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FROM', 'line_no': 90}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               V_THEME_MOLECULES', 'line_no': 91}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      )', 'line_no': 92}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   WHERE', 'line_no': 93}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      ROWNUM = 1;', 'line_no': 94}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': "   IF (:NEW.IN_PREP_IND = 'Y')", 'line_no': 95}
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 95
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 95 i: 111
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 15
2025-09-03 04:09:43,042 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 3, 'line': '   THEN', 'line_no': 96}
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 6, 'line': "      IF (:NEW.PORTF_PROJ_CD <> 'Y') THEN", 'line_no': 97}, {'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}, {'indent': 6, 'line': '      END IF;', 'line_no': 99}, {'indent': 6, 'line': "      IF (:NEW.STATUS_DESC <> 'CLOSED'", 'line_no': 101}, {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 102}, {'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}, {'indent': 6, 'line': '      END IF;', 'line_no': 104}, {'indent': 6, 'line': '      IF (:NEW.MOLECULE_ID IS NULL) THEN', 'line_no': 106}, {'indent': 9, 'line': "         TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme '", 'line_no': 107}, {'indent': 30, 'line': '                              || :NEW.THEME_NO', 'line_no': 108}, {'indent': 30, 'line': "                              || '!');", 'line_no': 109}, {'indent': 6, 'line': '      END IF;', 'line_no': 110}]
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.IN_PREP_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 95, 'then_line_no': 96, 'if_indent': 3, 'end_if_line_no': 111, 'then_statements': [{'indent': 6, 'line': "      IF (:NEW.PORTF_PROJ_CD <> 'Y') THEN", 'line_no': 97}, {'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}, {'indent': 6, 'line': '      END IF;', 'line_no': 99}, {'indent': 6, 'line': "      IF (:NEW.STATUS_DESC <> 'CLOSED'", 'line_no': 101}, {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 102}, {'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}, {'indent': 6, 'line': '      END IF;', 'line_no': 104}, {'indent': 6, 'line': '      IF (:NEW.MOLECULE_ID IS NULL) THEN', 'line_no': 106}, {'indent': 9, 'line': "         TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme '", 'line_no': 107}, {'indent': 30, 'line': '                              || :NEW.THEME_NO', 'line_no': 108}, {'indent': 30, 'line': "                              || '!');", 'line_no': 109}, {'indent': 6, 'line': '      END IF;', 'line_no': 110}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (:NEW.PORTF_PROJ_CD <> 'Y') THEN", 'line_no': 97}
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 97
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 97 i: 99
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}]
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.PORTF_PROJ_CD <> 'Y') ", 'type': 'if_else', 'if_line_no': 97, 'then_line_no': 97, 'if_indent': 6, 'end_if_line_no': 99, 'then_statements': [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (:NEW.STATUS_DESC <> 'CLOSED'", 'line_no': 101}
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 101
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 101 i: 104
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 4
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 102}
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}]
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 101, 'then_line_no': 102, 'if_indent': 6, 'end_if_line_no': 104, 'then_statements': [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (:NEW.MOLECULE_ID IS NULL) THEN', 'line_no': 106}
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 106
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 106 i: 110
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 5
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': "         TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme '", 'line_no': 107}, {'indent': 30, 'line': '                              || :NEW.THEME_NO', 'line_no': 108}, {'indent': 30, 'line': "                              || '!');", 'line_no': 109}]
2025-09-03 04:09:43,043 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 106, 'then_line_no': 106, 'if_indent': 6, 'end_if_line_no': 110, 'then_statements': [{'indent': 9, 'line': "         TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme '", 'line_no': 107}, {'indent': 30, 'line': '                              || :NEW.THEME_NO', 'line_no': 108}, {'indent': 30, 'line': "                              || '!');", 'line_no': 109}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': "         TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme '", 'line_no': 107}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 30, 'line': '                              || :NEW.THEME_NO', 'line_no': 108}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 30, 'line': "                              || '!');", 'line_no': 109}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 115}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 115
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 115 i: 145
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 15
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 117}, {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}, {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}, {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}, {'indent': 9, 'line': '         FROM', 'line_no': 121}, {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}, {'indent': 9, 'line': '         WHERE', 'line_no': 123}, {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}, {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}]}], 'exception_line_no': 126, 'end_line_no': 129}, {'indent': 6, 'line': '      IF (V_MOLECULE_RG_NO IS NULL) THEN', 'line_no': 131}, {'indent': 9, 'line': "         IF (V_COMPARATOR_IND = 'Y') THEN", 'line_no': 132}, {'indent': 12, 'line': '            NULL;', 'line_no': 133}, {'indent': 9, 'line': '         ELSE', 'line_no': 134}, {'indent': 12, 'line': '            UPDATE V_THEME_MOLECULES', 'line_no': 137}, {'indent': 12, 'line': '            SET', 'line_no': 138}, {'indent': 15, 'line': '               RG_NO = V_NEW_RG_NO', 'line_no': 139}, {'indent': 12, 'line': '            WHERE', 'line_no': 140}, {'indent': 15, 'line': '               MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 141}, {'indent': 12, 'line': '            v_bonus := CASE WHEN :NEW.salary > 50000 THEN :NEW.salary * 0.1 ELSE 0 END;', 'line_no': 142}, {'indent': 9, 'line': '         END IF;', 'line_no': 143}, {'indent': 6, 'line': '      END IF;', 'line_no': 144}]
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 115, 'then_line_no': 115, 'if_indent': 3, 'end_if_line_no': 145, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 117}, {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}, {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}, {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}, {'indent': 9, 'line': '         FROM', 'line_no': 121}, {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}, {'indent': 9, 'line': '         WHERE', 'line_no': 123}, {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}, {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}]}], 'exception_line_no': 126, 'end_line_no': 129}, {'indent': 6, 'line': '      IF (V_MOLECULE_RG_NO IS NULL) THEN', 'line_no': 131}, {'indent': 9, 'line': "         IF (V_COMPARATOR_IND = 'Y') THEN", 'line_no': 132}, {'indent': 12, 'line': '            NULL;', 'line_no': 133}, {'indent': 9, 'line': '         ELSE', 'line_no': 134}, {'indent': 12, 'line': '            UPDATE V_THEME_MOLECULES', 'line_no': 137}, {'indent': 12, 'line': '            SET', 'line_no': 138}, {'indent': 15, 'line': '               RG_NO = V_NEW_RG_NO', 'line_no': 139}, {'indent': 12, 'line': '            WHERE', 'line_no': 140}, {'indent': 15, 'line': '               MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 141}, {'indent': 12, 'line': '            v_bonus := CASE WHEN :NEW.salary > 50000 THEN :NEW.salary * 0.1 ELSE 0 END;', 'line_no': 142}, {'indent': 9, 'line': '         END IF;', 'line_no': 143}, {'indent': 6, 'line': '      END IF;', 'line_no': 144}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 117}, {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}, {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}, {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}, {'indent': 9, 'line': '         FROM', 'line_no': 121}, {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}, {'indent': 9, 'line': '         WHERE', 'line_no': 123}, {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}, {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}]}], 'exception_line_no': 126, 'end_line_no': 129}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 117}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         FROM', 'line_no': 121}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 123}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (V_MOLECULE_RG_NO IS NULL) THEN', 'line_no': 131}
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 131
2025-09-03 04:09:43,044 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 131 i: 144
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 12
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': "         IF (V_COMPARATOR_IND = 'Y') THEN", 'line_no': 132}, {'indent': 12, 'line': '            NULL;', 'line_no': 133}, {'indent': 9, 'line': '         ELSE', 'line_no': 134}, {'indent': 12, 'line': '            UPDATE V_THEME_MOLECULES', 'line_no': 137}, {'indent': 12, 'line': '            SET', 'line_no': 138}, {'indent': 15, 'line': '               RG_NO = V_NEW_RG_NO', 'line_no': 139}, {'indent': 12, 'line': '            WHERE', 'line_no': 140}, {'indent': 15, 'line': '               MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 141}, {'indent': 12, 'line': '            v_bonus := CASE WHEN :NEW.salary > 50000 THEN :NEW.salary * 0.1 ELSE 0 END;', 'line_no': 142}, {'indent': 9, 'line': '         END IF;', 'line_no': 143}]
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (V_MOLECULE_RG_NO IS NULL) ', 'type': 'if_else', 'if_line_no': 131, 'then_line_no': 131, 'if_indent': 6, 'end_if_line_no': 144, 'then_statements': [{'indent': 9, 'line': "         IF (V_COMPARATOR_IND = 'Y') THEN", 'line_no': 132}, {'indent': 12, 'line': '            NULL;', 'line_no': 133}, {'indent': 9, 'line': '         ELSE', 'line_no': 134}, {'indent': 12, 'line': '            UPDATE V_THEME_MOLECULES', 'line_no': 137}, {'indent': 12, 'line': '            SET', 'line_no': 138}, {'indent': 15, 'line': '               RG_NO = V_NEW_RG_NO', 'line_no': 139}, {'indent': 12, 'line': '            WHERE', 'line_no': 140}, {'indent': 15, 'line': '               MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 141}, {'indent': 12, 'line': '            v_bonus := CASE WHEN :NEW.salary > 50000 THEN :NEW.salary * 0.1 ELSE 0 END;', 'line_no': 142}, {'indent': 9, 'line': '         END IF;', 'line_no': 143}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': "         IF (V_COMPARATOR_IND = 'Y') THEN", 'line_no': 132}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 132
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 132 i: 143
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 10
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 133}], 'if_elses': [], 'else_statements': [[{'indent': 12, 'line': '            UPDATE V_THEME_MOLECULES', 'line_no': 137}, {'indent': 12, 'line': '            SET', 'line_no': 138}, {'indent': 15, 'line': '               RG_NO = V_NEW_RG_NO', 'line_no': 139}, {'indent': 12, 'line': '            WHERE', 'line_no': 140}, {'indent': 15, 'line': '               MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 141}, {'indent': 12, 'line': '            v_bonus := CASE WHEN :NEW.salary > 50000 THEN :NEW.salary * 0.1 ELSE 0 END;', 'line_no': 142}, {'indent': 9, 'line': '         END IF;', 'line_no': 143}]]}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            NULL;', 'line_no': 133}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 12, 'line': '            UPDATE V_THEME_MOLECULES', 'line_no': 137}, {'indent': 12, 'line': '            SET', 'line_no': 138}, {'indent': 15, 'line': '               RG_NO = V_NEW_RG_NO', 'line_no': 139}, {'indent': 12, 'line': '            WHERE', 'line_no': 140}, {'indent': 15, 'line': '               MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 141}, {'indent': 12, 'line': '            v_bonus := CASE WHEN :NEW.salary > 50000 THEN :NEW.salary * 0.1 ELSE 0 END;', 'line_no': 142}, {'indent': 9, 'line': '         END IF;', 'line_no': 143}]
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   V_ODG_NO := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);', 'line_no': 150}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   V_RESGRP_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);', 'line_no': 151}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   V_RESLIN_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);', 'line_no': 152}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   V_RESLIN_DESC := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));', 'line_no': 153}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   IF (:NEW.STATUS_DESC IS NOT NULL) THEN', 'line_no': 154}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 154
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 154 i: 163
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 10
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.STATUS_DESC IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 154, 'then_line_no': 154, 'if_indent': 3, 'end_if_line_no': 163, 'then_statements': [{'indent': 6, 'line': '      SELECT', 'line_no': 155}, {'indent': 9, 'line': '         STATUS_CD INTO V_STATUS_CD', 'line_no': 156}, {'indent': 6, 'line': '      FROM', 'line_no': 157}, {'indent': 9, 'line': '         MDM_V_THEME_STATUS', 'line_no': 158}, {'indent': 6, 'line': '      WHERE', 'line_no': 159}, {'indent': 9, 'line': '         STATE_DESC = :NEW.STATUS_DESC;', 'line_no': 160}], 'if_elses': [], 'else_statements': [[{'indent': 6, 'line': '      V_STATUS_CD := NULL;', 'line_no': 162}, {'indent': 3, 'line': '   END IF;', 'line_no': 163}]]}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      SELECT', 'line_no': 155}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         STATUS_CD INTO V_STATUS_CD', 'line_no': 156}
2025-09-03 04:09:43,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      FROM', 'line_no': 157}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         MDM_V_THEME_STATUS', 'line_no': 158}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      WHERE', 'line_no': 159}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         STATE_DESC = :NEW.STATUS_DESC;', 'line_no': 160}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 6, 'line': '      V_STATUS_CD := NULL;', 'line_no': 162}, {'indent': 3, 'line': '   END IF;', 'line_no': 163}]
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   IF (:NEW.DBA_DESC_CONCAT IS NOT NULL) THEN', 'line_no': 165}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 165
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 165 i: 176
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 12
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.DBA_DESC_CONCAT IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 165, 'then_line_no': 165, 'if_indent': 3, 'end_if_line_no': 176, 'then_statements': [{'indent': 6, 'line': '      SELECT', 'line_no': 166}, {'indent': 9, 'line': '         DBA_CD INTO V_DBA_CD', 'line_no': 167}, {'indent': 6, 'line': '      FROM', 'line_no': 168}, {'indent': 9, 'line': '         MDM_V_DISEASE_BIOLOGY_AREAS', 'line_no': 169}, {'indent': 6, 'line': '      WHERE', 'line_no': 170}, {'indent': 9, 'line': '         DBA_SHORT_DESC', 'line_no': 171}, {'indent': 9, 'line': "         || ' - '", 'line_no': 172}, {'indent': 9, 'line': '         || DBA_DESC = :NEW.DBA_DESC_CONCAT;', 'line_no': 173}], 'if_elses': [], 'else_statements': [[{'indent': 6, 'line': '      V_DBA_CD := NULL;', 'line_no': 175}, {'indent': 3, 'line': '   END IF;', 'line_no': 176}]]}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      SELECT', 'line_no': 166}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         DBA_CD INTO V_DBA_CD', 'line_no': 167}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      FROM', 'line_no': 168}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         MDM_V_DISEASE_BIOLOGY_AREAS', 'line_no': 169}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      WHERE', 'line_no': 170}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         DBA_SHORT_DESC', 'line_no': 171}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': "         || ' - '", 'line_no': 172}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         || DBA_DESC = :NEW.DBA_DESC_CONCAT;', 'line_no': 173}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 6, 'line': '      V_DBA_CD := NULL;', 'line_no': 175}, {'indent': 3, 'line': '   END IF;', 'line_no': 176}]
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);', 'line_no': 178}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': "   IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 179}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 179
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 179 i: 183
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 5
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 179, 'then_line_no': 179, 'if_indent': 3, 'end_if_line_no': 183, 'then_statements': [{'indent': 6, 'line': '      V_TRADEMARK_NO := :NEW.TRADEMARK_NO;', 'line_no': 180}], 'if_elses': [], 'else_statements': [[{'indent': 6, 'line': '      V_TRADEMARK_NO := :OLD.TRADEMARK_NO;', 'line_no': 182}, {'indent': 3, 'line': '   END IF;', 'line_no': 183}]]}
2025-09-03 04:09:43,046 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      V_TRADEMARK_NO := :NEW.TRADEMARK_NO;', 'line_no': 180}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 6, 'line': '      V_TRADEMARK_NO := :OLD.TRADEMARK_NO;', 'line_no': 182}, {'indent': 3, 'line': '   END IF;', 'line_no': 183}]
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': "   V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');", 'line_no': 185}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   IF (:NEW.MANUAL_SHORT_DESC IS NULL', 'line_no': 186}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 186
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 186 i: 189
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 4
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 3, 'line': '   AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) THEN', 'line_no': 187}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 6, 'line': '      RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'line_no': 188}]
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) ', 'type': 'if_else', 'if_line_no': 186, 'then_line_no': 187, 'if_indent': 3, 'end_if_line_no': 189, 'then_statements': [{'indent': 6, 'line': '      RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'line_no': 188}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'line_no': 188}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);', 'line_no': 191}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   IF (INSERTING) THEN', 'line_no': 192}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 192
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 192 i: 656
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 325
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1276] - then_statements: 0 186
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': "      IF (:OLD.IN_PREP_IND = 'N'", 'line_no': 435}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': "      OR (:OLD.IN_PREP_IND = 'Y'", 'line_no': 436}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': "      AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 THEN", 'line_no': 437}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      END IF;', 'line_no': 439}
2025-09-03 04:09:43,047 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      IF (:NEW.THEME_NO <> :OLD.THEME_NO) THEN', 'line_no': 441}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      END IF;', 'line_no': 443}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 449}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      ELSE', 'line_no': 453}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 455}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      END IF;', 'line_no': 456}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': "      IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y'", 'line_no': 458}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': "      AND(V_STATUS_CD <> 'C'", 'line_no': 459}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': "      OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) THEN", 'line_no': 460}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         );', 'line_no': 473}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}
2025-09-03 04:09:43,048 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      ELSE', 'line_no': 476}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 477}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 478}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 479}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         ELSE', 'line_no': 480}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            V_DESCRIPTION := :NEW.THEME_DESC;', 'line_no': 481}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD;', 'line_no': 482}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         END IF;', 'line_no': 483}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      END IF;', 'line_no': 484}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      IF (LENGTH(V_DESCRIPTION) > 90) THEN', 'line_no': 486}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      END IF;', 'line_no': 488}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      SELECT', 'line_no': 494}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      FROM', 'line_no': 496}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      WHERE', 'line_no': 498}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      IF (V_COUNTER > 0) THEN', 'line_no': 501}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      END IF;', 'line_no': 503}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 508}
2025-09-03 04:09:43,049 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         SET', 'line_no': 510}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         WHERE', 'line_no': 532}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      ELSE', 'line_no': 535}
2025-09-03 04:09:43,050 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 539}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         SELECT', 'line_no': 542}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            COUNT(*) INTO V_COUNTER', 'line_no': 543}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         FROM', 'line_no': 544}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            V_THEMES T', 'line_no': 545}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         WHERE', 'line_no': 546}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            TRUNC(T.REGISTRAT_DATE) = TRUNC(SYSDATE)', 'line_no': 547}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            AND T.THEME_NO = :NEW.THEME_NO;', 'line_no': 548}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         IF (V_COUNTER > 0) THEN', 'line_no': 549}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RAISE ONLYONEOFFICIALCHANGEPERDAY;', 'line_no': 550}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         END IF;', 'line_no': 551}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 553}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 554}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         SET', 'line_no': 555}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 556}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 557}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 558}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 559}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 560}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 561}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 562}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 563}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 564}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 565}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 566}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 567}
2025-09-03 04:09:43,051 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 568}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 569}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 570}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 571}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 572}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 573}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 574}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            REGISTRAT_DATE = SYSDATE,', 'line_no': 575}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            REGISTRAR = V_USERID,', 'line_no': 576}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 577}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 578}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         WHERE', 'line_no': 579}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO;', 'line_no': 580}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      END IF;', 'line_no': 581}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'indent': 12, 'line': '            IF (V_SEC_MOL_CNT > 0) THEN', 'line_no': 621}, {'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}, {'indent': 12, 'line': '            ELSE', 'line_no': 623}, {'indent': 15, 'line': '               UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 626}, {'indent': 15, 'line': '               SET', 'line_no': 627}, {'indent': 18, 'line': "                  A.VALID_IND = 'N'", 'line_no': 628}, {'indent': 15, 'line': '               WHERE', 'line_no': 629}, {'indent': 18, 'line': '                  A.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 630}, {'indent': 18, 'line': '                  AND A.THEME_NO = :NEW.THEME_NO', 'line_no': 631}, {'indent': 18, 'line': '                  AND A.MOLECULE_SEQ_NO = 1', 'line_no': 632}, {'indent': 18, 'line': "                  AND A.VALID_IND = 'Y';", 'line_no': 633}, {'indent': 12, 'line': '            END IF;', 'line_no': 634}]}], 'else_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 3, 'line': '   ELSIF (DELETING) THEN', 'line_no': 638}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1286] - {'indent': 3, 'line': '   ELSIF (UPDATING) THEN', 'line_no': 432}
2025-09-03 04:09:43,052 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 3, 'line': '   ELSIF (UPDATING) THEN', 'line_no': 432}, {'indent': 6, 'line': "      IF (:OLD.IN_PREP_IND = 'N'", 'line_no': 435}, {'indent': 6, 'line': "      OR (:OLD.IN_PREP_IND = 'Y'", 'line_no': 436}, {'indent': 6, 'line': "      AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 THEN", 'line_no': 437}, {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}, {'indent': 6, 'line': '      END IF;', 'line_no': 439}, {'indent': 6, 'line': '      IF (:NEW.THEME_NO <> :OLD.THEME_NO) THEN', 'line_no': 441}, {'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}, {'indent': 6, 'line': '      END IF;', 'line_no': 443}, {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 449}, {'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}, {'indent': 6, 'line': '      ELSE', 'line_no': 453}, {'indent': 9, 'line': '         V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 455}, {'indent': 6, 'line': '      END IF;', 'line_no': 456}, {'indent': 6, 'line': "      IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y'", 'line_no': 458}, {'indent': 6, 'line': "      AND(V_STATUS_CD <> 'C'", 'line_no': 459}, {'indent': 6, 'line': "      OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) THEN", 'line_no': 460}, {'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}, {'indent': 6, 'line': '      ELSE', 'line_no': 476}, {'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 477}, {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 478}, {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 479}, {'indent': 9, 'line': '         ELSE', 'line_no': 480}, {'indent': 12, 'line': '            V_DESCRIPTION := :NEW.THEME_DESC;', 'line_no': 481}, {'indent': 12, 'line': '            V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD;', 'line_no': 482}, {'indent': 9, 'line': '         END IF;', 'line_no': 483}, {'indent': 6, 'line': '      END IF;', 'line_no': 484}, {'indent': 6, 'line': '      IF (LENGTH(V_DESCRIPTION) > 90) THEN', 'line_no': 486}, {'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}, {'indent': 6, 'line': '      END IF;', 'line_no': 488}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}, {'indent': 6, 'line': '      SELECT', 'line_no': 494}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}, {'indent': 6, 'line': '      FROM', 'line_no': 496}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}, {'indent': 6, 'line': '      WHERE', 'line_no': 498}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}, {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}, {'indent': 6, 'line': '      IF (V_COUNTER > 0) THEN', 'line_no': 501}, {'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}, {'indent': 6, 'line': '      END IF;', 'line_no': 503}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}, {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 508}, {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}, {'indent': 6, 'line': '      ELSE', 'line_no': 535}, {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 539}, {'indent': 9, 'line': '         SELECT', 'line_no': 542}, {'indent': 12, 'line': '            COUNT(*) INTO V_COUNTER', 'line_no': 543}, {'indent': 9, 'line': '         FROM', 'line_no': 544}, {'indent': 12, 'line': '            V_THEMES T', 'line_no': 545}, {'indent': 9, 'line': '         WHERE', 'line_no': 546}, {'indent': 12, 'line': '            TRUNC(T.REGISTRAT_DATE) = TRUNC(SYSDATE)', 'line_no': 547}, {'indent': 12, 'line': '            AND T.THEME_NO = :NEW.THEME_NO;', 'line_no': 548}, {'indent': 9, 'line': '         IF (V_COUNTER > 0) THEN', 'line_no': 549}, {'indent': 12, 'line': '            RAISE ONLYONEOFFICIALCHANGEPERDAY;', 'line_no': 550}, {'indent': 9, 'line': '         END IF;', 'line_no': 551}, {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 553}, {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 554}, {'indent': 9, 'line': '         SET', 'line_no': 555}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 556}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 557}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 558}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 559}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 560}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 561}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 562}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 563}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 564}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 565}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 566}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 567}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 568}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 569}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 570}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 571}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 572}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 573}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 574}, {'indent': 12, 'line': '            REGISTRAT_DATE = SYSDATE,', 'line_no': 575}, {'indent': 12, 'line': '            REGISTRAR = V_USERID,', 'line_no': 576}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 577}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 578}, {'indent': 9, 'line': '         WHERE', 'line_no': 579}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO;', 'line_no': 580}, {'indent': 6, 'line': '      END IF;', 'line_no': 581}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'indent': 12, 'line': '            IF (V_SEC_MOL_CNT > 0) THEN', 'line_no': 621}, {'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}, {'indent': 12, 'line': '            ELSE', 'line_no': 623}, {'indent': 15, 'line': '               UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 626}, {'indent': 15, 'line': '               SET', 'line_no': 627}, {'indent': 18, 'line': "                  A.VALID_IND = 'N'", 'line_no': 628}, {'indent': 15, 'line': '               WHERE', 'line_no': 629}, {'indent': 18, 'line': '                  A.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 630}, {'indent': 18, 'line': '                  AND A.THEME_NO = :NEW.THEME_NO', 'line_no': 631}, {'indent': 18, 'line': '                  AND A.MOLECULE_SEQ_NO = 1', 'line_no': 632}, {'indent': 18, 'line': "                  AND A.VALID_IND = 'Y';", 'line_no': 633}, {'indent': 12, 'line': '            END IF;', 'line_no': 634}]}], 'else_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]}]
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 3, 'line': '   ELSIF (UPDATING) THEN', 'line_no': 432}, {'indent': 6, 'line': "      IF (:OLD.IN_PREP_IND = 'N'", 'line_no': 435}, {'indent': 6, 'line': "      OR (:OLD.IN_PREP_IND = 'Y'", 'line_no': 436}, {'indent': 6, 'line': "      AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 THEN", 'line_no': 437}, {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}, {'indent': 6, 'line': '      END IF;', 'line_no': 439}, {'indent': 6, 'line': '      IF (:NEW.THEME_NO <> :OLD.THEME_NO) THEN', 'line_no': 441}, {'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}, {'indent': 6, 'line': '      END IF;', 'line_no': 443}, {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 449}, {'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}, {'indent': 6, 'line': '      ELSE', 'line_no': 453}, {'indent': 9, 'line': '         V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 455}, {'indent': 6, 'line': '      END IF;', 'line_no': 456}, {'indent': 6, 'line': "      IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y'", 'line_no': 458}, {'indent': 6, 'line': "      AND(V_STATUS_CD <> 'C'", 'line_no': 459}, {'indent': 6, 'line': "      OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) THEN", 'line_no': 460}, {'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}, {'indent': 6, 'line': '      ELSE', 'line_no': 476}, {'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 477}, {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 478}, {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 479}, {'indent': 9, 'line': '         ELSE', 'line_no': 480}, {'indent': 12, 'line': '            V_DESCRIPTION := :NEW.THEME_DESC;', 'line_no': 481}, {'indent': 12, 'line': '            V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD;', 'line_no': 482}, {'indent': 9, 'line': '         END IF;', 'line_no': 483}, {'indent': 6, 'line': '      END IF;', 'line_no': 484}, {'indent': 6, 'line': '      IF (LENGTH(V_DESCRIPTION) > 90) THEN', 'line_no': 486}, {'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}, {'indent': 6, 'line': '      END IF;', 'line_no': 488}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}, {'indent': 6, 'line': '      SELECT', 'line_no': 494}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}, {'indent': 6, 'line': '      FROM', 'line_no': 496}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}, {'indent': 6, 'line': '      WHERE', 'line_no': 498}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}, {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}, {'indent': 6, 'line': '      IF (V_COUNTER > 0) THEN', 'line_no': 501}, {'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}, {'indent': 6, 'line': '      END IF;', 'line_no': 503}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}, {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 508}, {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}, {'indent': 6, 'line': '      ELSE', 'line_no': 535}, {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 539}, {'indent': 9, 'line': '         SELECT', 'line_no': 542}, {'indent': 12, 'line': '            COUNT(*) INTO V_COUNTER', 'line_no': 543}, {'indent': 9, 'line': '         FROM', 'line_no': 544}, {'indent': 12, 'line': '            V_THEMES T', 'line_no': 545}, {'indent': 9, 'line': '         WHERE', 'line_no': 546}, {'indent': 12, 'line': '            TRUNC(T.REGISTRAT_DATE) = TRUNC(SYSDATE)', 'line_no': 547}, {'indent': 12, 'line': '            AND T.THEME_NO = :NEW.THEME_NO;', 'line_no': 548}, {'indent': 9, 'line': '         IF (V_COUNTER > 0) THEN', 'line_no': 549}, {'indent': 12, 'line': '            RAISE ONLYONEOFFICIALCHANGEPERDAY;', 'line_no': 550}, {'indent': 9, 'line': '         END IF;', 'line_no': 551}, {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 553}, {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 554}, {'indent': 9, 'line': '         SET', 'line_no': 555}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 556}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 557}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 558}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 559}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 560}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 561}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 562}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 563}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 564}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 565}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 566}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 567}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 568}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 569}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 570}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 571}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 572}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 573}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 574}, {'indent': 12, 'line': '            REGISTRAT_DATE = SYSDATE,', 'line_no': 575}, {'indent': 12, 'line': '            REGISTRAR = V_USERID,', 'line_no': 576}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 577}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 578}, {'indent': 9, 'line': '         WHERE', 'line_no': 579}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO;', 'line_no': 580}, {'indent': 6, 'line': '      END IF;', 'line_no': 581}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'indent': 12, 'line': '            IF (V_SEC_MOL_CNT > 0) THEN', 'line_no': 621}, {'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}, {'indent': 12, 'line': '            ELSE', 'line_no': 623}, {'indent': 15, 'line': '               UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 626}, {'indent': 15, 'line': '               SET', 'line_no': 627}, {'indent': 18, 'line': "                  A.VALID_IND = 'N'", 'line_no': 628}, {'indent': 15, 'line': '               WHERE', 'line_no': 629}, {'indent': 18, 'line': '                  A.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 630}, {'indent': 18, 'line': '                  AND A.THEME_NO = :NEW.THEME_NO', 'line_no': 631}, {'indent': 18, 'line': '                  AND A.MOLECULE_SEQ_NO = 1', 'line_no': 632}, {'indent': 18, 'line': "                  AND A.VALID_IND = 'Y';", 'line_no': 633}, {'indent': 12, 'line': '            END IF;', 'line_no': 634}]}], 'else_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]}]
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 3, 'line': '   ELSIF (UPDATING) THEN', 'line_no': 432}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 432 then_i: 432
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 3, 'line': '   ELSIF (UPDATING) THEN', 'line_no': 432}, {'indent': 6, 'line': "      IF (:OLD.IN_PREP_IND = 'N'", 'line_no': 435}, {'indent': 6, 'line': "      OR (:OLD.IN_PREP_IND = 'Y'", 'line_no': 436}, {'indent': 6, 'line': "      AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 THEN", 'line_no': 437}, {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}, {'indent': 6, 'line': '      END IF;', 'line_no': 439}, {'indent': 6, 'line': '      IF (:NEW.THEME_NO <> :OLD.THEME_NO) THEN', 'line_no': 441}, {'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}, {'indent': 6, 'line': '      END IF;', 'line_no': 443}, {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 449}, {'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}, {'indent': 6, 'line': '      ELSE', 'line_no': 453}, {'indent': 9, 'line': '         V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 455}, {'indent': 6, 'line': '      END IF;', 'line_no': 456}, {'indent': 6, 'line': "      IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y'", 'line_no': 458}, {'indent': 6, 'line': "      AND(V_STATUS_CD <> 'C'", 'line_no': 459}, {'indent': 6, 'line': "      OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) THEN", 'line_no': 460}, {'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}, {'indent': 6, 'line': '      ELSE', 'line_no': 476}, {'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 477}, {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 478}, {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 479}, {'indent': 9, 'line': '         ELSE', 'line_no': 480}, {'indent': 12, 'line': '            V_DESCRIPTION := :NEW.THEME_DESC;', 'line_no': 481}, {'indent': 12, 'line': '            V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD;', 'line_no': 482}, {'indent': 9, 'line': '         END IF;', 'line_no': 483}, {'indent': 6, 'line': '      END IF;', 'line_no': 484}, {'indent': 6, 'line': '      IF (LENGTH(V_DESCRIPTION) > 90) THEN', 'line_no': 486}, {'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}, {'indent': 6, 'line': '      END IF;', 'line_no': 488}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}, {'indent': 6, 'line': '      SELECT', 'line_no': 494}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}, {'indent': 6, 'line': '      FROM', 'line_no': 496}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}, {'indent': 6, 'line': '      WHERE', 'line_no': 498}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}, {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}, {'indent': 6, 'line': '      IF (V_COUNTER > 0) THEN', 'line_no': 501}, {'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}, {'indent': 6, 'line': '      END IF;', 'line_no': 503}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}, {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 508}, {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}, {'indent': 6, 'line': '      ELSE', 'line_no': 535}, {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 539}, {'indent': 9, 'line': '         SELECT', 'line_no': 542}, {'indent': 12, 'line': '            COUNT(*) INTO V_COUNTER', 'line_no': 543}, {'indent': 9, 'line': '         FROM', 'line_no': 544}, {'indent': 12, 'line': '            V_THEMES T', 'line_no': 545}, {'indent': 9, 'line': '         WHERE', 'line_no': 546}, {'indent': 12, 'line': '            TRUNC(T.REGISTRAT_DATE) = TRUNC(SYSDATE)', 'line_no': 547}, {'indent': 12, 'line': '            AND T.THEME_NO = :NEW.THEME_NO;', 'line_no': 548}, {'indent': 9, 'line': '         IF (V_COUNTER > 0) THEN', 'line_no': 549}, {'indent': 12, 'line': '            RAISE ONLYONEOFFICIALCHANGEPERDAY;', 'line_no': 550}, {'indent': 9, 'line': '         END IF;', 'line_no': 551}, {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 553}, {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 554}, {'indent': 9, 'line': '         SET', 'line_no': 555}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 556}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 557}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 558}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 559}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 560}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 561}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 562}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 563}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 564}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 565}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 566}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 567}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 568}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 569}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 570}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 571}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 572}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 573}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 574}, {'indent': 12, 'line': '            REGISTRAT_DATE = SYSDATE,', 'line_no': 575}, {'indent': 12, 'line': '            REGISTRAR = V_USERID,', 'line_no': 576}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 577}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 578}, {'indent': 9, 'line': '         WHERE', 'line_no': 579}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO;', 'line_no': 580}, {'indent': 6, 'line': '      END IF;', 'line_no': 581}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'indent': 12, 'line': '            IF (V_SEC_MOL_CNT > 0) THEN', 'line_no': 621}, {'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}, {'indent': 12, 'line': '            ELSE', 'line_no': 623}, {'indent': 15, 'line': '               UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 626}, {'indent': 15, 'line': '               SET', 'line_no': 627}, {'indent': 18, 'line': "                  A.VALID_IND = 'N'", 'line_no': 628}, {'indent': 15, 'line': '               WHERE', 'line_no': 629}, {'indent': 18, 'line': '                  A.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 630}, {'indent': 18, 'line': '                  AND A.THEME_NO = :NEW.THEME_NO', 'line_no': 631}, {'indent': 18, 'line': '                  AND A.MOLECULE_SEQ_NO = 1', 'line_no': 632}, {'indent': 18, 'line': "                  AND A.VALID_IND = 'Y';", 'line_no': 633}, {'indent': 12, 'line': '            END IF;', 'line_no': 634}]}], 'else_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]}]
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 3
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': "      IF ((:OLD.IN_PREP_IND = 'N')", 'line_no': 639}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 640}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      END IF;', 'line_no': 642}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': "      IF (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) THEN", 'line_no': 648}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         WHERE', 'line_no': 650}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      ELSE', 'line_no': 653}
2025-09-03 04:09:43,053 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 9, 'line': '         RAISE DELETE_NO_MORE_POSSIBLE;', 'line_no': 654}
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 6, 'line': '      END IF;', 'line_no': 655}
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 3, 'line': '   END IF;', 'line_no': 656}
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1297] - {'indent': 3, 'line': '   ELSIF (DELETING) THEN', 'line_no': 638}
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 3, 'line': '   ELSIF (DELETING) THEN', 'line_no': 638}, {'indent': 6, 'line': "      IF ((:OLD.IN_PREP_IND = 'N')", 'line_no': 639}, {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 640}, {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}, {'indent': 6, 'line': '      END IF;', 'line_no': 642}, {'indent': 6, 'line': "      IF (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) THEN", 'line_no': 648}, {'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}, {'indent': 6, 'line': '      ELSE', 'line_no': 653}, {'indent': 9, 'line': '         RAISE DELETE_NO_MORE_POSSIBLE;', 'line_no': 654}, {'indent': 6, 'line': '      END IF;', 'line_no': 655}]
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 3, 'line': '   ELSIF (DELETING) THEN', 'line_no': 638}, {'indent': 6, 'line': "      IF ((:OLD.IN_PREP_IND = 'N')", 'line_no': 639}, {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 640}, {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}, {'indent': 6, 'line': '      END IF;', 'line_no': 642}, {'indent': 6, 'line': "      IF (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) THEN", 'line_no': 648}, {'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}, {'indent': 6, 'line': '      ELSE', 'line_no': 653}, {'indent': 9, 'line': '         RAISE DELETE_NO_MORE_POSSIBLE;', 'line_no': 654}, {'indent': 6, 'line': '      END IF;', 'line_no': 655}]
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 3, 'line': '   ELSIF (DELETING) THEN', 'line_no': 638}
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 638 then_i: 638
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 3, 'line': '   ELSIF (DELETING) THEN', 'line_no': 638}, {'indent': 6, 'line': "      IF ((:OLD.IN_PREP_IND = 'N')", 'line_no': 639}, {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 640}, {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}, {'indent': 6, 'line': '      END IF;', 'line_no': 642}, {'indent': 6, 'line': "      IF (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) THEN", 'line_no': 648}, {'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}, {'indent': 6, 'line': '      ELSE', 'line_no': 653}, {'indent': 9, 'line': '         RAISE DELETE_NO_MORE_POSSIBLE;', 'line_no': 654}, {'indent': 6, 'line': '      END IF;', 'line_no': 655}]
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 3
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 192, 'then_line_no': 192, 'if_indent': 3, 'end_if_line_no': 656, 'then_statements': [{'indent': 6, 'line': "      IF (:NEW.IN_PREP_IND = 'N'", 'line_no': 193}, {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 194}, {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}, {'indent': 6, 'line': '      END IF;', 'line_no': 196}, {'indent': 6, 'line': '      V_MOLECULE_ID := :NEW.MOLECULE_ID;', 'line_no': 201}, {'indent': 6, 'line': "      IF (:NEW.PORTF_PROJ_CD = 'Y'", 'line_no': 202}, {'indent': 6, 'line': '      AND :NEW.MOLECULE_ID IS NULL) THEN', 'line_no': 203}, {'indent': 9, 'line': '         IF (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) THEN', 'line_no': 204}, {'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}, {'indent': 9, 'line': '         ELSE', 'line_no': 206}, {'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULES_MTN(', 'line_no': 207}, {'indent': 15, 'line': '               MOLECULE_DESC,', 'line_no': 208}, {'indent': 15, 'line': '               VALID_IND,', 'line_no': 209}, {'indent': 15, 'line': '               RG_NO,', 'line_no': 210}, {'indent': 15, 'line': '               CANCER_IMMUNOTHERAPY_IND,', 'line_no': 211}, {'indent': 15, 'line': '               MOLECULE_TYPE_ID,', 'line_no': 212}, {'indent': 15, 'line': '               PHARMACOLOGICAL_TYPE_ID', 'line_no': 213}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 214}, {'indent': 15, 'line': '               NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL),', 'line_no': 215}, {'indent': 15, 'line': "               'Y',", 'line_no': 216}, {'indent': 15, 'line': '               V_NEW_RG_NO,', 'line_no': 217}, {'indent': 15, 'line': "               'N',", 'line_no': 218}, {'indent': 15, 'line': '               C_MOLECULE_TYPE_ID,', 'line_no': 219}, {'indent': 15, 'line': '               C_PHARMACOLOGICAL_TYPE_ID', 'line_no': 220}, {'indent': 12, 'line': '            );', 'line_no': 221}, {'indent': 12, 'line': '            SELECT', 'line_no': 222}, {'indent': 15, 'line': '               MOLECULE_ID INTO V_MOLECULE_ID', 'line_no': 223}, {'indent': 12, 'line': '            FROM', 'line_no': 224}, {'indent': 15, 'line': '               V_THEME_MOLECULES', 'line_no': 225}, {'indent': 12, 'line': '            WHERE', 'line_no': 226}, {'indent': 15, 'line': '               MOLECULE_DESC = NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL)', 'line_no': 227}, {'indent': 15, 'line': "               AND VALID_IND = 'Y'", 'line_no': 228}, {'indent': 15, 'line': '               AND RG_NO = V_NEW_RG_NO', 'line_no': 229}, {'indent': 15, 'line': "               AND CANCER_IMMUNOTHERAPY_IND = 'N'", 'line_no': 230}, {'indent': 15, 'line': '               AND MOLECULE_TYPE_ID = C_MOLECULE_TYPE_ID', 'line_no': 231}, {'indent': 15, 'line': '               AND PHARMACOLOGICAL_TYPE_ID = C_PHARMACOLOGICAL_TYPE_ID;', 'line_no': 232}, {'indent': 12, 'line': '            INSERT INTO THEME_MOLECULE_MAP TMMAP(', 'line_no': 235}, {'indent': 15, 'line': '               TMMAP.THEME_NO,', 'line_no': 236}, {'indent': 15, 'line': '               TMMAP.MOLECULE_ID,', 'line_no': 237}, {'indent': 15, 'line': '               TMMAP.MOLECULE_SEQ_NO,', 'line_no': 238}, {'indent': 15, 'line': '               TMMAP.VALID_IND', 'line_no': 239}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 240}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 241}, {'indent': 15, 'line': '               V_MOLECULE_ID,', 'line_no': 242}, {'indent': 15, 'line': '               1,', 'line_no': 243}, {'indent': 15, 'line': "               'Y'", 'line_no': 244}, {'indent': 12, 'line': '            );', 'line_no': 245}, {'indent': 9, 'line': '         END IF;', 'line_no': 246}, {'indent': 6, 'line': '      END IF;', 'line_no': 247}, {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'indent': 12, 'line': '            IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0', 'line_no': 251}, {'indent': 12, 'line': '            AND 9', 'line_no': 252}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0', 'line_no': 253}, {'indent': 12, 'line': '            AND 9', 'line_no': 254}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0', 'line_no': 255}, {'indent': 12, 'line': '            AND 9', 'line_no': 256}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0', 'line_no': 257}, {'indent': 12, 'line': '            AND 9) THEN', 'line_no': 258}, {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}, {'indent': 12, 'line': '            END IF;', 'line_no': 260}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'indent': 12, 'line': '            IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0', 'line_no': 262}, {'indent': 12, 'line': '            AND 9', 'line_no': 263}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0', 'line_no': 264}, {'indent': 12, 'line': '            AND 9', 'line_no': 265}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0', 'line_no': 266}, {'indent': 12, 'line': '            AND 9', 'line_no': 267}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0', 'line_no': 268}, {'indent': 12, 'line': '            AND 9', 'line_no': 269}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0', 'line_no': 270}, {'indent': 12, 'line': '            AND 9) THEN', 'line_no': 271}, {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}, {'indent': 12, 'line': '            END IF;', 'line_no': 273}]}], 'else_statements': [{'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}]}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 278}, {'indent': 6, 'line': '      SELECT', 'line_no': 281}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 282}, {'indent': 6, 'line': '      FROM', 'line_no': 283}, {'indent': 9, 'line': '         (', 'line_no': 284}, {'indent': 12, 'line': '            SELECT', 'line_no': 285}, {'indent': 15, 'line': '               THEME_NO', 'line_no': 286}, {'indent': 12, 'line': '            FROM', 'line_no': 287}, {'indent': 15, 'line': '               V_THEMES', 'line_no': 288}, {'indent': 12, 'line': '            UNION', 'line_no': 289}, {'indent': 12, 'line': '            ALL', 'line_no': 290}, {'indent': 12, 'line': '            SELECT', 'line_no': 291}, {'indent': 15, 'line': '               THEME_NO', 'line_no': 292}, {'indent': 12, 'line': '            FROM', 'line_no': 293}, {'indent': 15, 'line': '               GMD.THEMES_ARCHIVE', 'line_no': 294}, {'indent': 9, 'line': '         )                  T', 'line_no': 295}, {'indent': 6, 'line': '      WHERE', 'line_no': 296}, {'indent': 9, 'line': '         T.THEME_NO = :NEW.THEME_NO;', 'line_no': 297}, {'indent': 6, 'line': '      IF (V_COUNTER > 0) THEN', 'line_no': 298}, {'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}, {'indent': 6, 'line': '      END IF;', 'line_no': 300}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 302}, {'indent': 6, 'line': '      V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 303}, {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 306}, {'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}, {'indent': 6, 'line': '      END IF;', 'line_no': 308}, {'indent': 6, 'line': "      IF (UPPER(:NEW.PORTF_PROJ_CD) = 'N') THEN", 'line_no': 310}, {'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 311}, {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 312}, {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}, {'indent': 9, 'line': '         END IF;', 'line_no': 314}, {'indent': 6, 'line': '      END IF;', 'line_no': 315}, {'indent': 6, 'line': "      IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') THEN", 'line_no': 319}, {'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 320}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => NULL,', 'line_no': 321}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => V_MOLECULE_ID,', 'line_no': 322}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 323}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 324}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 325}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 326}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 327}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 328}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 329}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 330}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 331}, {'indent': 9, 'line': '         );', 'line_no': 332}, {'indent': 9, 'line': '         IF (LENGTH(V_DESCRIPTION) > 90) THEN', 'line_no': 333}, {'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}, {'indent': 9, 'line': '         END IF;', 'line_no': 335}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 337}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 338}, {'indent': 6, 'line': '      ELSE', 'line_no': 339}, {'indent': 9, 'line': '         V_DESCRIPTION := :NEW.THEME_DESC;', 'line_no': 342}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'N';", 'line_no': 343}, {'indent': 6, 'line': '      END IF;', 'line_no': 344}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 346}, {'indent': 6, 'line': '      SELECT', 'line_no': 347}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 348}, {'indent': 6, 'line': '      FROM', 'line_no': 349}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 350}, {'indent': 6, 'line': '      WHERE', 'line_no': 351}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION;', 'line_no': 352}, {'indent': 6, 'line': '      IF (V_COUNTER > 0) THEN', 'line_no': 353}, {'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}, {'indent': 6, 'line': '      END IF;', 'line_no': 355}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 357}, {'indent': 6, 'line': "      V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'line_no': 358}, {'indent': 6, 'line': '      V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'line_no': 359}, {'indent': 6, 'line': '      INSERT INTO GMD.THEMES(', 'line_no': 360}, {'indent': 9, 'line': '         THEME_NO,', 'line_no': 361}, {'indent': 9, 'line': '         REGISTRAT_DATE,', 'line_no': 362}, {'indent': 9, 'line': '         ODG_NO,', 'line_no': 363}, {'indent': 9, 'line': '         RESGRP_CD,', 'line_no': 364}, {'indent': 9, 'line': '         RESLIN_CD,', 'line_no': 365}, {'indent': 9, 'line': '         THEME_DESC,', 'line_no': 366}, {'indent': 9, 'line': '         SHORT_NAME,', 'line_no': 367}, {'indent': 9, 'line': '         STATUS_CD,', 'line_no': 368}, {'indent': 9, 'line': '         DBA_CD,', 'line_no': 369}, {'indent': 9, 'line': '         IN_PREP_IND,', 'line_no': 370}, {'indent': 9, 'line': '         PROD_SHORT_CD,', 'line_no': 371}, {'indent': 9, 'line': '         TRADEMARK_NO,', 'line_no': 372}, {'indent': 9, 'line': '         BIO_ACTIVITY,', 'line_no': 373}, {'indent': 9, 'line': '         APPLICANT,', 'line_no': 374}, {'indent': 9, 'line': '         CONTACT,', 'line_no': 375}, {'indent': 9, 'line': '         REGISTRAR,', 'line_no': 376}, {'indent': 9, 'line': '         LINE_EXT_INFO,', 'line_no': 377}, {'indent': 9, 'line': '         PORTF_PROJ_CD,', 'line_no': 378}, {'indent': 9, 'line': '         CO_DEV_PRTNR,', 'line_no': 379}, {'indent': 9, 'line': '         TECHNOLOGY_PRTNR,', 'line_no': 380}, {'indent': 9, 'line': '         OFFICIAL_IND,', 'line_no': 381}, {'indent': 9, 'line': '         CO_MAR_PRTNR,', 'line_no': 382}, {'indent': 9, 'line': '         VALID_TO,', 'line_no': 383}, {'indent': 9, 'line': '         PORTF_DA_GROUP_ID,', 'line_no': 384}, {'indent': 9, 'line': '         MANUAL_SHORT_DESC', 'line_no': 385}, {'indent': 6, 'line': '      ) VALUES (', 'line_no': 386}, {'indent': 9, 'line': '         :NEW.THEME_NO,', 'line_no': 387}, {'indent': 9, 'line': '         V_D_REGISTRAT_DATE,', 'line_no': 388}, {'indent': 9, 'line': '         V_ODG_NO,', 'line_no': 389}, {'indent': 9, 'line': '         V_RESGRP_CD,', 'line_no': 390}, {'indent': 9, 'line': '         V_RESLIN_CD,', 'line_no': 391}, {'indent': 9, 'line': '         V_DESCRIPTION,', 'line_no': 392}, {'indent': 9, 'line': '         V_SHORT_NAME,', 'line_no': 393}, {'indent': 9, 'line': '         V_STATUS_CD,', 'line_no': 394}, {'indent': 9, 'line': '         V_DBA_CD,', 'line_no': 395}, {'indent': 9, 'line': '         :NEW.IN_PREP_IND,', 'line_no': 396}, {'indent': 9, 'line': '         :NEW.PROD_SHORT_CD,', 'line_no': 397}, {'indent': 9, 'line': '         :NEW.TRADEMARK_NO,', 'line_no': 398}, {'indent': 9, 'line': '         :NEW.BIO_ACTIVITY,', 'line_no': 399}, {'indent': 9, 'line': '         :NEW.APPLICANT,', 'line_no': 400}, {'indent': 9, 'line': '         :NEW.CONTACT,', 'line_no': 401}, {'indent': 9, 'line': '         TXO_UTIL.GET_USERID,', 'line_no': 402}, {'indent': 9, 'line': '         :NEW.LINE_EXT_INFO,', 'line_no': 403}, {'indent': 9, 'line': '         V_PORTF_PROJ_CD,', 'line_no': 404}, {'indent': 9, 'line': '         :NEW.CO_DEV_PRTNR,', 'line_no': 405}, {'indent': 9, 'line': '         :NEW.TECHNOLOGY_PRTNR,', 'line_no': 406}, {'indent': 9, 'line': '         :NEW.OFFICIAL_IND,', 'line_no': 407}, {'indent': 9, 'line': '         :NEW.CO_MAR_PRTNR,', 'line_no': 408}, {'indent': 9, 'line': '         V_VALID_TO,', 'line_no': 409}, {'indent': 9, 'line': '         :NEW.PORTF_DA_GROUP_ID,', 'line_no': 410}, {'indent': 9, 'line': '         :NEW.MANUAL_SHORT_DESC', 'line_no': 411}, {'indent': 6, 'line': '      );', 'line_no': 412}, {'indent': 6, 'line': '      IF (:OLD.MOLECULE_ID IS NULL', 'line_no': 413}, {'indent': 6, 'line': '      AND :NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 414}, {'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}, {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}, {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}, {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}, {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}, {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}, {'indent': 12, 'line': '            1,', 'line_no': 425}, {'indent': 12, 'line': "            'Y'", 'line_no': 426}, {'indent': 9, 'line': '         );', 'line_no': 427}, {'indent': 6, 'line': '      END IF;', 'line_no': 428}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 432, 'elif_indent': 3, 'condition': '(UPDATING)', 'then_line_no': 432, 'then_statements': [{'indent': 6, 'line': "      IF (:OLD.IN_PREP_IND = 'N'", 'line_no': 435}, {'indent': 6, 'line': "      OR (:OLD.IN_PREP_IND = 'Y'", 'line_no': 436}, {'indent': 6, 'line': "      AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 THEN", 'line_no': 437}, {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}, {'indent': 6, 'line': '      END IF;', 'line_no': 439}, {'indent': 6, 'line': '      IF (:NEW.THEME_NO <> :OLD.THEME_NO) THEN', 'line_no': 441}, {'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}, {'indent': 6, 'line': '      END IF;', 'line_no': 443}, {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 449}, {'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}, {'indent': 6, 'line': '      ELSE', 'line_no': 453}, {'indent': 9, 'line': '         V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 455}, {'indent': 6, 'line': '      END IF;', 'line_no': 456}, {'indent': 6, 'line': "      IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y'", 'line_no': 458}, {'indent': 6, 'line': "      AND(V_STATUS_CD <> 'C'", 'line_no': 459}, {'indent': 6, 'line': "      OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) THEN", 'line_no': 460}, {'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}, {'indent': 6, 'line': '      ELSE', 'line_no': 476}, {'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 477}, {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 478}, {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 479}, {'indent': 9, 'line': '         ELSE', 'line_no': 480}, {'indent': 12, 'line': '            V_DESCRIPTION := :NEW.THEME_DESC;', 'line_no': 481}, {'indent': 12, 'line': '            V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD;', 'line_no': 482}, {'indent': 9, 'line': '         END IF;', 'line_no': 483}, {'indent': 6, 'line': '      END IF;', 'line_no': 484}, {'indent': 6, 'line': '      IF (LENGTH(V_DESCRIPTION) > 90) THEN', 'line_no': 486}, {'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}, {'indent': 6, 'line': '      END IF;', 'line_no': 488}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}, {'indent': 6, 'line': '      SELECT', 'line_no': 494}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}, {'indent': 6, 'line': '      FROM', 'line_no': 496}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}, {'indent': 6, 'line': '      WHERE', 'line_no': 498}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}, {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}, {'indent': 6, 'line': '      IF (V_COUNTER > 0) THEN', 'line_no': 501}, {'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}, {'indent': 6, 'line': '      END IF;', 'line_no': 503}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}, {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 508}, {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}, {'indent': 6, 'line': '      ELSE', 'line_no': 535}, {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 539}, {'indent': 9, 'line': '         SELECT', 'line_no': 542}, {'indent': 12, 'line': '            COUNT(*) INTO V_COUNTER', 'line_no': 543}, {'indent': 9, 'line': '         FROM', 'line_no': 544}, {'indent': 12, 'line': '            V_THEMES T', 'line_no': 545}, {'indent': 9, 'line': '         WHERE', 'line_no': 546}, {'indent': 12, 'line': '            TRUNC(T.REGISTRAT_DATE) = TRUNC(SYSDATE)', 'line_no': 547}, {'indent': 12, 'line': '            AND T.THEME_NO = :NEW.THEME_NO;', 'line_no': 548}, {'indent': 9, 'line': '         IF (V_COUNTER > 0) THEN', 'line_no': 549}, {'indent': 12, 'line': '            RAISE ONLYONEOFFICIALCHANGEPERDAY;', 'line_no': 550}, {'indent': 9, 'line': '         END IF;', 'line_no': 551}, {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 553}, {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 554}, {'indent': 9, 'line': '         SET', 'line_no': 555}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 556}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 557}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 558}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 559}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 560}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 561}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 562}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 563}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 564}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 565}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 566}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 567}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 568}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 569}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 570}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 571}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 572}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 573}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 574}, {'indent': 12, 'line': '            REGISTRAT_DATE = SYSDATE,', 'line_no': 575}, {'indent': 12, 'line': '            REGISTRAR = V_USERID,', 'line_no': 576}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 577}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 578}, {'indent': 9, 'line': '         WHERE', 'line_no': 579}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO;', 'line_no': 580}, {'indent': 6, 'line': '      END IF;', 'line_no': 581}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'indent': 12, 'line': '            IF (V_SEC_MOL_CNT > 0) THEN', 'line_no': 621}, {'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}, {'indent': 12, 'line': '            ELSE', 'line_no': 623}, {'indent': 15, 'line': '               UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 626}, {'indent': 15, 'line': '               SET', 'line_no': 627}, {'indent': 18, 'line': "                  A.VALID_IND = 'N'", 'line_no': 628}, {'indent': 15, 'line': '               WHERE', 'line_no': 629}, {'indent': 18, 'line': '                  A.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 630}, {'indent': 18, 'line': '                  AND A.THEME_NO = :NEW.THEME_NO', 'line_no': 631}, {'indent': 18, 'line': '                  AND A.MOLECULE_SEQ_NO = 1', 'line_no': 632}, {'indent': 18, 'line': "                  AND A.VALID_IND = 'Y';", 'line_no': 633}, {'indent': 12, 'line': '            END IF;', 'line_no': 634}]}], 'else_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]}]}, {'type': 'elif_statement', 'elif_line_no': 638, 'elif_indent': 3, 'condition': '(DELETING)', 'then_line_no': 638, 'then_statements': [{'indent': 6, 'line': "      IF ((:OLD.IN_PREP_IND = 'N')", 'line_no': 639}, {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 640}, {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}, {'indent': 6, 'line': '      END IF;', 'line_no': 642}, {'indent': 6, 'line': "      IF (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) THEN", 'line_no': 648}, {'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}, {'indent': 6, 'line': '      ELSE', 'line_no': 653}, {'indent': 9, 'line': '         RAISE DELETE_NO_MORE_POSSIBLE;', 'line_no': 654}, {'indent': 6, 'line': '      END IF;', 'line_no': 655}]}], 'else_statements': []}
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (:NEW.IN_PREP_IND = 'N'", 'line_no': 193}
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 193
2025-09-03 04:09:43,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 193 i: 196
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 4
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 194}
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}]
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 193, 'then_line_no': 194, 'if_indent': 6, 'end_if_line_no': 196, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      V_MOLECULE_ID := :NEW.MOLECULE_ID;', 'line_no': 201}
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (:NEW.PORTF_PROJ_CD = 'Y'", 'line_no': 202}
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 202
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 202 i: 247
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 44
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': '      AND :NEW.MOLECULE_ID IS NULL) THEN', 'line_no': 203}
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         IF (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) THEN', 'line_no': 204}, {'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}, {'indent': 9, 'line': '         ELSE', 'line_no': 206}, {'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULES_MTN(', 'line_no': 207}, {'indent': 15, 'line': '               MOLECULE_DESC,', 'line_no': 208}, {'indent': 15, 'line': '               VALID_IND,', 'line_no': 209}, {'indent': 15, 'line': '               RG_NO,', 'line_no': 210}, {'indent': 15, 'line': '               CANCER_IMMUNOTHERAPY_IND,', 'line_no': 211}, {'indent': 15, 'line': '               MOLECULE_TYPE_ID,', 'line_no': 212}, {'indent': 15, 'line': '               PHARMACOLOGICAL_TYPE_ID', 'line_no': 213}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 214}, {'indent': 15, 'line': '               NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL),', 'line_no': 215}, {'indent': 15, 'line': "               'Y',", 'line_no': 216}, {'indent': 15, 'line': '               V_NEW_RG_NO,', 'line_no': 217}, {'indent': 15, 'line': "               'N',", 'line_no': 218}, {'indent': 15, 'line': '               C_MOLECULE_TYPE_ID,', 'line_no': 219}, {'indent': 15, 'line': '               C_PHARMACOLOGICAL_TYPE_ID', 'line_no': 220}, {'indent': 12, 'line': '            );', 'line_no': 221}, {'indent': 12, 'line': '            SELECT', 'line_no': 222}, {'indent': 15, 'line': '               MOLECULE_ID INTO V_MOLECULE_ID', 'line_no': 223}, {'indent': 12, 'line': '            FROM', 'line_no': 224}, {'indent': 15, 'line': '               V_THEME_MOLECULES', 'line_no': 225}, {'indent': 12, 'line': '            WHERE', 'line_no': 226}, {'indent': 15, 'line': '               MOLECULE_DESC = NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL)', 'line_no': 227}, {'indent': 15, 'line': "               AND VALID_IND = 'Y'", 'line_no': 228}, {'indent': 15, 'line': '               AND RG_NO = V_NEW_RG_NO', 'line_no': 229}, {'indent': 15, 'line': "               AND CANCER_IMMUNOTHERAPY_IND = 'N'", 'line_no': 230}, {'indent': 15, 'line': '               AND MOLECULE_TYPE_ID = C_MOLECULE_TYPE_ID', 'line_no': 231}, {'indent': 15, 'line': '               AND PHARMACOLOGICAL_TYPE_ID = C_PHARMACOLOGICAL_TYPE_ID;', 'line_no': 232}, {'indent': 12, 'line': '            INSERT INTO THEME_MOLECULE_MAP TMMAP(', 'line_no': 235}, {'indent': 15, 'line': '               TMMAP.THEME_NO,', 'line_no': 236}, {'indent': 15, 'line': '               TMMAP.MOLECULE_ID,', 'line_no': 237}, {'indent': 15, 'line': '               TMMAP.MOLECULE_SEQ_NO,', 'line_no': 238}, {'indent': 15, 'line': '               TMMAP.VALID_IND', 'line_no': 239}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 240}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 241}, {'indent': 15, 'line': '               V_MOLECULE_ID,', 'line_no': 242}, {'indent': 15, 'line': '               1,', 'line_no': 243}, {'indent': 15, 'line': "               'Y'", 'line_no': 244}, {'indent': 12, 'line': '            );', 'line_no': 245}, {'indent': 9, 'line': '         END IF;', 'line_no': 246}]
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) ", 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 203, 'if_indent': 6, 'end_if_line_no': 247, 'then_statements': [{'indent': 9, 'line': '         IF (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) THEN', 'line_no': 204}, {'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}, {'indent': 9, 'line': '         ELSE', 'line_no': 206}, {'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULES_MTN(', 'line_no': 207}, {'indent': 15, 'line': '               MOLECULE_DESC,', 'line_no': 208}, {'indent': 15, 'line': '               VALID_IND,', 'line_no': 209}, {'indent': 15, 'line': '               RG_NO,', 'line_no': 210}, {'indent': 15, 'line': '               CANCER_IMMUNOTHERAPY_IND,', 'line_no': 211}, {'indent': 15, 'line': '               MOLECULE_TYPE_ID,', 'line_no': 212}, {'indent': 15, 'line': '               PHARMACOLOGICAL_TYPE_ID', 'line_no': 213}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 214}, {'indent': 15, 'line': '               NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL),', 'line_no': 215}, {'indent': 15, 'line': "               'Y',", 'line_no': 216}, {'indent': 15, 'line': '               V_NEW_RG_NO,', 'line_no': 217}, {'indent': 15, 'line': "               'N',", 'line_no': 218}, {'indent': 15, 'line': '               C_MOLECULE_TYPE_ID,', 'line_no': 219}, {'indent': 15, 'line': '               C_PHARMACOLOGICAL_TYPE_ID', 'line_no': 220}, {'indent': 12, 'line': '            );', 'line_no': 221}, {'indent': 12, 'line': '            SELECT', 'line_no': 222}, {'indent': 15, 'line': '               MOLECULE_ID INTO V_MOLECULE_ID', 'line_no': 223}, {'indent': 12, 'line': '            FROM', 'line_no': 224}, {'indent': 15, 'line': '               V_THEME_MOLECULES', 'line_no': 225}, {'indent': 12, 'line': '            WHERE', 'line_no': 226}, {'indent': 15, 'line': '               MOLECULE_DESC = NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL)', 'line_no': 227}, {'indent': 15, 'line': "               AND VALID_IND = 'Y'", 'line_no': 228}, {'indent': 15, 'line': '               AND RG_NO = V_NEW_RG_NO', 'line_no': 229}, {'indent': 15, 'line': "               AND CANCER_IMMUNOTHERAPY_IND = 'N'", 'line_no': 230}, {'indent': 15, 'line': '               AND MOLECULE_TYPE_ID = C_MOLECULE_TYPE_ID', 'line_no': 231}, {'indent': 15, 'line': '               AND PHARMACOLOGICAL_TYPE_ID = C_PHARMACOLOGICAL_TYPE_ID;', 'line_no': 232}, {'indent': 12, 'line': '            INSERT INTO THEME_MOLECULE_MAP TMMAP(', 'line_no': 235}, {'indent': 15, 'line': '               TMMAP.THEME_NO,', 'line_no': 236}, {'indent': 15, 'line': '               TMMAP.MOLECULE_ID,', 'line_no': 237}, {'indent': 15, 'line': '               TMMAP.MOLECULE_SEQ_NO,', 'line_no': 238}, {'indent': 15, 'line': '               TMMAP.VALID_IND', 'line_no': 239}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 240}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 241}, {'indent': 15, 'line': '               V_MOLECULE_ID,', 'line_no': 242}, {'indent': 15, 'line': '               1,', 'line_no': 243}, {'indent': 15, 'line': "               'Y'", 'line_no': 244}, {'indent': 12, 'line': '            );', 'line_no': 245}, {'indent': 9, 'line': '         END IF;', 'line_no': 246}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         IF (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) THEN', 'line_no': 204}
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 204
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 204 i: 246
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 41
2025-09-03 04:09:43,055 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}], 'if_elses': [], 'else_statements': [[{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULES_MTN(', 'line_no': 207}, {'indent': 15, 'line': '               MOLECULE_DESC,', 'line_no': 208}, {'indent': 15, 'line': '               VALID_IND,', 'line_no': 209}, {'indent': 15, 'line': '               RG_NO,', 'line_no': 210}, {'indent': 15, 'line': '               CANCER_IMMUNOTHERAPY_IND,', 'line_no': 211}, {'indent': 15, 'line': '               MOLECULE_TYPE_ID,', 'line_no': 212}, {'indent': 15, 'line': '               PHARMACOLOGICAL_TYPE_ID', 'line_no': 213}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 214}, {'indent': 15, 'line': '               NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL),', 'line_no': 215}, {'indent': 15, 'line': "               'Y',", 'line_no': 216}, {'indent': 15, 'line': '               V_NEW_RG_NO,', 'line_no': 217}, {'indent': 15, 'line': "               'N',", 'line_no': 218}, {'indent': 15, 'line': '               C_MOLECULE_TYPE_ID,', 'line_no': 219}, {'indent': 15, 'line': '               C_PHARMACOLOGICAL_TYPE_ID', 'line_no': 220}, {'indent': 12, 'line': '            );', 'line_no': 221}, {'indent': 12, 'line': '            SELECT', 'line_no': 222}, {'indent': 15, 'line': '               MOLECULE_ID INTO V_MOLECULE_ID', 'line_no': 223}, {'indent': 12, 'line': '            FROM', 'line_no': 224}, {'indent': 15, 'line': '               V_THEME_MOLECULES', 'line_no': 225}, {'indent': 12, 'line': '            WHERE', 'line_no': 226}, {'indent': 15, 'line': '               MOLECULE_DESC = NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL)', 'line_no': 227}, {'indent': 15, 'line': "               AND VALID_IND = 'Y'", 'line_no': 228}, {'indent': 15, 'line': '               AND RG_NO = V_NEW_RG_NO', 'line_no': 229}, {'indent': 15, 'line': "               AND CANCER_IMMUNOTHERAPY_IND = 'N'", 'line_no': 230}, {'indent': 15, 'line': '               AND MOLECULE_TYPE_ID = C_MOLECULE_TYPE_ID', 'line_no': 231}, {'indent': 15, 'line': '               AND PHARMACOLOGICAL_TYPE_ID = C_PHARMACOLOGICAL_TYPE_ID;', 'line_no': 232}, {'indent': 12, 'line': '            INSERT INTO THEME_MOLECULE_MAP TMMAP(', 'line_no': 235}, {'indent': 15, 'line': '               TMMAP.THEME_NO,', 'line_no': 236}, {'indent': 15, 'line': '               TMMAP.MOLECULE_ID,', 'line_no': 237}, {'indent': 15, 'line': '               TMMAP.MOLECULE_SEQ_NO,', 'line_no': 238}, {'indent': 15, 'line': '               TMMAP.VALID_IND', 'line_no': 239}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 240}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 241}, {'indent': 15, 'line': '               V_MOLECULE_ID,', 'line_no': 242}, {'indent': 15, 'line': '               1,', 'line_no': 243}, {'indent': 15, 'line': "               'Y'", 'line_no': 244}, {'indent': 12, 'line': '            );', 'line_no': 245}, {'indent': 9, 'line': '         END IF;', 'line_no': 246}]]}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULES_MTN(', 'line_no': 207}, {'indent': 15, 'line': '               MOLECULE_DESC,', 'line_no': 208}, {'indent': 15, 'line': '               VALID_IND,', 'line_no': 209}, {'indent': 15, 'line': '               RG_NO,', 'line_no': 210}, {'indent': 15, 'line': '               CANCER_IMMUNOTHERAPY_IND,', 'line_no': 211}, {'indent': 15, 'line': '               MOLECULE_TYPE_ID,', 'line_no': 212}, {'indent': 15, 'line': '               PHARMACOLOGICAL_TYPE_ID', 'line_no': 213}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 214}, {'indent': 15, 'line': '               NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL),', 'line_no': 215}, {'indent': 15, 'line': "               'Y',", 'line_no': 216}, {'indent': 15, 'line': '               V_NEW_RG_NO,', 'line_no': 217}, {'indent': 15, 'line': "               'N',", 'line_no': 218}, {'indent': 15, 'line': '               C_MOLECULE_TYPE_ID,', 'line_no': 219}, {'indent': 15, 'line': '               C_PHARMACOLOGICAL_TYPE_ID', 'line_no': 220}, {'indent': 12, 'line': '            );', 'line_no': 221}, {'indent': 12, 'line': '            SELECT', 'line_no': 222}, {'indent': 15, 'line': '               MOLECULE_ID INTO V_MOLECULE_ID', 'line_no': 223}, {'indent': 12, 'line': '            FROM', 'line_no': 224}, {'indent': 15, 'line': '               V_THEME_MOLECULES', 'line_no': 225}, {'indent': 12, 'line': '            WHERE', 'line_no': 226}, {'indent': 15, 'line': '               MOLECULE_DESC = NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL)', 'line_no': 227}, {'indent': 15, 'line': "               AND VALID_IND = 'Y'", 'line_no': 228}, {'indent': 15, 'line': '               AND RG_NO = V_NEW_RG_NO', 'line_no': 229}, {'indent': 15, 'line': "               AND CANCER_IMMUNOTHERAPY_IND = 'N'", 'line_no': 230}, {'indent': 15, 'line': '               AND MOLECULE_TYPE_ID = C_MOLECULE_TYPE_ID', 'line_no': 231}, {'indent': 15, 'line': '               AND PHARMACOLOGICAL_TYPE_ID = C_PHARMACOLOGICAL_TYPE_ID;', 'line_no': 232}, {'indent': 12, 'line': '            INSERT INTO THEME_MOLECULE_MAP TMMAP(', 'line_no': 235}, {'indent': 15, 'line': '               TMMAP.THEME_NO,', 'line_no': 236}, {'indent': 15, 'line': '               TMMAP.MOLECULE_ID,', 'line_no': 237}, {'indent': 15, 'line': '               TMMAP.MOLECULE_SEQ_NO,', 'line_no': 238}, {'indent': 15, 'line': '               TMMAP.VALID_IND', 'line_no': 239}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 240}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 241}, {'indent': 15, 'line': '               V_MOLECULE_ID,', 'line_no': 242}, {'indent': 15, 'line': '               1,', 'line_no': 243}, {'indent': 15, 'line': "               'Y'", 'line_no': 244}, {'indent': 12, 'line': '            );', 'line_no': 245}, {'indent': 9, 'line': '         END IF;', 'line_no': 246}]
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'indent': 12, 'line': '            IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0', 'line_no': 251}, {'indent': 12, 'line': '            AND 9', 'line_no': 252}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0', 'line_no': 253}, {'indent': 12, 'line': '            AND 9', 'line_no': 254}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0', 'line_no': 255}, {'indent': 12, 'line': '            AND 9', 'line_no': 256}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0', 'line_no': 257}, {'indent': 12, 'line': '            AND 9) THEN', 'line_no': 258}, {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}, {'indent': 12, 'line': '            END IF;', 'line_no': 260}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'indent': 12, 'line': '            IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0', 'line_no': 262}, {'indent': 12, 'line': '            AND 9', 'line_no': 263}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0', 'line_no': 264}, {'indent': 12, 'line': '            AND 9', 'line_no': 265}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0', 'line_no': 266}, {'indent': 12, 'line': '            AND 9', 'line_no': 267}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0', 'line_no': 268}, {'indent': 12, 'line': '            AND 9', 'line_no': 269}, {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0', 'line_no': 270}, {'indent': 12, 'line': '            AND 9) THEN', 'line_no': 271}, {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}, {'indent': 12, 'line': '            END IF;', 'line_no': 273}]}], 'else_statements': [{'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}]}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0', 'line_no': 251}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 251
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 251 i: 260
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 10
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND 9', 'line_no': 252}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0', 'line_no': 253}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND 9', 'line_no': 254}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0', 'line_no': 255}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND 9', 'line_no': 256}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0', 'line_no': 257}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND 9) THEN', 'line_no': 258}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}]
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0', 'line_no': 262}
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 262
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 262 i: 273
2025-09-03 04:09:43,056 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 12
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND 9', 'line_no': 263}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0', 'line_no': 264}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND 9', 'line_no': 265}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0', 'line_no': 266}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND 9', 'line_no': 267}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0', 'line_no': 268}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND 9', 'line_no': 269}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0', 'line_no': 270}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND 9) THEN', 'line_no': 271}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}]
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 278}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      SELECT', 'line_no': 281}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 282}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      FROM', 'line_no': 283}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         (', 'line_no': 284}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 285}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               THEME_NO', 'line_no': 286}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FROM', 'line_no': 287}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               V_THEMES', 'line_no': 288}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            UNION', 'line_no': 289}
2025-09-03 04:09:43,057 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            ALL', 'line_no': 290}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 291}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               THEME_NO', 'line_no': 292}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FROM', 'line_no': 293}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               GMD.THEMES_ARCHIVE', 'line_no': 294}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         )                  T', 'line_no': 295}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      WHERE', 'line_no': 296}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         T.THEME_NO = :NEW.THEME_NO;', 'line_no': 297}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (V_COUNTER > 0) THEN', 'line_no': 298}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 298
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 298 i: 300
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}]
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 298, 'then_line_no': 298, 'if_indent': 6, 'end_if_line_no': 300, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 302}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 303}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 306}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 306
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 306 i: 308
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}]
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 306, 'then_line_no': 306, 'if_indent': 6, 'end_if_line_no': 308, 'then_statements': [{'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (UPPER(:NEW.PORTF_PROJ_CD) = 'N') THEN", 'line_no': 310}
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 310
2025-09-03 04:09:43,058 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 310 i: 315
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 6
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 311}, {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 312}, {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}, {'indent': 9, 'line': '         END IF;', 'line_no': 314}]
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'N') ", 'type': 'if_else', 'if_line_no': 310, 'then_line_no': 310, 'if_indent': 6, 'end_if_line_no': 315, 'then_statements': [{'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 311}, {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 312}, {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}, {'indent': 9, 'line': '         END IF;', 'line_no': 314}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 311}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 311
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 311 i: 314
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 4
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 312}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}]
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') THEN", 'line_no': 319}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 319
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 319 i: 344
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 23
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') ", 'type': 'if_else', 'if_line_no': 319, 'then_line_no': 319, 'if_indent': 6, 'end_if_line_no': 344, 'then_statements': [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 320}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => NULL,', 'line_no': 321}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => V_MOLECULE_ID,', 'line_no': 322}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 323}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 324}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 325}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 326}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 327}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 328}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 329}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 330}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 331}, {'indent': 9, 'line': '         );', 'line_no': 332}, {'indent': 9, 'line': '         IF (LENGTH(V_DESCRIPTION) > 90) THEN', 'line_no': 333}, {'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}, {'indent': 9, 'line': '         END IF;', 'line_no': 335}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 337}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 338}], 'if_elses': [], 'else_statements': [[{'indent': 9, 'line': '         V_DESCRIPTION := :NEW.THEME_DESC;', 'line_no': 342}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'N';", 'line_no': 343}, {'indent': 6, 'line': '      END IF;', 'line_no': 344}]]}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 320}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_THEME_NO_PORTF => NULL,', 'line_no': 321}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => V_MOLECULE_ID,', 'line_no': 322}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 323}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 324}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 325}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 326}
2025-09-03 04:09:43,059 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 327}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 328}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 329}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 330}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 331}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         );', 'line_no': 332}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         IF (LENGTH(V_DESCRIPTION) > 90) THEN', 'line_no': 333}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 333
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 333 i: 335
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}]
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 337}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 338}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 9, 'line': '         V_DESCRIPTION := :NEW.THEME_DESC;', 'line_no': 342}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'N';", 'line_no': 343}, {'indent': 6, 'line': '      END IF;', 'line_no': 344}]
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 346}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      SELECT', 'line_no': 347}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 348}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      FROM', 'line_no': 349}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_THEMES T', 'line_no': 350}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      WHERE', 'line_no': 351}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION;', 'line_no': 352}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (V_COUNTER > 0) THEN', 'line_no': 353}
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 353
2025-09-03 04:09:43,060 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 353 i: 355
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}]
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 353, 'then_line_no': 353, 'if_indent': 6, 'end_if_line_no': 355, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 357}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'line_no': 358}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'line_no': 359}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      INSERT INTO GMD.THEMES(', 'line_no': 360}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         THEME_NO,', 'line_no': 361}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         REGISTRAT_DATE,', 'line_no': 362}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         ODG_NO,', 'line_no': 363}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RESGRP_CD,', 'line_no': 364}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RESLIN_CD,', 'line_no': 365}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         THEME_DESC,', 'line_no': 366}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         SHORT_NAME,', 'line_no': 367}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         STATUS_CD,', 'line_no': 368}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         DBA_CD,', 'line_no': 369}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         IN_PREP_IND,', 'line_no': 370}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         PROD_SHORT_CD,', 'line_no': 371}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         TRADEMARK_NO,', 'line_no': 372}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         BIO_ACTIVITY,', 'line_no': 373}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         APPLICANT,', 'line_no': 374}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         CONTACT,', 'line_no': 375}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         REGISTRAR,', 'line_no': 376}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         LINE_EXT_INFO,', 'line_no': 377}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         PORTF_PROJ_CD,', 'line_no': 378}
2025-09-03 04:09:43,061 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         CO_DEV_PRTNR,', 'line_no': 379}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         TECHNOLOGY_PRTNR,', 'line_no': 380}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         OFFICIAL_IND,', 'line_no': 381}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         CO_MAR_PRTNR,', 'line_no': 382}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         VALID_TO,', 'line_no': 383}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         PORTF_DA_GROUP_ID,', 'line_no': 384}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         MANUAL_SHORT_DESC', 'line_no': 385}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      ) VALUES (', 'line_no': 386}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.THEME_NO,', 'line_no': 387}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_D_REGISTRAT_DATE,', 'line_no': 388}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_ODG_NO,', 'line_no': 389}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_RESGRP_CD,', 'line_no': 390}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_RESLIN_CD,', 'line_no': 391}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_DESCRIPTION,', 'line_no': 392}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_SHORT_NAME,', 'line_no': 393}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_STATUS_CD,', 'line_no': 394}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_DBA_CD,', 'line_no': 395}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.IN_PREP_IND,', 'line_no': 396}
2025-09-03 04:09:43,062 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.PROD_SHORT_CD,', 'line_no': 397}
2025-09-03 04:09:43,063 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.TRADEMARK_NO,', 'line_no': 398}
2025-09-03 04:09:43,063 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.BIO_ACTIVITY,', 'line_no': 399}
2025-09-03 04:09:43,063 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.APPLICANT,', 'line_no': 400}
2025-09-03 04:09:43,063 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.CONTACT,', 'line_no': 401}
2025-09-03 04:09:43,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         TXO_UTIL.GET_USERID,', 'line_no': 402}
2025-09-03 04:09:43,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.LINE_EXT_INFO,', 'line_no': 403}
2025-09-03 04:09:43,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_PORTF_PROJ_CD,', 'line_no': 404}
2025-09-03 04:09:43,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.CO_DEV_PRTNR,', 'line_no': 405}
2025-09-03 04:09:43,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.TECHNOLOGY_PRTNR,', 'line_no': 406}
2025-09-03 04:09:43,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.OFFICIAL_IND,', 'line_no': 407}
2025-09-03 04:09:43,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.CO_MAR_PRTNR,', 'line_no': 408}
2025-09-03 04:09:43,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_VALID_TO,', 'line_no': 409}
2025-09-03 04:09:43,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.PORTF_DA_GROUP_ID,', 'line_no': 410}
2025-09-03 04:09:43,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         :NEW.MANUAL_SHORT_DESC', 'line_no': 411}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      );', 'line_no': 412}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (:OLD.MOLECULE_ID IS NULL', 'line_no': 413}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 413
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 413 i: 428
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 14
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': '      AND :NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 414}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}, {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}, {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}, {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}, {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}, {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}, {'indent': 12, 'line': '            1,', 'line_no': 425}, {'indent': 12, 'line': "            'Y'", 'line_no': 426}, {'indent': 9, 'line': '         );', 'line_no': 427}]
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 413, 'then_line_no': 414, 'if_indent': 6, 'end_if_line_no': 428, 'then_statements': [{'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}, {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}, {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}, {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}, {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}, {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}, {'indent': 12, 'line': '            1,', 'line_no': 425}, {'indent': 12, 'line': "            'Y'", 'line_no': 426}, {'indent': 9, 'line': '         );', 'line_no': 427}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            1,', 'line_no': 425}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            'Y'", 'line_no': 426}
2025-09-03 04:09:43,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         );', 'line_no': 427}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (:OLD.IN_PREP_IND = 'N'", 'line_no': 435}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 435
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 435 i: 439
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 5
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': "      OR (:OLD.IN_PREP_IND = 'Y'", 'line_no': 436}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': "      AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 THEN", 'line_no': 437}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}]
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (:NEW.THEME_NO <> :OLD.THEME_NO) THEN', 'line_no': 441}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 441
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 441 i: 443
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}]
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 449}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 449
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 449 i: 456
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 5
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}], 'if_elses': [], 'else_statements': [[{'indent': 9, 'line': '         V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 455}, {'indent': 6, 'line': '      END IF;', 'line_no': 456}]]}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}
2025-09-03 04:09:43,066 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 9, 'line': '         V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 455}, {'indent': 6, 'line': '      END IF;', 'line_no': 456}]
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (UPPER(:NEW.PORTF_PROJ_CD) = 'Y'", 'line_no': 458}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 458
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 458 i: 484
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 27
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': "      AND(V_STATUS_CD <> 'C'", 'line_no': 459}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': "      OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) THEN", 'line_no': 460}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}], 'if_elses': [], 'else_statements': [[{'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 477}, {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 478}, {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 479}, {'indent': 9, 'line': '         ELSE', 'line_no': 480}, {'indent': 12, 'line': '            V_DESCRIPTION := :NEW.THEME_DESC;', 'line_no': 481}, {'indent': 12, 'line': '            V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD;', 'line_no': 482}, {'indent': 9, 'line': '         END IF;', 'line_no': 483}, {'indent': 6, 'line': '      END IF;', 'line_no': 484}]]}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         );', 'line_no': 473}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}
2025-09-03 04:09:43,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 9, 'line': '         IF (:NEW.THEME_DESC IS NULL', 'line_no': 477}, {'indent': 9, 'line': '         OR LENGTH(:NEW.THEME_DESC) = 0) THEN', 'line_no': 478}, {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 479}, {'indent': 9, 'line': '         ELSE', 'line_no': 480}, {'indent': 12, 'line': '            V_DESCRIPTION := :NEW.THEME_DESC;', 'line_no': 481}, {'indent': 12, 'line': '            V_PORTF_PROJ_CD := :NEW.PORTF_PROJ_CD;', 'line_no': 482}, {'indent': 9, 'line': '         END IF;', 'line_no': 483}, {'indent': 6, 'line': '      END IF;', 'line_no': 484}]
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (LENGTH(V_DESCRIPTION) > 90) THEN', 'line_no': 486}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 486
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 486 i: 488
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}]
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      SELECT', 'line_no': 494}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      FROM', 'line_no': 496}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      WHERE', 'line_no': 498}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (V_COUNTER > 0) THEN', 'line_no': 501}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 501
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 501 i: 503
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}]
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}
2025-09-03 04:09:43,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (:NEW.OFFICIAL_IND = 'N') THEN", 'line_no': 508}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 508
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 508 i: 581
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 68
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}], 'if_elses': [], 'else_statements': [[{'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 539}, {'indent': 9, 'line': '         SELECT', 'line_no': 542}, {'indent': 12, 'line': '            COUNT(*) INTO V_COUNTER', 'line_no': 543}, {'indent': 9, 'line': '         FROM', 'line_no': 544}, {'indent': 12, 'line': '            V_THEMES T', 'line_no': 545}, {'indent': 9, 'line': '         WHERE', 'line_no': 546}, {'indent': 12, 'line': '            TRUNC(T.REGISTRAT_DATE) = TRUNC(SYSDATE)', 'line_no': 547}, {'indent': 12, 'line': '            AND T.THEME_NO = :NEW.THEME_NO;', 'line_no': 548}, {'indent': 9, 'line': '         IF (V_COUNTER > 0) THEN', 'line_no': 549}, {'indent': 12, 'line': '            RAISE ONLYONEOFFICIALCHANGEPERDAY;', 'line_no': 550}, {'indent': 9, 'line': '         END IF;', 'line_no': 551}, {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 553}, {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 554}, {'indent': 9, 'line': '         SET', 'line_no': 555}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 556}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 557}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 558}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 559}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 560}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 561}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 562}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 563}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 564}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 565}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 566}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 567}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 568}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 569}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 570}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 571}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 572}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 573}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 574}, {'indent': 12, 'line': '            REGISTRAT_DATE = SYSDATE,', 'line_no': 575}, {'indent': 12, 'line': '            REGISTRAR = V_USERID,', 'line_no': 576}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 577}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 578}, {'indent': 9, 'line': '         WHERE', 'line_no': 579}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO;', 'line_no': 580}, {'indent': 6, 'line': '      END IF;', 'line_no': 581}]]}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         SET', 'line_no': 510}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}
2025-09-03 04:09:43,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 532}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 539}, {'indent': 9, 'line': '         SELECT', 'line_no': 542}, {'indent': 12, 'line': '            COUNT(*) INTO V_COUNTER', 'line_no': 543}, {'indent': 9, 'line': '         FROM', 'line_no': 544}, {'indent': 12, 'line': '            V_THEMES T', 'line_no': 545}, {'indent': 9, 'line': '         WHERE', 'line_no': 546}, {'indent': 12, 'line': '            TRUNC(T.REGISTRAT_DATE) = TRUNC(SYSDATE)', 'line_no': 547}, {'indent': 12, 'line': '            AND T.THEME_NO = :NEW.THEME_NO;', 'line_no': 548}, {'indent': 9, 'line': '         IF (V_COUNTER > 0) THEN', 'line_no': 549}, {'indent': 12, 'line': '            RAISE ONLYONEOFFICIALCHANGEPERDAY;', 'line_no': 550}, {'indent': 9, 'line': '         END IF;', 'line_no': 551}, {'indent': 9, 'line': '         V_COUNTER := NULL;', 'line_no': 553}, {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 554}, {'indent': 9, 'line': '         SET', 'line_no': 555}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 556}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 557}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 558}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 559}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 560}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 561}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 562}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 563}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 564}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 565}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 566}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 567}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 568}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 569}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 570}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 571}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 572}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 573}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 574}, {'indent': 12, 'line': '            REGISTRAT_DATE = SYSDATE,', 'line_no': 575}, {'indent': 12, 'line': '            REGISTRAR = V_USERID,', 'line_no': 576}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 577}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 578}, {'indent': 9, 'line': '         WHERE', 'line_no': 579}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO;', 'line_no': 580}, {'indent': 6, 'line': '      END IF;', 'line_no': 581}]
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'indent': 12, 'line': '            IF (V_SEC_MOL_CNT > 0) THEN', 'line_no': 621}, {'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}, {'indent': 12, 'line': '            ELSE', 'line_no': 623}, {'indent': 15, 'line': '               UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 626}, {'indent': 15, 'line': '               SET', 'line_no': 627}, {'indent': 18, 'line': "                  A.VALID_IND = 'N'", 'line_no': 628}, {'indent': 15, 'line': '               WHERE', 'line_no': 629}, {'indent': 18, 'line': '                  A.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 630}, {'indent': 18, 'line': '                  AND A.THEME_NO = :NEW.THEME_NO', 'line_no': 631}, {'indent': 18, 'line': '                  AND A.MOLECULE_SEQ_NO = 1', 'line_no': 632}, {'indent': 18, 'line': "                  AND A.VALID_IND = 'Y';", 'line_no': 633}, {'indent': 12, 'line': '            END IF;', 'line_no': 634}]}], 'else_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               1,', 'line_no': 598}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': "               'Y'", 'line_no': 599}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            );', 'line_no': 600}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SET', 'line_no': 605}
2025-09-03 04:09:43,070 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 608}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 613}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FROM', 'line_no': 615}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 617}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (V_SEC_MOL_CNT > 0) THEN', 'line_no': 621}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 621
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 621 i: 634
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 12
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}], 'if_elses': [], 'else_statements': [[{'indent': 15, 'line': '               UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 626}, {'indent': 15, 'line': '               SET', 'line_no': 627}, {'indent': 18, 'line': "                  A.VALID_IND = 'N'", 'line_no': 628}, {'indent': 15, 'line': '               WHERE', 'line_no': 629}, {'indent': 18, 'line': '                  A.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 630}, {'indent': 18, 'line': '                  AND A.THEME_NO = :NEW.THEME_NO', 'line_no': 631}, {'indent': 18, 'line': '                  AND A.MOLECULE_SEQ_NO = 1', 'line_no': 632}, {'indent': 18, 'line': "                  AND A.VALID_IND = 'Y';", 'line_no': 633}, {'indent': 12, 'line': '            END IF;', 'line_no': 634}]]}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 15, 'line': '               UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 626}, {'indent': 15, 'line': '               SET', 'line_no': 627}, {'indent': 18, 'line': "                  A.VALID_IND = 'N'", 'line_no': 628}, {'indent': 15, 'line': '               WHERE', 'line_no': 629}, {'indent': 18, 'line': '                  A.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 630}, {'indent': 18, 'line': '                  AND A.THEME_NO = :NEW.THEME_NO', 'line_no': 631}, {'indent': 18, 'line': '                  AND A.MOLECULE_SEQ_NO = 1', 'line_no': 632}, {'indent': 18, 'line': "                  AND A.VALID_IND = 'Y';", 'line_no': 633}, {'indent': 12, 'line': '            END IF;', 'line_no': 634}]
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            NULL;', 'line_no': 636}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF ((:OLD.IN_PREP_IND = 'N')", 'line_no': 639}
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 639
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 639 i: 642
2025-09-03 04:09:43,071 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 4
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': '      AND V_IS_ADMIN_CNT = 0) THEN', 'line_no': 640}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}]
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      IF (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) THEN", 'line_no': 648}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 648
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 648 i: 655
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 8
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}], 'if_elses': [], 'else_statements': [[{'indent': 9, 'line': '         RAISE DELETE_NO_MORE_POSSIBLE;', 'line_no': 654}, {'indent': 6, 'line': '      END IF;', 'line_no': 655}]]}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 650}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 9, 'line': '         RAISE DELETE_NO_MORE_POSSIBLE;', 'line_no': 654}, {'indent': 6, 'line': '      END IF;', 'line_no': 655}]
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   IF (INSERTING', 'line_no': 660}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 660
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 660 i: 747
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 71
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 3, 'line': '   OR UPDATING) THEN', 'line_no': 661}
2025-09-03 04:09:43,072 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 6, 'line': '      IF (:NEW.PROPOSAL_ID IS NOT NULL', 'line_no': 662}, {'indent': 6, 'line': '      AND :OLD.PROPOSAL_ID IS NULL) THEN', 'line_no': 663}, {'indent': 9, 'line': '         SELECT', 'line_no': 666}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}, {'indent': 9, 'line': '         FROM', 'line_no': 668}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}, {'indent': 9, 'line': '         WHERE', 'line_no': 670}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}, {'indent': 9, 'line': '         IF (V_EVOLVED_NMP_CNT = 0) THEN', 'line_no': 677}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}, {'indent': 9, 'line': '         END IF;', 'line_no': 686}, {'indent': 6, 'line': '      ELSE', 'line_no': 687}, {'indent': 9, 'line': '         IF (:NEW.PROPOSAL_ID IS NULL', 'line_no': 688}, {'indent': 9, 'line': '         AND :OLD.PROPOSAL_ID IS NOT NULL) THEN', 'line_no': 689}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 690}, {'indent': 12, 'line': '            SET', 'line_no': 691}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'A',", 'line_no': 692}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = NULL', 'line_no': 693}, {'indent': 12, 'line': '            WHERE', 'line_no': 694}, {'indent': 15, 'line': '               PROPOSAL_ID = :OLD.PROPOSAL_ID;', 'line_no': 695}, {'indent': 9, 'line': '         ELSE', 'line_no': 696}, {'indent': 12, 'line': '            IF (:NEW.PROPOSAL_ID IS NOT NULL', 'line_no': 697}, {'indent': 12, 'line': '            AND :OLD.PROPOSAL_ID IS NOT NULL', 'line_no': 698}, {'indent': 12, 'line': '            AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID) THEN', 'line_no': 699}, {'indent': 15, 'line': '               UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 702}, {'indent': 15, 'line': '               SET', 'line_no': 703}, {'indent': 18, 'line': "                  PROPOSAL_STATUS_CD = 'A',", 'line_no': 704}, {'indent': 18, 'line': '                  EVOLVED_THEME_NO = NULL', 'line_no': 705}, {'indent': 15, 'line': '               WHERE', 'line_no': 706}, {'indent': 18, 'line': '                  PROPOSAL_ID = :OLD.PROPOSAL_ID;', 'line_no': 707}, {'indent': 15, 'line': '               UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 710}, {'indent': 15, 'line': '               SET', 'line_no': 711}, {'indent': 18, 'line': "                  PROPOSAL_STATUS_CD = 'E',", 'line_no': 712}, {'indent': 18, 'line': '                  EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 713}, {'indent': 18, 'line': '                  PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 714}, {'indent': 18, 'line': "                  REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 715}, {'indent': 15, 'line': '               WHERE', 'line_no': 716}, {'indent': 18, 'line': '                  PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 717}, {'indent': 12, 'line': '            END IF;', 'line_no': 718}, {'indent': 9, 'line': '         END IF;', 'line_no': 719}, {'indent': 6, 'line': '      END IF;', 'line_no': 720}, {'indent': 6, 'line': '      IF (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0)', 'line_no': 724}, {'indent': 6, 'line': "      AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) THEN", 'line_no': 725}, {'indent': 9, 'line': '         SELECT', 'line_no': 728}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}, {'indent': 9, 'line': '         FROM', 'line_no': 730}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}, {'indent': 9, 'line': '         WHERE', 'line_no': 732}, {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}, {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}, {'indent': 9, 'line': '         IF (V_EVOLVED_NMP_CNT > 0) THEN', 'line_no': 735}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}, {'indent': 9, 'line': '         END IF;', 'line_no': 745}, {'indent': 6, 'line': '      END IF;', 'line_no': 746}]
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 660, 'then_line_no': 661, 'if_indent': 3, 'end_if_line_no': 747, 'then_statements': [{'indent': 6, 'line': '      IF (:NEW.PROPOSAL_ID IS NOT NULL', 'line_no': 662}, {'indent': 6, 'line': '      AND :OLD.PROPOSAL_ID IS NULL) THEN', 'line_no': 663}, {'indent': 9, 'line': '         SELECT', 'line_no': 666}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}, {'indent': 9, 'line': '         FROM', 'line_no': 668}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}, {'indent': 9, 'line': '         WHERE', 'line_no': 670}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}, {'indent': 9, 'line': '         IF (V_EVOLVED_NMP_CNT = 0) THEN', 'line_no': 677}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}, {'indent': 9, 'line': '         END IF;', 'line_no': 686}, {'indent': 6, 'line': '      ELSE', 'line_no': 687}, {'indent': 9, 'line': '         IF (:NEW.PROPOSAL_ID IS NULL', 'line_no': 688}, {'indent': 9, 'line': '         AND :OLD.PROPOSAL_ID IS NOT NULL) THEN', 'line_no': 689}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 690}, {'indent': 12, 'line': '            SET', 'line_no': 691}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'A',", 'line_no': 692}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = NULL', 'line_no': 693}, {'indent': 12, 'line': '            WHERE', 'line_no': 694}, {'indent': 15, 'line': '               PROPOSAL_ID = :OLD.PROPOSAL_ID;', 'line_no': 695}, {'indent': 9, 'line': '         ELSE', 'line_no': 696}, {'indent': 12, 'line': '            IF (:NEW.PROPOSAL_ID IS NOT NULL', 'line_no': 697}, {'indent': 12, 'line': '            AND :OLD.PROPOSAL_ID IS NOT NULL', 'line_no': 698}, {'indent': 12, 'line': '            AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID) THEN', 'line_no': 699}, {'indent': 15, 'line': '               UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 702}, {'indent': 15, 'line': '               SET', 'line_no': 703}, {'indent': 18, 'line': "                  PROPOSAL_STATUS_CD = 'A',", 'line_no': 704}, {'indent': 18, 'line': '                  EVOLVED_THEME_NO = NULL', 'line_no': 705}, {'indent': 15, 'line': '               WHERE', 'line_no': 706}, {'indent': 18, 'line': '                  PROPOSAL_ID = :OLD.PROPOSAL_ID;', 'line_no': 707}, {'indent': 15, 'line': '               UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 710}, {'indent': 15, 'line': '               SET', 'line_no': 711}, {'indent': 18, 'line': "                  PROPOSAL_STATUS_CD = 'E',", 'line_no': 712}, {'indent': 18, 'line': '                  EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 713}, {'indent': 18, 'line': '                  PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 714}, {'indent': 18, 'line': "                  REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 715}, {'indent': 15, 'line': '               WHERE', 'line_no': 716}, {'indent': 18, 'line': '                  PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 717}, {'indent': 12, 'line': '            END IF;', 'line_no': 718}, {'indent': 9, 'line': '         END IF;', 'line_no': 719}, {'indent': 6, 'line': '      END IF;', 'line_no': 720}, {'indent': 6, 'line': '      IF (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0)', 'line_no': 724}, {'indent': 6, 'line': "      AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) THEN", 'line_no': 725}, {'indent': 9, 'line': '         SELECT', 'line_no': 728}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}, {'indent': 9, 'line': '         FROM', 'line_no': 730}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}, {'indent': 9, 'line': '         WHERE', 'line_no': 732}, {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}, {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}, {'indent': 9, 'line': '         IF (V_EVOLVED_NMP_CNT > 0) THEN', 'line_no': 735}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}, {'indent': 9, 'line': '         END IF;', 'line_no': 745}, {'indent': 6, 'line': '      END IF;', 'line_no': 746}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (:NEW.PROPOSAL_ID IS NOT NULL', 'line_no': 662}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 662
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 662 i: 720
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 49
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': '      AND :OLD.PROPOSAL_ID IS NULL) THEN', 'line_no': 663}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 662, 'then_line_no': 663, 'if_indent': 6, 'end_if_line_no': 720, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 666}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}, {'indent': 9, 'line': '         FROM', 'line_no': 668}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}, {'indent': 9, 'line': '         WHERE', 'line_no': 670}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}, {'indent': 9, 'line': '         IF (V_EVOLVED_NMP_CNT = 0) THEN', 'line_no': 677}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}, {'indent': 9, 'line': '         END IF;', 'line_no': 686}], 'if_elses': [], 'else_statements': [[{'indent': 9, 'line': '         IF (:NEW.PROPOSAL_ID IS NULL', 'line_no': 688}, {'indent': 9, 'line': '         AND :OLD.PROPOSAL_ID IS NOT NULL) THEN', 'line_no': 689}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 690}, {'indent': 12, 'line': '            SET', 'line_no': 691}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'A',", 'line_no': 692}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = NULL', 'line_no': 693}, {'indent': 12, 'line': '            WHERE', 'line_no': 694}, {'indent': 15, 'line': '               PROPOSAL_ID = :OLD.PROPOSAL_ID;', 'line_no': 695}, {'indent': 9, 'line': '         ELSE', 'line_no': 696}, {'indent': 12, 'line': '            IF (:NEW.PROPOSAL_ID IS NOT NULL', 'line_no': 697}, {'indent': 12, 'line': '            AND :OLD.PROPOSAL_ID IS NOT NULL', 'line_no': 698}, {'indent': 12, 'line': '            AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID) THEN', 'line_no': 699}, {'indent': 15, 'line': '               UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 702}, {'indent': 15, 'line': '               SET', 'line_no': 703}, {'indent': 18, 'line': "                  PROPOSAL_STATUS_CD = 'A',", 'line_no': 704}, {'indent': 18, 'line': '                  EVOLVED_THEME_NO = NULL', 'line_no': 705}, {'indent': 15, 'line': '               WHERE', 'line_no': 706}, {'indent': 18, 'line': '                  PROPOSAL_ID = :OLD.PROPOSAL_ID;', 'line_no': 707}, {'indent': 15, 'line': '               UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 710}, {'indent': 15, 'line': '               SET', 'line_no': 711}, {'indent': 18, 'line': "                  PROPOSAL_STATUS_CD = 'E',", 'line_no': 712}, {'indent': 18, 'line': '                  EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 713}, {'indent': 18, 'line': '                  PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 714}, {'indent': 18, 'line': "                  REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 715}, {'indent': 15, 'line': '               WHERE', 'line_no': 716}, {'indent': 18, 'line': '                  PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 717}, {'indent': 12, 'line': '            END IF;', 'line_no': 718}, {'indent': 9, 'line': '         END IF;', 'line_no': 719}, {'indent': 6, 'line': '      END IF;', 'line_no': 720}]]}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 666}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         FROM', 'line_no': 668}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 670}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         IF (V_EVOLVED_NMP_CNT = 0) THEN', 'line_no': 677}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 677
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 677 i: 686
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 10
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}]
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SET', 'line_no': 679}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 684}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 9, 'line': '         IF (:NEW.PROPOSAL_ID IS NULL', 'line_no': 688}, {'indent': 9, 'line': '         AND :OLD.PROPOSAL_ID IS NOT NULL) THEN', 'line_no': 689}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 690}, {'indent': 12, 'line': '            SET', 'line_no': 691}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'A',", 'line_no': 692}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = NULL', 'line_no': 693}, {'indent': 12, 'line': '            WHERE', 'line_no': 694}, {'indent': 15, 'line': '               PROPOSAL_ID = :OLD.PROPOSAL_ID;', 'line_no': 695}, {'indent': 9, 'line': '         ELSE', 'line_no': 696}, {'indent': 12, 'line': '            IF (:NEW.PROPOSAL_ID IS NOT NULL', 'line_no': 697}, {'indent': 12, 'line': '            AND :OLD.PROPOSAL_ID IS NOT NULL', 'line_no': 698}, {'indent': 12, 'line': '            AND :NEW.PROPOSAL_ID <> :OLD.PROPOSAL_ID) THEN', 'line_no': 699}, {'indent': 15, 'line': '               UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 702}, {'indent': 15, 'line': '               SET', 'line_no': 703}, {'indent': 18, 'line': "                  PROPOSAL_STATUS_CD = 'A',", 'line_no': 704}, {'indent': 18, 'line': '                  EVOLVED_THEME_NO = NULL', 'line_no': 705}, {'indent': 15, 'line': '               WHERE', 'line_no': 706}, {'indent': 18, 'line': '                  PROPOSAL_ID = :OLD.PROPOSAL_ID;', 'line_no': 707}, {'indent': 15, 'line': '               UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 710}, {'indent': 15, 'line': '               SET', 'line_no': 711}, {'indent': 18, 'line': "                  PROPOSAL_STATUS_CD = 'E',", 'line_no': 712}, {'indent': 18, 'line': '                  EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 713}, {'indent': 18, 'line': '                  PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 714}, {'indent': 18, 'line': "                  REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 715}, {'indent': 15, 'line': '               WHERE', 'line_no': 716}, {'indent': 18, 'line': '                  PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 717}, {'indent': 12, 'line': '            END IF;', 'line_no': 718}, {'indent': 9, 'line': '         END IF;', 'line_no': 719}, {'indent': 6, 'line': '      END IF;', 'line_no': 720}]
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0)', 'line_no': 724}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 724
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 724 i: 746
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 19
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': "      AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) THEN", 'line_no': 725}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         SELECT', 'line_no': 728}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}, {'indent': 9, 'line': '         FROM', 'line_no': 730}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}, {'indent': 9, 'line': '         WHERE', 'line_no': 732}, {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}, {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}, {'indent': 9, 'line': '         IF (V_EVOLVED_NMP_CNT > 0) THEN', 'line_no': 735}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}, {'indent': 9, 'line': '         END IF;', 'line_no': 745}]
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) ", 'type': 'if_else', 'if_line_no': 724, 'then_line_no': 725, 'if_indent': 6, 'end_if_line_no': 746, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 728}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}, {'indent': 9, 'line': '         FROM', 'line_no': 730}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}, {'indent': 9, 'line': '         WHERE', 'line_no': 732}, {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}, {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}, {'indent': 9, 'line': '         IF (V_EVOLVED_NMP_CNT > 0) THEN', 'line_no': 735}, {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}, {'indent': 9, 'line': '         END IF;', 'line_no': 745}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 728}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         FROM', 'line_no': 730}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 732}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         IF (V_EVOLVED_NMP_CNT > 0) THEN', 'line_no': 735}
2025-09-03 04:09:43,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 735
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 735 i: 745
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 9
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}]
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SET', 'line_no': 739}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 742}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 3, 'line': '   IF (INSERTING', 'line_no': 751}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 751
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 751 i: 803
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 36
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 3, 'line': '   AND :NEW.THEME_NO IS NOT NULL', 'line_no': 752}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 3, 'line': "   AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y') THEN", 'line_no': 753}
2025-09-03 04:09:43,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 6, 'line': '      IF (:NEW.PROPOSAL_ID IS NOT NULL) THEN', 'line_no': 754}, {'indent': 9, 'line': '         SELECT', 'line_no': 755}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}, {'indent': 9, 'line': '         FROM', 'line_no': 757}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}, {'indent': 9, 'line': '         WHERE', 'line_no': 759}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}, {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}, {'indent': 6, 'line': '      END IF;', 'line_no': 763}, {'indent': 6, 'line': '      IF (:NEW.PROPOSAL_ID IS NULL', 'line_no': 767}, {'indent': 6, 'line': '      OR (:NEW.PROPOSAL_ID IS NOT NULL', 'line_no': 768}, {'indent': 6, 'line': '      AND V_EVOLVED_NMP_CNT = 0)) THEN', 'line_no': 769}, {'indent': 9, 'line': '         IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 770}, {'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}, {'indent': 9, 'line': '         END IF;', 'line_no': 785}, {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}, {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}, {'indent': 12, 'line': "            'E',", 'line_no': 795}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}, {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}, {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}, {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}, {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}, {'indent': 9, 'line': '         );', 'line_no': 801}, {'indent': 6, 'line': '      END IF;', 'line_no': 802}]
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (INSERTING AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y') ", 'type': 'if_else', 'if_line_no': 751, 'then_line_no': 753, 'if_indent': 3, 'end_if_line_no': 803, 'then_statements': [{'indent': 6, 'line': '      IF (:NEW.PROPOSAL_ID IS NOT NULL) THEN', 'line_no': 754}, {'indent': 9, 'line': '         SELECT', 'line_no': 755}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}, {'indent': 9, 'line': '         FROM', 'line_no': 757}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}, {'indent': 9, 'line': '         WHERE', 'line_no': 759}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}, {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}, {'indent': 6, 'line': '      END IF;', 'line_no': 763}, {'indent': 6, 'line': '      IF (:NEW.PROPOSAL_ID IS NULL', 'line_no': 767}, {'indent': 6, 'line': '      OR (:NEW.PROPOSAL_ID IS NOT NULL', 'line_no': 768}, {'indent': 6, 'line': '      AND V_EVOLVED_NMP_CNT = 0)) THEN', 'line_no': 769}, {'indent': 9, 'line': '         IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 770}, {'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}, {'indent': 9, 'line': '         END IF;', 'line_no': 785}, {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}, {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}, {'indent': 12, 'line': "            'E',", 'line_no': 795}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}, {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}, {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}, {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}, {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}, {'indent': 9, 'line': '         );', 'line_no': 801}, {'indent': 6, 'line': '      END IF;', 'line_no': 802}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (:NEW.PROPOSAL_ID IS NOT NULL) THEN', 'line_no': 754}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 754
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 754 i: 763
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 10
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         SELECT', 'line_no': 755}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}, {'indent': 9, 'line': '         FROM', 'line_no': 757}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}, {'indent': 9, 'line': '         WHERE', 'line_no': 759}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}, {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}]
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 754, 'then_line_no': 754, 'if_indent': 6, 'end_if_line_no': 763, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 755}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}, {'indent': 9, 'line': '         FROM', 'line_no': 757}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}, {'indent': 9, 'line': '         WHERE', 'line_no': 759}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}, {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 755}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         FROM', 'line_no': 757}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 759}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      IF (:NEW.PROPOSAL_ID IS NULL', 'line_no': 767}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 767
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 767 i: 802
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 22
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': '      OR (:NEW.PROPOSAL_ID IS NOT NULL', 'line_no': 768}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 6, 'line': '      AND V_EVOLVED_NMP_CNT = 0)) THEN', 'line_no': 769}
2025-09-03 04:09:43,076 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 9, 'line': '         IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 770}, {'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}, {'indent': 9, 'line': '         END IF;', 'line_no': 785}, {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}, {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}, {'indent': 12, 'line': "            'E',", 'line_no': 795}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}, {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}, {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}, {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}, {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}, {'indent': 9, 'line': '         );', 'line_no': 801}]
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) ', 'type': 'if_else', 'if_line_no': 767, 'then_line_no': 769, 'if_indent': 6, 'end_if_line_no': 802, 'then_statements': [{'indent': 9, 'line': '         IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 770}, {'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}, {'indent': 9, 'line': '         END IF;', 'line_no': 785}, {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}, {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}, {'indent': 12, 'line': "            'E',", 'line_no': 795}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}, {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}, {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}, {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}, {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}, {'indent': 9, 'line': '         );', 'line_no': 801}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 770}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 770
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 770 i: 785
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}]
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               SELECT', 'line_no': 772}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               FROM', 'line_no': 776}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 15, 'line': '               WHERE', 'line_no': 778}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}
2025-09-03 04:09:43,077 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            'E',", 'line_no': 795}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         );', 'line_no': 801}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'type': 'begin_end', 'begin_line_no': 805, 'begin_indent': 3, 'begin_end_statements': [{'indent': 6, 'line': '      FOR I1 IN (', 'line_no': 809}, {'indent': 9, 'line': '         SELECT', 'line_no': 810}, {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 811}, {'indent': 12, 'line': '            A.REGISTRAT_DATE', 'line_no': 812}, {'indent': 9, 'line': '         FROM', 'line_no': 813}, {'indent': 12, 'line': '            V_THEMES A', 'line_no': 814}, {'indent': 9, 'line': '         WHERE', 'line_no': 815}, {'indent': 12, 'line': '            A.VALID_TO <= TRUNC(SYSDATE)', 'line_no': 816}, {'indent': 6, 'line': '      ) LOOP', 'line_no': 817}, {'indent': 9, 'line': '         DELETE FROM GMD.THEMES', 'line_no': 818}, {'indent': 9, 'line': '         WHERE', 'line_no': 819}, {'indent': 12, 'line': '            THEME_NO = I1.THEME_NO', 'line_no': 820}, {'indent': 12, 'line': '            AND REGISTRAT_DATE = I1.REGISTRAT_DATE;', 'line_no': 821}, {'indent': 6, 'line': '      END LOOP;', 'line_no': 822}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 823}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      FOR I1 IN (', 'line_no': 809}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 810}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 811}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            A.REGISTRAT_DATE', 'line_no': 812}
2025-09-03 04:09:43,078 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         FROM', 'line_no': 813}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_THEMES A', 'line_no': 814}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 815}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            A.VALID_TO <= TRUNC(SYSDATE)', 'line_no': 816}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      ) LOOP', 'line_no': 817}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         DELETE FROM GMD.THEMES', 'line_no': 818}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 819}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            THEME_NO = I1.THEME_NO', 'line_no': 820}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            AND REGISTRAT_DATE = I1.REGISTRAT_DATE;', 'line_no': 821}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      END LOOP;', 'line_no': 822}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20115, 'MDM_V_THEMES_IOF');", 'line_no': 826}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20116, 'MDM_V_THEMES_IOF');", 'line_no': 828}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20117, 'MDM_V_THEMES_IOF');", 'line_no': 830}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20118, 'This is not a valid Molecule ID');", 'line_no': 832}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20119, 'MDM_V_THEMES_IOF');", 'line_no': 834}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20101, 'This is not a valid Theme No');", 'line_no': 836}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted');", 'line_no': 838}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Theme No cannot be updated');", 'line_no': 840}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Theme Description "\'', 'line_no': 842}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 38, 'line': '                                      || V_DESCRIPTION', 'line_no': 843}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 38, 'line': '                                      || \'" is too long\');', 'line_no': 844}
2025-09-03 04:09:43,079 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Short Description Proposal "\'', 'line_no': 846}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 38, 'line': '                                      || :OLD.THEME_DESC_PROPOSAL', 'line_no': 847}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 38, 'line': '                                      || \'" is too long\');', 'line_no': 848}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Downstream Theme Description "\'', 'line_no': 850}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 38, 'line': '                                      || :OLD.THEME_DESC_ALT', 'line_no': 851}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 38, 'line': '                                      || \'" is too long\');', 'line_no': 852}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'This Theme No already exists');", 'line_no': 854}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Official Change for this Theme No and Day already exists');", 'line_no': 856}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'New Themes can only be inserted by Official Changes');", 'line_no': 858}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\' );', 'line_no': 860}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'This Theme Description already exists');", 'line_no': 862}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR( -20120, 'MDM_V_THEMES_IOF');", 'line_no': 864}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(', 'line_no': 866}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 9, 'line': '         -20900,', 'line_no': 867}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 7, 'line': "       'Debug in Themes IOF standard'", 'line_no': 868}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 7, 'line': '       );', 'line_no': 869}
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1056] - for_i: 809 i: 809
2025-09-03 04:09:43,080 - root - DEBUG - [OracleTriggerAnalyzer.py:1151] - for_loop_statement: {'for_expression': '( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )', 'type': 'for_loop', 'for_line_no': 809, 'for_indent': 6, 'end_for_line_no': 822, 'loop_variable': 'I1', 'for_statements': []} 809 817
2025-09-03 04:09:43,089 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 3, 'line': '   SELECT', 'line_no': 54}, {'indent': 6, 'line': '      NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID', 'line_no': 55}, {'indent': 3, 'line': '   FROM', 'line_no': 56}, {'indent': 6, 'line': '      DUAL;', 'line_no': 57}, {'indent': 3, 'line': '   SELECT', 'line_no': 61}, {'indent': 6, 'line': '      COUNT(*) INTO V_IS_ADMIN_CNT', 'line_no': 62}, {'indent': 3, 'line': '   FROM', 'line_no': 63}, {'indent': 6, 'line': '      TXO_USERS_ROLES_MAP', 'line_no': 64}, {'indent': 3, 'line': '   WHERE', 'line_no': 65}, {'indent': 6, 'line': '      ROLE_ID IN (315)', 'line_no': 66}, {'indent': 6, 'line': '      AND USERID = V_USERID;', 'line_no': 67}, {'indent': 3, 'line': '   SELECT', 'line_no': 70}, {'indent': 6, 'line': '      NEW_RG_NO INTO V_NEW_RG_NO', 'line_no': 71}, {'indent': 3, 'line': '   FROM', 'line_no': 72}, {'indent': 6, 'line': '      (', 'line_no': 73}, {'indent': 9, 'line': '         SELECT', 'line_no': 74}, {'indent': 12, 'line': '            NEW_RG_NO', 'line_no': 75}, {'indent': 9, 'line': '         FROM', 'line_no': 76}, {'indent': 12, 'line': '            (', 'line_no': 77}, {'indent': 15, 'line': '               SELECT', 'line_no': 78}, {'indent': 18, 'line': '                  ROWNUM AS NEW_RG_NO', 'line_no': 79}, {'indent': 15, 'line': '               FROM', 'line_no': 80}, {'indent': 18, 'line': '                  DUAL', 'line_no': 81}, {'indent': 15, 'line': '               CONNECT BY', 'line_no': 82}, {'indent': 18, 'line': '                  1 = 1', 'line_no': 83}, {'indent': 18, 'line': '                  AND ROWNUM <= 6999', 'line_no': 84}, {'indent': 12, 'line': '            )', 'line_no': 85}, {'indent': 9, 'line': '         WHERE', 'line_no': 86}, {'indent': 12, 'line': '            NEW_RG_NO > 5999 MINUS', 'line_no': 87}, {'indent': 12, 'line': '            SELECT', 'line_no': 88}, {'indent': 15, 'line': '               TO_NUMBER(RG_NO)', 'line_no': 89}, {'indent': 12, 'line': '            FROM', 'line_no': 90}, {'indent': 15, 'line': '               V_THEME_MOLECULES', 'line_no': 91}, {'indent': 6, 'line': '      )', 'line_no': 92}, {'indent': 3, 'line': '   WHERE', 'line_no': 93}, {'indent': 6, 'line': '      ROWNUM = 1;', 'line_no': 94}, {'condition': " (:NEW.IN_PREP_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 95, 'then_line_no': 96, 'if_indent': 3, 'end_if_line_no': 111, 'then_statements': [{'condition': " (:NEW.PORTF_PROJ_CD <> 'Y') ", 'type': 'if_else', 'if_line_no': 97, 'then_line_no': 97, 'if_indent': 6, 'end_if_line_no': 99, 'then_statements': [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 101, 'then_line_no': 102, 'if_indent': 6, 'end_if_line_no': 104, 'then_statements': [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 106, 'then_line_no': 106, 'if_indent': 6, 'end_if_line_no': 110, 'then_statements': [{'indent': 9, 'line': "         TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme '", 'line_no': 107}, {'indent': 30, 'line': '                              || :NEW.THEME_NO', 'line_no': 108}, {'indent': 30, 'line': "                              || '!');", 'line_no': 109}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 115, 'then_line_no': 115, 'if_indent': 3, 'end_if_line_no': 145, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 117}, {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}, {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}, {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}, {'indent': 9, 'line': '         FROM', 'line_no': 121}, {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}, {'indent': 9, 'line': '         WHERE', 'line_no': 123}, {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}, {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}]}], 'exception_line_no': 126, 'end_line_no': 129}, {'condition': ' (V_MOLECULE_RG_NO IS NULL) ', 'type': 'if_else', 'if_line_no': 131, 'then_line_no': 131, 'if_indent': 6, 'end_if_line_no': 144, 'then_statements': [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 133}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'indent': 3, 'line': '   V_ODG_NO := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);', 'line_no': 150}, {'indent': 3, 'line': '   V_RESGRP_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);', 'line_no': 151}, {'indent': 3, 'line': '   V_RESLIN_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);', 'line_no': 152}, {'indent': 3, 'line': '   V_RESLIN_DESC := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));', 'line_no': 153}, {'condition': ' (:NEW.STATUS_DESC IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 154, 'then_line_no': 154, 'if_indent': 3, 'end_if_line_no': 163, 'then_statements': [{'indent': 6, 'line': '      SELECT', 'line_no': 155}, {'indent': 9, 'line': '         STATUS_CD INTO V_STATUS_CD', 'line_no': 156}, {'indent': 6, 'line': '      FROM', 'line_no': 157}, {'indent': 9, 'line': '         MDM_V_THEME_STATUS', 'line_no': 158}, {'indent': 6, 'line': '      WHERE', 'line_no': 159}, {'indent': 9, 'line': '         STATE_DESC = :NEW.STATUS_DESC;', 'line_no': 160}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.DBA_DESC_CONCAT IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 165, 'then_line_no': 165, 'if_indent': 3, 'end_if_line_no': 176, 'then_statements': [{'indent': 6, 'line': '      SELECT', 'line_no': 166}, {'indent': 9, 'line': '         DBA_CD INTO V_DBA_CD', 'line_no': 167}, {'indent': 6, 'line': '      FROM', 'line_no': 168}, {'indent': 9, 'line': '         MDM_V_DISEASE_BIOLOGY_AREAS', 'line_no': 169}, {'indent': 6, 'line': '      WHERE', 'line_no': 170}, {'indent': 9, 'line': '         DBA_SHORT_DESC', 'line_no': 171}, {'indent': 9, 'line': "         || ' - '", 'line_no': 172}, {'indent': 9, 'line': '         || DBA_DESC = :NEW.DBA_DESC_CONCAT;', 'line_no': 173}], 'if_elses': [], 'else_statements': []}, {'indent': 3, 'line': '   V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);', 'line_no': 178}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 179, 'then_line_no': 179, 'if_indent': 3, 'end_if_line_no': 183, 'then_statements': [{'indent': 6, 'line': '      V_TRADEMARK_NO := :NEW.TRADEMARK_NO;', 'line_no': 180}], 'if_elses': [], 'else_statements': []}, {'indent': 3, 'line': "   V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');", 'line_no': 185}, {'condition': ' (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) ', 'type': 'if_else', 'if_line_no': 186, 'then_line_no': 187, 'if_indent': 3, 'end_if_line_no': 189, 'then_statements': [{'indent': 6, 'line': '      RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'line_no': 188}], 'if_elses': [], 'else_statements': []}, {'indent': 3, 'line': '   V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);', 'line_no': 191}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 192, 'then_line_no': 192, 'if_indent': 3, 'end_if_line_no': 656, 'then_statements': [{'condition': " (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 193, 'then_line_no': 194, 'if_indent': 6, 'end_if_line_no': 196, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_MOLECULE_ID := :NEW.MOLECULE_ID;', 'line_no': 201}, {'condition': " (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) ", 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 203, 'if_indent': 6, 'end_if_line_no': 247, 'then_statements': [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}]}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 278}, {'indent': 6, 'line': '      SELECT', 'line_no': 281}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 282}, {'indent': 6, 'line': '      FROM', 'line_no': 283}, {'indent': 9, 'line': '         (', 'line_no': 284}, {'indent': 12, 'line': '            SELECT', 'line_no': 285}, {'indent': 15, 'line': '               THEME_NO', 'line_no': 286}, {'indent': 12, 'line': '            FROM', 'line_no': 287}, {'indent': 15, 'line': '               V_THEMES', 'line_no': 288}, {'indent': 12, 'line': '            UNION', 'line_no': 289}, {'indent': 12, 'line': '            ALL', 'line_no': 290}, {'indent': 12, 'line': '            SELECT', 'line_no': 291}, {'indent': 15, 'line': '               THEME_NO', 'line_no': 292}, {'indent': 12, 'line': '            FROM', 'line_no': 293}, {'indent': 15, 'line': '               GMD.THEMES_ARCHIVE', 'line_no': 294}, {'indent': 9, 'line': '         )                  T', 'line_no': 295}, {'indent': 6, 'line': '      WHERE', 'line_no': 296}, {'indent': 9, 'line': '         T.THEME_NO = :NEW.THEME_NO;', 'line_no': 297}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 298, 'then_line_no': 298, 'if_indent': 6, 'end_if_line_no': 300, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 302}, {'indent': 6, 'line': '      V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 303}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 306, 'then_line_no': 306, 'if_indent': 6, 'end_if_line_no': 308, 'then_statements': [{'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'N') ", 'type': 'if_else', 'if_line_no': 310, 'then_line_no': 310, 'if_indent': 6, 'end_if_line_no': 315, 'then_statements': [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') ", 'type': 'if_else', 'if_line_no': 319, 'then_line_no': 319, 'if_indent': 6, 'end_if_line_no': 344, 'then_statements': [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 320}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => NULL,', 'line_no': 321}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => V_MOLECULE_ID,', 'line_no': 322}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 323}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 324}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 325}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 326}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 327}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 328}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 329}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 330}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 331}, {'indent': 9, 'line': '         );', 'line_no': 332}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 337}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 338}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 346}, {'indent': 6, 'line': '      SELECT', 'line_no': 347}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 348}, {'indent': 6, 'line': '      FROM', 'line_no': 349}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 350}, {'indent': 6, 'line': '      WHERE', 'line_no': 351}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION;', 'line_no': 352}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 353, 'then_line_no': 353, 'if_indent': 6, 'end_if_line_no': 355, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 357}, {'indent': 6, 'line': "      V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'line_no': 358}, {'indent': 6, 'line': '      V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'line_no': 359}, {'indent': 6, 'line': '      INSERT INTO GMD.THEMES(', 'line_no': 360}, {'indent': 9, 'line': '         THEME_NO,', 'line_no': 361}, {'indent': 9, 'line': '         REGISTRAT_DATE,', 'line_no': 362}, {'indent': 9, 'line': '         ODG_NO,', 'line_no': 363}, {'indent': 9, 'line': '         RESGRP_CD,', 'line_no': 364}, {'indent': 9, 'line': '         RESLIN_CD,', 'line_no': 365}, {'indent': 9, 'line': '         THEME_DESC,', 'line_no': 366}, {'indent': 9, 'line': '         SHORT_NAME,', 'line_no': 367}, {'indent': 9, 'line': '         STATUS_CD,', 'line_no': 368}, {'indent': 9, 'line': '         DBA_CD,', 'line_no': 369}, {'indent': 9, 'line': '         IN_PREP_IND,', 'line_no': 370}, {'indent': 9, 'line': '         PROD_SHORT_CD,', 'line_no': 371}, {'indent': 9, 'line': '         TRADEMARK_NO,', 'line_no': 372}, {'indent': 9, 'line': '         BIO_ACTIVITY,', 'line_no': 373}, {'indent': 9, 'line': '         APPLICANT,', 'line_no': 374}, {'indent': 9, 'line': '         CONTACT,', 'line_no': 375}, {'indent': 9, 'line': '         REGISTRAR,', 'line_no': 376}, {'indent': 9, 'line': '         LINE_EXT_INFO,', 'line_no': 377}, {'indent': 9, 'line': '         PORTF_PROJ_CD,', 'line_no': 378}, {'indent': 9, 'line': '         CO_DEV_PRTNR,', 'line_no': 379}, {'indent': 9, 'line': '         TECHNOLOGY_PRTNR,', 'line_no': 380}, {'indent': 9, 'line': '         OFFICIAL_IND,', 'line_no': 381}, {'indent': 9, 'line': '         CO_MAR_PRTNR,', 'line_no': 382}, {'indent': 9, 'line': '         VALID_TO,', 'line_no': 383}, {'indent': 9, 'line': '         PORTF_DA_GROUP_ID,', 'line_no': 384}, {'indent': 9, 'line': '         MANUAL_SHORT_DESC', 'line_no': 385}, {'indent': 6, 'line': '      ) VALUES (', 'line_no': 386}, {'indent': 9, 'line': '         :NEW.THEME_NO,', 'line_no': 387}, {'indent': 9, 'line': '         V_D_REGISTRAT_DATE,', 'line_no': 388}, {'indent': 9, 'line': '         V_ODG_NO,', 'line_no': 389}, {'indent': 9, 'line': '         V_RESGRP_CD,', 'line_no': 390}, {'indent': 9, 'line': '         V_RESLIN_CD,', 'line_no': 391}, {'indent': 9, 'line': '         V_DESCRIPTION,', 'line_no': 392}, {'indent': 9, 'line': '         V_SHORT_NAME,', 'line_no': 393}, {'indent': 9, 'line': '         V_STATUS_CD,', 'line_no': 394}, {'indent': 9, 'line': '         V_DBA_CD,', 'line_no': 395}, {'indent': 9, 'line': '         :NEW.IN_PREP_IND,', 'line_no': 396}, {'indent': 9, 'line': '         :NEW.PROD_SHORT_CD,', 'line_no': 397}, {'indent': 9, 'line': '         :NEW.TRADEMARK_NO,', 'line_no': 398}, {'indent': 9, 'line': '         :NEW.BIO_ACTIVITY,', 'line_no': 399}, {'indent': 9, 'line': '         :NEW.APPLICANT,', 'line_no': 400}, {'indent': 9, 'line': '         :NEW.CONTACT,', 'line_no': 401}, {'indent': 9, 'line': '         TXO_UTIL.GET_USERID,', 'line_no': 402}, {'indent': 9, 'line': '         :NEW.LINE_EXT_INFO,', 'line_no': 403}, {'indent': 9, 'line': '         V_PORTF_PROJ_CD,', 'line_no': 404}, {'indent': 9, 'line': '         :NEW.CO_DEV_PRTNR,', 'line_no': 405}, {'indent': 9, 'line': '         :NEW.TECHNOLOGY_PRTNR,', 'line_no': 406}, {'indent': 9, 'line': '         :NEW.OFFICIAL_IND,', 'line_no': 407}, {'indent': 9, 'line': '         :NEW.CO_MAR_PRTNR,', 'line_no': 408}, {'indent': 9, 'line': '         V_VALID_TO,', 'line_no': 409}, {'indent': 9, 'line': '         :NEW.PORTF_DA_GROUP_ID,', 'line_no': 410}, {'indent': 9, 'line': '         :NEW.MANUAL_SHORT_DESC', 'line_no': 411}, {'indent': 6, 'line': '      );', 'line_no': 412}, {'condition': ' (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 413, 'then_line_no': 414, 'if_indent': 6, 'end_if_line_no': 428, 'then_statements': [{'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}, {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}, {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}, {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}, {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}, {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}, {'indent': 12, 'line': '            1,', 'line_no': 425}, {'indent': 12, 'line': "            'Y'", 'line_no': 426}, {'indent': 9, 'line': '         );', 'line_no': 427}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 432, 'elif_indent': 3, 'condition': '(UPDATING)', 'then_line_no': 432, 'then_statements': [{'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}], 'if_elses': [], 'else_statements': []}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}, {'indent': 6, 'line': '      SELECT', 'line_no': 494}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}, {'indent': 6, 'line': '      FROM', 'line_no': 496}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}, {'indent': 6, 'line': '      WHERE', 'line_no': 498}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}, {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]}]}, {'type': 'elif_statement', 'elif_line_no': 638, 'elif_indent': 3, 'condition': '(DELETING)', 'then_line_no': 638, 'then_statements': [{'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}], 'if_elses': [], 'else_statements': []}, {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': []}, {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 660, 'then_line_no': 661, 'if_indent': 3, 'end_if_line_no': 747, 'then_statements': [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 662, 'then_line_no': 663, 'if_indent': 6, 'end_if_line_no': 720, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 666}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}, {'indent': 9, 'line': '         FROM', 'line_no': 668}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}, {'indent': 9, 'line': '         WHERE', 'line_no': 670}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) ", 'type': 'if_else', 'if_line_no': 724, 'then_line_no': 725, 'if_indent': 6, 'end_if_line_no': 746, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 728}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}, {'indent': 9, 'line': '         FROM', 'line_no': 730}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}, {'indent': 9, 'line': '         WHERE', 'line_no': 732}, {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}, {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (INSERTING AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y') ", 'type': 'if_else', 'if_line_no': 751, 'then_line_no': 753, 'if_indent': 3, 'end_if_line_no': 803, 'then_statements': [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 754, 'then_line_no': 754, 'if_indent': 6, 'end_if_line_no': 763, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 755}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}, {'indent': 9, 'line': '         FROM', 'line_no': 757}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}, {'indent': 9, 'line': '         WHERE', 'line_no': 759}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}, {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) ', 'type': 'if_else', 'if_line_no': 767, 'then_line_no': 769, 'if_indent': 6, 'end_if_line_no': 802, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}, {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}, {'indent': 12, 'line': "            'E',", 'line_no': 795}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}, {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}, {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}, {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}, {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}, {'indent': 9, 'line': '         );', 'line_no': 801}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'begin_end', 'begin_line_no': 805, 'begin_indent': 3, 'begin_end_statements': [{'for_expression': '( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )', 'type': 'for_loop', 'for_line_no': 809, 'for_indent': 6, 'end_for_line_no': 822, 'loop_variable': 'I1', 'for_statements': []}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 823}]
2025-09-03 04:09:43,089 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,089 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   SELECT', 'line_no': 54}
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID', 'line_no': 55}
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   FROM', 'line_no': 56}
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      DUAL;', 'line_no': 57}
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   SELECT', 'line_no': 61}
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      COUNT(*) INTO V_IS_ADMIN_CNT', 'line_no': 62}
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   FROM', 'line_no': 63}
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      TXO_USERS_ROLES_MAP', 'line_no': 64}
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   WHERE', 'line_no': 65}
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      ROLE_ID IN (315)', 'line_no': 66}
2025-09-03 04:09:43,090 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      AND USERID = V_USERID;', 'line_no': 67}
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   SELECT', 'line_no': 70}
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      NEW_RG_NO INTO V_NEW_RG_NO', 'line_no': 71}
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   FROM', 'line_no': 72}
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      (', 'line_no': 73}
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 74}
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            NEW_RG_NO', 'line_no': 75}
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 17
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         FROM', 'line_no': 76}
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 18
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            (', 'line_no': 77}
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 19
2025-09-03 04:09:43,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               SELECT', 'line_no': 78}
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 20
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': '                  ROWNUM AS NEW_RG_NO', 'line_no': 79}
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 21
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               FROM', 'line_no': 80}
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 22
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': '                  DUAL', 'line_no': 81}
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 23
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               CONNECT BY', 'line_no': 82}
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 24
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': '                  1 = 1', 'line_no': 83}
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 25
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': '                  AND ROWNUM <= 6999', 'line_no': 84}
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 26
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            )', 'line_no': 85}
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 27
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 86}
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 28
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            NEW_RG_NO > 5999 MINUS', 'line_no': 87}
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 29
2025-09-03 04:09:43,092 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 88}
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 30
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               TO_NUMBER(RG_NO)', 'line_no': 89}
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 31
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FROM', 'line_no': 90}
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 32
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               V_THEME_MOLECULES', 'line_no': 91}
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 33
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      )', 'line_no': 92}
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 34
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   WHERE', 'line_no': 93}
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 35
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      ROWNUM = 1;', 'line_no': 94}
2025-09-03 04:09:43,093 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 36
2025-09-03 04:09:43,103 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " (:NEW.PORTF_PROJ_CD <> 'Y') ", 'type': 'if_else', 'if_line_no': 97, 'then_line_no': 97, 'if_indent': 6, 'end_if_line_no': 99, 'then_statements': [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 101, 'then_line_no': 102, 'if_indent': 6, 'end_if_line_no': 104, 'then_statements': [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 106, 'then_line_no': 106, 'if_indent': 6, 'end_if_line_no': 110, 'then_statements': [{'indent': 9, 'line': "         TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme '", 'line_no': 107}, {'indent': 30, 'line': '                              || :NEW.THEME_NO', 'line_no': 108}, {'indent': 30, 'line': "                              || '!');", 'line_no': 109}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,103 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,114 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}]
2025-09-03 04:09:43,114 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,114 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}
2025-09-03 04:09:43,123 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,123 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,131 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}]
2025-09-03 04:09:43,131 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,131 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}
2025-09-03 04:09:43,140 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,140 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,148 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': "         TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme '", 'line_no': 107}, {'indent': 30, 'line': '                              || :NEW.THEME_NO', 'line_no': 108}, {'indent': 30, 'line': "                              || '!');", 'line_no': 109}]
2025-09-03 04:09:43,148 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,148 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': "         TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme '", 'line_no': 107}
2025-09-03 04:09:43,148 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: TXO_UTIL.SET_WARNING
2025-09-03 04:09:43,148 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: TXO_UTIL.SET_WARNING('NO MOLECULE ASSIGNED TO IN-PREP THEME '
2025-09-03 04:09:43,149 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 107
2025-09-03 04:09:43,149 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 109
2025-09-03 04:09:43,149 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!');
2025-09-03 04:09:43,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: TXO_UTIL.SET_WARNING('No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!');
2025-09-03 04:09:43,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}
2025-09-03 04:09:43,157 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,166 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,166 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 37
2025-09-03 04:09:43,175 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 117}, {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}, {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}, {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}, {'indent': 9, 'line': '         FROM', 'line_no': 121}, {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}, {'indent': 9, 'line': '         WHERE', 'line_no': 123}, {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}, {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}]}], 'exception_line_no': 126, 'end_line_no': 129}, {'condition': ' (V_MOLECULE_RG_NO IS NULL) ', 'type': 'if_else', 'if_line_no': 131, 'then_line_no': 131, 'if_indent': 6, 'end_if_line_no': 144, 'then_statements': [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 133}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,175 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,186 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         SELECT', 'line_no': 117}, {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}, {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}, {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}, {'indent': 9, 'line': '         FROM', 'line_no': 121}, {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}, {'indent': 9, 'line': '         WHERE', 'line_no': 123}, {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}, {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}]
2025-09-03 04:09:43,187 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,187 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 117}
2025-09-03 04:09:43,187 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,187 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}
2025-09-03 04:09:43,187 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,187 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}
2025-09-03 04:09:43,187 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,187 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}
2025-09-03 04:09:43,187 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,187 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         FROM', 'line_no': 121}
2025-09-03 04:09:43,188 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,188 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}
2025-09-03 04:09:43,188 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,188 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 123}
2025-09-03 04:09:43,188 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,188 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}
2025-09-03 04:09:43,188 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,188 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}
2025-09-03 04:09:43,195 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}]
2025-09-03 04:09:43,195 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,195 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}
2025-09-03 04:09:43,195 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,204 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 133}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,204 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,212 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            NULL;', 'line_no': 133}]
2025-09-03 04:09:43,212 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,212 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            NULL;', 'line_no': 133}
2025-09-03 04:09:43,220 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,228 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,236 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,236 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 38
2025-09-03 04:09:43,236 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   V_ODG_NO := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);', 'line_no': 150}
2025-09-03 04:09:43,236 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 39
2025-09-03 04:09:43,236 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   V_RESGRP_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);', 'line_no': 151}
2025-09-03 04:09:43,236 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 40
2025-09-03 04:09:43,236 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   V_RESLIN_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);', 'line_no': 152}
2025-09-03 04:09:43,236 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 41
2025-09-03 04:09:43,236 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   V_RESLIN_DESC := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));', 'line_no': 153}
2025-09-03 04:09:43,236 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 42
2025-09-03 04:09:43,244 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': '      SELECT', 'line_no': 155}, {'indent': 9, 'line': '         STATUS_CD INTO V_STATUS_CD', 'line_no': 156}, {'indent': 6, 'line': '      FROM', 'line_no': 157}, {'indent': 9, 'line': '         MDM_V_THEME_STATUS', 'line_no': 158}, {'indent': 6, 'line': '      WHERE', 'line_no': 159}, {'indent': 9, 'line': '         STATE_DESC = :NEW.STATUS_DESC;', 'line_no': 160}]
2025-09-03 04:09:43,244 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,244 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      SELECT', 'line_no': 155}
2025-09-03 04:09:43,244 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,244 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         STATUS_CD INTO V_STATUS_CD', 'line_no': 156}
2025-09-03 04:09:43,244 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,245 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      FROM', 'line_no': 157}
2025-09-03 04:09:43,245 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,245 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         MDM_V_THEME_STATUS', 'line_no': 158}
2025-09-03 04:09:43,245 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,245 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      WHERE', 'line_no': 159}
2025-09-03 04:09:43,245 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,245 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         STATE_DESC = :NEW.STATUS_DESC;', 'line_no': 160}
2025-09-03 04:09:43,253 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,253 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 43
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': '      SELECT', 'line_no': 166}, {'indent': 9, 'line': '         DBA_CD INTO V_DBA_CD', 'line_no': 167}, {'indent': 6, 'line': '      FROM', 'line_no': 168}, {'indent': 9, 'line': '         MDM_V_DISEASE_BIOLOGY_AREAS', 'line_no': 169}, {'indent': 6, 'line': '      WHERE', 'line_no': 170}, {'indent': 9, 'line': '         DBA_SHORT_DESC', 'line_no': 171}, {'indent': 9, 'line': "         || ' - '", 'line_no': 172}, {'indent': 9, 'line': '         || DBA_DESC = :NEW.DBA_DESC_CONCAT;', 'line_no': 173}]
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      SELECT', 'line_no': 166}
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         DBA_CD INTO V_DBA_CD', 'line_no': 167}
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      FROM', 'line_no': 168}
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         MDM_V_DISEASE_BIOLOGY_AREAS', 'line_no': 169}
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      WHERE', 'line_no': 170}
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         DBA_SHORT_DESC', 'line_no': 171}
2025-09-03 04:09:43,262 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,263 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': "         || ' - '", 'line_no': 172}
2025-09-03 04:09:43,263 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,263 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         || DBA_DESC = :NEW.DBA_DESC_CONCAT;', 'line_no': 173}
2025-09-03 04:09:43,271 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,271 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 44
2025-09-03 04:09:43,271 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);', 'line_no': 178}
2025-09-03 04:09:43,271 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 45
2025-09-03 04:09:43,280 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': '      V_TRADEMARK_NO := :NEW.TRADEMARK_NO;', 'line_no': 180}]
2025-09-03 04:09:43,280 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,280 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      V_TRADEMARK_NO := :NEW.TRADEMARK_NO;', 'line_no': 180}
2025-09-03 04:09:43,292 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,292 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 46
2025-09-03 04:09:43,292 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': "   V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');", 'line_no': 185}
2025-09-03 04:09:43,292 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 47
2025-09-03 04:09:43,300 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': '      RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'line_no': 188}]
2025-09-03 04:09:43,301 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,301 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'line_no': 188}
2025-09-03 04:09:43,309 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,309 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 48
2025-09-03 04:09:43,309 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 3, 'line': '   V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);', 'line_no': 191}
2025-09-03 04:09:43,310 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 49
2025-09-03 04:09:43,318 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 193, 'then_line_no': 194, 'if_indent': 6, 'end_if_line_no': 196, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_MOLECULE_ID := :NEW.MOLECULE_ID;', 'line_no': 201}, {'condition': " (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) ", 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 203, 'if_indent': 6, 'end_if_line_no': 247, 'then_statements': [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}]}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 278}, {'indent': 6, 'line': '      SELECT', 'line_no': 281}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 282}, {'indent': 6, 'line': '      FROM', 'line_no': 283}, {'indent': 9, 'line': '         (', 'line_no': 284}, {'indent': 12, 'line': '            SELECT', 'line_no': 285}, {'indent': 15, 'line': '               THEME_NO', 'line_no': 286}, {'indent': 12, 'line': '            FROM', 'line_no': 287}, {'indent': 15, 'line': '               V_THEMES', 'line_no': 288}, {'indent': 12, 'line': '            UNION', 'line_no': 289}, {'indent': 12, 'line': '            ALL', 'line_no': 290}, {'indent': 12, 'line': '            SELECT', 'line_no': 291}, {'indent': 15, 'line': '               THEME_NO', 'line_no': 292}, {'indent': 12, 'line': '            FROM', 'line_no': 293}, {'indent': 15, 'line': '               GMD.THEMES_ARCHIVE', 'line_no': 294}, {'indent': 9, 'line': '         )                  T', 'line_no': 295}, {'indent': 6, 'line': '      WHERE', 'line_no': 296}, {'indent': 9, 'line': '         T.THEME_NO = :NEW.THEME_NO;', 'line_no': 297}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 298, 'then_line_no': 298, 'if_indent': 6, 'end_if_line_no': 300, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 302}, {'indent': 6, 'line': '      V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 303}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 306, 'then_line_no': 306, 'if_indent': 6, 'end_if_line_no': 308, 'then_statements': [{'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'N') ", 'type': 'if_else', 'if_line_no': 310, 'then_line_no': 310, 'if_indent': 6, 'end_if_line_no': 315, 'then_statements': [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') ", 'type': 'if_else', 'if_line_no': 319, 'then_line_no': 319, 'if_indent': 6, 'end_if_line_no': 344, 'then_statements': [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 320}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => NULL,', 'line_no': 321}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => V_MOLECULE_ID,', 'line_no': 322}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 323}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 324}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 325}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 326}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 327}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 328}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 329}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 330}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 331}, {'indent': 9, 'line': '         );', 'line_no': 332}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 337}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 338}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 346}, {'indent': 6, 'line': '      SELECT', 'line_no': 347}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 348}, {'indent': 6, 'line': '      FROM', 'line_no': 349}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 350}, {'indent': 6, 'line': '      WHERE', 'line_no': 351}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION;', 'line_no': 352}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 353, 'then_line_no': 353, 'if_indent': 6, 'end_if_line_no': 355, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 357}, {'indent': 6, 'line': "      V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'line_no': 358}, {'indent': 6, 'line': '      V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'line_no': 359}, {'indent': 6, 'line': '      INSERT INTO GMD.THEMES(', 'line_no': 360}, {'indent': 9, 'line': '         THEME_NO,', 'line_no': 361}, {'indent': 9, 'line': '         REGISTRAT_DATE,', 'line_no': 362}, {'indent': 9, 'line': '         ODG_NO,', 'line_no': 363}, {'indent': 9, 'line': '         RESGRP_CD,', 'line_no': 364}, {'indent': 9, 'line': '         RESLIN_CD,', 'line_no': 365}, {'indent': 9, 'line': '         THEME_DESC,', 'line_no': 366}, {'indent': 9, 'line': '         SHORT_NAME,', 'line_no': 367}, {'indent': 9, 'line': '         STATUS_CD,', 'line_no': 368}, {'indent': 9, 'line': '         DBA_CD,', 'line_no': 369}, {'indent': 9, 'line': '         IN_PREP_IND,', 'line_no': 370}, {'indent': 9, 'line': '         PROD_SHORT_CD,', 'line_no': 371}, {'indent': 9, 'line': '         TRADEMARK_NO,', 'line_no': 372}, {'indent': 9, 'line': '         BIO_ACTIVITY,', 'line_no': 373}, {'indent': 9, 'line': '         APPLICANT,', 'line_no': 374}, {'indent': 9, 'line': '         CONTACT,', 'line_no': 375}, {'indent': 9, 'line': '         REGISTRAR,', 'line_no': 376}, {'indent': 9, 'line': '         LINE_EXT_INFO,', 'line_no': 377}, {'indent': 9, 'line': '         PORTF_PROJ_CD,', 'line_no': 378}, {'indent': 9, 'line': '         CO_DEV_PRTNR,', 'line_no': 379}, {'indent': 9, 'line': '         TECHNOLOGY_PRTNR,', 'line_no': 380}, {'indent': 9, 'line': '         OFFICIAL_IND,', 'line_no': 381}, {'indent': 9, 'line': '         CO_MAR_PRTNR,', 'line_no': 382}, {'indent': 9, 'line': '         VALID_TO,', 'line_no': 383}, {'indent': 9, 'line': '         PORTF_DA_GROUP_ID,', 'line_no': 384}, {'indent': 9, 'line': '         MANUAL_SHORT_DESC', 'line_no': 385}, {'indent': 6, 'line': '      ) VALUES (', 'line_no': 386}, {'indent': 9, 'line': '         :NEW.THEME_NO,', 'line_no': 387}, {'indent': 9, 'line': '         V_D_REGISTRAT_DATE,', 'line_no': 388}, {'indent': 9, 'line': '         V_ODG_NO,', 'line_no': 389}, {'indent': 9, 'line': '         V_RESGRP_CD,', 'line_no': 390}, {'indent': 9, 'line': '         V_RESLIN_CD,', 'line_no': 391}, {'indent': 9, 'line': '         V_DESCRIPTION,', 'line_no': 392}, {'indent': 9, 'line': '         V_SHORT_NAME,', 'line_no': 393}, {'indent': 9, 'line': '         V_STATUS_CD,', 'line_no': 394}, {'indent': 9, 'line': '         V_DBA_CD,', 'line_no': 395}, {'indent': 9, 'line': '         :NEW.IN_PREP_IND,', 'line_no': 396}, {'indent': 9, 'line': '         :NEW.PROD_SHORT_CD,', 'line_no': 397}, {'indent': 9, 'line': '         :NEW.TRADEMARK_NO,', 'line_no': 398}, {'indent': 9, 'line': '         :NEW.BIO_ACTIVITY,', 'line_no': 399}, {'indent': 9, 'line': '         :NEW.APPLICANT,', 'line_no': 400}, {'indent': 9, 'line': '         :NEW.CONTACT,', 'line_no': 401}, {'indent': 9, 'line': '         TXO_UTIL.GET_USERID,', 'line_no': 402}, {'indent': 9, 'line': '         :NEW.LINE_EXT_INFO,', 'line_no': 403}, {'indent': 9, 'line': '         V_PORTF_PROJ_CD,', 'line_no': 404}, {'indent': 9, 'line': '         :NEW.CO_DEV_PRTNR,', 'line_no': 405}, {'indent': 9, 'line': '         :NEW.TECHNOLOGY_PRTNR,', 'line_no': 406}, {'indent': 9, 'line': '         :NEW.OFFICIAL_IND,', 'line_no': 407}, {'indent': 9, 'line': '         :NEW.CO_MAR_PRTNR,', 'line_no': 408}, {'indent': 9, 'line': '         V_VALID_TO,', 'line_no': 409}, {'indent': 9, 'line': '         :NEW.PORTF_DA_GROUP_ID,', 'line_no': 410}, {'indent': 9, 'line': '         :NEW.MANUAL_SHORT_DESC', 'line_no': 411}, {'indent': 6, 'line': '      );', 'line_no': 412}, {'condition': ' (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 413, 'then_line_no': 414, 'if_indent': 6, 'end_if_line_no': 428, 'then_statements': [{'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}, {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}, {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}, {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}, {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}, {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}, {'indent': 12, 'line': '            1,', 'line_no': 425}, {'indent': 12, 'line': "            'Y'", 'line_no': 426}, {'indent': 9, 'line': '         );', 'line_no': 427}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,318 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,326 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}]
2025-09-03 04:09:43,326 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,326 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}
2025-09-03 04:09:43,334 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,334 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,334 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      V_MOLECULE_ID := :NEW.MOLECULE_ID;', 'line_no': 201}
2025-09-03 04:09:43,334 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,341 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,342 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,349 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}]
2025-09-03 04:09:43,350 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,350 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}
2025-09-03 04:09:43,357 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,365 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,365 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,373 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,373 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,381 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}]
2025-09-03 04:09:43,381 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,381 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}
2025-09-03 04:09:43,393 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,401 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,401 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,409 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}]
2025-09-03 04:09:43,409 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,409 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}
2025-09-03 04:09:43,416 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}]
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 278}
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      SELECT', 'line_no': 281}
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 282}
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      FROM', 'line_no': 283}
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,425 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         (', 'line_no': 284}
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 285}
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               THEME_NO', 'line_no': 286}
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FROM', 'line_no': 287}
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               V_THEMES', 'line_no': 288}
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            UNION', 'line_no': 289}
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            ALL', 'line_no': 290}
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 291}
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               THEME_NO', 'line_no': 292}
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 17
2025-09-03 04:09:43,426 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FROM', 'line_no': 293}
2025-09-03 04:09:43,427 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 18
2025-09-03 04:09:43,427 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               GMD.THEMES_ARCHIVE', 'line_no': 294}
2025-09-03 04:09:43,427 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 19
2025-09-03 04:09:43,427 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         )                  T', 'line_no': 295}
2025-09-03 04:09:43,427 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 20
2025-09-03 04:09:43,427 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      WHERE', 'line_no': 296}
2025-09-03 04:09:43,427 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 21
2025-09-03 04:09:43,427 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         T.THEME_NO = :NEW.THEME_NO;', 'line_no': 297}
2025-09-03 04:09:43,427 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 22
2025-09-03 04:09:43,435 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}]
2025-09-03 04:09:43,435 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,435 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}
2025-09-03 04:09:43,446 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,446 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 23
2025-09-03 04:09:43,446 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 302}
2025-09-03 04:09:43,446 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 24
2025-09-03 04:09:43,446 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 303}
2025-09-03 04:09:43,446 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 25
2025-09-03 04:09:43,455 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}]
2025-09-03 04:09:43,455 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,455 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}
2025-09-03 04:09:43,464 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,464 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 26
2025-09-03 04:09:43,472 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,472 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,481 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}]
2025-09-03 04:09:43,481 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,481 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}
2025-09-03 04:09:43,490 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,502 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,502 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 27
2025-09-03 04:09:43,511 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 320}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => NULL,', 'line_no': 321}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => V_MOLECULE_ID,', 'line_no': 322}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 323}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 324}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 325}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 326}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 327}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 328}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 329}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 330}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 331}, {'indent': 9, 'line': '         );', 'line_no': 332}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 337}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 338}]
2025-09-03 04:09:43,511 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 320}
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_THEME_NO_PORTF => NULL,', 'line_no': 321}
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => V_MOLECULE_ID,', 'line_no': 322}
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 323}
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 324}
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 325}
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 326}
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 327}
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 328}
2025-09-03 04:09:43,512 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:43,513 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 329}
2025-09-03 04:09:43,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:43,513 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 330}
2025-09-03 04:09:43,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:43,513 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 331}
2025-09-03 04:09:43,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:43,513 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         );', 'line_no': 332}
2025-09-03 04:09:43,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:43,521 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}]
2025-09-03 04:09:43,521 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,521 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}
2025-09-03 04:09:43,528 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,529 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:43,529 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 337}
2025-09-03 04:09:43,529 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:43,529 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 338}
2025-09-03 04:09:43,537 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,537 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 28
2025-09-03 04:09:43,537 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 346}
2025-09-03 04:09:43,537 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 29
2025-09-03 04:09:43,537 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      SELECT', 'line_no': 347}
2025-09-03 04:09:43,537 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 30
2025-09-03 04:09:43,538 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 348}
2025-09-03 04:09:43,538 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 31
2025-09-03 04:09:43,538 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      FROM', 'line_no': 349}
2025-09-03 04:09:43,538 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 32
2025-09-03 04:09:43,538 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_THEMES T', 'line_no': 350}
2025-09-03 04:09:43,538 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 33
2025-09-03 04:09:43,538 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      WHERE', 'line_no': 351}
2025-09-03 04:09:43,538 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 34
2025-09-03 04:09:43,538 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION;', 'line_no': 352}
2025-09-03 04:09:43,538 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 35
2025-09-03 04:09:43,547 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}]
2025-09-03 04:09:43,547 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,547 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 36
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 357}
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 37
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'line_no': 358}
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 38
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'line_no': 359}
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 39
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      INSERT INTO GMD.THEMES(', 'line_no': 360}
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 40
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         THEME_NO,', 'line_no': 361}
2025-09-03 04:09:43,556 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 41
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         REGISTRAT_DATE,', 'line_no': 362}
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 42
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         ODG_NO,', 'line_no': 363}
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 43
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RESGRP_CD,', 'line_no': 364}
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 44
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RESLIN_CD,', 'line_no': 365}
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 45
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         THEME_DESC,', 'line_no': 366}
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 46
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         SHORT_NAME,', 'line_no': 367}
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 47
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         STATUS_CD,', 'line_no': 368}
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 48
2025-09-03 04:09:43,557 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         DBA_CD,', 'line_no': 369}
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 49
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         IN_PREP_IND,', 'line_no': 370}
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 50
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         PROD_SHORT_CD,', 'line_no': 371}
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 51
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         TRADEMARK_NO,', 'line_no': 372}
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 52
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         BIO_ACTIVITY,', 'line_no': 373}
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 53
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         APPLICANT,', 'line_no': 374}
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 54
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         CONTACT,', 'line_no': 375}
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 55
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         REGISTRAR,', 'line_no': 376}
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 56
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         LINE_EXT_INFO,', 'line_no': 377}
2025-09-03 04:09:43,558 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 57
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         PORTF_PROJ_CD,', 'line_no': 378}
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 58
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         CO_DEV_PRTNR,', 'line_no': 379}
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 59
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         TECHNOLOGY_PRTNR,', 'line_no': 380}
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 60
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         OFFICIAL_IND,', 'line_no': 381}
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 61
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         CO_MAR_PRTNR,', 'line_no': 382}
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 62
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         VALID_TO,', 'line_no': 383}
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 63
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         PORTF_DA_GROUP_ID,', 'line_no': 384}
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 64
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         MANUAL_SHORT_DESC', 'line_no': 385}
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 65
2025-09-03 04:09:43,559 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      ) VALUES (', 'line_no': 386}
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 66
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.THEME_NO,', 'line_no': 387}
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 67
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_D_REGISTRAT_DATE,', 'line_no': 388}
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 68
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_ODG_NO,', 'line_no': 389}
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 69
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_RESGRP_CD,', 'line_no': 390}
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 70
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_RESLIN_CD,', 'line_no': 391}
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 71
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_DESCRIPTION,', 'line_no': 392}
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 72
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_SHORT_NAME,', 'line_no': 393}
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 73
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_STATUS_CD,', 'line_no': 394}
2025-09-03 04:09:43,560 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 74
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_DBA_CD,', 'line_no': 395}
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 75
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.IN_PREP_IND,', 'line_no': 396}
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 76
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.PROD_SHORT_CD,', 'line_no': 397}
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 77
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.TRADEMARK_NO,', 'line_no': 398}
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 78
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.BIO_ACTIVITY,', 'line_no': 399}
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 79
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.APPLICANT,', 'line_no': 400}
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 80
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.CONTACT,', 'line_no': 401}
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 81
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         TXO_UTIL.GET_USERID,', 'line_no': 402}
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 82
2025-09-03 04:09:43,561 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.LINE_EXT_INFO,', 'line_no': 403}
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 83
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_PORTF_PROJ_CD,', 'line_no': 404}
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 84
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.CO_DEV_PRTNR,', 'line_no': 405}
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 85
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.TECHNOLOGY_PRTNR,', 'line_no': 406}
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 86
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.OFFICIAL_IND,', 'line_no': 407}
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 87
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.CO_MAR_PRTNR,', 'line_no': 408}
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 88
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_VALID_TO,', 'line_no': 409}
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 89
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.PORTF_DA_GROUP_ID,', 'line_no': 410}
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 90
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         :NEW.MANUAL_SHORT_DESC', 'line_no': 411}
2025-09-03 04:09:43,562 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 91
2025-09-03 04:09:43,563 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      );', 'line_no': 412}
2025-09-03 04:09:43,563 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 92
2025-09-03 04:09:43,574 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}, {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}, {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}, {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}, {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}, {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}, {'indent': 12, 'line': '            1,', 'line_no': 425}, {'indent': 12, 'line': "            'Y'", 'line_no': 426}, {'indent': 9, 'line': '         );', 'line_no': 427}]
2025-09-03 04:09:43,574 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,575 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}
2025-09-03 04:09:43,575 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,575 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}
2025-09-03 04:09:43,575 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,575 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}
2025-09-03 04:09:43,575 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,575 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}
2025-09-03 04:09:43,576 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,576 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}
2025-09-03 04:09:43,576 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,576 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}
2025-09-03 04:09:43,576 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,576 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}
2025-09-03 04:09:43,576 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,577 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}
2025-09-03 04:09:43,577 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,577 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            1,', 'line_no': 425}
2025-09-03 04:09:43,577 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:43,577 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            'Y'", 'line_no': 426}
2025-09-03 04:09:43,577 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:43,577 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         );', 'line_no': 427}
2025-09-03 04:09:43,593 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,605 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}], 'if_elses': [], 'else_statements': []}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}, {'indent': 6, 'line': '      SELECT', 'line_no': 494}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}, {'indent': 6, 'line': '      FROM', 'line_no': 496}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}, {'indent': 6, 'line': '      WHERE', 'line_no': 498}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}, {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]}]
2025-09-03 04:09:43,605 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,615 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}]
2025-09-03 04:09:43,615 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,615 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}
2025-09-03 04:09:43,626 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,626 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,641 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}]
2025-09-03 04:09:43,641 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,641 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}
2025-09-03 04:09:43,655 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,655 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,665 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}]
2025-09-03 04:09:43,665 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,665 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}
2025-09-03 04:09:43,674 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,674 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}]
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,683 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         );', 'line_no': 473}
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:43,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}
2025-09-03 04:09:43,693 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,693 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,702 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}]
2025-09-03 04:09:43,702 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,702 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}
2025-09-03 04:09:43,711 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,711 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,711 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}
2025-09-03 04:09:43,711 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,711 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      SELECT', 'line_no': 494}
2025-09-03 04:09:43,711 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,711 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}
2025-09-03 04:09:43,711 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,711 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      FROM', 'line_no': 496}
2025-09-03 04:09:43,712 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:43,712 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}
2025-09-03 04:09:43,712 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:43,712 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      WHERE', 'line_no': 498}
2025-09-03 04:09:43,712 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:43,712 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}
2025-09-03 04:09:43,712 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:43,712 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}
2025-09-03 04:09:43,712 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:43,721 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}]
2025-09-03 04:09:43,721 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,721 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}
2025-09-03 04:09:43,730 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,730 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:43,730 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}
2025-09-03 04:09:43,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}]
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         SET', 'line_no': 510}
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}
2025-09-03 04:09:43,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}
2025-09-03 04:09:43,740 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}
2025-09-03 04:09:43,740 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}
2025-09-03 04:09:43,740 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}
2025-09-03 04:09:43,740 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:43,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}
2025-09-03 04:09:43,741 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 17
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 18
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 19
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 20
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 21
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 22
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 23
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 532}
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 24
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 25
2025-09-03 04:09:43,742 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}
2025-09-03 04:09:43,752 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,752 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}
2025-09-03 04:09:43,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,765 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               1,', 'line_no': 598}
2025-09-03 04:09:43,765 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:43,765 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': "               'Y'", 'line_no': 599}
2025-09-03 04:09:43,765 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:43,765 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            );', 'line_no': 600}
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SET', 'line_no': 605}
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 608}
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,773 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}
2025-09-03 04:09:43,781 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 613}
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FROM', 'line_no': 615}
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 617}
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}
2025-09-03 04:09:43,782 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:43,790 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}]
2025-09-03 04:09:43,791 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,791 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}
2025-09-03 04:09:43,798 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,806 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]
2025-09-03 04:09:43,806 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,806 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            NULL;', 'line_no': 636}
2025-09-03 04:09:43,814 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}], 'if_elses': [], 'else_statements': []}, {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,814 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,822 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}]
2025-09-03 04:09:43,822 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,822 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}
2025-09-03 04:09:43,830 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,830 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,837 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}]
2025-09-03 04:09:43,838 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,838 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}
2025-09-03 04:09:43,838 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,838 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 650}
2025-09-03 04:09:43,838 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,838 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}
2025-09-03 04:09:43,838 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,838 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}
2025-09-03 04:09:43,845 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,853 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,853 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 50
2025-09-03 04:09:43,864 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 662, 'then_line_no': 663, 'if_indent': 6, 'end_if_line_no': 720, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 666}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}, {'indent': 9, 'line': '         FROM', 'line_no': 668}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}, {'indent': 9, 'line': '         WHERE', 'line_no': 670}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) ", 'type': 'if_else', 'if_line_no': 724, 'then_line_no': 725, 'if_indent': 6, 'end_if_line_no': 746, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 728}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}, {'indent': 9, 'line': '         FROM', 'line_no': 730}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}, {'indent': 9, 'line': '         WHERE', 'line_no': 732}, {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}, {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,864 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,873 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         SELECT', 'line_no': 666}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}, {'indent': 9, 'line': '         FROM', 'line_no': 668}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}, {'indent': 9, 'line': '         WHERE', 'line_no': 670}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,873 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 666}
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         FROM', 'line_no': 668}
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 670}
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}
2025-09-03 04:09:43,874 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,883 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}]
2025-09-03 04:09:43,883 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,883 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}
2025-09-03 04:09:43,883 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,883 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SET', 'line_no': 679}
2025-09-03 04:09:43,883 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,883 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}
2025-09-03 04:09:43,883 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,883 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}
2025-09-03 04:09:43,883 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,884 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}
2025-09-03 04:09:43,884 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,884 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}
2025-09-03 04:09:43,884 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,884 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 684}
2025-09-03 04:09:43,884 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,884 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}
2025-09-03 04:09:43,892 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,900 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,901 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         SELECT', 'line_no': 728}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}, {'indent': 9, 'line': '         FROM', 'line_no': 730}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}, {'indent': 9, 'line': '         WHERE', 'line_no': 732}, {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}, {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 728}
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         FROM', 'line_no': 730}
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,909 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 732}
2025-09-03 04:09:43,910 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,910 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}
2025-09-03 04:09:43,910 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,910 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}
2025-09-03 04:09:43,910 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,918 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}]
2025-09-03 04:09:43,918 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,918 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}
2025-09-03 04:09:43,918 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,918 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SET', 'line_no': 739}
2025-09-03 04:09:43,918 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,918 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}
2025-09-03 04:09:43,919 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,919 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}
2025-09-03 04:09:43,919 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,919 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 742}
2025-09-03 04:09:43,919 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,919 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}
2025-09-03 04:09:43,919 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,919 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}
2025-09-03 04:09:43,927 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,936 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,949 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,949 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 51
2025-09-03 04:09:43,958 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 754, 'then_line_no': 754, 'if_indent': 6, 'end_if_line_no': 763, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 755}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}, {'indent': 9, 'line': '         FROM', 'line_no': 757}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}, {'indent': 9, 'line': '         WHERE', 'line_no': 759}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}, {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) ', 'type': 'if_else', 'if_line_no': 767, 'then_line_no': 769, 'if_indent': 6, 'end_if_line_no': 802, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}, {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}, {'indent': 12, 'line': "            'E',", 'line_no': 795}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}, {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}, {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}, {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}, {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}, {'indent': 9, 'line': '         );', 'line_no': 801}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:43,958 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,966 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 9, 'line': '         SELECT', 'line_no': 755}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}, {'indent': 9, 'line': '         FROM', 'line_no': 757}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}, {'indent': 9, 'line': '         WHERE', 'line_no': 759}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}, {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}]
2025-09-03 04:09:43,966 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,966 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         SELECT', 'line_no': 755}
2025-09-03 04:09:43,966 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,966 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}
2025-09-03 04:09:43,966 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:43,966 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         FROM', 'line_no': 757}
2025-09-03 04:09:43,967 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:43,967 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}
2025-09-03 04:09:43,967 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:43,967 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         WHERE', 'line_no': 759}
2025-09-03 04:09:43,967 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:43,967 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}
2025-09-03 04:09:43,967 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:43,967 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}
2025-09-03 04:09:43,967 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:43,967 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}
2025-09-03 04:09:43,979 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:43,979 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:43,987 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}, {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}, {'indent': 12, 'line': "            'E',", 'line_no': 795}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}, {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}, {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}, {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}, {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}, {'indent': 9, 'line': '         );', 'line_no': 801}]
2025-09-03 04:09:43,987 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:43,994 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}]
2025-09-03 04:09:43,995 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}]
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               SELECT', 'line_no': 772}
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               FROM', 'line_no': 776}
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 15, 'line': '               WHERE', 'line_no': 778}
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,003 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}
2025-09-03 04:09:44,004 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:44,004 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}
2025-09-03 04:09:44,012 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]
2025-09-03 04:09:44,012 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,012 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}
2025-09-03 04:09:44,022 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,022 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,022 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}
2025-09-03 04:09:44,022 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,022 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}
2025-09-03 04:09:44,022 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,022 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            'E',", 'line_no': 795}
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:44,023 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}
2025-09-03 04:09:44,024 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:44,024 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}
2025-09-03 04:09:44,024 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:44,024 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}
2025-09-03 04:09:44,024 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:44,024 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 9, 'line': '         );', 'line_no': 801}
2025-09-03 04:09:44,032 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,040 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,040 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 52
2025-09-03 04:09:44,048 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'for_expression': '( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )', 'type': 'for_loop', 'for_line_no': 809, 'for_indent': 6, 'end_for_line_no': 822, 'loop_variable': 'I1', 'for_statements': []}]
2025-09-03 04:09:44,048 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,056 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,064 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20115, 'MDM_V_THEMES_IOF');", 'line_no': 826}]
2025-09-03 04:09:44,064 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,064 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20115, 'MDM_V_THEMES_IOF');", 'line_no': 826}
2025-09-03 04:09:44,064 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,064 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20115, 'MDM_V_THEMES_IOF');
2025-09-03 04:09:44,064 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 826
2025-09-03 04:09:44,064 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 826
2025-09-03 04:09:44,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20115, 'MDM_V_THEMES_IOF');
2025-09-03 04:09:44,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20115', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20115, 'MDM_V_THEMES_IOF'"}}
2025-09-03 04:09:44,072 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20116, 'MDM_V_THEMES_IOF');", 'line_no': 828}]
2025-09-03 04:09:44,072 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,073 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20116, 'MDM_V_THEMES_IOF');", 'line_no': 828}
2025-09-03 04:09:44,073 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,073 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20116, 'MDM_V_THEMES_IOF');
2025-09-03 04:09:44,073 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 828
2025-09-03 04:09:44,073 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 828
2025-09-03 04:09:44,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20116, 'MDM_V_THEMES_IOF');
2025-09-03 04:09:44,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20116', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20116, 'MDM_V_THEMES_IOF'"}}
2025-09-03 04:09:44,083 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20117, 'MDM_V_THEMES_IOF');", 'line_no': 830}]
2025-09-03 04:09:44,084 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,084 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20117, 'MDM_V_THEMES_IOF');", 'line_no': 830}
2025-09-03 04:09:44,084 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,084 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20117, 'MDM_V_THEMES_IOF');
2025-09-03 04:09:44,084 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 830
2025-09-03 04:09:44,084 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 830
2025-09-03 04:09:44,084 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20117, 'MDM_V_THEMES_IOF');
2025-09-03 04:09:44,084 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20117', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20117, 'MDM_V_THEMES_IOF'"}}
2025-09-03 04:09:44,139 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20118, 'This is not a valid Molecule ID');", 'line_no': 832}]
2025-09-03 04:09:44,139 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,139 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20118, 'This is not a valid Molecule ID');", 'line_no': 832}
2025-09-03 04:09:44,139 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,140 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20118, 'THIS IS NOT A VALID MOLECULE ID');
2025-09-03 04:09:44,140 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 832
2025-09-03 04:09:44,140 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 832
2025-09-03 04:09:44,140 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20118, 'This is not a valid Molecule ID');
2025-09-03 04:09:44,140 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20118', "'This is not a valid Molecule ID'"], 'named_params': {}, 'raw_text': "-20118, 'This is not a valid Molecule ID'"}}
2025-09-03 04:09:44,147 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20119, 'MDM_V_THEMES_IOF');", 'line_no': 834}]
2025-09-03 04:09:44,148 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,148 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20119, 'MDM_V_THEMES_IOF');", 'line_no': 834}
2025-09-03 04:09:44,148 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,148 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20119, 'MDM_V_THEMES_IOF');
2025-09-03 04:09:44,148 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 834
2025-09-03 04:09:44,148 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 834
2025-09-03 04:09:44,148 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20119, 'MDM_V_THEMES_IOF');
2025-09-03 04:09:44,148 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20119', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20119, 'MDM_V_THEMES_IOF'"}}
2025-09-03 04:09:44,155 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20101, 'This is not a valid Theme No');", 'line_no': 836}]
2025-09-03 04:09:44,155 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,156 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20101, 'This is not a valid Theme No');", 'line_no': 836}
2025-09-03 04:09:44,156 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,156 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20101, 'THIS IS NOT A VALID THEME NO');
2025-09-03 04:09:44,156 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 836
2025-09-03 04:09:44,156 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 836
2025-09-03 04:09:44,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20101, 'This is not a valid Theme No');
2025-09-03 04:09:44,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'This is not a valid Theme No'"], 'named_params': {}, 'raw_text': "-20101, 'This is not a valid Theme No'"}}
2025-09-03 04:09:44,164 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted');", 'line_no': 838}]
2025-09-03 04:09:44,164 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,164 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted');", 'line_no': 838}
2025-09-03 04:09:44,164 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,164 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20400, 'THEME CANNOT BE DELETED WHEN THE DELETION IS NOT ON THE SAME DAY, ON WHICH THE THEME HAS BEEN INSERTED');
2025-09-03 04:09:44,164 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 838
2025-09-03 04:09:44,164 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 838
2025-09-03 04:09:44,164 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted');
2025-09-03 04:09:44,164 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"], 'named_params': {}, 'raw_text': "-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"}}
2025-09-03 04:09:44,172 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Theme No cannot be updated');", 'line_no': 840}]
2025-09-03 04:09:44,172 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,172 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Theme No cannot be updated');", 'line_no': 840}
2025-09-03 04:09:44,172 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,172 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20400, 'THEME NO CANNOT BE UPDATED');
2025-09-03 04:09:44,172 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 840
2025-09-03 04:09:44,172 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 840
2025-09-03 04:09:44,172 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20400, 'Theme No cannot be updated');
2025-09-03 04:09:44,172 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Theme No cannot be updated'"], 'named_params': {}, 'raw_text': "-20400, 'Theme No cannot be updated'"}}
2025-09-03 04:09:44,181 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Theme Description "\'', 'line_no': 842}, {'indent': 38, 'line': '                                      || V_DESCRIPTION', 'line_no': 843}, {'indent': 38, 'line': '                                      || \'" is too long\');', 'line_no': 844}]
2025-09-03 04:09:44,181 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,181 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Theme Description "\'', 'line_no': 842}
2025-09-03 04:09:44,181 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,181 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20400, 'THE AUTOMATICALLY GENERATED THEME DESCRIPTION "'
2025-09-03 04:09:44,181 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 842
2025-09-03 04:09:44,181 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 844
2025-09-03 04:09:44,181 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - RAISE_APPLICATION_ERROR(-20400, 'The automatically generated Theme Description "' || V_DESCRIPTION || '" is too long');
2025-09-03 04:09:44,181 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20400, 'The automatically generated Theme Description "' || V_DESCRIPTION || '" is too long');
2025-09-03 04:09:44,181 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''}}
2025-09-03 04:09:44,189 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Short Description Proposal "\'', 'line_no': 846}, {'indent': 38, 'line': '                                      || :OLD.THEME_DESC_PROPOSAL', 'line_no': 847}, {'indent': 38, 'line': '                                      || \'" is too long\');', 'line_no': 848}]
2025-09-03 04:09:44,189 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,189 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Short Description Proposal "\'', 'line_no': 846}
2025-09-03 04:09:44,189 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,189 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20400, 'THE AUTOMATICALLY GENERATED SHORT DESCRIPTION PROPOSAL "'
2025-09-03 04:09:44,189 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 846
2025-09-03 04:09:44,190 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 848
2025-09-03 04:09:44,190 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - RAISE_APPLICATION_ERROR(-20400, 'The automatically generated Short Description Proposal "' || :OLD.THEME_DESC_PROPOSAL || '" is too long');
2025-09-03 04:09:44,190 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20400, 'The automatically generated Short Description Proposal "' || :OLD.THEME_DESC_PROPOSAL || '" is too long');
2025-09-03 04:09:44,190 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''}}
2025-09-03 04:09:44,197 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Downstream Theme Description "\'', 'line_no': 850}, {'indent': 38, 'line': '                                      || :OLD.THEME_DESC_ALT', 'line_no': 851}, {'indent': 38, 'line': '                                      || \'" is too long\');', 'line_no': 852}]
2025-09-03 04:09:44,197 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,197 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'The automatically generated Downstream Theme Description "\'', 'line_no': 850}
2025-09-03 04:09:44,198 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,198 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20400, 'THE AUTOMATICALLY GENERATED DOWNSTREAM THEME DESCRIPTION "'
2025-09-03 04:09:44,198 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 850
2025-09-03 04:09:44,198 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 852
2025-09-03 04:09:44,198 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - RAISE_APPLICATION_ERROR(-20400, 'The automatically generated Downstream Theme Description "' || :OLD.THEME_DESC_ALT || '" is too long');
2025-09-03 04:09:44,198 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20400, 'The automatically generated Downstream Theme Description "' || :OLD.THEME_DESC_ALT || '" is too long');
2025-09-03 04:09:44,198 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''}}
2025-09-03 04:09:44,208 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'This Theme No already exists');", 'line_no': 854}]
2025-09-03 04:09:44,208 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,208 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'This Theme No already exists');", 'line_no': 854}
2025-09-03 04:09:44,208 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,208 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20400, 'THIS THEME NO ALREADY EXISTS');
2025-09-03 04:09:44,208 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 854
2025-09-03 04:09:44,208 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 854
2025-09-03 04:09:44,208 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20400, 'This Theme No already exists');
2025-09-03 04:09:44,208 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This Theme No already exists'"], 'named_params': {}, 'raw_text': "-20400, 'This Theme No already exists'"}}
2025-09-03 04:09:44,215 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Official Change for this Theme No and Day already exists');", 'line_no': 856}]
2025-09-03 04:09:44,215 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,215 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'Official Change for this Theme No and Day already exists');", 'line_no': 856}
2025-09-03 04:09:44,215 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,216 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20400, 'OFFICIAL CHANGE FOR THIS THEME NO AND DAY ALREADY EXISTS');
2025-09-03 04:09:44,216 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 856
2025-09-03 04:09:44,216 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 856
2025-09-03 04:09:44,216 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20400, 'Official Change for this Theme No and Day already exists');
2025-09-03 04:09:44,216 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Official Change for this Theme No and Day already exists'"], 'named_params': {}, 'raw_text': "-20400, 'Official Change for this Theme No and Day already exists'"}}
2025-09-03 04:09:44,224 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'New Themes can only be inserted by Official Changes');", 'line_no': 858}]
2025-09-03 04:09:44,224 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,224 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'New Themes can only be inserted by Official Changes');", 'line_no': 858}
2025-09-03 04:09:44,224 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,224 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20400, 'NEW THEMES CAN ONLY BE INSERTED BY OFFICIAL CHANGES');
2025-09-03 04:09:44,224 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 858
2025-09-03 04:09:44,224 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 858
2025-09-03 04:09:44,224 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20400, 'New Themes can only be inserted by Official Changes');
2025-09-03 04:09:44,224 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'New Themes can only be inserted by Official Changes'"], 'named_params': {}, 'raw_text': "-20400, 'New Themes can only be inserted by Official Changes'"}}
2025-09-03 04:09:44,232 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\' );', 'line_no': 860}]
2025-09-03 04:09:44,232 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,232 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(-20400, \'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\' );', 'line_no': 860}
2025-09-03 04:09:44,232 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,232 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20400, 'IF PHARMA RX PORTFOLIO PROJECT IS SET TO "NO", THEN THE THEME DESCRIPTION MUST BE FILLED' );
2025-09-03 04:09:44,232 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 860
2025-09-03 04:09:44,232 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 860
2025-09-03 04:09:44,232 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20400, 'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled' );
2025-09-03 04:09:44,232 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''], 'named_params': {}, 'raw_text': '-20400, \'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''}}
2025-09-03 04:09:44,240 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'This Theme Description already exists');", 'line_no': 862}]
2025-09-03 04:09:44,240 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,240 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR(-20400, 'This Theme Description already exists');", 'line_no': 862}
2025-09-03 04:09:44,240 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,240 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20400, 'THIS THEME DESCRIPTION ALREADY EXISTS');
2025-09-03 04:09:44,240 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 862
2025-09-03 04:09:44,240 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 862
2025-09-03 04:09:44,240 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20400, 'This Theme Description already exists');
2025-09-03 04:09:44,240 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This Theme Description already exists'"], 'named_params': {}, 'raw_text': "-20400, 'This Theme Description already exists'"}}
2025-09-03 04:09:44,249 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': "      RAISE_APPLICATION_ERROR( -20120, 'MDM_V_THEMES_IOF');", 'line_no': 864}]
2025-09-03 04:09:44,249 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,249 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': "      RAISE_APPLICATION_ERROR( -20120, 'MDM_V_THEMES_IOF');", 'line_no': 864}
2025-09-03 04:09:44,249 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,249 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR( -20120, 'MDM_V_THEMES_IOF');
2025-09-03 04:09:44,249 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 864
2025-09-03 04:09:44,249 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 864
2025-09-03 04:09:44,249 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR( -20120, 'MDM_V_THEMES_IOF');
2025-09-03 04:09:44,249 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20120', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20120, 'MDM_V_THEMES_IOF'"}}
2025-09-03 04:09:44,256 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(', 'line_no': 866}, {'indent': 9, 'line': '         -20900,', 'line_no': 867}, {'indent': 7, 'line': "       'Debug in Themes IOF standard'", 'line_no': 868}, {'indent': 7, 'line': '       );', 'line_no': 869}]
2025-09-03 04:09:44,257 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,257 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 6, 'line': '      RAISE_APPLICATION_ERROR(', 'line_no': 866}
2025-09-03 04:09:44,257 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,257 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(
2025-09-03 04:09:44,257 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 866
2025-09-03 04:09:44,257 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 869
2025-09-03 04:09:44,257 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - RAISE_APPLICATION_ERROR( -20900, 'Debug in Themes IOF standard' );
2025-09-03 04:09:44,257 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR( -20900, 'Debug in Themes IOF standard' );
2025-09-03 04:09:44,257 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20900', "'Debug in Themes IOF standard'"], 'named_params': {}, 'raw_text': "-20900, 'Debug in Themes IOF standard'"}}
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 3, 'line': '   SELECT', 'line_no': 54}, {'indent': 6, 'line': '      NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID', 'line_no': 55}, {'indent': 3, 'line': '   FROM', 'line_no': 56}, {'indent': 6, 'line': '      DUAL;', 'line_no': 57}, {'indent': 3, 'line': '   SELECT', 'line_no': 61}, {'indent': 6, 'line': '      COUNT(*) INTO V_IS_ADMIN_CNT', 'line_no': 62}, {'indent': 3, 'line': '   FROM', 'line_no': 63}, {'indent': 6, 'line': '      TXO_USERS_ROLES_MAP', 'line_no': 64}, {'indent': 3, 'line': '   WHERE', 'line_no': 65}, {'indent': 6, 'line': '      ROLE_ID IN (315)', 'line_no': 66}, {'indent': 6, 'line': '      AND USERID = V_USERID;', 'line_no': 67}, {'indent': 3, 'line': '   SELECT', 'line_no': 70}, {'indent': 6, 'line': '      NEW_RG_NO INTO V_NEW_RG_NO', 'line_no': 71}, {'indent': 3, 'line': '   FROM', 'line_no': 72}, {'indent': 6, 'line': '      (', 'line_no': 73}, {'indent': 9, 'line': '         SELECT', 'line_no': 74}, {'indent': 12, 'line': '            NEW_RG_NO', 'line_no': 75}, {'indent': 9, 'line': '         FROM', 'line_no': 76}, {'indent': 12, 'line': '            (', 'line_no': 77}, {'indent': 15, 'line': '               SELECT', 'line_no': 78}, {'indent': 18, 'line': '                  ROWNUM AS NEW_RG_NO', 'line_no': 79}, {'indent': 15, 'line': '               FROM', 'line_no': 80}, {'indent': 18, 'line': '                  DUAL', 'line_no': 81}, {'indent': 15, 'line': '               CONNECT BY', 'line_no': 82}, {'indent': 18, 'line': '                  1 = 1', 'line_no': 83}, {'indent': 18, 'line': '                  AND ROWNUM <= 6999', 'line_no': 84}, {'indent': 12, 'line': '            )', 'line_no': 85}, {'indent': 9, 'line': '         WHERE', 'line_no': 86}, {'indent': 12, 'line': '            NEW_RG_NO > 5999 MINUS', 'line_no': 87}, {'indent': 12, 'line': '            SELECT', 'line_no': 88}, {'indent': 15, 'line': '               TO_NUMBER(RG_NO)', 'line_no': 89}, {'indent': 12, 'line': '            FROM', 'line_no': 90}, {'indent': 15, 'line': '               V_THEME_MOLECULES', 'line_no': 91}, {'indent': 6, 'line': '      )', 'line_no': 92}, {'indent': 3, 'line': '   WHERE', 'line_no': 93}, {'indent': 6, 'line': '      ROWNUM = 1;', 'line_no': 94}, {'condition': " (:NEW.IN_PREP_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 95, 'then_line_no': 96, 'if_indent': 3, 'end_if_line_no': 111, 'then_statements': [{'condition': " (:NEW.PORTF_PROJ_CD <> 'Y') ", 'type': 'if_else', 'if_line_no': 97, 'then_line_no': 97, 'if_indent': 6, 'end_if_line_no': 99, 'then_statements': [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 101, 'then_line_no': 102, 'if_indent': 6, 'end_if_line_no': 104, 'then_statements': [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 106, 'then_line_no': 106, 'if_indent': 6, 'end_if_line_no': 110, 'then_statements': [{'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 115, 'then_line_no': 115, 'if_indent': 3, 'end_if_line_no': 145, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 117}, {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}, {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}, {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}, {'indent': 9, 'line': '         FROM', 'line_no': 121}, {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}, {'indent': 9, 'line': '         WHERE', 'line_no': 123}, {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}, {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}]}], 'exception_line_no': 126, 'end_line_no': 129}, {'condition': ' (V_MOLECULE_RG_NO IS NULL) ', 'type': 'if_else', 'if_line_no': 131, 'then_line_no': 131, 'if_indent': 6, 'end_if_line_no': 144, 'then_statements': [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 133}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'indent': 3, 'line': '   V_ODG_NO := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);', 'line_no': 150}, {'indent': 3, 'line': '   V_RESGRP_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);', 'line_no': 151}, {'indent': 3, 'line': '   V_RESLIN_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);', 'line_no': 152}, {'indent': 3, 'line': '   V_RESLIN_DESC := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));', 'line_no': 153}, {'condition': ' (:NEW.STATUS_DESC IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 154, 'then_line_no': 154, 'if_indent': 3, 'end_if_line_no': 163, 'then_statements': [{'indent': 6, 'line': '      SELECT', 'line_no': 155}, {'indent': 9, 'line': '         STATUS_CD INTO V_STATUS_CD', 'line_no': 156}, {'indent': 6, 'line': '      FROM', 'line_no': 157}, {'indent': 9, 'line': '         MDM_V_THEME_STATUS', 'line_no': 158}, {'indent': 6, 'line': '      WHERE', 'line_no': 159}, {'indent': 9, 'line': '         STATE_DESC = :NEW.STATUS_DESC;', 'line_no': 160}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.DBA_DESC_CONCAT IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 165, 'then_line_no': 165, 'if_indent': 3, 'end_if_line_no': 176, 'then_statements': [{'indent': 6, 'line': '      SELECT', 'line_no': 166}, {'indent': 9, 'line': '         DBA_CD INTO V_DBA_CD', 'line_no': 167}, {'indent': 6, 'line': '      FROM', 'line_no': 168}, {'indent': 9, 'line': '         MDM_V_DISEASE_BIOLOGY_AREAS', 'line_no': 169}, {'indent': 6, 'line': '      WHERE', 'line_no': 170}, {'indent': 9, 'line': '         DBA_SHORT_DESC', 'line_no': 171}, {'indent': 9, 'line': "         || ' - '", 'line_no': 172}, {'indent': 9, 'line': '         || DBA_DESC = :NEW.DBA_DESC_CONCAT;', 'line_no': 173}], 'if_elses': [], 'else_statements': []}, {'indent': 3, 'line': '   V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);', 'line_no': 178}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 179, 'then_line_no': 179, 'if_indent': 3, 'end_if_line_no': 183, 'then_statements': [{'indent': 6, 'line': '      V_TRADEMARK_NO := :NEW.TRADEMARK_NO;', 'line_no': 180}], 'if_elses': [], 'else_statements': []}, {'indent': 3, 'line': "   V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');", 'line_no': 185}, {'condition': ' (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) ', 'type': 'if_else', 'if_line_no': 186, 'then_line_no': 187, 'if_indent': 3, 'end_if_line_no': 189, 'then_statements': [{'indent': 6, 'line': '      RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'line_no': 188}], 'if_elses': [], 'else_statements': []}, {'indent': 3, 'line': '   V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);', 'line_no': 191}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 192, 'then_line_no': 192, 'if_indent': 3, 'end_if_line_no': 656, 'then_statements': [{'condition': " (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 193, 'then_line_no': 194, 'if_indent': 6, 'end_if_line_no': 196, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_MOLECULE_ID := :NEW.MOLECULE_ID;', 'line_no': 201}, {'condition': " (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) ", 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 203, 'if_indent': 6, 'end_if_line_no': 247, 'then_statements': [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}]}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 278}, {'indent': 6, 'line': '      SELECT', 'line_no': 281}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 282}, {'indent': 6, 'line': '      FROM', 'line_no': 283}, {'indent': 9, 'line': '         (', 'line_no': 284}, {'indent': 12, 'line': '            SELECT', 'line_no': 285}, {'indent': 15, 'line': '               THEME_NO', 'line_no': 286}, {'indent': 12, 'line': '            FROM', 'line_no': 287}, {'indent': 15, 'line': '               V_THEMES', 'line_no': 288}, {'indent': 12, 'line': '            UNION', 'line_no': 289}, {'indent': 12, 'line': '            ALL', 'line_no': 290}, {'indent': 12, 'line': '            SELECT', 'line_no': 291}, {'indent': 15, 'line': '               THEME_NO', 'line_no': 292}, {'indent': 12, 'line': '            FROM', 'line_no': 293}, {'indent': 15, 'line': '               GMD.THEMES_ARCHIVE', 'line_no': 294}, {'indent': 9, 'line': '         )                  T', 'line_no': 295}, {'indent': 6, 'line': '      WHERE', 'line_no': 296}, {'indent': 9, 'line': '         T.THEME_NO = :NEW.THEME_NO;', 'line_no': 297}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 298, 'then_line_no': 298, 'if_indent': 6, 'end_if_line_no': 300, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 302}, {'indent': 6, 'line': '      V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 303}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 306, 'then_line_no': 306, 'if_indent': 6, 'end_if_line_no': 308, 'then_statements': [{'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'N') ", 'type': 'if_else', 'if_line_no': 310, 'then_line_no': 310, 'if_indent': 6, 'end_if_line_no': 315, 'then_statements': [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') ", 'type': 'if_else', 'if_line_no': 319, 'then_line_no': 319, 'if_indent': 6, 'end_if_line_no': 344, 'then_statements': [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 320}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => NULL,', 'line_no': 321}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => V_MOLECULE_ID,', 'line_no': 322}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 323}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 324}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 325}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 326}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 327}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 328}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 329}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 330}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 331}, {'indent': 9, 'line': '         );', 'line_no': 332}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 337}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 338}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 346}, {'indent': 6, 'line': '      SELECT', 'line_no': 347}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 348}, {'indent': 6, 'line': '      FROM', 'line_no': 349}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 350}, {'indent': 6, 'line': '      WHERE', 'line_no': 351}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION;', 'line_no': 352}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 353, 'then_line_no': 353, 'if_indent': 6, 'end_if_line_no': 355, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 357}, {'indent': 6, 'line': "      V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'line_no': 358}, {'indent': 6, 'line': '      V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'line_no': 359}, {'indent': 6, 'line': '      INSERT INTO GMD.THEMES(', 'line_no': 360}, {'indent': 9, 'line': '         THEME_NO,', 'line_no': 361}, {'indent': 9, 'line': '         REGISTRAT_DATE,', 'line_no': 362}, {'indent': 9, 'line': '         ODG_NO,', 'line_no': 363}, {'indent': 9, 'line': '         RESGRP_CD,', 'line_no': 364}, {'indent': 9, 'line': '         RESLIN_CD,', 'line_no': 365}, {'indent': 9, 'line': '         THEME_DESC,', 'line_no': 366}, {'indent': 9, 'line': '         SHORT_NAME,', 'line_no': 367}, {'indent': 9, 'line': '         STATUS_CD,', 'line_no': 368}, {'indent': 9, 'line': '         DBA_CD,', 'line_no': 369}, {'indent': 9, 'line': '         IN_PREP_IND,', 'line_no': 370}, {'indent': 9, 'line': '         PROD_SHORT_CD,', 'line_no': 371}, {'indent': 9, 'line': '         TRADEMARK_NO,', 'line_no': 372}, {'indent': 9, 'line': '         BIO_ACTIVITY,', 'line_no': 373}, {'indent': 9, 'line': '         APPLICANT,', 'line_no': 374}, {'indent': 9, 'line': '         CONTACT,', 'line_no': 375}, {'indent': 9, 'line': '         REGISTRAR,', 'line_no': 376}, {'indent': 9, 'line': '         LINE_EXT_INFO,', 'line_no': 377}, {'indent': 9, 'line': '         PORTF_PROJ_CD,', 'line_no': 378}, {'indent': 9, 'line': '         CO_DEV_PRTNR,', 'line_no': 379}, {'indent': 9, 'line': '         TECHNOLOGY_PRTNR,', 'line_no': 380}, {'indent': 9, 'line': '         OFFICIAL_IND,', 'line_no': 381}, {'indent': 9, 'line': '         CO_MAR_PRTNR,', 'line_no': 382}, {'indent': 9, 'line': '         VALID_TO,', 'line_no': 383}, {'indent': 9, 'line': '         PORTF_DA_GROUP_ID,', 'line_no': 384}, {'indent': 9, 'line': '         MANUAL_SHORT_DESC', 'line_no': 385}, {'indent': 6, 'line': '      ) VALUES (', 'line_no': 386}, {'indent': 9, 'line': '         :NEW.THEME_NO,', 'line_no': 387}, {'indent': 9, 'line': '         V_D_REGISTRAT_DATE,', 'line_no': 388}, {'indent': 9, 'line': '         V_ODG_NO,', 'line_no': 389}, {'indent': 9, 'line': '         V_RESGRP_CD,', 'line_no': 390}, {'indent': 9, 'line': '         V_RESLIN_CD,', 'line_no': 391}, {'indent': 9, 'line': '         V_DESCRIPTION,', 'line_no': 392}, {'indent': 9, 'line': '         V_SHORT_NAME,', 'line_no': 393}, {'indent': 9, 'line': '         V_STATUS_CD,', 'line_no': 394}, {'indent': 9, 'line': '         V_DBA_CD,', 'line_no': 395}, {'indent': 9, 'line': '         :NEW.IN_PREP_IND,', 'line_no': 396}, {'indent': 9, 'line': '         :NEW.PROD_SHORT_CD,', 'line_no': 397}, {'indent': 9, 'line': '         :NEW.TRADEMARK_NO,', 'line_no': 398}, {'indent': 9, 'line': '         :NEW.BIO_ACTIVITY,', 'line_no': 399}, {'indent': 9, 'line': '         :NEW.APPLICANT,', 'line_no': 400}, {'indent': 9, 'line': '         :NEW.CONTACT,', 'line_no': 401}, {'indent': 9, 'line': '         TXO_UTIL.GET_USERID,', 'line_no': 402}, {'indent': 9, 'line': '         :NEW.LINE_EXT_INFO,', 'line_no': 403}, {'indent': 9, 'line': '         V_PORTF_PROJ_CD,', 'line_no': 404}, {'indent': 9, 'line': '         :NEW.CO_DEV_PRTNR,', 'line_no': 405}, {'indent': 9, 'line': '         :NEW.TECHNOLOGY_PRTNR,', 'line_no': 406}, {'indent': 9, 'line': '         :NEW.OFFICIAL_IND,', 'line_no': 407}, {'indent': 9, 'line': '         :NEW.CO_MAR_PRTNR,', 'line_no': 408}, {'indent': 9, 'line': '         V_VALID_TO,', 'line_no': 409}, {'indent': 9, 'line': '         :NEW.PORTF_DA_GROUP_ID,', 'line_no': 410}, {'indent': 9, 'line': '         :NEW.MANUAL_SHORT_DESC', 'line_no': 411}, {'indent': 6, 'line': '      );', 'line_no': 412}, {'condition': ' (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 413, 'then_line_no': 414, 'if_indent': 6, 'end_if_line_no': 428, 'then_statements': [{'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}, {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}, {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}, {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}, {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}, {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}, {'indent': 12, 'line': '            1,', 'line_no': 425}, {'indent': 12, 'line': "            'Y'", 'line_no': 426}, {'indent': 9, 'line': '         );', 'line_no': 427}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 432, 'elif_indent': 3, 'condition': '(UPDATING)', 'then_line_no': 432, 'then_statements': [{'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}], 'if_elses': [], 'else_statements': []}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}, {'indent': 6, 'line': '      SELECT', 'line_no': 494}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}, {'indent': 6, 'line': '      FROM', 'line_no': 496}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}, {'indent': 6, 'line': '      WHERE', 'line_no': 498}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}, {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]}]}, {'type': 'elif_statement', 'elif_line_no': 638, 'elif_indent': 3, 'condition': '(DELETING)', 'then_line_no': 638, 'then_statements': [{'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}], 'if_elses': [], 'else_statements': []}, {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': []}, {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 660, 'then_line_no': 661, 'if_indent': 3, 'end_if_line_no': 747, 'then_statements': [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 662, 'then_line_no': 663, 'if_indent': 6, 'end_if_line_no': 720, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 666}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}, {'indent': 9, 'line': '         FROM', 'line_no': 668}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}, {'indent': 9, 'line': '         WHERE', 'line_no': 670}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) ", 'type': 'if_else', 'if_line_no': 724, 'then_line_no': 725, 'if_indent': 6, 'end_if_line_no': 746, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 728}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}, {'indent': 9, 'line': '         FROM', 'line_no': 730}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}, {'indent': 9, 'line': '         WHERE', 'line_no': 732}, {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}, {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (INSERTING AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y') ", 'type': 'if_else', 'if_line_no': 751, 'then_line_no': 753, 'if_indent': 3, 'end_if_line_no': 803, 'then_statements': [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 754, 'then_line_no': 754, 'if_indent': 6, 'end_if_line_no': 763, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 755}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}, {'indent': 9, 'line': '         FROM', 'line_no': 757}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}, {'indent': 9, 'line': '         WHERE', 'line_no': 759}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}, {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) ', 'type': 'if_else', 'if_line_no': 767, 'then_line_no': 769, 'if_indent': 6, 'end_if_line_no': 802, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}, {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}, {'indent': 12, 'line': "            'E',", 'line_no': 795}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}, {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}, {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}, {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}, {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}, {'indent': 9, 'line': '         );', 'line_no': 801}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'begin_end', 'begin_line_no': 805, 'begin_indent': 3, 'begin_end_statements': [{'for_expression': '( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )', 'type': 'for_loop', 'for_line_no': 809, 'for_indent': 6, 'end_for_line_no': 822, 'loop_variable': 'I1', 'for_statements': []}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 823}]
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:    SELECT || 54 || 3
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 54 || select_statement || SELECT
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 54 || select_statement
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 54 || select_statement
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 57 || select_statement
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID FROM DUAL;
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 4
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:    SELECT || 61 || 3
2025-09-03 04:09:44,258 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 61 || select_statement || SELECT
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 61 || select_statement
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 61 || select_statement
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 67 || select_statement
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID;
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 11
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:    SELECT || 70 || 3
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 70 || select_statement || SELECT
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 70 || select_statement
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 70 || select_statement
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 94 || select_statement
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT TO_NUMBER(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1;
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 36
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " (:NEW.PORTF_PROJ_CD <> 'Y') ", 'type': 'if_else', 'if_line_no': 97, 'then_line_no': 97, 'if_indent': 6, 'end_if_line_no': 99, 'then_statements': [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 101, 'then_line_no': 102, 'if_indent': 6, 'end_if_line_no': 104, 'then_statements': [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 106, 'then_line_no': 106, 'if_indent': 6, 'end_if_line_no': 110, 'then_statements': [{'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_PORTF_PROJ;', 'line_no': 98}]
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE IN_PREP_NOT_PORTF_PROJ; || 98 || 9
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 98 || raise_statement || RAISE
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 98 || raise_statement
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 98 || raise_statement
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 98 || raise_statement
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:44,259 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE IN_PREP_NOT_CLOSED;', 'line_no': 103}]
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE IN_PREP_NOT_CLOSED; || 103 || 9
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 103 || raise_statement || RAISE
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 103 || raise_statement
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 103 || raise_statement
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 103 || raise_statement
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}]
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 37
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 117}, {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}, {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}, {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}, {'indent': 9, 'line': '         FROM', 'line_no': 121}, {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}, {'indent': 9, 'line': '         WHERE', 'line_no': 123}, {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}, {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}]}], 'exception_line_no': 126, 'end_line_no': 129}, {'condition': ' (V_MOLECULE_RG_NO IS NULL) ', 'type': 'if_else', 'if_line_no': 131, 'then_line_no': 131, 'if_indent': 6, 'end_if_line_no': 144, 'then_statements': [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 133}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         SELECT', 'line_no': 117}, {'indent': 12, 'line': '            RG_NO,', 'line_no': 118}, {'indent': 12, 'line': '            M.COMPARATOR_IND INTO V_MOLECULE_RG_NO,', 'line_no': 119}, {'indent': 12, 'line': '            V_COMPARATOR_IND', 'line_no': 120}, {'indent': 9, 'line': '         FROM', 'line_no': 121}, {'indent': 12, 'line': '            V_THEME_MOLECULES M', 'line_no': 122}, {'indent': 9, 'line': '         WHERE', 'line_no': 123}, {'indent': 12, 'line': '            MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 124}, {'indent': 12, 'line': "            AND M.VALID_IND = 'Y';", 'line_no': 125}]
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          SELECT || 117 || 9
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 117 || select_statement || SELECT
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 117 || select_statement
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 117 || select_statement
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 125 || select_statement
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';
2025-09-03 04:09:44,260 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE INVALID_MOLECULE_ID;', 'line_no': 128}]
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE INVALID_MOLECULE_ID; || 128 || 12
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 128 || raise_statement || RAISE
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 128 || raise_statement
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 128 || raise_statement
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 128 || raise_statement
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 133}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            NULL;', 'line_no': 133}]
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             NULL; || 133 || 12
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 133 || null_statement || NULL
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 133 || null_statement
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 133 || null_statement
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 133 || null_statement
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 38
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:    V_ODG_NO := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2); || 150 || 3
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 150 || assignment
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 150 || assignment
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_ODG_NO', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);', 'assignment_line_no': 150, 'assignment_indent': 3}
2025-09-03 04:09:44,261 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 39
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:    V_RESGRP_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2); || 151 || 3
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 151 || assignment
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 151 || assignment
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_RESGRP_CD', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);', 'assignment_line_no': 151, 'assignment_indent': 3}
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 40
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:    V_RESLIN_CD := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2); || 152 || 3
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 152 || assignment
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 152 || assignment
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_RESLIN_CD', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);', 'assignment_line_no': 152, 'assignment_indent': 3}
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 41
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:    V_RESLIN_DESC := SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT)); || 153 || 3
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 153 || assignment
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 153 || assignment
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_RESLIN_DESC', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));', 'assignment_line_no': 153, 'assignment_indent': 3}
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 42
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 6, 'line': '      SELECT', 'line_no': 155}, {'indent': 9, 'line': '         STATUS_CD INTO V_STATUS_CD', 'line_no': 156}, {'indent': 6, 'line': '      FROM', 'line_no': 157}, {'indent': 9, 'line': '         MDM_V_THEME_STATUS', 'line_no': 158}, {'indent': 6, 'line': '      WHERE', 'line_no': 159}, {'indent': 9, 'line': '         STATE_DESC = :NEW.STATUS_DESC;', 'line_no': 160}]
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       SELECT || 155 || 6
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 155 || select_statement || SELECT
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 155 || select_statement
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 155 || select_statement
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 160 || select_statement
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;
2025-09-03 04:09:44,262 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 43
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 6, 'line': '      SELECT', 'line_no': 166}, {'indent': 9, 'line': '         DBA_CD INTO V_DBA_CD', 'line_no': 167}, {'indent': 6, 'line': '      FROM', 'line_no': 168}, {'indent': 9, 'line': '         MDM_V_DISEASE_BIOLOGY_AREAS', 'line_no': 169}, {'indent': 6, 'line': '      WHERE', 'line_no': 170}, {'indent': 9, 'line': '         DBA_SHORT_DESC', 'line_no': 171}, {'indent': 9, 'line': "         || ' - '", 'line_no': 172}, {'indent': 9, 'line': '         || DBA_DESC = :NEW.DBA_DESC_CONCAT;', 'line_no': 173}]
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       SELECT || 166 || 6
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 166 || select_statement || SELECT
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 166 || select_statement
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 166 || select_statement
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 173 || select_statement
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 44
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:    V_MOLEC_IN_LIC_PRTNR := GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID); || 178 || 3
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 178 || assignment
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 178 || assignment
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_MOLEC_IN_LIC_PRTNR', 'assignment_operator': ':=', 'expression': 'GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);', 'assignment_line_no': 178, 'assignment_indent': 3}
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 45
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 6, 'line': '      V_TRADEMARK_NO := :NEW.TRADEMARK_NO;', 'line_no': 180}]
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_TRADEMARK_NO := :NEW.TRADEMARK_NO; || 180 || 6
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 180 || assignment
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 180 || assignment
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_TRADEMARK_NO', 'assignment_operator': ':=', 'expression': ':NEW.TRADEMARK_NO;', 'assignment_line_no': 180, 'assignment_indent': 6}
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 46
2025-09-03 04:09:44,263 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:    V_THEME_DESC_PROPOSAL := GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N'); || 185 || 3
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 185 || assignment
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 185 || assignment
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_THEME_DESC_PROPOSAL', 'assignment_operator': ':=', 'expression': "GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');", 'assignment_line_no': 185, 'assignment_indent': 3}
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 47
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 6, 'line': '      RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'line_no': 188}]
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       RAISE THEME_DESC_PROPOSAL_TOO_LONG; || 188 || 6
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 188 || raise_statement || RAISE
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 188 || raise_statement
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 188 || raise_statement
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 188 || raise_statement
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 48
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:    V_SHORT_NAME := COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL); || 191 || 3
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 191 || assignment
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 191 || assignment
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_SHORT_NAME', 'assignment_operator': ':=', 'expression': 'COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);', 'assignment_line_no': 191, 'assignment_indent': 3}
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 49
2025-09-03 04:09:44,264 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 193, 'then_line_no': 194, 'if_indent': 6, 'end_if_line_no': 196, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_MOLECULE_ID := :NEW.MOLECULE_ID;', 'line_no': 201}, {'condition': " (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) ", 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 203, 'if_indent': 6, 'end_if_line_no': 247, 'then_statements': [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}]}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 278}, {'indent': 6, 'line': '      SELECT', 'line_no': 281}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 282}, {'indent': 6, 'line': '      FROM', 'line_no': 283}, {'indent': 9, 'line': '         (', 'line_no': 284}, {'indent': 12, 'line': '            SELECT', 'line_no': 285}, {'indent': 15, 'line': '               THEME_NO', 'line_no': 286}, {'indent': 12, 'line': '            FROM', 'line_no': 287}, {'indent': 15, 'line': '               V_THEMES', 'line_no': 288}, {'indent': 12, 'line': '            UNION', 'line_no': 289}, {'indent': 12, 'line': '            ALL', 'line_no': 290}, {'indent': 12, 'line': '            SELECT', 'line_no': 291}, {'indent': 15, 'line': '               THEME_NO', 'line_no': 292}, {'indent': 12, 'line': '            FROM', 'line_no': 293}, {'indent': 15, 'line': '               GMD.THEMES_ARCHIVE', 'line_no': 294}, {'indent': 9, 'line': '         )                  T', 'line_no': 295}, {'indent': 6, 'line': '      WHERE', 'line_no': 296}, {'indent': 9, 'line': '         T.THEME_NO = :NEW.THEME_NO;', 'line_no': 297}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 298, 'then_line_no': 298, 'if_indent': 6, 'end_if_line_no': 300, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 302}, {'indent': 6, 'line': '      V_D_REGISTRAT_DATE := SYSDATE;', 'line_no': 303}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 306, 'then_line_no': 306, 'if_indent': 6, 'end_if_line_no': 308, 'then_statements': [{'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'N') ", 'type': 'if_else', 'if_line_no': 310, 'then_line_no': 310, 'if_indent': 6, 'end_if_line_no': 315, 'then_statements': [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') ", 'type': 'if_else', 'if_line_no': 319, 'then_line_no': 319, 'if_indent': 6, 'end_if_line_no': 344, 'then_statements': [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 320}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => NULL,', 'line_no': 321}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => V_MOLECULE_ID,', 'line_no': 322}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 323}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 324}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 325}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 326}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 327}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 328}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 329}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 330}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 331}, {'indent': 9, 'line': '         );', 'line_no': 332}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 337}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 338}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 346}, {'indent': 6, 'line': '      SELECT', 'line_no': 347}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 348}, {'indent': 6, 'line': '      FROM', 'line_no': 349}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 350}, {'indent': 6, 'line': '      WHERE', 'line_no': 351}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION;', 'line_no': 352}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 353, 'then_line_no': 353, 'if_indent': 6, 'end_if_line_no': 355, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 357}, {'indent': 6, 'line': "      V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'line_no': 358}, {'indent': 6, 'line': '      V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'line_no': 359}, {'indent': 6, 'line': '      INSERT INTO GMD.THEMES(', 'line_no': 360}, {'indent': 9, 'line': '         THEME_NO,', 'line_no': 361}, {'indent': 9, 'line': '         REGISTRAT_DATE,', 'line_no': 362}, {'indent': 9, 'line': '         ODG_NO,', 'line_no': 363}, {'indent': 9, 'line': '         RESGRP_CD,', 'line_no': 364}, {'indent': 9, 'line': '         RESLIN_CD,', 'line_no': 365}, {'indent': 9, 'line': '         THEME_DESC,', 'line_no': 366}, {'indent': 9, 'line': '         SHORT_NAME,', 'line_no': 367}, {'indent': 9, 'line': '         STATUS_CD,', 'line_no': 368}, {'indent': 9, 'line': '         DBA_CD,', 'line_no': 369}, {'indent': 9, 'line': '         IN_PREP_IND,', 'line_no': 370}, {'indent': 9, 'line': '         PROD_SHORT_CD,', 'line_no': 371}, {'indent': 9, 'line': '         TRADEMARK_NO,', 'line_no': 372}, {'indent': 9, 'line': '         BIO_ACTIVITY,', 'line_no': 373}, {'indent': 9, 'line': '         APPLICANT,', 'line_no': 374}, {'indent': 9, 'line': '         CONTACT,', 'line_no': 375}, {'indent': 9, 'line': '         REGISTRAR,', 'line_no': 376}, {'indent': 9, 'line': '         LINE_EXT_INFO,', 'line_no': 377}, {'indent': 9, 'line': '         PORTF_PROJ_CD,', 'line_no': 378}, {'indent': 9, 'line': '         CO_DEV_PRTNR,', 'line_no': 379}, {'indent': 9, 'line': '         TECHNOLOGY_PRTNR,', 'line_no': 380}, {'indent': 9, 'line': '         OFFICIAL_IND,', 'line_no': 381}, {'indent': 9, 'line': '         CO_MAR_PRTNR,', 'line_no': 382}, {'indent': 9, 'line': '         VALID_TO,', 'line_no': 383}, {'indent': 9, 'line': '         PORTF_DA_GROUP_ID,', 'line_no': 384}, {'indent': 9, 'line': '         MANUAL_SHORT_DESC', 'line_no': 385}, {'indent': 6, 'line': '      ) VALUES (', 'line_no': 386}, {'indent': 9, 'line': '         :NEW.THEME_NO,', 'line_no': 387}, {'indent': 9, 'line': '         V_D_REGISTRAT_DATE,', 'line_no': 388}, {'indent': 9, 'line': '         V_ODG_NO,', 'line_no': 389}, {'indent': 9, 'line': '         V_RESGRP_CD,', 'line_no': 390}, {'indent': 9, 'line': '         V_RESLIN_CD,', 'line_no': 391}, {'indent': 9, 'line': '         V_DESCRIPTION,', 'line_no': 392}, {'indent': 9, 'line': '         V_SHORT_NAME,', 'line_no': 393}, {'indent': 9, 'line': '         V_STATUS_CD,', 'line_no': 394}, {'indent': 9, 'line': '         V_DBA_CD,', 'line_no': 395}, {'indent': 9, 'line': '         :NEW.IN_PREP_IND,', 'line_no': 396}, {'indent': 9, 'line': '         :NEW.PROD_SHORT_CD,', 'line_no': 397}, {'indent': 9, 'line': '         :NEW.TRADEMARK_NO,', 'line_no': 398}, {'indent': 9, 'line': '         :NEW.BIO_ACTIVITY,', 'line_no': 399}, {'indent': 9, 'line': '         :NEW.APPLICANT,', 'line_no': 400}, {'indent': 9, 'line': '         :NEW.CONTACT,', 'line_no': 401}, {'indent': 9, 'line': '         TXO_UTIL.GET_USERID,', 'line_no': 402}, {'indent': 9, 'line': '         :NEW.LINE_EXT_INFO,', 'line_no': 403}, {'indent': 9, 'line': '         V_PORTF_PROJ_CD,', 'line_no': 404}, {'indent': 9, 'line': '         :NEW.CO_DEV_PRTNR,', 'line_no': 405}, {'indent': 9, 'line': '         :NEW.TECHNOLOGY_PRTNR,', 'line_no': 406}, {'indent': 9, 'line': '         :NEW.OFFICIAL_IND,', 'line_no': 407}, {'indent': 9, 'line': '         :NEW.CO_MAR_PRTNR,', 'line_no': 408}, {'indent': 9, 'line': '         V_VALID_TO,', 'line_no': 409}, {'indent': 9, 'line': '         :NEW.PORTF_DA_GROUP_ID,', 'line_no': 410}, {'indent': 9, 'line': '         :NEW.MANUAL_SHORT_DESC', 'line_no': 411}, {'indent': 6, 'line': '      );', 'line_no': 412}, {'condition': ' (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 413, 'then_line_no': 414, 'if_indent': 6, 'end_if_line_no': 428, 'then_statements': [{'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}, {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}, {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}, {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}, {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}, {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}, {'indent': 12, 'line': '            1,', 'line_no': 425}, {'indent': 12, 'line': "            'Y'", 'line_no': 426}, {'indent': 9, 'line': '         );', 'line_no': 427}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 195}]
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE ADMIN_UPDATE_ONLY; || 195 || 9
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 195 || raise_statement || RAISE
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 195 || raise_statement
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 195 || raise_statement
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 195 || raise_statement
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_MOLECULE_ID := :NEW.MOLECULE_ID; || 201 || 6
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 201 || assignment
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 201 || assignment
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_MOLECULE_ID', 'assignment_operator': ':=', 'expression': ':NEW.MOLECULE_ID;', 'assignment_line_no': 201, 'assignment_indent': 6}
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE PORTF_PROJ_MOL_CRE_ERR;', 'line_no': 205}]
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE PORTF_PROJ_MOL_CRE_ERR; || 205 || 12
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 205 || raise_statement || RAISE
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 205 || raise_statement
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 205 || raise_statement
2025-09-03 04:09:44,265 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 205 || raise_statement
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 3
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 259}]
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                RAISE INVALID_THEME_NO; || 259 || 15
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 259 || raise_statement || RAISE
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 259 || raise_statement
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 259 || raise_statement
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 259 || raise_statement
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 15, 'line': '               RAISE INVALID_THEME_NO;', 'line_no': 272}]
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                RAISE INVALID_THEME_NO; || 272 || 15
2025-09-03 04:09:44,266 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 272 || raise_statement || RAISE
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 272 || raise_statement
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 272 || raise_statement
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 272 || raise_statement
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE INVALID_THEME_NO;', 'line_no': 275}]
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE INVALID_THEME_NO; || 275 || 12
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 275 || raise_statement || RAISE
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 275 || raise_statement
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 275 || raise_statement
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 275 || raise_statement
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 4
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_COUNTER := NULL; || 278 || 6
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 278 || assignment
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 278 || assignment
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 278, 'assignment_indent': 6}
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 5
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       SELECT || 281 || 6
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 281 || select_statement || SELECT
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 281 || select_statement
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 281 || select_statement
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 297 || select_statement
2025-09-03 04:09:44,267 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SELECT THEME_NO FROM V_THEMES UNION ALL SELECT THEME_NO FROM GMD.THEMES_ARCHIVE )                  T WHERE T.THEME_NO = :NEW.THEME_NO;
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 22
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE THEME_NO_CANNOT_BE_INSERTED;', 'line_no': 299}]
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE THEME_NO_CANNOT_BE_INSERTED; || 299 || 9
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 299 || raise_statement || RAISE
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 299 || raise_statement
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 299 || raise_statement
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 299 || raise_statement
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 23
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_COUNTER := NULL; || 302 || 6
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 302 || assignment
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 302 || assignment
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 302, 'assignment_indent': 6}
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 24
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_D_REGISTRAT_DATE := SYSDATE; || 303 || 6
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 303 || assignment
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 303 || assignment
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': 'SYSDATE;', 'assignment_line_no': 303, 'assignment_indent': 6}
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 25
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE INSERTSMUSTBEOFFICIAL;', 'line_no': 307}]
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE INSERTSMUSTBEOFFICIAL; || 307 || 9
2025-09-03 04:09:44,268 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 307 || raise_statement || RAISE
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 307 || raise_statement
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 307 || raise_statement
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 307 || raise_statement
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 26
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE THEMEDESCRIPTIONMANDATORY;', 'line_no': 313}]
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE THEMEDESCRIPTIONMANDATORY; || 313 || 12
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 313 || raise_statement || RAISE
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 313 || raise_statement
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 313 || raise_statement
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 313 || raise_statement
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 27
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 320}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => NULL,', 'line_no': 321}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => V_MOLECULE_ID,', 'line_no': 322}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 323}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 324}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 325}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 326}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 327}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 328}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 329}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 330}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 331}, {'indent': 9, 'line': '         );', 'line_no': 332}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 337}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 338}]
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( || 320 || 9
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 320 || assignment
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:945] - stmt end: 332 || assignment
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );
2025-09-03 04:09:44,269 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 320, 'assignment_indent': 9}
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 13
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE DESCRIPTION_TOO_LONG;', 'line_no': 334}]
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE DESCRIPTION_TOO_LONG; || 334 || 12
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 334 || raise_statement || RAISE
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 334 || raise_statement
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 334 || raise_statement
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 334 || raise_statement
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 14
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          V_DESCRIPTION := TRIM(V_DESCRIPTION); || 337 || 9
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 337 || assignment
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 337 || assignment
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 337, 'assignment_indent': 9}
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 15
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          V_PORTF_PROJ_CD := 'Y'; || 338 || 9
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 338 || assignment
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 338 || assignment
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 338, 'assignment_indent': 9}
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 28
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_COUNTER := NULL; || 346 || 6
2025-09-03 04:09:44,270 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 346 || assignment
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 346 || assignment
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 346, 'assignment_indent': 6}
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 29
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       SELECT || 347 || 6
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 347 || select_statement || SELECT
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 347 || select_statement
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 347 || select_statement
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 352 || select_statement
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION;
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 35
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 354}]
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE THEME_DESC_NOT_UNIQUE; || 354 || 9
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 354 || raise_statement || RAISE
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 354 || raise_statement
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 354 || raise_statement
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 354 || raise_statement
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 36
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_COUNTER := NULL; || 357 || 6
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 357 || assignment
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 357 || assignment
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 357, 'assignment_indent': 6}
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 37
2025-09-03 04:09:44,271 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_VALID_TO := TO_DATE('09.09.9999', 'DD.MM.YYYY'); || 358 || 6
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 358 || assignment
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 358 || assignment
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_VALID_TO', 'assignment_operator': ':=', 'expression': "TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'assignment_line_no': 358, 'assignment_indent': 6}
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 38
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_SHORT_NAME := NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30)); || 359 || 6
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 359 || assignment
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 359 || assignment
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_SHORT_NAME', 'assignment_operator': ':=', 'expression': 'NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'assignment_line_no': 359, 'assignment_indent': 6}
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 39
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       INSERT INTO GMD.THEMES( || 360 || 6
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 360 || insert_statement || INSERT
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 360 || insert_statement
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 360 || insert_statement
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 412 || insert_statement
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ODG_NO, RESGRP_CD, RESLIN_CD, THEME_DESC, SHORT_NAME, STATUS_CD, DBA_CD, IN_PREP_IND, PROD_SHORT_CD, TRADEMARK_NO, BIO_ACTIVITY, APPLICANT, CONTACT, REGISTRAR, LINE_EXT_INFO, PORTF_PROJ_CD, CO_DEV_PRTNR, TECHNOLOGY_PRTNR, OFFICIAL_IND, CO_MAR_PRTNR, VALID_TO, PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC ) VALUES ( :NEW.THEME_NO, V_D_REGISTRAT_DATE, V_ODG_NO, V_RESGRP_CD, V_RESLIN_CD, V_DESCRIPTION, V_SHORT_NAME, V_STATUS_CD, V_DBA_CD, :NEW.IN_PREP_IND, :NEW.PROD_SHORT_CD, :NEW.TRADEMARK_NO, :NEW.BIO_ACTIVITY, :NEW.APPLICANT, :NEW.CONTACT, TXO_UTIL.GET_USERID, :NEW.LINE_EXT_INFO, V_PORTF_PROJ_CD, :NEW.CO_DEV_PRTNR, :NEW.TECHNOLOGY_PRTNR, :NEW.OFFICIAL_IND, :NEW.CO_MAR_PRTNR, V_VALID_TO, :NEW.PORTF_DA_GROUP_ID, :NEW.MANUAL_SHORT_DESC );
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 92
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 417}, {'indent': 12, 'line': '            A.THEME_NO,', 'line_no': 418}, {'indent': 12, 'line': '            A.MOLECULE_ID,', 'line_no': 419}, {'indent': 12, 'line': '            A.MOLECULE_SEQ_NO,', 'line_no': 420}, {'indent': 12, 'line': '            A.VALID_IND', 'line_no': 421}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 422}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 423}, {'indent': 12, 'line': '            V_MOLECULE_ID,', 'line_no': 424}, {'indent': 12, 'line': '            1,', 'line_no': 425}, {'indent': 12, 'line': "            'Y'", 'line_no': 426}, {'indent': 9, 'line': '         );', 'line_no': 427}]
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( || 417 || 9
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 417 || insert_statement || INSERT
2025-09-03 04:09:44,272 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 417 || insert_statement
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 417 || insert_statement
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 427 || insert_statement
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}], 'if_elses': [], 'else_statements': []}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 493}, {'indent': 6, 'line': '      SELECT', 'line_no': 494}, {'indent': 9, 'line': '         COUNT(T.THEME_NO) INTO V_COUNTER', 'line_no': 495}, {'indent': 6, 'line': '      FROM', 'line_no': 496}, {'indent': 9, 'line': '         V_THEMES T', 'line_no': 497}, {'indent': 6, 'line': '      WHERE', 'line_no': 498}, {'indent': 9, 'line': '         T.THEME_DESC = V_DESCRIPTION', 'line_no': 499}, {'indent': 9, 'line': '         AND T.THEME_NO <> :NEW.THEME_NO;', 'line_no': 500}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}], 'if_elses': [], 'else_statements': []}, {'indent': 6, 'line': '      V_COUNTER := NULL;', 'line_no': 505}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]}]
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 438}]
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE ADMIN_UPDATE_ONLY; || 438 || 9
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 438 || raise_statement || RAISE
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 438 || raise_statement
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 438 || raise_statement
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 438 || raise_statement
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE THEME_NO_ONLY_INSERT;', 'line_no': 442}]
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE THEME_NO_ONLY_INSERT; || 442 || 9
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 442 || raise_statement || RAISE
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 442 || raise_statement
2025-09-03 04:09:44,273 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 442 || raise_statement
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 442 || raise_statement
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': "         V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'line_no': 452}]
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          V_D_REGISTRAT_DATE := TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy'); || 452 || 9
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 452 || assignment
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 452 || assignment
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'assignment_line_no': 452, 'assignment_indent': 9}
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 3
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO(', 'line_no': 461}, {'indent': 12, 'line': '            P_THEME_NO_PORTF => :NEW.THEME_NO,', 'line_no': 462}, {'indent': 12, 'line': '            P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID,', 'line_no': 463}, {'indent': 12, 'line': '            P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD,', 'line_no': 464}, {'indent': 12, 'line': '            P_ODG_NO_PORT => V_ODG_NO,', 'line_no': 465}, {'indent': 12, 'line': '            P_RESGRP_CD_PORT => V_RESGRP_CD,', 'line_no': 466}, {'indent': 12, 'line': '            P_RESLIN_CD_PORT => V_RESLIN_CD,', 'line_no': 467}, {'indent': 12, 'line': '            P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO,', 'line_no': 468}, {'indent': 12, 'line': '            P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR,', 'line_no': 469}, {'indent': 12, 'line': '            P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO,', 'line_no': 470}, {'indent': 12, 'line': '            P_SHORT_NAME_PORTF => :NEW.SHORT_NAME,', 'line_no': 471}, {'indent': 12, 'line': "            P_TRUNC_DESC_LENGTH => 'N'", 'line_no': 472}, {'indent': 9, 'line': '         );', 'line_no': 473}, {'indent': 9, 'line': '         V_DESCRIPTION := TRIM(V_DESCRIPTION);', 'line_no': 474}, {'indent': 9, 'line': "         V_PORTF_PROJ_CD := 'Y';", 'line_no': 475}]
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( || 461 || 9
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 461 || assignment
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:945] - stmt end: 473 || assignment
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - V_DESCRIPTION := GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 461, 'assignment_indent': 9}
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 13
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          V_DESCRIPTION := TRIM(V_DESCRIPTION); || 474 || 9
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 474 || assignment
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 474 || assignment
2025-09-03 04:09:44,274 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 474, 'assignment_indent': 9}
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 14
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          V_PORTF_PROJ_CD := 'Y'; || 475 || 9
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 475 || assignment
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 475 || assignment
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 475, 'assignment_indent': 9}
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 4
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE DESCRIPTION_TOO_LONG;', 'line_no': 487}]
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE DESCRIPTION_TOO_LONG; || 487 || 9
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 487 || raise_statement || RAISE
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 487 || raise_statement
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 487 || raise_statement
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 487 || raise_statement
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 5
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_COUNTER := NULL; || 493 || 6
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 493 || assignment
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 493 || assignment
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 493, 'assignment_indent': 6}
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 6
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       SELECT || 494 || 6
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 494 || select_statement || SELECT
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 494 || select_statement
2025-09-03 04:09:44,275 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 494 || select_statement
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 500 || select_statement
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO;
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 13
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE THEME_DESC_NOT_UNIQUE;', 'line_no': 502}]
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE THEME_DESC_NOT_UNIQUE; || 502 || 9
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 502 || raise_statement || RAISE
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 502 || raise_statement
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 502 || raise_statement
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 502 || raise_statement
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 14
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:       V_COUNTER := NULL; || 505 || 6
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 505 || assignment
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 505 || assignment
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 505, 'assignment_indent': 6}
2025-09-03 04:09:44,276 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 15
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         UPDATE GMD.THEMES', 'line_no': 509}, {'indent': 9, 'line': '         SET', 'line_no': 510}, {'indent': 12, 'line': '            ODG_NO = V_ODG_NO,', 'line_no': 511}, {'indent': 12, 'line': '            RESGRP_CD = V_RESGRP_CD,', 'line_no': 512}, {'indent': 12, 'line': '            RESLIN_CD = V_RESLIN_CD,', 'line_no': 513}, {'indent': 12, 'line': '            THEME_DESC = V_DESCRIPTION,', 'line_no': 514}, {'indent': 12, 'line': '            SHORT_NAME = V_SHORT_NAME,', 'line_no': 515}, {'indent': 12, 'line': '            STATUS_CD = V_STATUS_CD,', 'line_no': 516}, {'indent': 12, 'line': '            DBA_CD = V_DBA_CD,', 'line_no': 517}, {'indent': 12, 'line': '            IN_PREP_IND = :NEW.IN_PREP_IND,', 'line_no': 518}, {'indent': 12, 'line': '            PROD_SHORT_CD = :NEW.PROD_SHORT_CD,', 'line_no': 519}, {'indent': 12, 'line': '            TRADEMARK_NO = :NEW.TRADEMARK_NO,', 'line_no': 520}, {'indent': 12, 'line': '            BIO_ACTIVITY = :NEW.BIO_ACTIVITY,', 'line_no': 521}, {'indent': 12, 'line': '            APPLICANT = :NEW.APPLICANT,', 'line_no': 522}, {'indent': 12, 'line': '            CONTACT = :NEW.CONTACT,', 'line_no': 523}, {'indent': 12, 'line': '            LINE_EXT_INFO = :NEW.LINE_EXT_INFO,', 'line_no': 524}, {'indent': 12, 'line': '            PORTF_PROJ_CD = V_PORTF_PROJ_CD,', 'line_no': 525}, {'indent': 12, 'line': '            CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR,', 'line_no': 526}, {'indent': 12, 'line': '            TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR,', 'line_no': 527}, {'indent': 12, 'line': '            OFFICIAL_IND = :NEW.OFFICIAL_IND,', 'line_no': 528}, {'indent': 12, 'line': '            CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR,', 'line_no': 529}, {'indent': 12, 'line': '            PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID,', 'line_no': 530}, {'indent': 12, 'line': '            MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC', 'line_no': 531}, {'indent': 9, 'line': '         WHERE', 'line_no': 532}, {'indent': 12, 'line': '            THEME_NO = :NEW.THEME_NO', 'line_no': 533}, {'indent': 12, 'line': "            AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'line_no': 534}]
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          UPDATE GMD.THEMES || 509 || 9
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 509 || update_statement || UPDATE
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 509 || update_statement
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 509 || update_statement
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 534 || update_statement
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 16
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A(', 'line_no': 590}, {'indent': 15, 'line': '               A.THEME_NO,', 'line_no': 591}, {'indent': 15, 'line': '               A.MOLECULE_ID,', 'line_no': 592}, {'indent': 15, 'line': '               A.MOLECULE_SEQ_NO,', 'line_no': 593}, {'indent': 15, 'line': '               A.VALID_IND', 'line_no': 594}, {'indent': 12, 'line': '            ) VALUES (', 'line_no': 595}, {'indent': 15, 'line': '               :NEW.THEME_NO,', 'line_no': 596}, {'indent': 15, 'line': '               :NEW.MOLECULE_ID,', 'line_no': 597}, {'indent': 15, 'line': '               1,', 'line_no': 598}, {'indent': 15, 'line': "               'Y'", 'line_no': 599}, {'indent': 12, 'line': '            );', 'line_no': 600}]
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( || 590 || 12
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 590 || insert_statement || INSERT
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 590 || insert_statement
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 590 || insert_statement
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 600 || insert_statement
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );
2025-09-03 04:09:44,277 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            UPDATE MDM_V_THEME_MOLECULE_MAP A', 'line_no': 604}, {'indent': 12, 'line': '            SET', 'line_no': 605}, {'indent': 15, 'line': '               A.MOLECULE_ID = :NEW.MOLECULE_ID,', 'line_no': 606}, {'indent': 15, 'line': "               A.VALID_IND = 'Y'", 'line_no': 607}, {'indent': 12, 'line': '            WHERE', 'line_no': 608}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 609}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO = 1', 'line_no': 610}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 611}]
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             UPDATE MDM_V_THEME_MOLECULE_MAP A || 604 || 12
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 604 || update_statement || UPDATE
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 604 || update_statement
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 604 || update_statement
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 611 || update_statement
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            SELECT', 'line_no': 613}, {'indent': 15, 'line': '               COUNT(*) INTO V_SEC_MOL_CNT', 'line_no': 614}, {'indent': 12, 'line': '            FROM', 'line_no': 615}, {'indent': 15, 'line': '               MDM_V_THEME_MOLECULE_MAP_MTN A', 'line_no': 616}, {'indent': 12, 'line': '            WHERE', 'line_no': 617}, {'indent': 15, 'line': '               A.THEME_NO = :NEW.THEME_NO', 'line_no': 618}, {'indent': 15, 'line': '               AND A.MOLECULE_SEQ_NO > 1', 'line_no': 619}, {'indent': 15, 'line': "               AND A.VALID_IND = 'Y';", 'line_no': 620}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             SELECT || 613 || 12
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 613 || select_statement || SELECT
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 613 || select_statement
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 613 || select_statement
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 620 || select_statement
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 8
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 15, 'line': '               RAISE SEC_MOL_LIST_NOT_EMPTY;', 'line_no': 622}]
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                RAISE SEC_MOL_LIST_NOT_EMPTY; || 622 || 15
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 622 || raise_statement || RAISE
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 622 || raise_statement
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 622 || raise_statement
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 622 || raise_statement
2025-09-03 04:09:44,278 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            NULL;', 'line_no': 636}]
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             NULL; || 636 || 12
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 636 || null_statement || NULL
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 636 || null_statement
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 636 || null_statement
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 636 || null_statement
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}], 'if_elses': [], 'else_statements': []}, {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         RAISE ADMIN_UPDATE_ONLY;', 'line_no': 641}]
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          RAISE ADMIN_UPDATE_ONLY; || 641 || 9
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 641 || raise_statement || RAISE
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 641 || raise_statement
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 641 || raise_statement
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 641 || raise_statement
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         DELETE FROM GMD.THEMES A', 'line_no': 649}, {'indent': 9, 'line': '         WHERE', 'line_no': 650}, {'indent': 12, 'line': '            A.THEME_NO = :OLD.THEME_NO', 'line_no': 651}, {'indent': 12, 'line': '            AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'line_no': 652}]
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          DELETE FROM GMD.THEMES A || 649 || 9
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 649 || delete_statement || DELETE
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 649 || delete_statement
2025-09-03 04:09:44,279 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 649 || delete_statement
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 652 || delete_statement
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 50
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 662, 'then_line_no': 663, 'if_indent': 6, 'end_if_line_no': 720, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 666}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}, {'indent': 9, 'line': '         FROM', 'line_no': 668}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}, {'indent': 9, 'line': '         WHERE', 'line_no': 670}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) ", 'type': 'if_else', 'if_line_no': 724, 'then_line_no': 725, 'if_indent': 6, 'end_if_line_no': 746, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 728}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}, {'indent': 9, 'line': '         FROM', 'line_no': 730}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}, {'indent': 9, 'line': '         WHERE', 'line_no': 732}, {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}, {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         SELECT', 'line_no': 666}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 667}, {'indent': 9, 'line': '         FROM', 'line_no': 668}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 669}, {'indent': 9, 'line': '         WHERE', 'line_no': 670}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 671}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 672}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          SELECT || 666 || 9
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 666 || select_statement || SELECT
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 666 || select_statement
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 666 || select_statement
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 672 || select_statement
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 678}, {'indent': 12, 'line': '            SET', 'line_no': 679}, {'indent': 15, 'line': "               PROPOSAL_STATUS_CD = 'E',", 'line_no': 680}, {'indent': 15, 'line': '               EVOLVED_THEME_NO = :NEW.THEME_NO,', 'line_no': 681}, {'indent': 15, 'line': '               PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 682}, {'indent': 15, 'line': "               REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 683}, {'indent': 12, 'line': '            WHERE', 'line_no': 684}, {'indent': 15, 'line': '               PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 685}]
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN || 678 || 12
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 678 || update_statement || UPDATE
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 678 || update_statement
2025-09-03 04:09:44,280 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 678 || update_statement
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 685 || update_statement
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         SELECT', 'line_no': 728}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 729}, {'indent': 9, 'line': '         FROM', 'line_no': 730}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 731}, {'indent': 9, 'line': '         WHERE', 'line_no': 732}, {'indent': 12, 'line': '            NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 733}, {'indent': 12, 'line': "            AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 734}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          SELECT || 728 || 9
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 728 || select_statement || SELECT
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 728 || select_statement
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 728 || select_statement
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 734 || select_statement
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP', 'line_no': 738}, {'indent': 12, 'line': '            SET', 'line_no': 739}, {'indent': 15, 'line': '               NMP.PROPOSAL_NAME = V_SHORT_NAME,', 'line_no': 740}, {'indent': 15, 'line': "               NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **'", 'line_no': 741}, {'indent': 12, 'line': '            WHERE', 'line_no': 742}, {'indent': 15, 'line': '               NMP.EVOLVED_THEME_NO =:NEW.THEME_NO', 'line_no': 743}, {'indent': 15, 'line': "               AND NMP.PROPOSAL_STATUS_CD = 'E';", 'line_no': 744}]
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP || 738 || 12
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 738 || update_statement || UPDATE
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 738 || update_statement
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 738 || update_statement
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 744 || update_statement
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,281 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 51
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 754, 'then_line_no': 754, 'if_indent': 6, 'end_if_line_no': 763, 'then_statements': [{'indent': 9, 'line': '         SELECT', 'line_no': 755}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}, {'indent': 9, 'line': '         FROM', 'line_no': 757}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}, {'indent': 9, 'line': '         WHERE', 'line_no': 759}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}, {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) ', 'type': 'if_else', 'if_line_no': 767, 'then_line_no': 769, 'if_indent': 6, 'end_if_line_no': 802, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}, {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}, {'indent': 12, 'line': "            'E',", 'line_no': 795}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}, {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}, {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}, {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}, {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}, {'indent': 9, 'line': '         );', 'line_no': 801}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 9, 'line': '         SELECT', 'line_no': 755}, {'indent': 12, 'line': '            COUNT(*) INTO V_EVOLVED_NMP_CNT', 'line_no': 756}, {'indent': 9, 'line': '         FROM', 'line_no': 757}, {'indent': 12, 'line': '            MDM_V_NEW_MEDICINE_PROPOSALS_MTN', 'line_no': 758}, {'indent': 9, 'line': '         WHERE', 'line_no': 759}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID', 'line_no': 760}, {'indent': 12, 'line': '            AND PROPOSAL_NAME = V_SHORT_NAME', 'line_no': 761}, {'indent': 12, 'line': "            AND PROPOSAL_STATUS_CD = 'E';", 'line_no': 762}]
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          SELECT || 755 || 9
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 755 || select_statement || SELECT
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 755 || select_statement
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 755 || select_statement
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 762 || select_statement
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'indent': 9, 'line': '         INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN (', 'line_no': 787}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 788}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 789}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 790}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 791}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 792}, {'indent': 12, 'line': '            REASON_FOR_CHANGE', 'line_no': 793}, {'indent': 9, 'line': '         ) VALUES (', 'line_no': 794}, {'indent': 12, 'line': "            'E',", 'line_no': 795}, {'indent': 12, 'line': '            :NEW.THEME_NO,', 'line_no': 796}, {'indent': 12, 'line': '            V_SHORT_NAME,', 'line_no': 797}, {'indent': 12, 'line': '            NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID),', 'line_no': 798}, {'indent': 12, 'line': '            NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID),', 'line_no': 799}, {'indent': 12, 'line': "            '** Automatic creation of nmp for early development themes **'", 'line_no': 800}, {'indent': 9, 'line': '         );', 'line_no': 801}]
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]}], 'exception_line_no': 781, 'end_line_no': 784}]
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 15, 'line': '               SELECT', 'line_no': 772}, {'indent': 18, 'line': '                  PHARMACOLOGICAL_TYPE_ID,', 'line_no': 773}, {'indent': 18, 'line': '                  MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID,', 'line_no': 774}, {'indent': 18, 'line': '                  V_MOLECULE_TYPE_ID', 'line_no': 775}, {'indent': 15, 'line': '               FROM', 'line_no': 776}, {'indent': 18, 'line': '                  V_THEME_MOLECULES M', 'line_no': 777}, {'indent': 15, 'line': '               WHERE', 'line_no': 778}, {'indent': 18, 'line': '                  MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 779}, {'indent': 18, 'line': "                  AND M.VALID_IND = 'Y';", 'line_no': 780}]
2025-09-03 04:09:44,282 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                SELECT || 772 || 15
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 772 || select_statement || SELECT
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 772 || select_statement
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 772 || select_statement
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 780 || select_statement
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 18, 'line': '                  RAISE INVALID_MOLECULE_ID;', 'line_no': 783}]
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                   RAISE INVALID_MOLECULE_ID; || 783 || 18
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 783 || raise_statement || RAISE
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 783 || raise_statement
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 783 || raise_statement
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 783 || raise_statement
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:          INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( || 787 || 9
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 787 || insert_statement || INSERT
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 787 || insert_statement
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 787 || insert_statement
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 801 || insert_statement
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 52
2025-09-03 04:09:44,283 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'for_expression': '( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )', 'type': 'for_loop', 'for_line_no': 809, 'for_indent': 6, 'end_for_line_no': 822, 'loop_variable': 'I1', 'for_statements': []}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20115', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20115, 'MDM_V_THEMES_IOF'"}}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20116', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20116, 'MDM_V_THEMES_IOF'"}}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20117', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20117, 'MDM_V_THEMES_IOF'"}}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20118', "'This is not a valid Molecule ID'"], 'named_params': {}, 'raw_text': "-20118, 'This is not a valid Molecule ID'"}}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20119', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20119, 'MDM_V_THEMES_IOF'"}}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'This is not a valid Theme No'"], 'named_params': {}, 'raw_text': "-20101, 'This is not a valid Theme No'"}}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"], 'named_params': {}, 'raw_text': "-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"}}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Theme No cannot be updated'"], 'named_params': {}, 'raw_text': "-20400, 'Theme No cannot be updated'"}}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''}}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''}}]
2025-09-03 04:09:44,284 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''}}]
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This Theme No already exists'"], 'named_params': {}, 'raw_text': "-20400, 'This Theme No already exists'"}}]
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Official Change for this Theme No and Day already exists'"], 'named_params': {}, 'raw_text': "-20400, 'Official Change for this Theme No and Day already exists'"}}]
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'New Themes can only be inserted by Official Changes'"], 'named_params': {}, 'raw_text': "-20400, 'New Themes can only be inserted by Official Changes'"}}]
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''], 'named_params': {}, 'raw_text': '-20400, \'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''}}]
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This Theme Description already exists'"], 'named_params': {}, 'raw_text': "-20400, 'This Theme Description already exists'"}}]
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20120', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20120, 'MDM_V_THEMES_IOF'"}}]
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20900', "'Debug in Themes IOF standard'"], 'named_params': {}, 'raw_text': "-20900, 'Debug in Themes IOF standard'"}}]
2025-09-03 04:09:44,285 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,286 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 51, 'begin_indent': 0, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID FROM DUAL;', 'statement_line_no': 54, 'statement_indent': 3}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID;', 'statement_line_no': 61, 'statement_indent': 3}, {'type': 'select_statement', 'sql_statement': 'SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT TO_NUMBER(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1;', 'statement_line_no': 70, 'statement_indent': 3}, {'condition': " (:NEW.IN_PREP_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 95, 'then_line_no': 96, 'if_indent': 3, 'end_if_line_no': 111, 'then_statements': [{'condition': " (:NEW.PORTF_PROJ_CD <> 'Y') ", 'type': 'if_else', 'if_line_no': 97, 'then_line_no': 97, 'if_indent': 6, 'end_if_line_no': 99, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_PORTF_PROJ;', 'statement_line_no': 98, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 101, 'then_line_no': 102, 'if_indent': 6, 'end_if_line_no': 104, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_CLOSED;', 'statement_line_no': 103, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 106, 'then_line_no': 106, 'if_indent': 6, 'end_if_line_no': 110, 'then_statements': [{'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 115, 'then_line_no': 115, 'if_indent': 3, 'end_if_line_no': 145, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 117, 'statement_indent': 9}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 128, 'statement_indent': 12}]}], 'exception_line_no': 126, 'end_line_no': 129}, {'condition': ' (V_MOLECULE_RG_NO IS NULL) ', 'type': 'if_else', 'if_line_no': 131, 'then_line_no': 131, 'if_indent': 6, 'end_if_line_no': 144, 'then_statements': [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 133, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_ODG_NO', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);', 'assignment_line_no': 150, 'assignment_indent': 3}, {'type': 'assignment', 'variable_name': 'V_RESGRP_CD', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);', 'assignment_line_no': 151, 'assignment_indent': 3}, {'type': 'assignment', 'variable_name': 'V_RESLIN_CD', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);', 'assignment_line_no': 152, 'assignment_indent': 3}, {'type': 'assignment', 'variable_name': 'V_RESLIN_DESC', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));', 'assignment_line_no': 153, 'assignment_indent': 3}, {'condition': ' (:NEW.STATUS_DESC IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 154, 'then_line_no': 154, 'if_indent': 3, 'end_if_line_no': 163, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;', 'statement_line_no': 155, 'statement_indent': 6}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.DBA_DESC_CONCAT IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 165, 'then_line_no': 165, 'if_indent': 3, 'end_if_line_no': 176, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;", 'statement_line_no': 166, 'statement_indent': 6}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_MOLEC_IN_LIC_PRTNR', 'assignment_operator': ':=', 'expression': 'GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);', 'assignment_line_no': 178, 'assignment_indent': 3}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 179, 'then_line_no': 179, 'if_indent': 3, 'end_if_line_no': 183, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_TRADEMARK_NO', 'assignment_operator': ':=', 'expression': ':NEW.TRADEMARK_NO;', 'assignment_line_no': 180, 'assignment_indent': 6}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_THEME_DESC_PROPOSAL', 'assignment_operator': ':=', 'expression': "GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');", 'assignment_line_no': 185, 'assignment_indent': 3}, {'condition': ' (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) ', 'type': 'if_else', 'if_line_no': 186, 'then_line_no': 187, 'if_indent': 3, 'end_if_line_no': 189, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'statement_line_no': 188, 'statement_indent': 6}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_SHORT_NAME', 'assignment_operator': ':=', 'expression': 'COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);', 'assignment_line_no': 191, 'assignment_indent': 3}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 192, 'then_line_no': 192, 'if_indent': 3, 'end_if_line_no': 656, 'then_statements': [{'condition': " (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 193, 'then_line_no': 194, 'if_indent': 6, 'end_if_line_no': 196, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 195, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_MOLECULE_ID', 'assignment_operator': ':=', 'expression': ':NEW.MOLECULE_ID;', 'assignment_line_no': 201, 'assignment_indent': 6}, {'condition': " (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) ", 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 203, 'if_indent': 6, 'end_if_line_no': 247, 'then_statements': [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE PORTF_PROJ_MOL_CRE_ERR;', 'statement_line_no': 205, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 259, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 272, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 275, 'statement_indent': 12}]}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 278, 'assignment_indent': 6}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SELECT THEME_NO FROM V_THEMES UNION ALL SELECT THEME_NO FROM GMD.THEMES_ARCHIVE )                  T WHERE T.THEME_NO = :NEW.THEME_NO;', 'statement_line_no': 281, 'statement_indent': 6}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 298, 'then_line_no': 298, 'if_indent': 6, 'end_if_line_no': 300, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_CANNOT_BE_INSERTED;', 'statement_line_no': 299, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 302, 'assignment_indent': 6}, {'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': 'SYSDATE;', 'assignment_line_no': 303, 'assignment_indent': 6}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 306, 'then_line_no': 306, 'if_indent': 6, 'end_if_line_no': 308, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INSERTSMUSTBEOFFICIAL;', 'statement_line_no': 307, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'N') ", 'type': 'if_else', 'if_line_no': 310, 'then_line_no': 310, 'if_indent': 6, 'end_if_line_no': 315, 'then_statements': [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEMEDESCRIPTIONMANDATORY;', 'statement_line_no': 313, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') ", 'type': 'if_else', 'if_line_no': 319, 'then_line_no': 319, 'if_indent': 6, 'end_if_line_no': 344, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 320, 'assignment_indent': 9}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 334, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 337, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 338, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 346, 'assignment_indent': 6}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION;', 'statement_line_no': 347, 'statement_indent': 6}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 353, 'then_line_no': 353, 'if_indent': 6, 'end_if_line_no': 355, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 354, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 357, 'assignment_indent': 6}, {'type': 'assignment', 'variable_name': 'V_VALID_TO', 'assignment_operator': ':=', 'expression': "TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'assignment_line_no': 358, 'assignment_indent': 6}, {'type': 'assignment', 'variable_name': 'V_SHORT_NAME', 'assignment_operator': ':=', 'expression': 'NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'assignment_line_no': 359, 'assignment_indent': 6}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ODG_NO, RESGRP_CD, RESLIN_CD, THEME_DESC, SHORT_NAME, STATUS_CD, DBA_CD, IN_PREP_IND, PROD_SHORT_CD, TRADEMARK_NO, BIO_ACTIVITY, APPLICANT, CONTACT, REGISTRAR, LINE_EXT_INFO, PORTF_PROJ_CD, CO_DEV_PRTNR, TECHNOLOGY_PRTNR, OFFICIAL_IND, CO_MAR_PRTNR, VALID_TO, PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC ) VALUES ( :NEW.THEME_NO, V_D_REGISTRAT_DATE, V_ODG_NO, V_RESGRP_CD, V_RESLIN_CD, V_DESCRIPTION, V_SHORT_NAME, V_STATUS_CD, V_DBA_CD, :NEW.IN_PREP_IND, :NEW.PROD_SHORT_CD, :NEW.TRADEMARK_NO, :NEW.BIO_ACTIVITY, :NEW.APPLICANT, :NEW.CONTACT, TXO_UTIL.GET_USERID, :NEW.LINE_EXT_INFO, V_PORTF_PROJ_CD, :NEW.CO_DEV_PRTNR, :NEW.TECHNOLOGY_PRTNR, :NEW.OFFICIAL_IND, :NEW.CO_MAR_PRTNR, V_VALID_TO, :NEW.PORTF_DA_GROUP_ID, :NEW.MANUAL_SHORT_DESC );', 'statement_line_no': 360, 'statement_indent': 6}, {'condition': ' (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 413, 'then_line_no': 414, 'if_indent': 6, 'end_if_line_no': 428, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 417, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 432, 'elif_indent': 3, 'condition': '(UPDATING)', 'then_line_no': 432, 'then_statements': [{'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 438, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_ONLY_INSERT;', 'statement_line_no': 442, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'assignment_line_no': 452, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 461, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 474, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 475, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 487, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 493, 'assignment_indent': 6}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO;', 'statement_line_no': 494, 'statement_indent': 6}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 502, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 505, 'assignment_indent': 6}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'statement_line_no': 509, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 590, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 604, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 613, 'statement_indent': 12}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 636, 'statement_indent': 12}]}]}, {'type': 'elif_statement', 'elif_line_no': 638, 'elif_indent': 3, 'condition': '(DELETING)', 'then_line_no': 638, 'then_statements': [{'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 641, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'statement_line_no': 649, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': []}, {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 660, 'then_line_no': 661, 'if_indent': 3, 'end_if_line_no': 747, 'then_statements': [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 662, 'then_line_no': 663, 'if_indent': 6, 'end_if_line_no': 720, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 666, 'statement_indent': 9}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;", 'statement_line_no': 678, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) ", 'type': 'if_else', 'if_line_no': 724, 'then_line_no': 725, 'if_indent': 6, 'end_if_line_no': 746, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 728, 'statement_indent': 9}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 738, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (INSERTING AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y') ", 'type': 'if_else', 'if_line_no': 751, 'then_line_no': 753, 'if_indent': 3, 'end_if_line_no': 803, 'then_statements': [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 754, 'then_line_no': 754, 'if_indent': 6, 'end_if_line_no': 763, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 755, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) ', 'type': 'if_else', 'if_line_no': 767, 'then_line_no': 769, 'if_indent': 6, 'end_if_line_no': 802, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );", 'statement_line_no': 787, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'begin_end', 'begin_line_no': 805, 'begin_indent': 3, 'begin_end_statements': [{'for_expression': '( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )', 'type': 'for_loop', 'for_line_no': 809, 'for_indent': 6, 'end_for_line_no': 822, 'loop_variable': 'I1', 'for_statements': []}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 823}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ADMIN_UPDATE_ONLY', 'when_line_no': 825, 'when_indent': 3, 'then_line_no': 825, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20115', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20115, 'MDM_V_THEMES_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'IN_PREP_NOT_PORTF_PROJ', 'when_line_no': 827, 'when_indent': 3, 'then_line_no': 827, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20116', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20116, 'MDM_V_THEMES_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'IN_PREP_NOT_CLOSED', 'when_line_no': 829, 'when_indent': 3, 'then_line_no': 829, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20117', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20117, 'MDM_V_THEMES_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'INVALID_MOLECULE_ID', 'when_line_no': 831, 'when_indent': 3, 'then_line_no': 831, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20118', "'This is not a valid Molecule ID'"], 'named_params': {}, 'raw_text': "-20118, 'This is not a valid Molecule ID'"}}]}, {'type': 'exception_handler', 'exception_name': 'SEC_MOL_LIST_NOT_EMPTY', 'when_line_no': 833, 'when_indent': 3, 'then_line_no': 833, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20119', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20119, 'MDM_V_THEMES_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'INVALID_THEME_NO', 'when_line_no': 835, 'when_indent': 3, 'then_line_no': 835, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'This is not a valid Theme No'"], 'named_params': {}, 'raw_text': "-20101, 'This is not a valid Theme No'"}}]}, {'type': 'exception_handler', 'exception_name': 'DELETE_NO_MORE_POSSIBLE', 'when_line_no': 837, 'when_indent': 3, 'then_line_no': 837, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"], 'named_params': {}, 'raw_text': "-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"}}]}, {'type': 'exception_handler', 'exception_name': 'THEME_NO_ONLY_INSERT', 'when_line_no': 839, 'when_indent': 3, 'then_line_no': 839, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Theme No cannot be updated'"], 'named_params': {}, 'raw_text': "-20400, 'Theme No cannot be updated'"}}]}, {'type': 'exception_handler', 'exception_name': 'DESCRIPTION_TOO_LONG', 'when_line_no': 841, 'when_indent': 3, 'then_line_no': 841, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''}}]}, {'type': 'exception_handler', 'exception_name': 'THEME_DESC_PROPOSAL_TOO_LONG', 'when_line_no': 845, 'when_indent': 3, 'then_line_no': 845, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''}}]}, {'type': 'exception_handler', 'exception_name': 'THEME_DESC_ALT_TOO_LONG', 'when_line_no': 849, 'when_indent': 3, 'then_line_no': 849, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''}}]}, {'type': 'exception_handler', 'exception_name': 'THEME_NO_CANNOT_BE_INSERTED', 'when_line_no': 853, 'when_indent': 3, 'then_line_no': 853, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This Theme No already exists'"], 'named_params': {}, 'raw_text': "-20400, 'This Theme No already exists'"}}]}, {'type': 'exception_handler', 'exception_name': 'ONLYONEOFFICIALCHANGEPERDAY', 'when_line_no': 855, 'when_indent': 3, 'then_line_no': 855, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Official Change for this Theme No and Day already exists'"], 'named_params': {}, 'raw_text': "-20400, 'Official Change for this Theme No and Day already exists'"}}]}, {'type': 'exception_handler', 'exception_name': 'INSERTSMUSTBEOFFICIAL', 'when_line_no': 857, 'when_indent': 3, 'then_line_no': 857, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'New Themes can only be inserted by Official Changes'"], 'named_params': {}, 'raw_text': "-20400, 'New Themes can only be inserted by Official Changes'"}}]}, {'type': 'exception_handler', 'exception_name': 'THEMEDESCRIPTIONMANDATORY', 'when_line_no': 859, 'when_indent': 3, 'then_line_no': 859, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''], 'named_params': {}, 'raw_text': '-20400, \'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''}}]}, {'type': 'exception_handler', 'exception_name': 'THEME_DESC_NOT_UNIQUE', 'when_line_no': 861, 'when_indent': 3, 'then_line_no': 861, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This Theme Description already exists'"], 'named_params': {}, 'raw_text': "-20400, 'This Theme Description already exists'"}}]}, {'type': 'exception_handler', 'exception_name': 'PORTF_PROJ_MOL_CRE_ERR', 'when_line_no': 863, 'when_indent': 3, 'then_line_no': 863, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20120', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20120, 'MDM_V_THEMES_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'DEBUGGING', 'when_line_no': 865, 'when_indent': 3, 'then_line_no': 865, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20900', "'Debug in Themes IOF standard'"], 'named_params': {}, 'raw_text': "-20900, 'Debug in Themes IOF standard'"}}]}], 'exception_line_no': 824, 'end_line_no': 870}
2025-09-03 04:09:44,286 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID FROM DUAL;', 'statement_line_no': 54, 'statement_indent': 3}
2025-09-03 04:09:44,286 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID;', 'statement_line_no': 61, 'statement_indent': 3}
2025-09-03 04:09:44,286 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT TO_NUMBER(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1;', 'statement_line_no': 70, 'statement_indent': 3}
2025-09-03 04:09:44,286 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.IN_PREP_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 95, 'then_line_no': 96, 'if_indent': 3, 'end_if_line_no': 111, 'then_statements': [{'condition': " (:NEW.PORTF_PROJ_CD <> 'Y') ", 'type': 'if_else', 'if_line_no': 97, 'then_line_no': 97, 'if_indent': 6, 'end_if_line_no': 99, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_PORTF_PROJ;', 'statement_line_no': 98, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 101, 'then_line_no': 102, 'if_indent': 6, 'end_if_line_no': 104, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_CLOSED;', 'statement_line_no': 103, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 106, 'then_line_no': 106, 'if_indent': 6, 'end_if_line_no': 110, 'then_statements': [{'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,286 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.PORTF_PROJ_CD <> 'Y') ", 'type': 'if_else', 'if_line_no': 97, 'then_line_no': 97, 'if_indent': 6, 'end_if_line_no': 99, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_PORTF_PROJ;', 'statement_line_no': 98, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,286 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_PORTF_PROJ;', 'statement_line_no': 98, 'statement_indent': 9}
2025-09-03 04:09:44,286 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 101, 'then_line_no': 102, 'if_indent': 6, 'end_if_line_no': 104, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_CLOSED;', 'statement_line_no': 103, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,286 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_CLOSED;', 'statement_line_no': 103, 'statement_indent': 9}
2025-09-03 04:09:44,287 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 106, 'then_line_no': 106, 'if_indent': 6, 'end_if_line_no': 110, 'then_statements': [{'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,287 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}
2025-09-03 04:09:44,287 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 115, 'then_line_no': 115, 'if_indent': 3, 'end_if_line_no': 145, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 117, 'statement_indent': 9}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 128, 'statement_indent': 12}]}], 'exception_line_no': 126, 'end_line_no': 129}, {'condition': ' (V_MOLECULE_RG_NO IS NULL) ', 'type': 'if_else', 'if_line_no': 131, 'then_line_no': 131, 'if_indent': 6, 'end_if_line_no': 144, 'then_statements': [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 133, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,287 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 117, 'statement_indent': 9}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 128, 'statement_indent': 12}]}], 'exception_line_no': 126, 'end_line_no': 129}
2025-09-03 04:09:44,287 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 117, 'statement_indent': 9}
2025-09-03 04:09:44,287 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 128, 'statement_indent': 12}]}
2025-09-03 04:09:44,287 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 128, 'statement_indent': 12}
2025-09-03 04:09:44,287 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (V_MOLECULE_RG_NO IS NULL) ', 'type': 'if_else', 'if_line_no': 131, 'then_line_no': 131, 'if_indent': 6, 'end_if_line_no': 144, 'then_statements': [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 133, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,287 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 133, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,287 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 133, 'statement_indent': 12}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_ODG_NO', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);', 'assignment_line_no': 150, 'assignment_indent': 3}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_RESGRP_CD', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);', 'assignment_line_no': 151, 'assignment_indent': 3}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_RESLIN_CD', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);', 'assignment_line_no': 152, 'assignment_indent': 3}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_RESLIN_DESC', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));', 'assignment_line_no': 153, 'assignment_indent': 3}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.STATUS_DESC IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 154, 'then_line_no': 154, 'if_indent': 3, 'end_if_line_no': 163, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;', 'statement_line_no': 155, 'statement_indent': 6}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;', 'statement_line_no': 155, 'statement_indent': 6}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.DBA_DESC_CONCAT IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 165, 'then_line_no': 165, 'if_indent': 3, 'end_if_line_no': 176, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;", 'statement_line_no': 166, 'statement_indent': 6}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;", 'statement_line_no': 166, 'statement_indent': 6}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_MOLEC_IN_LIC_PRTNR', 'assignment_operator': ':=', 'expression': 'GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);', 'assignment_line_no': 178, 'assignment_indent': 3}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 179, 'then_line_no': 179, 'if_indent': 3, 'end_if_line_no': 183, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_TRADEMARK_NO', 'assignment_operator': ':=', 'expression': ':NEW.TRADEMARK_NO;', 'assignment_line_no': 180, 'assignment_indent': 6}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_TRADEMARK_NO', 'assignment_operator': ':=', 'expression': ':NEW.TRADEMARK_NO;', 'assignment_line_no': 180, 'assignment_indent': 6}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_THEME_DESC_PROPOSAL', 'assignment_operator': ':=', 'expression': "GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');", 'assignment_line_no': 185, 'assignment_indent': 3}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) ', 'type': 'if_else', 'if_line_no': 186, 'then_line_no': 187, 'if_indent': 3, 'end_if_line_no': 189, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'statement_line_no': 188, 'statement_indent': 6}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'statement_line_no': 188, 'statement_indent': 6}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_SHORT_NAME', 'assignment_operator': ':=', 'expression': 'COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);', 'assignment_line_no': 191, 'assignment_indent': 3}
2025-09-03 04:09:44,288 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 192, 'then_line_no': 192, 'if_indent': 3, 'end_if_line_no': 656, 'then_statements': [{'condition': " (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 193, 'then_line_no': 194, 'if_indent': 6, 'end_if_line_no': 196, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 195, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_MOLECULE_ID', 'assignment_operator': ':=', 'expression': ':NEW.MOLECULE_ID;', 'assignment_line_no': 201, 'assignment_indent': 6}, {'condition': " (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) ", 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 203, 'if_indent': 6, 'end_if_line_no': 247, 'then_statements': [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE PORTF_PROJ_MOL_CRE_ERR;', 'statement_line_no': 205, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 259, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 272, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 275, 'statement_indent': 12}]}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 278, 'assignment_indent': 6}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SELECT THEME_NO FROM V_THEMES UNION ALL SELECT THEME_NO FROM GMD.THEMES_ARCHIVE )                  T WHERE T.THEME_NO = :NEW.THEME_NO;', 'statement_line_no': 281, 'statement_indent': 6}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 298, 'then_line_no': 298, 'if_indent': 6, 'end_if_line_no': 300, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_CANNOT_BE_INSERTED;', 'statement_line_no': 299, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 302, 'assignment_indent': 6}, {'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': 'SYSDATE;', 'assignment_line_no': 303, 'assignment_indent': 6}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 306, 'then_line_no': 306, 'if_indent': 6, 'end_if_line_no': 308, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INSERTSMUSTBEOFFICIAL;', 'statement_line_no': 307, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'N') ", 'type': 'if_else', 'if_line_no': 310, 'then_line_no': 310, 'if_indent': 6, 'end_if_line_no': 315, 'then_statements': [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEMEDESCRIPTIONMANDATORY;', 'statement_line_no': 313, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') ", 'type': 'if_else', 'if_line_no': 319, 'then_line_no': 319, 'if_indent': 6, 'end_if_line_no': 344, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 320, 'assignment_indent': 9}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 334, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 337, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 338, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 346, 'assignment_indent': 6}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION;', 'statement_line_no': 347, 'statement_indent': 6}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 353, 'then_line_no': 353, 'if_indent': 6, 'end_if_line_no': 355, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 354, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 357, 'assignment_indent': 6}, {'type': 'assignment', 'variable_name': 'V_VALID_TO', 'assignment_operator': ':=', 'expression': "TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'assignment_line_no': 358, 'assignment_indent': 6}, {'type': 'assignment', 'variable_name': 'V_SHORT_NAME', 'assignment_operator': ':=', 'expression': 'NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'assignment_line_no': 359, 'assignment_indent': 6}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ODG_NO, RESGRP_CD, RESLIN_CD, THEME_DESC, SHORT_NAME, STATUS_CD, DBA_CD, IN_PREP_IND, PROD_SHORT_CD, TRADEMARK_NO, BIO_ACTIVITY, APPLICANT, CONTACT, REGISTRAR, LINE_EXT_INFO, PORTF_PROJ_CD, CO_DEV_PRTNR, TECHNOLOGY_PRTNR, OFFICIAL_IND, CO_MAR_PRTNR, VALID_TO, PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC ) VALUES ( :NEW.THEME_NO, V_D_REGISTRAT_DATE, V_ODG_NO, V_RESGRP_CD, V_RESLIN_CD, V_DESCRIPTION, V_SHORT_NAME, V_STATUS_CD, V_DBA_CD, :NEW.IN_PREP_IND, :NEW.PROD_SHORT_CD, :NEW.TRADEMARK_NO, :NEW.BIO_ACTIVITY, :NEW.APPLICANT, :NEW.CONTACT, TXO_UTIL.GET_USERID, :NEW.LINE_EXT_INFO, V_PORTF_PROJ_CD, :NEW.CO_DEV_PRTNR, :NEW.TECHNOLOGY_PRTNR, :NEW.OFFICIAL_IND, :NEW.CO_MAR_PRTNR, V_VALID_TO, :NEW.PORTF_DA_GROUP_ID, :NEW.MANUAL_SHORT_DESC );', 'statement_line_no': 360, 'statement_indent': 6}, {'condition': ' (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 413, 'then_line_no': 414, 'if_indent': 6, 'end_if_line_no': 428, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 417, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 432, 'elif_indent': 3, 'condition': '(UPDATING)', 'then_line_no': 432, 'then_statements': [{'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 438, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_ONLY_INSERT;', 'statement_line_no': 442, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'assignment_line_no': 452, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 461, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 474, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 475, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 487, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 493, 'assignment_indent': 6}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO;', 'statement_line_no': 494, 'statement_indent': 6}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 502, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 505, 'assignment_indent': 6}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'statement_line_no': 509, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 590, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 604, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 613, 'statement_indent': 12}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 636, 'statement_indent': 12}]}]}, {'type': 'elif_statement', 'elif_line_no': 638, 'elif_indent': 3, 'condition': '(DELETING)', 'then_line_no': 638, 'then_statements': [{'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 641, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'statement_line_no': 649, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': []}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 193, 'then_line_no': 194, 'if_indent': 6, 'end_if_line_no': 196, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 195, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 195, 'statement_indent': 9}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_MOLECULE_ID', 'assignment_operator': ':=', 'expression': ':NEW.MOLECULE_ID;', 'assignment_line_no': 201, 'assignment_indent': 6}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) ", 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 203, 'if_indent': 6, 'end_if_line_no': 247, 'then_statements': [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE PORTF_PROJ_MOL_CRE_ERR;', 'statement_line_no': 205, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE PORTF_PROJ_MOL_CRE_ERR;', 'statement_line_no': 205, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE PORTF_PROJ_MOL_CRE_ERR;', 'statement_line_no': 205, 'statement_indent': 12}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 259, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 272, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 275, 'statement_indent': 12}]}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 259, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 259, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 259, 'statement_indent': 15}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 272, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 272, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 272, 'statement_indent': 15}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 275, 'statement_indent': 12}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 278, 'assignment_indent': 6}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SELECT THEME_NO FROM V_THEMES UNION ALL SELECT THEME_NO FROM GMD.THEMES_ARCHIVE )                  T WHERE T.THEME_NO = :NEW.THEME_NO;', 'statement_line_no': 281, 'statement_indent': 6}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 298, 'then_line_no': 298, 'if_indent': 6, 'end_if_line_no': 300, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_CANNOT_BE_INSERTED;', 'statement_line_no': 299, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_CANNOT_BE_INSERTED;', 'statement_line_no': 299, 'statement_indent': 9}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 302, 'assignment_indent': 6}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': 'SYSDATE;', 'assignment_line_no': 303, 'assignment_indent': 6}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 306, 'then_line_no': 306, 'if_indent': 6, 'end_if_line_no': 308, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INSERTSMUSTBEOFFICIAL;', 'statement_line_no': 307, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,289 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE INSERTSMUSTBEOFFICIAL;', 'statement_line_no': 307, 'statement_indent': 9}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'N') ", 'type': 'if_else', 'if_line_no': 310, 'then_line_no': 310, 'if_indent': 6, 'end_if_line_no': 315, 'then_statements': [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEMEDESCRIPTIONMANDATORY;', 'statement_line_no': 313, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEMEDESCRIPTIONMANDATORY;', 'statement_line_no': 313, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE THEMEDESCRIPTIONMANDATORY;', 'statement_line_no': 313, 'statement_indent': 12}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') ", 'type': 'if_else', 'if_line_no': 319, 'then_line_no': 319, 'if_indent': 6, 'end_if_line_no': 344, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 320, 'assignment_indent': 9}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 334, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 337, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 338, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 320, 'assignment_indent': 9}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 334, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 334, 'statement_indent': 12}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 337, 'assignment_indent': 9}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 338, 'assignment_indent': 9}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 346, 'assignment_indent': 6}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION;', 'statement_line_no': 347, 'statement_indent': 6}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 353, 'then_line_no': 353, 'if_indent': 6, 'end_if_line_no': 355, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 354, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 354, 'statement_indent': 9}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 357, 'assignment_indent': 6}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_VALID_TO', 'assignment_operator': ':=', 'expression': "TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'assignment_line_no': 358, 'assignment_indent': 6}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_SHORT_NAME', 'assignment_operator': ':=', 'expression': 'NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'assignment_line_no': 359, 'assignment_indent': 6}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ODG_NO, RESGRP_CD, RESLIN_CD, THEME_DESC, SHORT_NAME, STATUS_CD, DBA_CD, IN_PREP_IND, PROD_SHORT_CD, TRADEMARK_NO, BIO_ACTIVITY, APPLICANT, CONTACT, REGISTRAR, LINE_EXT_INFO, PORTF_PROJ_CD, CO_DEV_PRTNR, TECHNOLOGY_PRTNR, OFFICIAL_IND, CO_MAR_PRTNR, VALID_TO, PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC ) VALUES ( :NEW.THEME_NO, V_D_REGISTRAT_DATE, V_ODG_NO, V_RESGRP_CD, V_RESLIN_CD, V_DESCRIPTION, V_SHORT_NAME, V_STATUS_CD, V_DBA_CD, :NEW.IN_PREP_IND, :NEW.PROD_SHORT_CD, :NEW.TRADEMARK_NO, :NEW.BIO_ACTIVITY, :NEW.APPLICANT, :NEW.CONTACT, TXO_UTIL.GET_USERID, :NEW.LINE_EXT_INFO, V_PORTF_PROJ_CD, :NEW.CO_DEV_PRTNR, :NEW.TECHNOLOGY_PRTNR, :NEW.OFFICIAL_IND, :NEW.CO_MAR_PRTNR, V_VALID_TO, :NEW.PORTF_DA_GROUP_ID, :NEW.MANUAL_SHORT_DESC );', 'statement_line_no': 360, 'statement_indent': 6}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 413, 'then_line_no': 414, 'if_indent': 6, 'end_if_line_no': 428, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 417, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 417, 'statement_indent': 9}
2025-09-03 04:09:44,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 432, 'elif_indent': 3, 'condition': '(UPDATING)', 'then_line_no': 432, 'then_statements': [{'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 438, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_ONLY_INSERT;', 'statement_line_no': 442, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'assignment_line_no': 452, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 461, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 474, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 475, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 487, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 493, 'assignment_indent': 6}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO;', 'statement_line_no': 494, 'statement_indent': 6}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 502, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 505, 'assignment_indent': 6}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'statement_line_no': 509, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 590, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 604, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 613, 'statement_indent': 12}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 636, 'statement_indent': 12}]}]}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 438, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 438, 'statement_indent': 9}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_ONLY_INSERT;', 'statement_line_no': 442, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_ONLY_INSERT;', 'statement_line_no': 442, 'statement_indent': 9}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'assignment_line_no': 452, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'assignment_line_no': 452, 'assignment_indent': 9}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 461, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 474, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 475, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 461, 'assignment_indent': 9}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 474, 'assignment_indent': 9}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 475, 'assignment_indent': 9}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 487, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 487, 'statement_indent': 9}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 493, 'assignment_indent': 6}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO;', 'statement_line_no': 494, 'statement_indent': 6}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 502, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 502, 'statement_indent': 9}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 505, 'assignment_indent': 6}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'statement_line_no': 509, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'statement_line_no': 509, 'statement_indent': 9}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 590, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 604, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 613, 'statement_indent': 12}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 636, 'statement_indent': 12}]}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 590, 'statement_indent': 12}]}
2025-09-03 04:09:44,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 590, 'statement_indent': 12}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 604, 'statement_indent': 12}]}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 604, 'statement_indent': 12}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 613, 'statement_indent': 12}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 613, 'statement_indent': 12}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 636, 'statement_indent': 12}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 638, 'elif_indent': 3, 'condition': '(DELETING)', 'then_line_no': 638, 'then_statements': [{'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 641, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'statement_line_no': 649, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 641, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 641, 'statement_indent': 9}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'statement_line_no': 649, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'statement_line_no': 649, 'statement_indent': 9}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 660, 'then_line_no': 661, 'if_indent': 3, 'end_if_line_no': 747, 'then_statements': [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 662, 'then_line_no': 663, 'if_indent': 6, 'end_if_line_no': 720, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 666, 'statement_indent': 9}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;", 'statement_line_no': 678, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) ", 'type': 'if_else', 'if_line_no': 724, 'then_line_no': 725, 'if_indent': 6, 'end_if_line_no': 746, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 728, 'statement_indent': 9}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 738, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 662, 'then_line_no': 663, 'if_indent': 6, 'end_if_line_no': 720, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 666, 'statement_indent': 9}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;", 'statement_line_no': 678, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 666, 'statement_indent': 9}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;", 'statement_line_no': 678, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;", 'statement_line_no': 678, 'statement_indent': 12}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) ", 'type': 'if_else', 'if_line_no': 724, 'then_line_no': 725, 'if_indent': 6, 'end_if_line_no': 746, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 728, 'statement_indent': 9}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 738, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 728, 'statement_indent': 9}
2025-09-03 04:09:44,292 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 738, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 738, 'statement_indent': 12}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (INSERTING AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y') ", 'type': 'if_else', 'if_line_no': 751, 'then_line_no': 753, 'if_indent': 3, 'end_if_line_no': 803, 'then_statements': [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 754, 'then_line_no': 754, 'if_indent': 6, 'end_if_line_no': 763, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 755, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) ', 'type': 'if_else', 'if_line_no': 767, 'then_line_no': 769, 'if_indent': 6, 'end_if_line_no': 802, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );", 'statement_line_no': 787, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 754, 'then_line_no': 754, 'if_indent': 6, 'end_if_line_no': 763, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 755, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 755, 'statement_indent': 9}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) ', 'type': 'if_else', 'if_line_no': 767, 'then_line_no': 769, 'if_indent': 6, 'end_if_line_no': 802, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );", 'statement_line_no': 787, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}]}], 'exception_line_no': 781, 'end_line_no': 784}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}]}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );", 'statement_line_no': 787, 'statement_indent': 9}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 805, 'begin_indent': 3, 'begin_end_statements': [{'for_expression': '( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )', 'type': 'for_loop', 'for_line_no': 809, 'for_indent': 6, 'end_for_line_no': 822, 'loop_variable': 'I1', 'for_statements': []}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 823}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'for_expression': '( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )', 'type': 'for_loop', 'for_line_no': 809, 'for_indent': 6, 'end_for_line_no': 822, 'loop_variable': 'I1', 'for_statements': []}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ADMIN_UPDATE_ONLY', 'when_line_no': 825, 'when_indent': 3, 'then_line_no': 825, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20115', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20115, 'MDM_V_THEMES_IOF'"}}]}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20115', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20115, 'MDM_V_THEMES_IOF'"}}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'IN_PREP_NOT_PORTF_PROJ', 'when_line_no': 827, 'when_indent': 3, 'then_line_no': 827, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20116', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20116, 'MDM_V_THEMES_IOF'"}}]}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20116', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20116, 'MDM_V_THEMES_IOF'"}}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'IN_PREP_NOT_CLOSED', 'when_line_no': 829, 'when_indent': 3, 'then_line_no': 829, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20117', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20117, 'MDM_V_THEMES_IOF'"}}]}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20117', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20117, 'MDM_V_THEMES_IOF'"}}
2025-09-03 04:09:44,293 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'INVALID_MOLECULE_ID', 'when_line_no': 831, 'when_indent': 3, 'then_line_no': 831, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20118', "'This is not a valid Molecule ID'"], 'named_params': {}, 'raw_text': "-20118, 'This is not a valid Molecule ID'"}}]}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20118', "'This is not a valid Molecule ID'"], 'named_params': {}, 'raw_text': "-20118, 'This is not a valid Molecule ID'"}}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'SEC_MOL_LIST_NOT_EMPTY', 'when_line_no': 833, 'when_indent': 3, 'then_line_no': 833, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20119', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20119, 'MDM_V_THEMES_IOF'"}}]}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20119', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20119, 'MDM_V_THEMES_IOF'"}}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'INVALID_THEME_NO', 'when_line_no': 835, 'when_indent': 3, 'then_line_no': 835, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'This is not a valid Theme No'"], 'named_params': {}, 'raw_text': "-20101, 'This is not a valid Theme No'"}}]}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'This is not a valid Theme No'"], 'named_params': {}, 'raw_text': "-20101, 'This is not a valid Theme No'"}}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'DELETE_NO_MORE_POSSIBLE', 'when_line_no': 837, 'when_indent': 3, 'then_line_no': 837, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"], 'named_params': {}, 'raw_text': "-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"}}]}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"], 'named_params': {}, 'raw_text': "-20400, 'Theme cannot be deleted when the deletion is not on the same day, on which the Theme has been inserted'"}}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'THEME_NO_ONLY_INSERT', 'when_line_no': 839, 'when_indent': 3, 'then_line_no': 839, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Theme No cannot be updated'"], 'named_params': {}, 'raw_text': "-20400, 'Theme No cannot be updated'"}}]}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Theme No cannot be updated'"], 'named_params': {}, 'raw_text': "-20400, 'Theme No cannot be updated'"}}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'DESCRIPTION_TOO_LONG', 'when_line_no': 841, 'when_indent': 3, 'then_line_no': 841, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''}}]}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Theme Description "\' || V_DESCRIPTION || \'" is too long\''}}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'THEME_DESC_PROPOSAL_TOO_LONG', 'when_line_no': 845, 'when_indent': 3, 'then_line_no': 845, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''}}]}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Short Description Proposal "\' || :OLD.THEME_DESC_PROPOSAL || \'" is too long\''}}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'THEME_DESC_ALT_TOO_LONG', 'when_line_no': 849, 'when_indent': 3, 'then_line_no': 849, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''}}]}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''], 'named_params': {}, 'raw_text': '-20400, \'The automatically generated Downstream Theme Description "\' || :OLD.THEME_DESC_ALT || \'" is too long\''}}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'THEME_NO_CANNOT_BE_INSERTED', 'when_line_no': 853, 'when_indent': 3, 'then_line_no': 853, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This Theme No already exists'"], 'named_params': {}, 'raw_text': "-20400, 'This Theme No already exists'"}}]}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This Theme No already exists'"], 'named_params': {}, 'raw_text': "-20400, 'This Theme No already exists'"}}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ONLYONEOFFICIALCHANGEPERDAY', 'when_line_no': 855, 'when_indent': 3, 'then_line_no': 855, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Official Change for this Theme No and Day already exists'"], 'named_params': {}, 'raw_text': "-20400, 'Official Change for this Theme No and Day already exists'"}}]}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'Official Change for this Theme No and Day already exists'"], 'named_params': {}, 'raw_text': "-20400, 'Official Change for this Theme No and Day already exists'"}}
2025-09-03 04:09:44,294 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'INSERTSMUSTBEOFFICIAL', 'when_line_no': 857, 'when_indent': 3, 'then_line_no': 857, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'New Themes can only be inserted by Official Changes'"], 'named_params': {}, 'raw_text': "-20400, 'New Themes can only be inserted by Official Changes'"}}]}
2025-09-03 04:09:44,295 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'New Themes can only be inserted by Official Changes'"], 'named_params': {}, 'raw_text': "-20400, 'New Themes can only be inserted by Official Changes'"}}
2025-09-03 04:09:44,295 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'THEMEDESCRIPTIONMANDATORY', 'when_line_no': 859, 'when_indent': 3, 'then_line_no': 859, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''], 'named_params': {}, 'raw_text': '-20400, \'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''}}]}
2025-09-03 04:09:44,295 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', '\'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''], 'named_params': {}, 'raw_text': '-20400, \'If Pharma Rx Portfolio Project is set to "No", then the Theme Description must be filled\''}}
2025-09-03 04:09:44,295 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'THEME_DESC_NOT_UNIQUE', 'when_line_no': 861, 'when_indent': 3, 'then_line_no': 861, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This Theme Description already exists'"], 'named_params': {}, 'raw_text': "-20400, 'This Theme Description already exists'"}}]}
2025-09-03 04:09:44,295 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This Theme Description already exists'"], 'named_params': {}, 'raw_text': "-20400, 'This Theme Description already exists'"}}
2025-09-03 04:09:44,295 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'PORTF_PROJ_MOL_CRE_ERR', 'when_line_no': 863, 'when_indent': 3, 'then_line_no': 863, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20120', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20120, 'MDM_V_THEMES_IOF'"}}]}
2025-09-03 04:09:44,295 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20120', "'MDM_V_THEMES_IOF'"], 'named_params': {}, 'raw_text': "-20120, 'MDM_V_THEMES_IOF'"}}
2025-09-03 04:09:44,295 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'DEBUGGING', 'when_line_no': 865, 'when_indent': 3, 'then_line_no': 865, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20900', "'Debug in Themes IOF standard'"], 'named_params': {}, 'raw_text': "-20900, 'Debug in Themes IOF standard'"}}]}
2025-09-03 04:09:44,295 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20900', "'Debug in Themes IOF standard'"], 'named_params': {}, 'raw_text': "-20900, 'Debug in Themes IOF standard'"}}
2025-09-03 04:09:44,295 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list []
2025-09-03 04:09:44,303 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:    filename                                               line  line_no  indent
0   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
1   zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
2   zzz.sql                              ELSIF (DELETING) THEN      192     8.0
3   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
4   zzz.sql                                            END IF;      196     8.0
5   eee.sql                                            DECLARE        5     4.0
6   eee.sql                            v_inner_counter NUMBER;        7     8.0
7   eee.sql                                     <<outer_loop>>       10     8.0
8   eee.sql                                               LOOP       11     8.0
9   eee.sql                                     <<inner_loop>>       14    12.0
10  eee.sql                                               LOOP       15    12.0
11  eee.sql          EXIT inner_loop WHEN v_inner_counter > 3;       20    16.0
12  eee.sql                               END LOOP inner_loop;       21    12.0
13  eee.sql          EXIT outer_loop WHEN v_outer_counter > 5;       24    12.0
14  eee.sql                               END LOOP outer_loop;       25     8.0
2025-09-03 04:09:44,303 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 04:09:44,303 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 1.2710232734680176 seconds
2025-09-03 04:09:44,303 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 04:09:44,303 - root - DEBUG - [common.py:105] - File details: trigger1.sql
2025-09-03 04:09:44,303 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 04:09:44,303 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 29 vars, 2 consts, 18 excs, 63 comments
2025-09-03 04:09:44,304 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 04:09:44,304 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:44,304 - root - DEBUG - [common.py:105] - File details in metadata: trigger1.sql (30669 bytes)
2025-09-03 04:09:44,304 - root - DEBUG - [common.py:105] - Analysis statistics: 29 vars, 2 consts, 18 excs, 63 comments
2025-09-03 04:09:44,304 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\trigger1_analysis.json
2025-09-03 04:09:44,312 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\trigger1_analysis.json
2025-09-03 04:09:44,312 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger trigger1.sql ===
2025-09-03 04:09:44,312 - root - DEBUG - [common.py:105] - ✓ Created trigger1_analysis.json
2025-09-03 04:09:44,313 - root - DEBUG - [common.py:105] - === Processing file 4/10: trigger2.sql ===
2025-09-03 04:09:44,313 - root - DEBUG - [common.py:105] - Source path: files/oracle\trigger2.sql
2025-09-03 04:09:44,313 - root - DEBUG - [common.py:105] - Output path: files/format_json\trigger2_analysis.json
2025-09-03 04:09:44,313 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger trigger2.sql ===
2025-09-03 04:09:44,313 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 04:09:44,313 - root - DEBUG - [main.py:245] - Reading SQL file: files/oracle\trigger2.sql
2025-09-03 04:09:44,313 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 25 characters of SQL
2025-09-03 04:09:44,314 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 04:09:44,314 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 04:09:44,314 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 04:09:44,314 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 04:09:44,314 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 422 total, 89 with semicolons, 43 empty lines skipped
2025-09-03 04:09:44,314 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 6 comments extracted, 364 lines cleaned
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 67 comments extracted, 315 lines cleaned
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 1
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 18
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 1-17
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_MAP_EXISTS
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_MOLEC_ID_MISSING
2025-09-03 04:09:44,315 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_NO_PORTF_MOLECULE_LEFT
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_UPD_INV_MAP
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_INS_INV_MAP
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_INV_MOL_SEQUENCE
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: UPDATE_UPD
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_COUNT_T_MAPPINGS
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_COUNT_T_MOL_MAP
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_MOLECULE_SEQ_NO
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_SEQ_NO_DUPLICATE_CNT
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: INVALID_MAPPING_EXISTS
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_MANUAL_SHORT_DESC
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 04:09:44,316 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'ERR_MAP_EXISTS', 'when_line_no': 440, 'when_indent': 4, 'then_line_no': 440, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20110, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 441}]}, {'type': 'exception_handler', 'exception_name': 'ERR_MOLEC_ID_MISSING', 'when_line_no': 442, 'when_indent': 4, 'then_line_no': 442, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20111, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 443}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD_INV_MAP', 'when_line_no': 444, 'when_indent': 4, 'then_line_no': 444, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20112, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 445}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS_INV_MAP', 'when_line_no': 446, 'when_indent': 4, 'then_line_no': 446, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 447}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INV_MOL_SEQUENCE', 'when_line_no': 448, 'when_indent': 4, 'then_line_no': 448, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20120, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 449}]}]
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1389] - case_i: 125 i: 200
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1460] - line_info : {'indent': 16, 'line': '                WHEN :NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1 THEN', 'line_no': 126}
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 16, 'line': '                WHEN :NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1 THEN', 'line_no': 126}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 127}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}, {'indent': 20, 'line': '                    ELSE', 'line_no': 137}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 139}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 140}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 141}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 142}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 143}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 144}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 145}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 146}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 147}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 148}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 149}, {'indent': 28, 'line': "                            'Y'", 'line_no': 150}, {'indent': 24, 'line': '                        );', 'line_no': 151}, {'indent': 20, 'line': '                    END IF;', 'line_no': 152}]
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 126 then_i: 126
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 16, 'line': '                WHEN :NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1 THEN', 'line_no': 126}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 127}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}, {'indent': 20, 'line': '                    ELSE', 'line_no': 137}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 139}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 140}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 141}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 142}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 143}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 144}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 145}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 146}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 147}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 148}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 149}, {'indent': 28, 'line': "                            'Y'", 'line_no': 150}, {'indent': 24, 'line': '                        );', 'line_no': 151}, {'indent': 20, 'line': '                    END IF;', 'line_no': 152}]
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 16, 'line': '                WHEN :NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1 THEN', 'line_no': 156}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 167}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}, {'indent': 20, 'line': '                    ELSE', 'line_no': 177}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 179}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 180}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 181}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 182}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 183}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 184}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 185}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 186}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 187}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 188}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 189}, {'indent': 28, 'line': "                            'Y'", 'line_no': 190}, {'indent': 24, 'line': '                        );', 'line_no': 191}, {'indent': 20, 'line': '                    END IF;', 'line_no': 192}]
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 156 then_i: 156
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 16, 'line': '                WHEN :NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1 THEN', 'line_no': 156}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 167}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}, {'indent': 20, 'line': '                    ELSE', 'line_no': 177}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 179}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 180}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 181}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 182}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 183}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 184}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 185}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 186}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 187}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 188}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 189}, {'indent': 28, 'line': "                            'Y'", 'line_no': 190}, {'indent': 24, 'line': '                        );', 'line_no': 191}, {'indent': 20, 'line': '                    END IF;', 'line_no': 192}]
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1485] - {'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 21}
2025-09-03 04:09:44,317 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC', 'line_no': 22}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    FROM', 'line_no': 23}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        GMD.THEMES', 'line_no': 24}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    WHERE', 'line_no': 25}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);', 'line_no': 26}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (DELETING) THEN', 'line_no': 27}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 27
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 27 i: 58
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 21
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 33}, {'indent': 8, 'line': '        SET', 'line_no': 34}, {'indent': 12, 'line': "            TMM.VALID_IND = 'N'", 'line_no': 35}, {'indent': 8, 'line': '        WHERE', 'line_no': 36}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 37}, {'indent': 12, 'line': '            AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 38}, {'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 41}, {'indent': 8, 'line': '        SET', 'line_no': 42}, {'indent': 12, 'line': '            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 43}, {'indent': 8, 'line': '        WHERE', 'line_no': 44}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 45}, {'indent': 12, 'line': '            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 46}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 47}, {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 52}, {'indent': 12, 'line': '            P_THEME_NO => :OLD.THEME_NO,', 'line_no': 53}, {'indent': 12, 'line': '            P_MOLECULE_ID => :OLD.MOLECULE_ID,', 'line_no': 54}, {'indent': 12, 'line': '            P_DATE => SYSDATE,', 'line_no': 55}, {'indent': 12, 'line': '            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC', 'line_no': 56}, {'indent': 8, 'line': '        );', 'line_no': 57}]
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 27, 'then_line_no': 27, 'if_indent': 4, 'end_if_line_no': 58, 'then_statements': [{'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 33}, {'indent': 8, 'line': '        SET', 'line_no': 34}, {'indent': 12, 'line': "            TMM.VALID_IND = 'N'", 'line_no': 35}, {'indent': 8, 'line': '        WHERE', 'line_no': 36}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 37}, {'indent': 12, 'line': '            AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 38}, {'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 41}, {'indent': 8, 'line': '        SET', 'line_no': 42}, {'indent': 12, 'line': '            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 43}, {'indent': 8, 'line': '        WHERE', 'line_no': 44}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 45}, {'indent': 12, 'line': '            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 46}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 47}, {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 52}, {'indent': 12, 'line': '            P_THEME_NO => :OLD.THEME_NO,', 'line_no': 53}, {'indent': 12, 'line': '            P_MOLECULE_ID => :OLD.MOLECULE_ID,', 'line_no': 54}, {'indent': 12, 'line': '            P_DATE => SYSDATE,', 'line_no': 55}, {'indent': 12, 'line': '            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC', 'line_no': 56}, {'indent': 8, 'line': '        );', 'line_no': 57}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 33}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SET', 'line_no': 34}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            TMM.VALID_IND = 'N'", 'line_no': 35}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 36}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 37}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 38}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 41}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SET', 'line_no': 42}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 43}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 44}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 45}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 46}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 47}
2025-09-03 04:09:44,318 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 52}
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_THEME_NO => :OLD.THEME_NO,', 'line_no': 53}
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_MOLECULE_ID => :OLD.MOLECULE_ID,', 'line_no': 54}
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_DATE => SYSDATE,', 'line_no': 55}
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC', 'line_no': 56}
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        );', 'line_no': 57}
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (INSERTING OR UPDATING) THEN', 'line_no': 60}
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 60
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 60 i: 401
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 184
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        SELECT', 'line_no': 61}, {'indent': 12, 'line': '            COUNT (*) INTO V_COUNT_T_MAPPINGS', 'line_no': 62}, {'indent': 8, 'line': '        FROM', 'line_no': 63}, {'indent': 12, 'line': '            V_THEME_MOLECULE_MAP TMM', 'line_no': 64}, {'indent': 8, 'line': '        WHERE', 'line_no': 65}, {'indent': 12, 'line': '            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 66}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 67}, {'indent': 8, 'line': '        IF (:NEW.MOLECULE_ID IS NULL) THEN', 'line_no': 68}, {'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}, {'indent': 8, 'line': '        END IF;', 'line_no': 87}, {'indent': 8, 'line': '        IF (UPDATING) THEN', 'line_no': 89}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) THEN', 'line_no': 90}, {'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}, {'indent': 12, 'line': '            END IF;', 'line_no': 92}, {'indent': 8, 'line': '        END IF;', 'line_no': 93}, {'indent': 8, 'line': "        IF (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) THEN", 'line_no': 98}, {'indent': 12, 'line': '            SELECT', 'line_no': 99}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}, {'indent': 12, 'line': '            FROM', 'line_no': 101}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}, {'indent': 12, 'line': '            WHERE', 'line_no': 103}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}, {'indent': 12, 'line': '            IF (V_COUNT_T_MOL_MAP > 0) THEN', 'line_no': 107}, {'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}, {'indent': 12, 'line': '            END IF;', 'line_no': 109}, {'indent': 12, 'line': '            SELECT', 'line_no': 111}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}, {'indent': 12, 'line': '            FROM', 'line_no': 113}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}, {'indent': 12, 'line': '            WHERE', 'line_no': 115}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}, {'indent': 12, 'line': '            IF (V_COUNT_T_MOL_MAP > 0) THEN', 'line_no': 119}, {'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}, {'indent': 12, 'line': '            END IF;', 'line_no': 121}, {'indent': 8, 'line': '        END IF;', 'line_no': 122}, {'indent': 8, 'line': '        IF (INSERTING) THEN', 'line_no': 124}, {'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 127}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}, {'indent': 20, 'line': '                    ELSE', 'line_no': 137}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 139}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 140}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 141}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 142}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 143}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 144}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 145}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 146}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 147}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 148}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 149}, {'indent': 28, 'line': "                            'Y'", 'line_no': 150}, {'indent': 24, 'line': '                        );', 'line_no': 151}, {'indent': 20, 'line': '                    END IF;', 'line_no': 152}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 167}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}, {'indent': 20, 'line': '                    ELSE', 'line_no': 177}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 179}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 180}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 181}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 182}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 183}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 184}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 185}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 186}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 187}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 188}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 189}, {'indent': 28, 'line': "                            'Y'", 'line_no': 190}, {'indent': 24, 'line': '                        );', 'line_no': 191}, {'indent': 20, 'line': '                    END IF;', 'line_no': 192}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}, {'indent': 8, 'line': '        END IF;', 'line_no': 201}, {'indent': 8, 'line': '        IF (UPDATING) THEN', 'line_no': 202}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 203}, {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) THEN', 'line_no': 204}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}, {'indent': 16, 'line': '                END IF;', 'line_no': 211}, {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 213}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'indent': 20, 'line': '                    IF (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) THEN', 'line_no': 228}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}, {'indent': 20, 'line': '                    ELSE', 'line_no': 239}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 242}, {'indent': 24, 'line': '                        SET', 'line_no': 243}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 244}, {'indent': 24, 'line': '                        WHERE', 'line_no': 245}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 246}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 247}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 248}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;', 'line_no': 249}, {'indent': 20, 'line': '                    END IF;', 'line_no': 250}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 254}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}, {'indent': 20, 'line': '                    ELSE', 'line_no': 265}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 267}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 268}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 269}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 270}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 271}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 272}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 273}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 274}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 275}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 276}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 277}, {'indent': 28, 'line': "                            'Y'", 'line_no': 278}, {'indent': 24, 'line': '                        );', 'line_no': 279}, {'indent': 20, 'line': '                    END IF;', 'line_no': 280}, {'indent': 16, 'line': '                END IF;', 'line_no': 285}, {'indent': 12, 'line': '            END IF;', 'line_no': 289}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 291}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 320}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}, {'indent': 16, 'line': '                ELSE', 'line_no': 331}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 333}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 334}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 335}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 336}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR,', 'line_no': 337}, {'indent': 24, 'line': '                        TMM.VALID_IND', 'line_no': 338}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 339}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 340}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 341}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 342}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR,', 'line_no': 343}, {'indent': 24, 'line': "                        'Y'", 'line_no': 344}, {'indent': 20, 'line': '                    );', 'line_no': 345}, {'indent': 16, 'line': '                END IF;', 'line_no': 346}, {'indent': 12, 'line': '            END IF;', 'line_no': 351}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO THEN', 'line_no': 352}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 363}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}, {'indent': 16, 'line': '                ELSE', 'line_no': 374}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 376}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 377}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 378}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 379}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR', 'line_no': 380}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 381}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 382}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 383}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 384}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR', 'line_no': 385}, {'indent': 20, 'line': '                    );', 'line_no': 386}, {'indent': 16, 'line': '                END IF;', 'line_no': 387}, {'indent': 12, 'line': '            END IF;', 'line_no': 392}, {'indent': 8, 'line': '        END IF;', 'line_no': 393}, {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 395}, {'indent': 12, 'line': '            P_THEME_NO => :NEW.THEME_NO,', 'line_no': 396}, {'indent': 12, 'line': '            P_MOLECULE_ID => 0,', 'line_no': 397}, {'indent': 12, 'line': '            P_DATE => SYSDATE,', 'line_no': 398}, {'indent': 12, 'line': '            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC', 'line_no': 399}, {'indent': 8, 'line': '        );', 'line_no': 400}]
2025-09-03 04:09:44,319 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 60, 'then_line_no': 60, 'if_indent': 4, 'end_if_line_no': 401, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 61}, {'indent': 12, 'line': '            COUNT (*) INTO V_COUNT_T_MAPPINGS', 'line_no': 62}, {'indent': 8, 'line': '        FROM', 'line_no': 63}, {'indent': 12, 'line': '            V_THEME_MOLECULE_MAP TMM', 'line_no': 64}, {'indent': 8, 'line': '        WHERE', 'line_no': 65}, {'indent': 12, 'line': '            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 66}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 67}, {'indent': 8, 'line': '        IF (:NEW.MOLECULE_ID IS NULL) THEN', 'line_no': 68}, {'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}, {'indent': 8, 'line': '        END IF;', 'line_no': 87}, {'indent': 8, 'line': '        IF (UPDATING) THEN', 'line_no': 89}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) THEN', 'line_no': 90}, {'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}, {'indent': 12, 'line': '            END IF;', 'line_no': 92}, {'indent': 8, 'line': '        END IF;', 'line_no': 93}, {'indent': 8, 'line': "        IF (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) THEN", 'line_no': 98}, {'indent': 12, 'line': '            SELECT', 'line_no': 99}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}, {'indent': 12, 'line': '            FROM', 'line_no': 101}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}, {'indent': 12, 'line': '            WHERE', 'line_no': 103}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}, {'indent': 12, 'line': '            IF (V_COUNT_T_MOL_MAP > 0) THEN', 'line_no': 107}, {'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}, {'indent': 12, 'line': '            END IF;', 'line_no': 109}, {'indent': 12, 'line': '            SELECT', 'line_no': 111}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}, {'indent': 12, 'line': '            FROM', 'line_no': 113}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}, {'indent': 12, 'line': '            WHERE', 'line_no': 115}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}, {'indent': 12, 'line': '            IF (V_COUNT_T_MOL_MAP > 0) THEN', 'line_no': 119}, {'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}, {'indent': 12, 'line': '            END IF;', 'line_no': 121}, {'indent': 8, 'line': '        END IF;', 'line_no': 122}, {'indent': 8, 'line': '        IF (INSERTING) THEN', 'line_no': 124}, {'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 127}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}, {'indent': 20, 'line': '                    ELSE', 'line_no': 137}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 139}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 140}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 141}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 142}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 143}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 144}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 145}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 146}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 147}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 148}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 149}, {'indent': 28, 'line': "                            'Y'", 'line_no': 150}, {'indent': 24, 'line': '                        );', 'line_no': 151}, {'indent': 20, 'line': '                    END IF;', 'line_no': 152}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 167}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}, {'indent': 20, 'line': '                    ELSE', 'line_no': 177}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 179}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 180}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 181}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 182}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 183}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 184}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 185}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 186}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 187}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 188}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 189}, {'indent': 28, 'line': "                            'Y'", 'line_no': 190}, {'indent': 24, 'line': '                        );', 'line_no': 191}, {'indent': 20, 'line': '                    END IF;', 'line_no': 192}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}, {'indent': 8, 'line': '        END IF;', 'line_no': 201}, {'indent': 8, 'line': '        IF (UPDATING) THEN', 'line_no': 202}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 203}, {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) THEN', 'line_no': 204}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}, {'indent': 16, 'line': '                END IF;', 'line_no': 211}, {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 213}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'indent': 20, 'line': '                    IF (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) THEN', 'line_no': 228}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}, {'indent': 20, 'line': '                    ELSE', 'line_no': 239}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 242}, {'indent': 24, 'line': '                        SET', 'line_no': 243}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 244}, {'indent': 24, 'line': '                        WHERE', 'line_no': 245}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 246}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 247}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 248}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;', 'line_no': 249}, {'indent': 20, 'line': '                    END IF;', 'line_no': 250}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 254}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}, {'indent': 20, 'line': '                    ELSE', 'line_no': 265}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 267}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 268}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 269}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 270}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 271}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 272}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 273}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 274}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 275}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 276}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 277}, {'indent': 28, 'line': "                            'Y'", 'line_no': 278}, {'indent': 24, 'line': '                        );', 'line_no': 279}, {'indent': 20, 'line': '                    END IF;', 'line_no': 280}, {'indent': 16, 'line': '                END IF;', 'line_no': 285}, {'indent': 12, 'line': '            END IF;', 'line_no': 289}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 291}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 320}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}, {'indent': 16, 'line': '                ELSE', 'line_no': 331}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 333}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 334}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 335}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 336}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR,', 'line_no': 337}, {'indent': 24, 'line': '                        TMM.VALID_IND', 'line_no': 338}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 339}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 340}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 341}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 342}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR,', 'line_no': 343}, {'indent': 24, 'line': "                        'Y'", 'line_no': 344}, {'indent': 20, 'line': '                    );', 'line_no': 345}, {'indent': 16, 'line': '                END IF;', 'line_no': 346}, {'indent': 12, 'line': '            END IF;', 'line_no': 351}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO THEN', 'line_no': 352}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 363}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}, {'indent': 16, 'line': '                ELSE', 'line_no': 374}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 376}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 377}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 378}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 379}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR', 'line_no': 380}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 381}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 382}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 383}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 384}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR', 'line_no': 385}, {'indent': 20, 'line': '                    );', 'line_no': 386}, {'indent': 16, 'line': '                END IF;', 'line_no': 387}, {'indent': 12, 'line': '            END IF;', 'line_no': 392}, {'indent': 8, 'line': '        END IF;', 'line_no': 393}, {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 395}, {'indent': 12, 'line': '            P_THEME_NO => :NEW.THEME_NO,', 'line_no': 396}, {'indent': 12, 'line': '            P_MOLECULE_ID => 0,', 'line_no': 397}, {'indent': 12, 'line': '            P_DATE => SYSDATE,', 'line_no': 398}, {'indent': 12, 'line': '            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC', 'line_no': 399}, {'indent': 8, 'line': '        );', 'line_no': 400}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 61}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COUNT (*) INTO V_COUNT_T_MAPPINGS', 'line_no': 62}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        FROM', 'line_no': 63}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_THEME_MOLECULE_MAP TMM', 'line_no': 64}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 65}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 66}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 67}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF (:NEW.MOLECULE_ID IS NULL) THEN', 'line_no': 68}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 68
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 68 i: 87
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}]
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 68, 'if_indent': 8, 'end_if_line_no': 87, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF (UPDATING) THEN', 'line_no': 89}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 89
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 89 i: 93
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 5
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            IF (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) THEN', 'line_no': 90}, {'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}, {'indent': 12, 'line': '            END IF;', 'line_no': 92}]
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 89, 'then_line_no': 89, 'if_indent': 8, 'end_if_line_no': 93, 'then_statements': [{'indent': 12, 'line': '            IF (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) THEN', 'line_no': 90}, {'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}, {'indent': 12, 'line': '            END IF;', 'line_no': 92}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) THEN', 'line_no': 90}
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 90
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 90 i: 92
2025-09-03 04:09:44,320 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}]
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) THEN", 'line_no': 98}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 98
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 98 i: 122
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 24
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            SELECT', 'line_no': 99}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}, {'indent': 12, 'line': '            FROM', 'line_no': 101}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}, {'indent': 12, 'line': '            WHERE', 'line_no': 103}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}, {'indent': 12, 'line': '            IF (V_COUNT_T_MOL_MAP > 0) THEN', 'line_no': 107}, {'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}, {'indent': 12, 'line': '            END IF;', 'line_no': 109}, {'indent': 12, 'line': '            SELECT', 'line_no': 111}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}, {'indent': 12, 'line': '            FROM', 'line_no': 113}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}, {'indent': 12, 'line': '            WHERE', 'line_no': 115}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}, {'indent': 12, 'line': '            IF (V_COUNT_T_MOL_MAP > 0) THEN', 'line_no': 119}, {'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}, {'indent': 12, 'line': '            END IF;', 'line_no': 121}]
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) ", 'type': 'if_else', 'if_line_no': 98, 'then_line_no': 98, 'if_indent': 8, 'end_if_line_no': 122, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 99}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}, {'indent': 12, 'line': '            FROM', 'line_no': 101}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}, {'indent': 12, 'line': '            WHERE', 'line_no': 103}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}, {'indent': 12, 'line': '            IF (V_COUNT_T_MOL_MAP > 0) THEN', 'line_no': 107}, {'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}, {'indent': 12, 'line': '            END IF;', 'line_no': 109}, {'indent': 12, 'line': '            SELECT', 'line_no': 111}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}, {'indent': 12, 'line': '            FROM', 'line_no': 113}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}, {'indent': 12, 'line': '            WHERE', 'line_no': 115}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}, {'indent': 12, 'line': '            IF (V_COUNT_T_MOL_MAP > 0) THEN', 'line_no': 119}, {'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}, {'indent': 12, 'line': '            END IF;', 'line_no': 121}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 99}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FROM', 'line_no': 101}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 103}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (V_COUNT_T_MOL_MAP > 0) THEN', 'line_no': 107}
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 107
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 107 i: 109
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}]
2025-09-03 04:09:44,321 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 111}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FROM', 'line_no': 113}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 115}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (V_COUNT_T_MOL_MAP > 0) THEN', 'line_no': 119}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 119
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 119 i: 121
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}]
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF (INSERTING) THEN', 'line_no': 124}
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 124
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 124 i: 201
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 127}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}, {'indent': 20, 'line': '                    ELSE', 'line_no': 137}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 139}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 140}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 141}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 142}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 143}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 144}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 145}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 146}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 147}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 148}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 149}, {'indent': 28, 'line': "                            'Y'", 'line_no': 150}, {'indent': 24, 'line': '                        );', 'line_no': 151}, {'indent': 20, 'line': '                    END IF;', 'line_no': 152}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 167}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}, {'indent': 20, 'line': '                    ELSE', 'line_no': 177}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 179}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 180}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 181}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 182}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 183}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 184}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 185}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 186}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 187}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 188}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 189}, {'indent': 28, 'line': "                            'Y'", 'line_no': 190}, {'indent': 24, 'line': '                        );', 'line_no': 191}, {'indent': 20, 'line': '                    END IF;', 'line_no': 192}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}]
2025-09-03 04:09:44,322 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 124, 'then_line_no': 124, 'if_indent': 8, 'end_if_line_no': 201, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 127}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}, {'indent': 20, 'line': '                    ELSE', 'line_no': 137}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 139}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 140}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 141}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 142}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 143}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 144}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 145}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 146}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 147}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 148}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 149}, {'indent': 28, 'line': "                            'Y'", 'line_no': 150}, {'indent': 24, 'line': '                        );', 'line_no': 151}, {'indent': 20, 'line': '                    END IF;', 'line_no': 152}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 167}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}, {'indent': 20, 'line': '                    ELSE', 'line_no': 177}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 179}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 180}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 181}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 182}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 183}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 184}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 185}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 186}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 187}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 188}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 189}, {'indent': 28, 'line': "                            'Y'", 'line_no': 190}, {'indent': 24, 'line': '                        );', 'line_no': 191}, {'indent': 20, 'line': '                    END IF;', 'line_no': 192}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 127}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}, {'indent': 20, 'line': '                    ELSE', 'line_no': 137}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 139}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 140}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 141}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 142}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 143}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 144}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 145}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 146}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 147}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 148}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 149}, {'indent': 28, 'line': "                            'Y'", 'line_no': 150}, {'indent': 24, 'line': '                        );', 'line_no': 151}, {'indent': 20, 'line': '                    END IF;', 'line_no': 152}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 167}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}, {'indent': 20, 'line': '                    ELSE', 'line_no': 177}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 179}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 180}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 181}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 182}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 183}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 184}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 185}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 186}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 187}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 188}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 189}, {'indent': 28, 'line': "                            'Y'", 'line_no': 190}, {'indent': 24, 'line': '                        );', 'line_no': 191}, {'indent': 20, 'line': '                    END IF;', 'line_no': 192}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 127}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 127
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 127 i: 152
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 23
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}], 'if_elses': [], 'else_statements': [[{'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 139}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 140}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 141}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 142}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 143}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 144}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 145}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 146}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 147}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 148}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 149}, {'indent': 28, 'line': "                            'Y'", 'line_no': 150}, {'indent': 24, 'line': '                        );', 'line_no': 151}, {'indent': 20, 'line': '                    END IF;', 'line_no': 152}]]}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        SET', 'line_no': 131}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        WHERE', 'line_no': 134}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 139}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 140}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 141}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 142}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 143}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 144}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 145}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 146}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 147}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 148}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 149}, {'indent': 28, 'line': "                            'Y'", 'line_no': 150}, {'indent': 24, 'line': '                        );', 'line_no': 151}, {'indent': 20, 'line': '                    END IF;', 'line_no': 152}]
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    SET', 'line_no': 159}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 161}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}
2025-09-03 04:09:44,323 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 167}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 167
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 167 i: 192
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 23
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}], 'if_elses': [], 'else_statements': [[{'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 179}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 180}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 181}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 182}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 183}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 184}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 185}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 186}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 187}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 188}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 189}, {'indent': 28, 'line': "                            'Y'", 'line_no': 190}, {'indent': 24, 'line': '                        );', 'line_no': 191}, {'indent': 20, 'line': '                    END IF;', 'line_no': 192}]]}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        SET', 'line_no': 171}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        WHERE', 'line_no': 174}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 179}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 180}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 181}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 182}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 183}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 184}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 185}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 186}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 187}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 188}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 189}, {'indent': 28, 'line': "                            'Y'", 'line_no': 190}, {'indent': 24, 'line': '                        );', 'line_no': 191}, {'indent': 20, 'line': '                    END IF;', 'line_no': 192}]
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF (UPDATING) THEN', 'line_no': 202}
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 202
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 202 i: 393
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 134
2025-09-03 04:09:44,324 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 203}, {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) THEN', 'line_no': 204}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}, {'indent': 16, 'line': '                END IF;', 'line_no': 211}, {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 213}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'indent': 20, 'line': '                    IF (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) THEN', 'line_no': 228}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}, {'indent': 20, 'line': '                    ELSE', 'line_no': 239}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 242}, {'indent': 24, 'line': '                        SET', 'line_no': 243}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 244}, {'indent': 24, 'line': '                        WHERE', 'line_no': 245}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 246}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 247}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 248}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;', 'line_no': 249}, {'indent': 20, 'line': '                    END IF;', 'line_no': 250}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 254}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}, {'indent': 20, 'line': '                    ELSE', 'line_no': 265}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 267}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 268}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 269}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 270}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 271}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 272}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 273}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 274}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 275}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 276}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 277}, {'indent': 28, 'line': "                            'Y'", 'line_no': 278}, {'indent': 24, 'line': '                        );', 'line_no': 279}, {'indent': 20, 'line': '                    END IF;', 'line_no': 280}, {'indent': 16, 'line': '                END IF;', 'line_no': 285}, {'indent': 12, 'line': '            END IF;', 'line_no': 289}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 291}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 320}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}, {'indent': 16, 'line': '                ELSE', 'line_no': 331}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 333}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 334}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 335}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 336}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR,', 'line_no': 337}, {'indent': 24, 'line': '                        TMM.VALID_IND', 'line_no': 338}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 339}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 340}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 341}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 342}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR,', 'line_no': 343}, {'indent': 24, 'line': "                        'Y'", 'line_no': 344}, {'indent': 20, 'line': '                    );', 'line_no': 345}, {'indent': 16, 'line': '                END IF;', 'line_no': 346}, {'indent': 12, 'line': '            END IF;', 'line_no': 351}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO THEN', 'line_no': 352}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 363}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}, {'indent': 16, 'line': '                ELSE', 'line_no': 374}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 376}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 377}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 378}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 379}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR', 'line_no': 380}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 381}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 382}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 383}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 384}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR', 'line_no': 385}, {'indent': 20, 'line': '                    );', 'line_no': 386}, {'indent': 16, 'line': '                END IF;', 'line_no': 387}, {'indent': 12, 'line': '            END IF;', 'line_no': 392}]
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 202, 'if_indent': 8, 'end_if_line_no': 393, 'then_statements': [{'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 203}, {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) THEN', 'line_no': 204}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}, {'indent': 16, 'line': '                END IF;', 'line_no': 211}, {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 213}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'indent': 20, 'line': '                    IF (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) THEN', 'line_no': 228}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}, {'indent': 20, 'line': '                    ELSE', 'line_no': 239}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 242}, {'indent': 24, 'line': '                        SET', 'line_no': 243}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 244}, {'indent': 24, 'line': '                        WHERE', 'line_no': 245}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 246}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 247}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 248}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;', 'line_no': 249}, {'indent': 20, 'line': '                    END IF;', 'line_no': 250}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 254}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}, {'indent': 20, 'line': '                    ELSE', 'line_no': 265}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 267}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 268}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 269}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 270}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 271}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 272}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 273}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 274}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 275}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 276}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 277}, {'indent': 28, 'line': "                            'Y'", 'line_no': 278}, {'indent': 24, 'line': '                        );', 'line_no': 279}, {'indent': 20, 'line': '                    END IF;', 'line_no': 280}, {'indent': 16, 'line': '                END IF;', 'line_no': 285}, {'indent': 12, 'line': '            END IF;', 'line_no': 289}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 291}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 320}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}, {'indent': 16, 'line': '                ELSE', 'line_no': 331}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 333}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 334}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 335}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 336}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR,', 'line_no': 337}, {'indent': 24, 'line': '                        TMM.VALID_IND', 'line_no': 338}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 339}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 340}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 341}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 342}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR,', 'line_no': 343}, {'indent': 24, 'line': "                        'Y'", 'line_no': 344}, {'indent': 20, 'line': '                    );', 'line_no': 345}, {'indent': 16, 'line': '                END IF;', 'line_no': 346}, {'indent': 12, 'line': '            END IF;', 'line_no': 351}, {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO THEN', 'line_no': 352}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 363}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}, {'indent': 16, 'line': '                ELSE', 'line_no': 374}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 376}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 377}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 378}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 379}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR', 'line_no': 380}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 381}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 382}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 383}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 384}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR', 'line_no': 385}, {'indent': 20, 'line': '                    );', 'line_no': 386}, {'indent': 16, 'line': '                END IF;', 'line_no': 387}, {'indent': 12, 'line': '            END IF;', 'line_no': 392}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID IS NOT NULL) THEN', 'line_no': 203}
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 203
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 203 i: 289
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 61
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) THEN', 'line_no': 204}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}, {'indent': 16, 'line': '                END IF;', 'line_no': 211}, {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 213}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'indent': 20, 'line': '                    IF (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) THEN', 'line_no': 228}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}, {'indent': 20, 'line': '                    ELSE', 'line_no': 239}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 242}, {'indent': 24, 'line': '                        SET', 'line_no': 243}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 244}, {'indent': 24, 'line': '                        WHERE', 'line_no': 245}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 246}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 247}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 248}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;', 'line_no': 249}, {'indent': 20, 'line': '                    END IF;', 'line_no': 250}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 254}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}, {'indent': 20, 'line': '                    ELSE', 'line_no': 265}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 267}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 268}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 269}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 270}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 271}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 272}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 273}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 274}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 275}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 276}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 277}, {'indent': 28, 'line': "                            'Y'", 'line_no': 278}, {'indent': 24, 'line': '                        );', 'line_no': 279}, {'indent': 20, 'line': '                    END IF;', 'line_no': 280}, {'indent': 16, 'line': '                END IF;', 'line_no': 285}]
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) THEN', 'line_no': 204}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}, {'indent': 16, 'line': '                END IF;', 'line_no': 211}, {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 213}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'indent': 20, 'line': '                    IF (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) THEN', 'line_no': 228}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}, {'indent': 20, 'line': '                    ELSE', 'line_no': 239}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 242}, {'indent': 24, 'line': '                        SET', 'line_no': 243}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 244}, {'indent': 24, 'line': '                        WHERE', 'line_no': 245}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 246}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 247}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 248}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;', 'line_no': 249}, {'indent': 20, 'line': '                    END IF;', 'line_no': 250}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 254}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}, {'indent': 20, 'line': '                    ELSE', 'line_no': 265}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 267}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 268}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 269}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 270}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 271}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 272}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 273}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 274}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 275}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 276}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 277}, {'indent': 28, 'line': "                            'Y'", 'line_no': 278}, {'indent': 24, 'line': '                        );', 'line_no': 279}, {'indent': 20, 'line': '                    END IF;', 'line_no': 280}, {'indent': 16, 'line': '                END IF;', 'line_no': 285}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) THEN', 'line_no': 204}
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 204
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 204 i: 211
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 8
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}]
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    SET', 'line_no': 206}
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}
2025-09-03 04:09:44,325 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 208}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                IF (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 213}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 213
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 213 i: 285
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 51
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'indent': 20, 'line': '                    IF (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) THEN', 'line_no': 228}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}, {'indent': 20, 'line': '                    ELSE', 'line_no': 239}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 242}, {'indent': 24, 'line': '                        SET', 'line_no': 243}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 244}, {'indent': 24, 'line': '                        WHERE', 'line_no': 245}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 246}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 247}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 248}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;', 'line_no': 249}, {'indent': 20, 'line': '                    END IF;', 'line_no': 250}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 254}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}, {'indent': 20, 'line': '                    ELSE', 'line_no': 265}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 267}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 268}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 269}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 270}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 271}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 272}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 273}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 274}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 275}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 276}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 277}, {'indent': 28, 'line': "                            'Y'", 'line_no': 278}, {'indent': 24, 'line': '                        );', 'line_no': 279}, {'indent': 20, 'line': '                    END IF;', 'line_no': 280}]
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'indent': 20, 'line': '                    IF (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) THEN', 'line_no': 228}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}, {'indent': 20, 'line': '                    ELSE', 'line_no': 239}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 242}, {'indent': 24, 'line': '                        SET', 'line_no': 243}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 244}, {'indent': 24, 'line': '                        WHERE', 'line_no': 245}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 246}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 247}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 248}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;', 'line_no': 249}, {'indent': 20, 'line': '                    END IF;', 'line_no': 250}, {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 254}, {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}, {'indent': 20, 'line': '                    ELSE', 'line_no': 265}, {'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 267}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 268}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 269}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 270}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 271}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 272}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 273}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 274}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 275}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 276}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 277}, {'indent': 28, 'line': "                            'Y'", 'line_no': 278}, {'indent': 24, 'line': '                        );', 'line_no': 279}, {'indent': 20, 'line': '                    END IF;', 'line_no': 280}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    SET', 'line_no': 223}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 225}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    IF (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) THEN', 'line_no': 228}
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 228
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 228 i: 250
2025-09-03 04:09:44,326 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 19
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': [[{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 242}, {'indent': 24, 'line': '                        SET', 'line_no': 243}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 244}, {'indent': 24, 'line': '                        WHERE', 'line_no': 245}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 246}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 247}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 248}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;', 'line_no': 249}, {'indent': 20, 'line': '                    END IF;', 'line_no': 250}]]}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        SET', 'line_no': 232}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        WHERE', 'line_no': 234}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 242}, {'indent': 24, 'line': '                        SET', 'line_no': 243}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 244}, {'indent': 24, 'line': '                        WHERE', 'line_no': 245}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 246}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 247}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 248}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO < :OLD.MOLECULE_SEQ_NO;', 'line_no': 249}, {'indent': 20, 'line': '                    END IF;', 'line_no': 250}]
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 254}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 254
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 254 i: 280
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 24
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': [[{'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 267}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 268}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 269}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 270}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 271}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 272}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 273}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 274}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 275}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 276}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 277}, {'indent': 28, 'line': "                            'Y'", 'line_no': 278}, {'indent': 24, 'line': '                        );', 'line_no': 279}, {'indent': 20, 'line': '                    END IF;', 'line_no': 280}]]}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        SET', 'line_no': 258}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}
2025-09-03 04:09:44,327 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        WHERE', 'line_no': 262}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 24, 'line': '                        INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 267}, {'indent': 28, 'line': '                            TMM.THEME_NO,', 'line_no': 268}, {'indent': 28, 'line': '                            TMM.MOLECULE_ID,', 'line_no': 269}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO,', 'line_no': 270}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR,', 'line_no': 271}, {'indent': 28, 'line': '                            TMM.VALID_IND', 'line_no': 272}, {'indent': 24, 'line': '                        ) VALUES (', 'line_no': 273}, {'indent': 28, 'line': '                            :NEW.THEME_NO,', 'line_no': 274}, {'indent': 28, 'line': '                            :NEW.MOLECULE_ID,', 'line_no': 275}, {'indent': 28, 'line': '                            :NEW.MOLECULE_SEQ_NO,', 'line_no': 276}, {'indent': 28, 'line': '                            :NEW.MOLECULE_MAP_CHAR,', 'line_no': 277}, {'indent': 28, 'line': "                            'Y'", 'line_no': 278}, {'indent': 24, 'line': '                        );', 'line_no': 279}, {'indent': 20, 'line': '                    END IF;', 'line_no': 280}]
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) THEN', 'line_no': 291}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 291
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 291 i: 351
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 40
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 320}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}, {'indent': 16, 'line': '                ELSE', 'line_no': 331}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 333}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 334}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 335}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 336}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR,', 'line_no': 337}, {'indent': 24, 'line': '                        TMM.VALID_IND', 'line_no': 338}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 339}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 340}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 341}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 342}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR,', 'line_no': 343}, {'indent': 24, 'line': "                        'Y'", 'line_no': 344}, {'indent': 20, 'line': '                    );', 'line_no': 345}, {'indent': 16, 'line': '                END IF;', 'line_no': 346}]
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 320}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}, {'indent': 16, 'line': '                ELSE', 'line_no': 331}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 333}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 334}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 335}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 336}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR,', 'line_no': 337}, {'indent': 24, 'line': '                        TMM.VALID_IND', 'line_no': 338}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 339}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 340}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 341}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 342}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR,', 'line_no': 343}, {'indent': 24, 'line': "                        'Y'", 'line_no': 344}, {'indent': 20, 'line': '                    );', 'line_no': 345}, {'indent': 16, 'line': '                END IF;', 'line_no': 346}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SET', 'line_no': 303}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 305}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SET', 'line_no': 311}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 313}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}
2025-09-03 04:09:44,328 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 320}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 320
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 320 i: 346
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 24
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}], 'if_elses': [], 'else_statements': [[{'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 333}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 334}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 335}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 336}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR,', 'line_no': 337}, {'indent': 24, 'line': '                        TMM.VALID_IND', 'line_no': 338}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 339}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 340}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 341}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 342}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR,', 'line_no': 343}, {'indent': 24, 'line': "                        'Y'", 'line_no': 344}, {'indent': 20, 'line': '                    );', 'line_no': 345}, {'indent': 16, 'line': '                END IF;', 'line_no': 346}]]}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    SET', 'line_no': 324}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 328}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 333}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 334}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 335}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 336}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR,', 'line_no': 337}, {'indent': 24, 'line': '                        TMM.VALID_IND', 'line_no': 338}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 339}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 340}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 341}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 342}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR,', 'line_no': 343}, {'indent': 24, 'line': "                        'Y'", 'line_no': 344}, {'indent': 20, 'line': '                    );', 'line_no': 345}, {'indent': 16, 'line': '                END IF;', 'line_no': 346}]
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO THEN', 'line_no': 352}
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 352
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 352 i: 392
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 31
2025-09-03 04:09:44,329 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 363}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}, {'indent': 16, 'line': '                ELSE', 'line_no': 374}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 376}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 377}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 378}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 379}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR', 'line_no': 380}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 381}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 382}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 383}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 384}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR', 'line_no': 385}, {'indent': 20, 'line': '                    );', 'line_no': 386}, {'indent': 16, 'line': '                END IF;', 'line_no': 387}]
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 363}, {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}, {'indent': 16, 'line': '                ELSE', 'line_no': 374}, {'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 376}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 377}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 378}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 379}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR', 'line_no': 380}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 381}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 382}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 383}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 384}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR', 'line_no': 385}, {'indent': 20, 'line': '                    );', 'line_no': 386}, {'indent': 16, 'line': '                END IF;', 'line_no': 387}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SET', 'line_no': 356}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 358}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                IF (INVALID_MAPPING_EXISTS) THEN', 'line_no': 363}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 363
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 363 i: 387
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 22
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}], 'if_elses': [], 'else_statements': [[{'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 376}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 377}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 378}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 379}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR', 'line_no': 380}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 381}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 382}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 383}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 384}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR', 'line_no': 385}, {'indent': 20, 'line': '                    );', 'line_no': 386}, {'indent': 16, 'line': '                END IF;', 'line_no': 387}]]}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    SET', 'line_no': 367}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 371}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 20, 'line': '                    INSERT INTO THEME_MOLECULE_MAP TMM (', 'line_no': 376}, {'indent': 24, 'line': '                        TMM.THEME_NO,', 'line_no': 377}, {'indent': 24, 'line': '                        TMM.MOLECULE_ID,', 'line_no': 378}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO,', 'line_no': 379}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR', 'line_no': 380}, {'indent': 20, 'line': '                    ) VALUES (', 'line_no': 381}, {'indent': 24, 'line': '                        :NEW.THEME_NO,', 'line_no': 382}, {'indent': 24, 'line': '                        :NEW.MOLECULE_ID,', 'line_no': 383}, {'indent': 24, 'line': '                        :NEW.MOLECULE_SEQ_NO,', 'line_no': 384}, {'indent': 24, 'line': '                        :NEW.MOLECULE_MAP_CHAR', 'line_no': 385}, {'indent': 20, 'line': '                    );', 'line_no': 386}, {'indent': 16, 'line': '                END IF;', 'line_no': 387}]
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 395}
2025-09-03 04:09:44,330 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_THEME_NO => :NEW.THEME_NO,', 'line_no': 396}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_MOLECULE_ID => 0,', 'line_no': 397}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_DATE => SYSDATE,', 'line_no': 398}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC', 'line_no': 399}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        );', 'line_no': 400}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 403}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT', 'line_no': 404}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    FROM', 'line_no': 405}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        (', 'line_no': 406}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 407}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MOLECULE_SEQ_NO', 'line_no': 408}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FROM', 'line_no': 409}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                THEME_MOLECULE_MAP TMM', 'line_no': 410}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 411}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 412}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': "                AND VALID_IND = 'Y'", 'line_no': 413}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            GROUP BY', 'line_no': 414}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MOLECULE_SEQ_NO', 'line_no': 415}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            HAVING', 'line_no': 416}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                COUNT (*) > 1', 'line_no': 417}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        );', 'line_no': 418}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (V_SEQ_NO_DUPLICATE_CNT > 0) THEN', 'line_no': 419}
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 419
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 419 i: 421
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:44,331 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        RAISE ERR_INV_MOL_SEQUENCE;', 'line_no': 420}]
2025-09-03 04:09:44,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (V_SEQ_NO_DUPLICATE_CNT > 0) ', 'type': 'if_else', 'if_line_no': 419, 'then_line_no': 419, 'if_indent': 4, 'end_if_line_no': 421, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_INV_MOL_SEQUENCE;', 'line_no': 420}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE ERR_INV_MOL_SEQUENCE;', 'line_no': 420}
2025-09-03 04:09:44,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20110, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 441}
2025-09-03 04:09:44,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20111, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 443}
2025-09-03 04:09:44,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20112, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 445}
2025-09-03 04:09:44,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 447}
2025-09-03 04:09:44,332 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20120, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 449}
2025-09-03 04:09:44,340 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 4, 'line': '    SELECT', 'line_no': 21}, {'indent': 8, 'line': '        MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC', 'line_no': 22}, {'indent': 4, 'line': '    FROM', 'line_no': 23}, {'indent': 8, 'line': '        GMD.THEMES', 'line_no': 24}, {'indent': 4, 'line': '    WHERE', 'line_no': 25}, {'indent': 8, 'line': '        THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);', 'line_no': 26}, {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 27, 'then_line_no': 27, 'if_indent': 4, 'end_if_line_no': 58, 'then_statements': [{'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 33}, {'indent': 8, 'line': '        SET', 'line_no': 34}, {'indent': 12, 'line': "            TMM.VALID_IND = 'N'", 'line_no': 35}, {'indent': 8, 'line': '        WHERE', 'line_no': 36}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 37}, {'indent': 12, 'line': '            AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 38}, {'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 41}, {'indent': 8, 'line': '        SET', 'line_no': 42}, {'indent': 12, 'line': '            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 43}, {'indent': 8, 'line': '        WHERE', 'line_no': 44}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 45}, {'indent': 12, 'line': '            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 46}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 47}, {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 52}, {'indent': 12, 'line': '            P_THEME_NO => :OLD.THEME_NO,', 'line_no': 53}, {'indent': 12, 'line': '            P_MOLECULE_ID => :OLD.MOLECULE_ID,', 'line_no': 54}, {'indent': 12, 'line': '            P_DATE => SYSDATE,', 'line_no': 55}, {'indent': 12, 'line': '            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC', 'line_no': 56}, {'indent': 8, 'line': '        );', 'line_no': 57}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 60, 'then_line_no': 60, 'if_indent': 4, 'end_if_line_no': 401, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 61}, {'indent': 12, 'line': '            COUNT (*) INTO V_COUNT_T_MAPPINGS', 'line_no': 62}, {'indent': 8, 'line': '        FROM', 'line_no': 63}, {'indent': 12, 'line': '            V_THEME_MOLECULE_MAP TMM', 'line_no': 64}, {'indent': 8, 'line': '        WHERE', 'line_no': 65}, {'indent': 12, 'line': '            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 66}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 67}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 68, 'if_indent': 8, 'end_if_line_no': 87, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 89, 'then_line_no': 89, 'if_indent': 8, 'end_if_line_no': 93, 'then_statements': [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) ", 'type': 'if_else', 'if_line_no': 98, 'then_line_no': 98, 'if_indent': 8, 'end_if_line_no': 122, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 99}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}, {'indent': 12, 'line': '            FROM', 'line_no': 101}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}, {'indent': 12, 'line': '            WHERE', 'line_no': 103}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            SELECT', 'line_no': 111}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}, {'indent': 12, 'line': '            FROM', 'line_no': 113}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}, {'indent': 12, 'line': '            WHERE', 'line_no': 115}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 124, 'then_line_no': 124, 'if_indent': 8, 'end_if_line_no': 201, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 202, 'if_indent': 8, 'end_if_line_no': 393, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 395}, {'indent': 12, 'line': '            P_THEME_NO => :NEW.THEME_NO,', 'line_no': 396}, {'indent': 12, 'line': '            P_MOLECULE_ID => 0,', 'line_no': 397}, {'indent': 12, 'line': '            P_DATE => SYSDATE,', 'line_no': 398}, {'indent': 12, 'line': '            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC', 'line_no': 399}, {'indent': 8, 'line': '        );', 'line_no': 400}], 'if_elses': [], 'else_statements': []}, {'indent': 4, 'line': '    SELECT', 'line_no': 403}, {'indent': 8, 'line': '        COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT', 'line_no': 404}, {'indent': 4, 'line': '    FROM', 'line_no': 405}, {'indent': 8, 'line': '        (', 'line_no': 406}, {'indent': 12, 'line': '            SELECT', 'line_no': 407}, {'indent': 16, 'line': '                MOLECULE_SEQ_NO', 'line_no': 408}, {'indent': 12, 'line': '            FROM', 'line_no': 409}, {'indent': 16, 'line': '                THEME_MOLECULE_MAP TMM', 'line_no': 410}, {'indent': 12, 'line': '            WHERE', 'line_no': 411}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 412}, {'indent': 16, 'line': "                AND VALID_IND = 'Y'", 'line_no': 413}, {'indent': 12, 'line': '            GROUP BY', 'line_no': 414}, {'indent': 16, 'line': '                MOLECULE_SEQ_NO', 'line_no': 415}, {'indent': 12, 'line': '            HAVING', 'line_no': 416}, {'indent': 16, 'line': '                COUNT (*) > 1', 'line_no': 417}, {'indent': 8, 'line': '        );', 'line_no': 418}, {'condition': ' (V_SEQ_NO_DUPLICATE_CNT > 0) ', 'type': 'if_else', 'if_line_no': 419, 'then_line_no': 419, 'if_indent': 4, 'end_if_line_no': 421, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_INV_MOL_SEQUENCE;', 'line_no': 420}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,340 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,340 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 21}
2025-09-03 04:09:44,340 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,341 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC', 'line_no': 22}
2025-09-03 04:09:44,341 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,341 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    FROM', 'line_no': 23}
2025-09-03 04:09:44,341 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,341 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        GMD.THEMES', 'line_no': 24}
2025-09-03 04:09:44,341 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,341 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    WHERE', 'line_no': 25}
2025-09-03 04:09:44,341 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,341 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);', 'line_no': 26}
2025-09-03 04:09:44,341 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 33}, {'indent': 8, 'line': '        SET', 'line_no': 34}, {'indent': 12, 'line': "            TMM.VALID_IND = 'N'", 'line_no': 35}, {'indent': 8, 'line': '        WHERE', 'line_no': 36}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 37}, {'indent': 12, 'line': '            AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 38}, {'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 41}, {'indent': 8, 'line': '        SET', 'line_no': 42}, {'indent': 12, 'line': '            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 43}, {'indent': 8, 'line': '        WHERE', 'line_no': 44}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 45}, {'indent': 12, 'line': '            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 46}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 47}, {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 52}, {'indent': 12, 'line': '            P_THEME_NO => :OLD.THEME_NO,', 'line_no': 53}, {'indent': 12, 'line': '            P_MOLECULE_ID => :OLD.MOLECULE_ID,', 'line_no': 54}, {'indent': 12, 'line': '            P_DATE => SYSDATE,', 'line_no': 55}, {'indent': 12, 'line': '            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC', 'line_no': 56}, {'indent': 8, 'line': '        );', 'line_no': 57}]
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 33}
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SET', 'line_no': 34}
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            TMM.VALID_IND = 'N'", 'line_no': 35}
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 36}
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,349 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 37}
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 38}
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 41}
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SET', 'line_no': 42}
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 43}
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 44}
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 45}
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 46}
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 47}
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 52}
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC
2025-09-03 04:09:44,350 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (
2025-09-03 04:09:44,351 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 52
2025-09-03 04:09:44,351 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 57
2025-09-03 04:09:44,351 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );
2025-09-03 04:09:44,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );
2025-09-03 04:09:44,351 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':OLD.THEME_NO', 'P_MOLECULE_ID': ':OLD.MOLECULE_ID', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}
2025-09-03 04:09:44,359 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,359 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        SELECT', 'line_no': 61}, {'indent': 12, 'line': '            COUNT (*) INTO V_COUNT_T_MAPPINGS', 'line_no': 62}, {'indent': 8, 'line': '        FROM', 'line_no': 63}, {'indent': 12, 'line': '            V_THEME_MOLECULE_MAP TMM', 'line_no': 64}, {'indent': 8, 'line': '        WHERE', 'line_no': 65}, {'indent': 12, 'line': '            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 66}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 67}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 68, 'if_indent': 8, 'end_if_line_no': 87, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 89, 'then_line_no': 89, 'if_indent': 8, 'end_if_line_no': 93, 'then_statements': [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) ", 'type': 'if_else', 'if_line_no': 98, 'then_line_no': 98, 'if_indent': 8, 'end_if_line_no': 122, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 99}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}, {'indent': 12, 'line': '            FROM', 'line_no': 101}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}, {'indent': 12, 'line': '            WHERE', 'line_no': 103}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            SELECT', 'line_no': 111}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}, {'indent': 12, 'line': '            FROM', 'line_no': 113}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}, {'indent': 12, 'line': '            WHERE', 'line_no': 115}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 124, 'then_line_no': 124, 'if_indent': 8, 'end_if_line_no': 201, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 202, 'if_indent': 8, 'end_if_line_no': 393, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 395}, {'indent': 12, 'line': '            P_THEME_NO => :NEW.THEME_NO,', 'line_no': 396}, {'indent': 12, 'line': '            P_MOLECULE_ID => 0,', 'line_no': 397}, {'indent': 12, 'line': '            P_DATE => SYSDATE,', 'line_no': 398}, {'indent': 12, 'line': '            P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC', 'line_no': 399}, {'indent': 8, 'line': '        );', 'line_no': 400}]
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 61}
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COUNT (*) INTO V_COUNT_T_MAPPINGS', 'line_no': 62}
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        FROM', 'line_no': 63}
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_THEME_MOLECULE_MAP TMM', 'line_no': 64}
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 65}
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 66}
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 67}
2025-09-03 04:09:44,370 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,379 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}]
2025-09-03 04:09:44,379 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,380 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}
2025-09-03 04:09:44,387 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,387 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:44,395 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,395 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,403 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}]
2025-09-03 04:09:44,403 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,403 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}
2025-09-03 04:09:44,411 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,419 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,419 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:44,427 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            SELECT', 'line_no': 99}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}, {'indent': 12, 'line': '            FROM', 'line_no': 101}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}, {'indent': 12, 'line': '            WHERE', 'line_no': 103}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            SELECT', 'line_no': 111}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}, {'indent': 12, 'line': '            FROM', 'line_no': 113}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}, {'indent': 12, 'line': '            WHERE', 'line_no': 115}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,427 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,427 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 99}
2025-09-03 04:09:44,427 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,427 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}
2025-09-03 04:09:44,427 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,427 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FROM', 'line_no': 101}
2025-09-03 04:09:44,427 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,427 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}
2025-09-03 04:09:44,428 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,428 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 103}
2025-09-03 04:09:44,428 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,428 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}
2025-09-03 04:09:44,428 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,428 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}
2025-09-03 04:09:44,428 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,428 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}
2025-09-03 04:09:44,428 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:44,435 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}]
2025-09-03 04:09:44,435 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,435 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}
2025-09-03 04:09:44,443 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,443 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:44,443 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 111}
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FROM', 'line_no': 113}
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 115}
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}
2025-09-03 04:09:44,444 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 17
2025-09-03 04:09:44,452 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}]
2025-09-03 04:09:44,452 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,452 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}
2025-09-03 04:09:44,460 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,471 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,471 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:44,480 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}]
2025-09-03 04:09:44,481 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,489 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,489 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,496 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}]
2025-09-03 04:09:44,496 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,496 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}
2025-09-03 04:09:44,496 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,496 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        SET', 'line_no': 131}
2025-09-03 04:09:44,496 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,496 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}
2025-09-03 04:09:44,497 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,497 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}
2025-09-03 04:09:44,497 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,497 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        WHERE', 'line_no': 134}
2025-09-03 04:09:44,497 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,497 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}
2025-09-03 04:09:44,497 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,497 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}
2025-09-03 04:09:44,504 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,512 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,512 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,512 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    SET', 'line_no': 159}
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 161}
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}
2025-09-03 04:09:44,513 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,521 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}]
2025-09-03 04:09:44,521 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,521 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}
2025-09-03 04:09:44,521 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,521 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        SET', 'line_no': 171}
2025-09-03 04:09:44,521 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,521 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}
2025-09-03 04:09:44,521 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,521 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}
2025-09-03 04:09:44,522 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,522 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        WHERE', 'line_no': 174}
2025-09-03 04:09:44,522 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,522 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}
2025-09-03 04:09:44,522 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,522 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}
2025-09-03 04:09:44,532 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,540 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]
2025-09-03 04:09:44,540 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,540 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}
2025-09-03 04:09:44,548 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,548 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:44,556 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,557 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,565 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,565 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,576 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}]
2025-09-03 04:09:44,576 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,576 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}
2025-09-03 04:09:44,576 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,576 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    SET', 'line_no': 206}
2025-09-03 04:09:44,576 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,576 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}
2025-09-03 04:09:44,576 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,576 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 208}
2025-09-03 04:09:44,576 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,577 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}
2025-09-03 04:09:44,577 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,577 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}
2025-09-03 04:09:44,584 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,585 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,592 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    SET', 'line_no': 223}
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 225}
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}
2025-09-03 04:09:44,593 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,601 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}]
2025-09-03 04:09:44,601 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        SET', 'line_no': 232}
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        WHERE', 'line_no': 234}
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,602 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}
2025-09-03 04:09:44,610 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,610 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,618 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}]
2025-09-03 04:09:44,618 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,618 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}
2025-09-03 04:09:44,618 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,618 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        SET', 'line_no': 258}
2025-09-03 04:09:44,618 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,618 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}
2025-09-03 04:09:44,618 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,618 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}
2025-09-03 04:09:44,618 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,619 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}
2025-09-03 04:09:44,619 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,619 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        WHERE', 'line_no': 262}
2025-09-03 04:09:44,619 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,619 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}
2025-09-03 04:09:44,619 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,619 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}
2025-09-03 04:09:44,626 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,634 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,643 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,643 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SET', 'line_no': 303}
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 305}
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,651 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SET', 'line_no': 311}
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 313}
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}
2025-09-03 04:09:44,652 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:44,660 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}]
2025-09-03 04:09:44,660 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    SET', 'line_no': 324}
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 328}
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,661 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}
2025-09-03 04:09:44,669 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,680 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,680 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SET', 'line_no': 356}
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 358}
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,688 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}
2025-09-03 04:09:44,689 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,689 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}
2025-09-03 04:09:44,689 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}]
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    SET', 'line_no': 367}
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 371}
2025-09-03 04:09:44,697 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,698 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}
2025-09-03 04:09:44,698 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,698 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}
2025-09-03 04:09:44,706 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,714 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,722 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,722 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:44,722 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (', 'line_no': 395}
2025-09-03 04:09:44,722 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC
2025-09-03 04:09:44,722 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC (
2025-09-03 04:09:44,722 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 395
2025-09-03 04:09:44,722 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 400
2025-09-03 04:09:44,722 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );
2025-09-03 04:09:44,722 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC ( P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC );
2025-09-03 04:09:44,722 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':NEW.THEME_NO', 'P_MOLECULE_ID': '0', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}
2025-09-03 04:09:44,730 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,730 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:44,730 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 403}
2025-09-03 04:09:44,730 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:44,730 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT', 'line_no': 404}
2025-09-03 04:09:44,730 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    FROM', 'line_no': 405}
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        (', 'line_no': 406}
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 407}
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                MOLECULE_SEQ_NO', 'line_no': 408}
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FROM', 'line_no': 409}
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                THEME_MOLECULE_MAP TMM', 'line_no': 410}
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 411}
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 17
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 412}
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 18
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': "                AND VALID_IND = 'Y'", 'line_no': 413}
2025-09-03 04:09:44,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 19
2025-09-03 04:09:44,732 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            GROUP BY', 'line_no': 414}
2025-09-03 04:09:44,732 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 20
2025-09-03 04:09:44,732 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                MOLECULE_SEQ_NO', 'line_no': 415}
2025-09-03 04:09:44,732 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 21
2025-09-03 04:09:44,732 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            HAVING', 'line_no': 416}
2025-09-03 04:09:44,732 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 22
2025-09-03 04:09:44,732 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                COUNT (*) > 1', 'line_no': 417}
2025-09-03 04:09:44,732 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 23
2025-09-03 04:09:44,732 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        );', 'line_no': 418}
2025-09-03 04:09:44,732 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 24
2025-09-03 04:09:44,740 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE ERR_INV_MOL_SEQUENCE;', 'line_no': 420}]
2025-09-03 04:09:44,740 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE ERR_INV_MOL_SEQUENCE;', 'line_no': 420}
2025-09-03 04:09:44,748 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,756 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20110, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 441}]
2025-09-03 04:09:44,756 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,756 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20110, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 441}
2025-09-03 04:09:44,756 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,756 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20110, 'MDM_THEME_MOLECULE_MAP_IOF');
2025-09-03 04:09:44,756 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 441
2025-09-03 04:09:44,756 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 441
2025-09-03 04:09:44,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20110, 'MDM_THEME_MOLECULE_MAP_IOF');
2025-09-03 04:09:44,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20110, 'MDM_THEME_MOLECULE_MAP_IOF'"}}
2025-09-03 04:09:44,764 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20111, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 443}]
2025-09-03 04:09:44,764 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,764 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20111, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 443}
2025-09-03 04:09:44,764 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,764 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20111, 'MDM_THEME_MOLECULE_MAP_IOF');
2025-09-03 04:09:44,765 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 443
2025-09-03 04:09:44,765 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 443
2025-09-03 04:09:44,765 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20111, 'MDM_THEME_MOLECULE_MAP_IOF');
2025-09-03 04:09:44,765 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20111, 'MDM_THEME_MOLECULE_MAP_IOF'"}}
2025-09-03 04:09:44,773 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20112, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 445}]
2025-09-03 04:09:44,773 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,773 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20112, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 445}
2025-09-03 04:09:44,773 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,773 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20112, 'MDM_THEME_MOLECULE_MAP_IOF');
2025-09-03 04:09:44,773 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 445
2025-09-03 04:09:44,773 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 445
2025-09-03 04:09:44,773 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20112, 'MDM_THEME_MOLECULE_MAP_IOF');
2025-09-03 04:09:44,773 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20112, 'MDM_THEME_MOLECULE_MAP_IOF'"}}
2025-09-03 04:09:44,784 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 447}]
2025-09-03 04:09:44,784 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,784 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 447}
2025-09-03 04:09:44,784 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,784 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20113, 'MDM_THEME_MOLECULE_MAP_IOF');
2025-09-03 04:09:44,784 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 447
2025-09-03 04:09:44,784 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 447
2025-09-03 04:09:44,784 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20113, 'MDM_THEME_MOLECULE_MAP_IOF');
2025-09-03 04:09:44,784 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20113, 'MDM_THEME_MOLECULE_MAP_IOF'"}}
2025-09-03 04:09:44,793 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20120, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 449}]
2025-09-03 04:09:44,793 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,793 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20120, 'MDM_THEME_MOLECULE_MAP_IOF');", 'line_no': 449}
2025-09-03 04:09:44,793 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:44,793 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20120, 'MDM_THEME_MOLECULE_MAP_IOF');
2025-09-03 04:09:44,793 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 449
2025-09-03 04:09:44,793 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 449
2025-09-03 04:09:44,793 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20120, 'MDM_THEME_MOLECULE_MAP_IOF');
2025-09-03 04:09:44,793 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20120', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20120, 'MDM_THEME_MOLECULE_MAP_IOF'"}}
2025-09-03 04:09:44,793 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 4, 'line': '    SELECT', 'line_no': 21}, {'indent': 8, 'line': '        MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC', 'line_no': 22}, {'indent': 4, 'line': '    FROM', 'line_no': 23}, {'indent': 8, 'line': '        GMD.THEMES', 'line_no': 24}, {'indent': 4, 'line': '    WHERE', 'line_no': 25}, {'indent': 8, 'line': '        THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);', 'line_no': 26}, {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 27, 'then_line_no': 27, 'if_indent': 4, 'end_if_line_no': 58, 'then_statements': [{'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 33}, {'indent': 8, 'line': '        SET', 'line_no': 34}, {'indent': 12, 'line': "            TMM.VALID_IND = 'N'", 'line_no': 35}, {'indent': 8, 'line': '        WHERE', 'line_no': 36}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 37}, {'indent': 12, 'line': '            AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 38}, {'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 41}, {'indent': 8, 'line': '        SET', 'line_no': 42}, {'indent': 12, 'line': '            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 43}, {'indent': 8, 'line': '        WHERE', 'line_no': 44}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 45}, {'indent': 12, 'line': '            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 46}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 47}, {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':OLD.THEME_NO', 'P_MOLECULE_ID': ':OLD.MOLECULE_ID', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 60, 'then_line_no': 60, 'if_indent': 4, 'end_if_line_no': 401, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 61}, {'indent': 12, 'line': '            COUNT (*) INTO V_COUNT_T_MAPPINGS', 'line_no': 62}, {'indent': 8, 'line': '        FROM', 'line_no': 63}, {'indent': 12, 'line': '            V_THEME_MOLECULE_MAP TMM', 'line_no': 64}, {'indent': 8, 'line': '        WHERE', 'line_no': 65}, {'indent': 12, 'line': '            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 66}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 67}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 68, 'if_indent': 8, 'end_if_line_no': 87, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 89, 'then_line_no': 89, 'if_indent': 8, 'end_if_line_no': 93, 'then_statements': [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) ", 'type': 'if_else', 'if_line_no': 98, 'then_line_no': 98, 'if_indent': 8, 'end_if_line_no': 122, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 99}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}, {'indent': 12, 'line': '            FROM', 'line_no': 101}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}, {'indent': 12, 'line': '            WHERE', 'line_no': 103}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            SELECT', 'line_no': 111}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}, {'indent': 12, 'line': '            FROM', 'line_no': 113}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}, {'indent': 12, 'line': '            WHERE', 'line_no': 115}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 124, 'then_line_no': 124, 'if_indent': 8, 'end_if_line_no': 201, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 202, 'if_indent': 8, 'end_if_line_no': 393, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':NEW.THEME_NO', 'P_MOLECULE_ID': '0', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}], 'if_elses': [], 'else_statements': []}, {'indent': 4, 'line': '    SELECT', 'line_no': 403}, {'indent': 8, 'line': '        COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT', 'line_no': 404}, {'indent': 4, 'line': '    FROM', 'line_no': 405}, {'indent': 8, 'line': '        (', 'line_no': 406}, {'indent': 12, 'line': '            SELECT', 'line_no': 407}, {'indent': 16, 'line': '                MOLECULE_SEQ_NO', 'line_no': 408}, {'indent': 12, 'line': '            FROM', 'line_no': 409}, {'indent': 16, 'line': '                THEME_MOLECULE_MAP TMM', 'line_no': 410}, {'indent': 12, 'line': '            WHERE', 'line_no': 411}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 412}, {'indent': 16, 'line': "                AND VALID_IND = 'Y'", 'line_no': 413}, {'indent': 12, 'line': '            GROUP BY', 'line_no': 414}, {'indent': 16, 'line': '                MOLECULE_SEQ_NO', 'line_no': 415}, {'indent': 12, 'line': '            HAVING', 'line_no': 416}, {'indent': 16, 'line': '                COUNT (*) > 1', 'line_no': 417}, {'indent': 8, 'line': '        );', 'line_no': 418}, {'condition': ' (V_SEQ_NO_DUPLICATE_CNT > 0) ', 'type': 'if_else', 'if_line_no': 419, 'then_line_no': 419, 'if_indent': 4, 'end_if_line_no': 421, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_INV_MOL_SEQUENCE;', 'line_no': 420}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     SELECT || 21 || 4
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 21 || select_statement || SELECT
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 21 || select_statement
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 21 || select_statement
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 26 || select_statement
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 6
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 33}, {'indent': 8, 'line': '        SET', 'line_no': 34}, {'indent': 12, 'line': "            TMM.VALID_IND = 'N'", 'line_no': 35}, {'indent': 8, 'line': '        WHERE', 'line_no': 36}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 37}, {'indent': 12, 'line': '            AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 38}, {'indent': 8, 'line': '        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 41}, {'indent': 8, 'line': '        SET', 'line_no': 42}, {'indent': 12, 'line': '            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 43}, {'indent': 8, 'line': '        WHERE', 'line_no': 44}, {'indent': 12, 'line': '            TMM.THEME_NO = :OLD.THEME_NO', 'line_no': 45}, {'indent': 12, 'line': '            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 46}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 47}, {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':OLD.THEME_NO', 'P_MOLECULE_ID': ':OLD.MOLECULE_ID', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}]
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         UPDATE THEME_MOLECULE_MAP TMM || 33 || 8
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 33 || update_statement || UPDATE
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 33 || update_statement
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 33 || update_statement
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 38 || update_statement
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 6
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         UPDATE THEME_MOLECULE_MAP TMM || 41 || 8
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 41 || update_statement || UPDATE
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 41 || update_statement
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 41 || update_statement
2025-09-03 04:09:44,794 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 47 || update_statement
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 13
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        SELECT', 'line_no': 61}, {'indent': 12, 'line': '            COUNT (*) INTO V_COUNT_T_MAPPINGS', 'line_no': 62}, {'indent': 8, 'line': '        FROM', 'line_no': 63}, {'indent': 12, 'line': '            V_THEME_MOLECULE_MAP TMM', 'line_no': 64}, {'indent': 8, 'line': '        WHERE', 'line_no': 65}, {'indent': 12, 'line': '            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 66}, {'indent': 12, 'line': "            AND TMM.VALID_IND = 'Y';", 'line_no': 67}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 68, 'if_indent': 8, 'end_if_line_no': 87, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 89, 'then_line_no': 89, 'if_indent': 8, 'end_if_line_no': 93, 'then_statements': [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) ", 'type': 'if_else', 'if_line_no': 98, 'then_line_no': 98, 'if_indent': 8, 'end_if_line_no': 122, 'then_statements': [{'indent': 12, 'line': '            SELECT', 'line_no': 99}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}, {'indent': 12, 'line': '            FROM', 'line_no': 101}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}, {'indent': 12, 'line': '            WHERE', 'line_no': 103}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            SELECT', 'line_no': 111}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}, {'indent': 12, 'line': '            FROM', 'line_no': 113}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}, {'indent': 12, 'line': '            WHERE', 'line_no': 115}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 124, 'then_line_no': 124, 'if_indent': 8, 'end_if_line_no': 201, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 202, 'if_indent': 8, 'end_if_line_no': 393, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':NEW.THEME_NO', 'P_MOLECULE_ID': '0', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}]
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         SELECT || 61 || 8
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 61 || select_statement || SELECT
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 61 || select_statement
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 61 || select_statement
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 67 || select_statement
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_MOLEC_ID_MISSING;', 'line_no': 69}]
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_MOLEC_ID_MISSING; || 69 || 12
2025-09-03 04:09:44,795 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 69 || raise_statement || RAISE
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 69 || raise_statement
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 69 || raise_statement
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 69 || raise_statement
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 8
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_UPD_INV_MAP;', 'line_no': 91}]
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 RAISE ERR_UPD_INV_MAP; || 91 || 16
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 91 || raise_statement || RAISE
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 91 || raise_statement
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 91 || raise_statement
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 91 || raise_statement
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 9
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            SELECT', 'line_no': 99}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 100}, {'indent': 12, 'line': '            FROM', 'line_no': 101}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 102}, {'indent': 12, 'line': '            WHERE', 'line_no': 103}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 104}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 105}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'Y';", 'line_no': 106}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            SELECT', 'line_no': 111}, {'indent': 16, 'line': '                COUNT (*) INTO V_COUNT_T_MOL_MAP', 'line_no': 112}, {'indent': 12, 'line': '            FROM', 'line_no': 113}, {'indent': 16, 'line': '                V_THEME_MOLECULE_MAP TMM', 'line_no': 114}, {'indent': 12, 'line': '            WHERE', 'line_no': 115}, {'indent': 16, 'line': '                TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 116}, {'indent': 16, 'line': '                AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID', 'line_no': 117}, {'indent': 16, 'line': "                AND TMM.VALID_IND = 'N';", 'line_no': 118}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             SELECT || 99 || 12
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 99 || select_statement || SELECT
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 99 || select_statement
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 99 || select_statement
2025-09-03 04:09:44,796 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 106 || select_statement
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 8
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_MAP_EXISTS;', 'line_no': 108}]
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 RAISE ERR_MAP_EXISTS; || 108 || 16
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 108 || raise_statement || RAISE
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 108 || raise_statement
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 108 || raise_statement
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 108 || raise_statement
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 9
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             SELECT || 111 || 12
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 111 || select_statement || SELECT
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 111 || select_statement
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 111 || select_statement
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 118 || select_statement
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 17
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                INVALID_MAPPING_EXISTS := TRUE;', 'line_no': 120}]
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 INVALID_MAPPING_EXISTS := TRUE; || 120 || 16
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 120 || assignment
2025-09-03 04:09:44,797 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 120 || assignment
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'INVALID_MAPPING_EXISTS', 'assignment_operator': ':=', 'expression': 'TRUE;', 'assignment_line_no': 120, 'assignment_indent': 16}
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 10
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]}]
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 130}, {'indent': 24, 'line': '                        SET', 'line_no': 131}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 132}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 133}, {'indent': 24, 'line': '                        WHERE', 'line_no': 134}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 135}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 136}]
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                         UPDATE THEME_MOLECULE_MAP TMM || 130 || 24
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 130 || update_statement || UPDATE
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 130 || update_statement
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 130 || update_statement
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 136 || update_statement
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 158}, {'indent': 20, 'line': '                    SET', 'line_no': 159}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1', 'line_no': 160}, {'indent': 20, 'line': '                    WHERE', 'line_no': 161}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 162}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO', 'line_no': 163}, {'indent': 24, 'line': "                        AND TMM.VALID_IND = 'Y';", 'line_no': 164}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,798 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     UPDATE THEME_MOLECULE_MAP TMM || 158 || 20
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 158 || update_statement || UPDATE
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 158 || update_statement
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 158 || update_statement
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 164 || update_statement
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 170}, {'indent': 24, 'line': '                        SET', 'line_no': 171}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 172}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO', 'line_no': 173}, {'indent': 24, 'line': '                        WHERE', 'line_no': 174}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 175}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 176}]
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                         UPDATE THEME_MOLECULE_MAP TMM || 170 || 24
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 170 || update_statement || UPDATE
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 170 || update_statement
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 170 || update_statement
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 176 || update_statement
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    RAISE ERR_INS_INV_MAP;', 'line_no': 199}]
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     RAISE ERR_INS_INV_MAP; || 199 || 20
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 199 || raise_statement || RAISE
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 199 || raise_statement
2025-09-03 04:09:44,799 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 199 || raise_statement
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 199 || raise_statement
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 11
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 205}, {'indent': 20, 'line': '                    SET', 'line_no': 206}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR', 'line_no': 207}, {'indent': 20, 'line': '                    WHERE', 'line_no': 208}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 209}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 210}]
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     UPDATE THEME_MOLECULE_MAP TMM || 205 || 20
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 205 || update_statement || UPDATE
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 205 || update_statement
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 205 || update_statement
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 210 || update_statement
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 222}, {'indent': 20, 'line': '                    SET', 'line_no': 223}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'N'", 'line_no': 224}, {'indent': 20, 'line': '                    WHERE', 'line_no': 225}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 226}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 227}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,800 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     UPDATE THEME_MOLECULE_MAP TMM || 222 || 20
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 222 || update_statement || UPDATE
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 222 || update_statement
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 222 || update_statement
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 227 || update_statement
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 6
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 231}, {'indent': 24, 'line': '                        SET', 'line_no': 232}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 233}, {'indent': 24, 'line': '                        WHERE', 'line_no': 234}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 235}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 236}, {'indent': 28, 'line': "                            AND TMM.VALID_IND = 'Y'", 'line_no': 237}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;', 'line_no': 238}]
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                         UPDATE THEME_MOLECULE_MAP TMM || 231 || 24
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 231 || update_statement || UPDATE
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 231 || update_statement
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 231 || update_statement
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 238 || update_statement
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 24, 'line': '                        UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 257}, {'indent': 24, 'line': '                        SET', 'line_no': 258}, {'indent': 28, 'line': "                            TMM.VALID_IND = 'Y',", 'line_no': 259}, {'indent': 28, 'line': '                            TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 260}, {'indent': 28, 'line': '                            TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR', 'line_no': 261}, {'indent': 24, 'line': '                        WHERE', 'line_no': 262}, {'indent': 28, 'line': '                            TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 263}, {'indent': 28, 'line': '                            AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 264}]
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                         UPDATE THEME_MOLECULE_MAP TMM || 257 || 24
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 257 || update_statement || UPDATE
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 257 || update_statement
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 257 || update_statement
2025-09-03 04:09:44,801 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 264 || update_statement
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 302}, {'indent': 16, 'line': '                SET', 'line_no': 303}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 304}, {'indent': 16, 'line': '                WHERE', 'line_no': 305}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 306}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;', 'line_no': 307}, {'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 310}, {'indent': 16, 'line': '                SET', 'line_no': 311}, {'indent': 20, 'line': '                    TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1', 'line_no': 312}, {'indent': 16, 'line': '                WHERE', 'line_no': 313}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 314}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO', 'line_no': 315}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO', 'line_no': 316}, {'indent': 20, 'line': "                    AND TMM.VALID_IND = 'Y';", 'line_no': 317}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 UPDATE THEME_MOLECULE_MAP TMM || 302 || 16
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 302 || update_statement || UPDATE
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 302 || update_statement
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 302 || update_statement
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 307 || update_statement
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 6
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 UPDATE THEME_MOLECULE_MAP TMM || 310 || 16
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 310 || update_statement || UPDATE
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 310 || update_statement
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 310 || update_statement
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 317 || update_statement
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 14
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 323}, {'indent': 20, 'line': '                    SET', 'line_no': 324}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 325}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 326}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 327}, {'indent': 20, 'line': '                    WHERE', 'line_no': 328}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 329}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 330}]
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     UPDATE THEME_MOLECULE_MAP TMM || 323 || 20
2025-09-03 04:09:44,802 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 323 || update_statement || UPDATE
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 323 || update_statement
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 323 || update_statement
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 330 || update_statement
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 355}, {'indent': 16, 'line': '                SET', 'line_no': 356}, {'indent': 20, 'line': "                    TMM.VALID_IND = 'N'", 'line_no': 357}, {'indent': 16, 'line': '                WHERE', 'line_no': 358}, {'indent': 20, 'line': '                    TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 359}, {'indent': 20, 'line': '                    AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID', 'line_no': 360}, {'indent': 20, 'line': '                    AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;', 'line_no': 361}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 UPDATE THEME_MOLECULE_MAP TMM || 355 || 16
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 355 || update_statement || UPDATE
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 355 || update_statement
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 355 || update_statement
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 361 || update_statement
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    UPDATE THEME_MOLECULE_MAP TMM', 'line_no': 366}, {'indent': 20, 'line': '                    SET', 'line_no': 367}, {'indent': 24, 'line': "                        TMM.VALID_IND = 'Y',", 'line_no': 368}, {'indent': 24, 'line': '                        TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO,', 'line_no': 369}, {'indent': 24, 'line': '                        TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR', 'line_no': 370}, {'indent': 20, 'line': '                    WHERE', 'line_no': 371}, {'indent': 24, 'line': '                        TMM.THEME_NO = :NEW.THEME_NO', 'line_no': 372}, {'indent': 24, 'line': '                        AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'line_no': 373}]
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     UPDATE THEME_MOLECULE_MAP TMM || 366 || 20
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 366 || update_statement || UPDATE
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 366 || update_statement
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 366 || update_statement
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 373 || update_statement
2025-09-03 04:09:44,803 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 12
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 8
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     SELECT || 403 || 4
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 403 || select_statement || SELECT
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 403 || select_statement
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 403 || select_statement
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 418 || select_statement
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 24
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        RAISE ERR_INV_MOL_SEQUENCE;', 'line_no': 420}]
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         RAISE ERR_INV_MOL_SEQUENCE; || 420 || 8
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 420 || raise_statement || RAISE
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 420 || raise_statement
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 420 || raise_statement
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 420 || raise_statement
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20110, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20111, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]
2025-09-03 04:09:44,804 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20112, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20113, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20120', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20120, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 18, 'begin_indent': 0, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);', 'statement_line_no': 21, 'statement_indent': 4}, {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 27, 'then_line_no': 27, 'if_indent': 4, 'end_if_line_no': 58, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 33, 'statement_indent': 8}, {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 41, 'statement_indent': 8}, {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':OLD.THEME_NO', 'P_MOLECULE_ID': ':OLD.MOLECULE_ID', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 60, 'then_line_no': 60, 'if_indent': 4, 'end_if_line_no': 401, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 61, 'statement_indent': 8}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 68, 'if_indent': 8, 'end_if_line_no': 87, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MOLEC_ID_MISSING;', 'statement_line_no': 69, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 89, 'then_line_no': 89, 'if_indent': 8, 'end_if_line_no': 93, 'then_statements': [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD_INV_MAP;', 'statement_line_no': 91, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) ", 'type': 'if_else', 'if_line_no': 98, 'then_line_no': 98, 'if_indent': 8, 'end_if_line_no': 122, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';", 'statement_line_no': 99, 'statement_indent': 12}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MAP_EXISTS;', 'statement_line_no': 108, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';", 'statement_line_no': 111, 'statement_indent': 12}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'type': 'assignment', 'variable_name': 'INVALID_MAPPING_EXISTS', 'assignment_operator': ':=', 'expression': 'TRUE;', 'assignment_line_no': 120, 'assignment_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 124, 'then_line_no': 124, 'if_indent': 8, 'end_if_line_no': 201, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 158, 'statement_indent': 20}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_INV_MAP;', 'statement_line_no': 199, 'statement_indent': 20}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 202, 'if_indent': 8, 'end_if_line_no': 393, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 302, 'statement_indent': 16}, {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 310, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;", 'statement_line_no': 355, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':NEW.THEME_NO', 'P_MOLECULE_ID': '0', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );", 'statement_line_no': 403, 'statement_indent': 4}, {'condition': ' (V_SEQ_NO_DUPLICATE_CNT > 0) ', 'type': 'if_else', 'if_line_no': 419, 'then_line_no': 419, 'if_indent': 4, 'end_if_line_no': 421, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INV_MOL_SEQUENCE;', 'statement_line_no': 420, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_MAP_EXISTS', 'when_line_no': 440, 'when_indent': 4, 'then_line_no': 440, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20110, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_MOLEC_ID_MISSING', 'when_line_no': 442, 'when_indent': 4, 'then_line_no': 442, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20111, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD_INV_MAP', 'when_line_no': 444, 'when_indent': 4, 'then_line_no': 444, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20112, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS_INV_MAP', 'when_line_no': 446, 'when_indent': 4, 'then_line_no': 446, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20113, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INV_MOL_SEQUENCE', 'when_line_no': 448, 'when_indent': 4, 'then_line_no': 448, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20120', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20120, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]}], 'exception_line_no': 439, 'end_line_no': 465}
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);', 'statement_line_no': 21, 'statement_indent': 4}
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 27, 'then_line_no': 27, 'if_indent': 4, 'end_if_line_no': 58, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 33, 'statement_indent': 8}, {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 41, 'statement_indent': 8}, {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':OLD.THEME_NO', 'P_MOLECULE_ID': ':OLD.MOLECULE_ID', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 33, 'statement_indent': 8}
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 41, 'statement_indent': 8}
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':OLD.THEME_NO', 'P_MOLECULE_ID': ':OLD.MOLECULE_ID', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}
2025-09-03 04:09:44,805 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 60, 'then_line_no': 60, 'if_indent': 4, 'end_if_line_no': 401, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 61, 'statement_indent': 8}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 68, 'if_indent': 8, 'end_if_line_no': 87, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MOLEC_ID_MISSING;', 'statement_line_no': 69, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 89, 'then_line_no': 89, 'if_indent': 8, 'end_if_line_no': 93, 'then_statements': [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD_INV_MAP;', 'statement_line_no': 91, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) ", 'type': 'if_else', 'if_line_no': 98, 'then_line_no': 98, 'if_indent': 8, 'end_if_line_no': 122, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';", 'statement_line_no': 99, 'statement_indent': 12}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MAP_EXISTS;', 'statement_line_no': 108, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';", 'statement_line_no': 111, 'statement_indent': 12}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'type': 'assignment', 'variable_name': 'INVALID_MAPPING_EXISTS', 'assignment_operator': ':=', 'expression': 'TRUE;', 'assignment_line_no': 120, 'assignment_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 124, 'then_line_no': 124, 'if_indent': 8, 'end_if_line_no': 201, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 158, 'statement_indent': 20}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_INV_MAP;', 'statement_line_no': 199, 'statement_indent': 20}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 202, 'if_indent': 8, 'end_if_line_no': 393, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 302, 'statement_indent': 16}, {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 310, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;", 'statement_line_no': 355, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':NEW.THEME_NO', 'P_MOLECULE_ID': '0', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 61, 'statement_indent': 8}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 68, 'if_indent': 8, 'end_if_line_no': 87, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MOLEC_ID_MISSING;', 'statement_line_no': 69, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MOLEC_ID_MISSING;', 'statement_line_no': 69, 'statement_indent': 12}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 89, 'then_line_no': 89, 'if_indent': 8, 'end_if_line_no': 93, 'then_statements': [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD_INV_MAP;', 'statement_line_no': 91, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD_INV_MAP;', 'statement_line_no': 91, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD_INV_MAP;', 'statement_line_no': 91, 'statement_indent': 16}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) ", 'type': 'if_else', 'if_line_no': 98, 'then_line_no': 98, 'if_indent': 8, 'end_if_line_no': 122, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';", 'statement_line_no': 99, 'statement_indent': 12}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MAP_EXISTS;', 'statement_line_no': 108, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';", 'statement_line_no': 111, 'statement_indent': 12}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'type': 'assignment', 'variable_name': 'INVALID_MAPPING_EXISTS', 'assignment_operator': ':=', 'expression': 'TRUE;', 'assignment_line_no': 120, 'assignment_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';", 'statement_line_no': 99, 'statement_indent': 12}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MAP_EXISTS;', 'statement_line_no': 108, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MAP_EXISTS;', 'statement_line_no': 108, 'statement_indent': 16}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';", 'statement_line_no': 111, 'statement_indent': 12}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'type': 'assignment', 'variable_name': 'INVALID_MAPPING_EXISTS', 'assignment_operator': ':=', 'expression': 'TRUE;', 'assignment_line_no': 120, 'assignment_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'INVALID_MAPPING_EXISTS', 'assignment_operator': ':=', 'expression': 'TRUE;', 'assignment_line_no': 120, 'assignment_indent': 16}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 124, 'then_line_no': 124, 'if_indent': 8, 'end_if_line_no': 201, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 158, 'statement_indent': 20}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_INV_MAP;', 'statement_line_no': 199, 'statement_indent': 20}]}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 158, 'statement_indent': 20}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_INV_MAP;', 'statement_line_no': 199, 'statement_indent': 20}]}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,806 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 158, 'statement_indent': 20}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 158, 'statement_indent': 20}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_INV_MAP;', 'statement_line_no': 199, 'statement_indent': 20}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 202, 'if_indent': 8, 'end_if_line_no': 393, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 302, 'statement_indent': 16}, {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 310, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;", 'statement_line_no': 355, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 302, 'statement_indent': 16}, {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 310, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 302, 'statement_indent': 16}
2025-09-03 04:09:44,807 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 310, 'statement_indent': 16}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;", 'statement_line_no': 355, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;", 'statement_line_no': 355, 'statement_indent': 16}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':NEW.THEME_NO', 'P_MOLECULE_ID': '0', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );", 'statement_line_no': 403, 'statement_indent': 4}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (V_SEQ_NO_DUPLICATE_CNT > 0) ', 'type': 'if_else', 'if_line_no': 419, 'then_line_no': 419, 'if_indent': 4, 'end_if_line_no': 421, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INV_MOL_SEQUENCE;', 'statement_line_no': 420, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INV_MOL_SEQUENCE;', 'statement_line_no': 420, 'statement_indent': 8}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_MAP_EXISTS', 'when_line_no': 440, 'when_indent': 4, 'then_line_no': 440, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20110, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20110, 'MDM_THEME_MOLECULE_MAP_IOF'"}}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_MOLEC_ID_MISSING', 'when_line_no': 442, 'when_indent': 4, 'then_line_no': 442, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20111, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20111, 'MDM_THEME_MOLECULE_MAP_IOF'"}}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_UPD_INV_MAP', 'when_line_no': 444, 'when_indent': 4, 'then_line_no': 444, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20112, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20112, 'MDM_THEME_MOLECULE_MAP_IOF'"}}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_INS_INV_MAP', 'when_line_no': 446, 'when_indent': 4, 'then_line_no': 446, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20113, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20113, 'MDM_THEME_MOLECULE_MAP_IOF'"}}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_INV_MOL_SEQUENCE', 'when_line_no': 448, 'when_indent': 4, 'then_line_no': 448, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20120', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20120, 'MDM_THEME_MOLECULE_MAP_IOF'"}}]}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20120', "'MDM_THEME_MOLECULE_MAP_IOF'"], 'named_params': {}, 'raw_text': "-20120, 'MDM_THEME_MOLECULE_MAP_IOF'"}}
2025-09-03 04:09:44,808 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list []
2025-09-03 04:09:44,816 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:    filename                                               line  line_no  indent
0   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
1   zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
2   zzz.sql                              ELSIF (DELETING) THEN      192     8.0
3   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
4   zzz.sql                                            END IF;      196     8.0
5   eee.sql                                            DECLARE        5     4.0
6   eee.sql                            v_inner_counter NUMBER;        7     8.0
7   eee.sql                                     <<outer_loop>>       10     8.0
8   eee.sql                                               LOOP       11     8.0
9   eee.sql                                     <<inner_loop>>       14    12.0
10  eee.sql                                               LOOP       15    12.0
11  eee.sql          EXIT inner_loop WHEN v_inner_counter > 3;       20    16.0
12  eee.sql                               END LOOP inner_loop;       21    12.0
13  eee.sql          EXIT outer_loop WHEN v_outer_counter > 5;       24    12.0
14  eee.sql                               END LOOP outer_loop;       25     8.0
2025-09-03 04:09:44,817 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 04:09:44,817 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.5035991668701172 seconds
2025-09-03 04:09:44,817 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 04:09:44,817 - root - DEBUG - [common.py:105] - File details: trigger2.sql
2025-09-03 04:09:44,817 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 04:09:44,817 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 6 vars, 0 consts, 7 excs, 73 comments
2025-09-03 04:09:44,817 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 04:09:44,818 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:44,818 - root - DEBUG - [common.py:105] - File details in metadata: trigger2.sql (19269 bytes)
2025-09-03 04:09:44,818 - root - DEBUG - [common.py:105] - Analysis statistics: 6 vars, 0 consts, 7 excs, 73 comments
2025-09-03 04:09:44,818 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\trigger2_analysis.json
2025-09-03 04:09:44,822 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\trigger2_analysis.json
2025-09-03 04:09:44,822 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger trigger2.sql ===
2025-09-03 04:09:44,822 - root - DEBUG - [common.py:105] - ✓ Created trigger2_analysis.json
2025-09-03 04:09:44,822 - root - DEBUG - [common.py:105] - === Processing file 5/10: trigger3.sql ===
2025-09-03 04:09:44,822 - root - DEBUG - [common.py:105] - Source path: files/oracle\trigger3.sql
2025-09-03 04:09:44,822 - root - DEBUG - [common.py:105] - Output path: files/format_json\trigger3_analysis.json
2025-09-03 04:09:44,822 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger trigger3.sql ===
2025-09-03 04:09:44,822 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 04:09:44,822 - root - DEBUG - [main.py:245] - Reading SQL file: files/oracle\trigger3.sql
2025-09-03 04:09:44,823 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 25 characters of SQL
2025-09-03 04:09:44,823 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 04:09:44,823 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 04:09:44,823 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 04:09:44,824 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 04:09:44,824 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 244 total, 58 with semicolons, 21 empty lines skipped
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 244 lines cleaned
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 17 comments extracted, 227 lines cleaned
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 1
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 14
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 1-13
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_TRIGGER_NAME
2025-09-03 04:09:44,824 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: CNTR
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_UPD
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_INS
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_CTRY_CHG
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_NOT_ALLOWED_TO_INVALIDATE
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_USERID
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: TEST_ERR
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_COUNTRY_CD
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_COMPANY_TYPE_CD
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_INS_LEGAL_ADDR
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_VALID_FROM
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 253, 'when_indent': 4, 'then_line_no': 253, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD);", 'line_no': 254}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS', 'when_line_no': 255, 'when_indent': 4, 'then_line_no': 255, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.');", 'line_no': 256}]}, {'type': 'exception_handler', 'exception_name': 'ERR_CTRY_CHG', 'when_line_no': 257, 'when_indent': 4, 'then_line_no': 257, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.');", 'line_no': 258}]}, {'type': 'exception_handler', 'exception_name': 'TEST_ERR', 'when_line_no': 259, 'when_indent': 4, 'then_line_no': 259, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR);", 'line_no': 260}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS_LEGAL_ADDR', 'when_line_no': 261, 'when_indent': 4, 'then_line_no': 261, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'The legal address cannot be inserted for this type of company');", 'line_no': 262}]}, {'type': 'exception_handler', 'exception_name': 'ERR_NOT_ALLOWED_TO_INVALIDATE', 'when_line_no': 263, 'when_indent': 4, 'then_line_no': 263, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'It is not allowed to invalidate/delete this type of address');", 'line_no': 264}]}]
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:1591] - Begin line: {'indent': 4, 'line': '    BEGIN', 'line_no': 15} 0
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:1598] - Exception line: {'indent': 4, 'line': '    EXCEPTION', 'line_no': 17} 2
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:1601] - End line: {'indent': 4, 'line': '    END;', 'line_no': 20} 5
2025-09-03 04:09:44,825 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 18, 'when_indent': 8, 'then_line_no': 18, 'exception_statements': [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 19}]}]
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'type': 'begin_end', 'begin_line_no': 15, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 16}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 18, 'when_indent': 8, 'then_line_no': 18, 'exception_statements': [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 19}]}], 'exception_line_no': 17, 'end_line_no': 20}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 16}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 19}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    CNTR := 0;', 'line_no': 22}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 23}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        COUNT (*) INTO CNTR', 'line_no': 24}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    FROM', 'line_no': 25}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        CFG_V_COMPANY_ADDRESSES', 'line_no': 26}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    WHERE', 'line_no': 27}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'line_no': 28}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);', 'line_no': 29}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (INSERTING) THEN', 'line_no': 30}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 30
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 30 i: 34
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 5
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        IF (CNTR > 0) THEN', 'line_no': 31}, {'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}, {'indent': 8, 'line': '        END IF;', 'line_no': 33}]
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 34, 'then_statements': [{'indent': 8, 'line': '        IF (CNTR > 0) THEN', 'line_no': 31}, {'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}, {'indent': 8, 'line': '        END IF;', 'line_no': 33}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF (CNTR > 0) THEN', 'line_no': 31}
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 31
2025-09-03 04:09:44,826 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 31 i: 33
2025-09-03 04:09:44,827 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:44,827 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}]
2025-09-03 04:09:44,827 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (CNTR > 0) ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 8, 'end_if_line_no': 33, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,827 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}
2025-09-03 04:09:44,827 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (INSERTING OR UPDATING) THEN', 'line_no': 36}
2025-09-03 04:09:44,827 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 36
2025-09-03 04:09:44,827 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 36 i: 243
2025-09-03 04:09:44,827 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 174
2025-09-03 04:09:44,827 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        SELECT', 'line_no': 37}, {'indent': 12, 'line': '            COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD', 'line_no': 38}, {'indent': 8, 'line': '        FROM', 'line_no': 39}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 40}, {'indent': 8, 'line': '        WHERE', 'line_no': 41}, {'indent': 12, 'line': '            COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 42}, {'indent': 8, 'line': "        IF (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) THEN", 'line_no': 43}, {'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}, {'indent': 8, 'line': '        END IF;', 'line_no': 45}, {'indent': 8, 'line': "        IF (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) THEN", 'line_no': 47}, {'indent': 12, 'line': '            IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 48}, {'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}, {'indent': 12, 'line': '            END IF;', 'line_no': 50}, {'indent': 12, 'line': '            IF (CNTR = 0) THEN', 'line_no': 52}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 56}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 57}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 58}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 59}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 60}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 61}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 62}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 63}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 64}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 65}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 66}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 67}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 68}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 69}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 70}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 71}, {'indent': 16, 'line': '                );', 'line_no': 72}, {'indent': 12, 'line': '            ELSE', 'line_no': 73}, {'indent': 16, 'line': '                IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 76}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 82}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 83}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 84}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 85}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 86}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 87}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 88}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 89}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 90}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 91}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 92}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 93}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 94}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 95}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 96}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 97}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'CTRY_CHANGE'", 'line_no': 98}, {'indent': 20, 'line': '                    );', 'line_no': 99}, {'indent': 20, 'line': '                    CNTR := 0;', 'line_no': 102}, {'indent': 20, 'line': '                    SELECT', 'line_no': 105}, {'indent': 24, 'line': '                        COUNT(*) INTO CNTR', 'line_no': 106}, {'indent': 20, 'line': '                    FROM', 'line_no': 107}, {'indent': 24, 'line': '                        CFG_V_COMPANIES', 'line_no': 108}, {'indent': 20, 'line': '                    WHERE', 'line_no': 109}, {'indent': 24, 'line': '                        COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 110}, {'indent': 24, 'line': "                        AND VALID_IND = 'Y'", 'line_no': 111}, {'indent': 24, 'line': "                        AND CBC_GBE_SCOPE = 'Y'", 'line_no': 112}, {'indent': 24, 'line': "                        AND COMPANY_TYPE_CD IN ('B', 'L');", 'line_no': 113}, {'indent': 20, 'line': "                    IF (:NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0) THEN", 'line_no': 114}, {'indent': 24, 'line': '                        SELECT', 'line_no': 118}, {'indent': 28, 'line': '                            COUNTRY_CD INTO V_COUNTRY_CD', 'line_no': 119}, {'indent': 24, 'line': '                        FROM', 'line_no': 120}, {'indent': 28, 'line': '                            MDM_V_COUNTRIES', 'line_no': 121}, {'indent': 24, 'line': '                        WHERE', 'line_no': 122}, {'indent': 28, 'line': '                            COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 123}, {'indent': 24, 'line': "                        IF (TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01') THEN", 'line_no': 126}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy');", 'line_no': 129}, {'indent': 24, 'line': '                        ELSE', 'line_no': 130}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy');", 'line_no': 133}, {'indent': 24, 'line': '                        END IF;', 'line_no': 134}, {'indent': 24, 'line': '                        MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 136}, {'indent': 28, 'line': '                            I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 137}, {'indent': 28, 'line': "                            I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 138}, {'indent': 53, 'line': '                                                     || V_COUNTRY_CD,', 'line_no': 139}, {'indent': 28, 'line': '                            I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 140}, {'indent': 28, 'line': '                            I_VALID_TO_DATE => NULL,', 'line_no': 141}, {'indent': 28, 'line': '                            I_CHANGE_USER => V_USERID,', 'line_no': 142}, {'indent': 28, 'line': "                            I_MAPPING_TYPE => 'JU',", 'line_no': 143}, {'indent': 28, 'line': "                            I_ACTION_TYPE => 'INSERT'", 'line_no': 144}, {'indent': 24, 'line': '                        );', 'line_no': 145}, {'indent': 24, 'line': "                        IF (V_COMPANY_TYPE_CD = 'L') THEN", 'line_no': 148}, {'indent': 28, 'line': '                            FOR V_REC IN (', 'line_no': 149}, {'indent': 32, 'line': '                                SELECT', 'line_no': 150}, {'indent': 36, 'line': '                                    COMPANY_CD', 'line_no': 151}, {'indent': 32, 'line': '                                FROM', 'line_no': 152}, {'indent': 36, 'line': '                                    CFG_V_COMPANIES', 'line_no': 153}, {'indent': 32, 'line': '                                WHERE', 'line_no': 154}, {'indent': 36, 'line': '                                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 155}, {'indent': 36, 'line': "                                    AND VALID_IND = 'Y'", 'line_no': 156}, {'indent': 36, 'line': "                                    AND CBC_GBE_SCOPE = 'Y'", 'line_no': 157}, {'indent': 36, 'line': "                                    AND COMPANY_TYPE_CD IN ('O', 'V')", 'line_no': 158}, {'indent': 28, 'line': '                            ) LOOP', 'line_no': 159}, {'indent': 32, 'line': '                                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 160}, {'indent': 36, 'line': '                                    I_COMPANY_CD => V_REC.COMPANY_CD,', 'line_no': 161}, {'indent': 36, 'line': "                                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 162}, {'indent': 61, 'line': '                                                             || V_COUNTRY_CD,', 'line_no': 163}, {'indent': 36, 'line': '                                    I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 164}, {'indent': 36, 'line': '                                    I_VALID_TO_DATE => NULL,', 'line_no': 165}, {'indent': 36, 'line': '                                    I_CHANGE_USER => V_USERID,', 'line_no': 166}, {'indent': 36, 'line': "                                    I_MAPPING_TYPE => 'JU',", 'line_no': 167}, {'indent': 36, 'line': "                                    I_ACTION_TYPE => 'INSERT'", 'line_no': 168}, {'indent': 32, 'line': '                                );', 'line_no': 169}, {'indent': 28, 'line': '                            END LOOP;', 'line_no': 170}, {'indent': 24, 'line': '                        END IF;', 'line_no': 171}, {'indent': 20, 'line': '                    END IF;', 'line_no': 172}, {'indent': 16, 'line': '                ELSE', 'line_no': 173}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 176}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 177}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 178}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 179}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 180}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 181}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 182}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 183}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 184}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 185}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 186}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 187}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 188}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 189}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 190}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 191}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'UPDATE'", 'line_no': 192}, {'indent': 20, 'line': '                    );', 'line_no': 193}, {'indent': 16, 'line': '                END IF;', 'line_no': 194}, {'indent': 12, 'line': '            END IF;', 'line_no': 195}, {'indent': 8, 'line': '        END IF;', 'line_no': 196}, {'indent': 8, 'line': "        IF (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) THEN", 'line_no': 198}, {'indent': 12, 'line': '            IF (CNTR = 0) THEN', 'line_no': 199}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 203}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 204}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 205}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 206}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 207}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 208}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 209}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 210}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 211}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 212}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 213}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 214}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 215}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 216}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 217}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 218}, {'indent': 16, 'line': '                );', 'line_no': 219}, {'indent': 12, 'line': '            ELSE', 'line_no': 220}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 223}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 224}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 225}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 226}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 227}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 228}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 229}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 230}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 231}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 232}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 233}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 234}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 235}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 236}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 237}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 238}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'UPDATE'", 'line_no': 239}, {'indent': 16, 'line': '                );', 'line_no': 240}, {'indent': 12, 'line': '            END IF;', 'line_no': 241}, {'indent': 8, 'line': '        END IF;', 'line_no': 242}]
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 37}, {'indent': 12, 'line': '            COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD', 'line_no': 38}, {'indent': 8, 'line': '        FROM', 'line_no': 39}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 40}, {'indent': 8, 'line': '        WHERE', 'line_no': 41}, {'indent': 12, 'line': '            COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 42}, {'indent': 8, 'line': "        IF (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) THEN", 'line_no': 43}, {'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}, {'indent': 8, 'line': '        END IF;', 'line_no': 45}, {'indent': 8, 'line': "        IF (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) THEN", 'line_no': 47}, {'indent': 12, 'line': '            IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 48}, {'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}, {'indent': 12, 'line': '            END IF;', 'line_no': 50}, {'indent': 12, 'line': '            IF (CNTR = 0) THEN', 'line_no': 52}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 56}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 57}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 58}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 59}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 60}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 61}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 62}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 63}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 64}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 65}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 66}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 67}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 68}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 69}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 70}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 71}, {'indent': 16, 'line': '                );', 'line_no': 72}, {'indent': 12, 'line': '            ELSE', 'line_no': 73}, {'indent': 16, 'line': '                IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 76}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 82}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 83}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 84}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 85}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 86}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 87}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 88}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 89}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 90}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 91}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 92}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 93}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 94}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 95}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 96}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 97}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'CTRY_CHANGE'", 'line_no': 98}, {'indent': 20, 'line': '                    );', 'line_no': 99}, {'indent': 20, 'line': '                    CNTR := 0;', 'line_no': 102}, {'indent': 20, 'line': '                    SELECT', 'line_no': 105}, {'indent': 24, 'line': '                        COUNT(*) INTO CNTR', 'line_no': 106}, {'indent': 20, 'line': '                    FROM', 'line_no': 107}, {'indent': 24, 'line': '                        CFG_V_COMPANIES', 'line_no': 108}, {'indent': 20, 'line': '                    WHERE', 'line_no': 109}, {'indent': 24, 'line': '                        COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 110}, {'indent': 24, 'line': "                        AND VALID_IND = 'Y'", 'line_no': 111}, {'indent': 24, 'line': "                        AND CBC_GBE_SCOPE = 'Y'", 'line_no': 112}, {'indent': 24, 'line': "                        AND COMPANY_TYPE_CD IN ('B', 'L');", 'line_no': 113}, {'indent': 20, 'line': "                    IF (:NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0) THEN", 'line_no': 114}, {'indent': 24, 'line': '                        SELECT', 'line_no': 118}, {'indent': 28, 'line': '                            COUNTRY_CD INTO V_COUNTRY_CD', 'line_no': 119}, {'indent': 24, 'line': '                        FROM', 'line_no': 120}, {'indent': 28, 'line': '                            MDM_V_COUNTRIES', 'line_no': 121}, {'indent': 24, 'line': '                        WHERE', 'line_no': 122}, {'indent': 28, 'line': '                            COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 123}, {'indent': 24, 'line': "                        IF (TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01') THEN", 'line_no': 126}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy');", 'line_no': 129}, {'indent': 24, 'line': '                        ELSE', 'line_no': 130}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy');", 'line_no': 133}, {'indent': 24, 'line': '                        END IF;', 'line_no': 134}, {'indent': 24, 'line': '                        MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 136}, {'indent': 28, 'line': '                            I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 137}, {'indent': 28, 'line': "                            I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 138}, {'indent': 53, 'line': '                                                     || V_COUNTRY_CD,', 'line_no': 139}, {'indent': 28, 'line': '                            I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 140}, {'indent': 28, 'line': '                            I_VALID_TO_DATE => NULL,', 'line_no': 141}, {'indent': 28, 'line': '                            I_CHANGE_USER => V_USERID,', 'line_no': 142}, {'indent': 28, 'line': "                            I_MAPPING_TYPE => 'JU',", 'line_no': 143}, {'indent': 28, 'line': "                            I_ACTION_TYPE => 'INSERT'", 'line_no': 144}, {'indent': 24, 'line': '                        );', 'line_no': 145}, {'indent': 24, 'line': "                        IF (V_COMPANY_TYPE_CD = 'L') THEN", 'line_no': 148}, {'indent': 28, 'line': '                            FOR V_REC IN (', 'line_no': 149}, {'indent': 32, 'line': '                                SELECT', 'line_no': 150}, {'indent': 36, 'line': '                                    COMPANY_CD', 'line_no': 151}, {'indent': 32, 'line': '                                FROM', 'line_no': 152}, {'indent': 36, 'line': '                                    CFG_V_COMPANIES', 'line_no': 153}, {'indent': 32, 'line': '                                WHERE', 'line_no': 154}, {'indent': 36, 'line': '                                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 155}, {'indent': 36, 'line': "                                    AND VALID_IND = 'Y'", 'line_no': 156}, {'indent': 36, 'line': "                                    AND CBC_GBE_SCOPE = 'Y'", 'line_no': 157}, {'indent': 36, 'line': "                                    AND COMPANY_TYPE_CD IN ('O', 'V')", 'line_no': 158}, {'indent': 28, 'line': '                            ) LOOP', 'line_no': 159}, {'indent': 32, 'line': '                                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 160}, {'indent': 36, 'line': '                                    I_COMPANY_CD => V_REC.COMPANY_CD,', 'line_no': 161}, {'indent': 36, 'line': "                                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 162}, {'indent': 61, 'line': '                                                             || V_COUNTRY_CD,', 'line_no': 163}, {'indent': 36, 'line': '                                    I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 164}, {'indent': 36, 'line': '                                    I_VALID_TO_DATE => NULL,', 'line_no': 165}, {'indent': 36, 'line': '                                    I_CHANGE_USER => V_USERID,', 'line_no': 166}, {'indent': 36, 'line': "                                    I_MAPPING_TYPE => 'JU',", 'line_no': 167}, {'indent': 36, 'line': "                                    I_ACTION_TYPE => 'INSERT'", 'line_no': 168}, {'indent': 32, 'line': '                                );', 'line_no': 169}, {'indent': 28, 'line': '                            END LOOP;', 'line_no': 170}, {'indent': 24, 'line': '                        END IF;', 'line_no': 171}, {'indent': 20, 'line': '                    END IF;', 'line_no': 172}, {'indent': 16, 'line': '                ELSE', 'line_no': 173}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 176}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 177}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 178}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 179}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 180}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 181}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 182}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 183}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 184}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 185}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 186}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 187}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 188}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 189}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 190}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 191}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'UPDATE'", 'line_no': 192}, {'indent': 20, 'line': '                    );', 'line_no': 193}, {'indent': 16, 'line': '                END IF;', 'line_no': 194}, {'indent': 12, 'line': '            END IF;', 'line_no': 195}, {'indent': 8, 'line': '        END IF;', 'line_no': 196}, {'indent': 8, 'line': "        IF (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) THEN", 'line_no': 198}, {'indent': 12, 'line': '            IF (CNTR = 0) THEN', 'line_no': 199}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 203}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 204}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 205}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 206}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 207}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 208}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 209}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 210}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 211}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 212}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 213}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 214}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 215}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 216}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 217}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 218}, {'indent': 16, 'line': '                );', 'line_no': 219}, {'indent': 12, 'line': '            ELSE', 'line_no': 220}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 223}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 224}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 225}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 226}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 227}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 228}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 229}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 230}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 231}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 232}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 233}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 234}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 235}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 236}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 237}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 238}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'UPDATE'", 'line_no': 239}, {'indent': 16, 'line': '                );', 'line_no': 240}, {'indent': 12, 'line': '            END IF;', 'line_no': 241}, {'indent': 8, 'line': '        END IF;', 'line_no': 242}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 37}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD', 'line_no': 38}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        FROM', 'line_no': 39}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 40}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 41}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 42}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) THEN", 'line_no': 43}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 43
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 43 i: 45
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}]
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) ", 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 8, 'end_if_line_no': 45, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) THEN", 'line_no': 47}
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 47
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 47 i: 196
2025-09-03 04:09:44,828 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 122
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 48}, {'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}, {'indent': 12, 'line': '            END IF;', 'line_no': 50}, {'indent': 12, 'line': '            IF (CNTR = 0) THEN', 'line_no': 52}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 56}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 57}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 58}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 59}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 60}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 61}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 62}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 63}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 64}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 65}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 66}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 67}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 68}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 69}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 70}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 71}, {'indent': 16, 'line': '                );', 'line_no': 72}, {'indent': 12, 'line': '            ELSE', 'line_no': 73}, {'indent': 16, 'line': '                IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 76}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 82}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 83}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 84}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 85}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 86}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 87}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 88}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 89}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 90}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 91}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 92}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 93}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 94}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 95}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 96}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 97}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'CTRY_CHANGE'", 'line_no': 98}, {'indent': 20, 'line': '                    );', 'line_no': 99}, {'indent': 20, 'line': '                    CNTR := 0;', 'line_no': 102}, {'indent': 20, 'line': '                    SELECT', 'line_no': 105}, {'indent': 24, 'line': '                        COUNT(*) INTO CNTR', 'line_no': 106}, {'indent': 20, 'line': '                    FROM', 'line_no': 107}, {'indent': 24, 'line': '                        CFG_V_COMPANIES', 'line_no': 108}, {'indent': 20, 'line': '                    WHERE', 'line_no': 109}, {'indent': 24, 'line': '                        COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 110}, {'indent': 24, 'line': "                        AND VALID_IND = 'Y'", 'line_no': 111}, {'indent': 24, 'line': "                        AND CBC_GBE_SCOPE = 'Y'", 'line_no': 112}, {'indent': 24, 'line': "                        AND COMPANY_TYPE_CD IN ('B', 'L');", 'line_no': 113}, {'indent': 20, 'line': "                    IF (:NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0) THEN", 'line_no': 114}, {'indent': 24, 'line': '                        SELECT', 'line_no': 118}, {'indent': 28, 'line': '                            COUNTRY_CD INTO V_COUNTRY_CD', 'line_no': 119}, {'indent': 24, 'line': '                        FROM', 'line_no': 120}, {'indent': 28, 'line': '                            MDM_V_COUNTRIES', 'line_no': 121}, {'indent': 24, 'line': '                        WHERE', 'line_no': 122}, {'indent': 28, 'line': '                            COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 123}, {'indent': 24, 'line': "                        IF (TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01') THEN", 'line_no': 126}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy');", 'line_no': 129}, {'indent': 24, 'line': '                        ELSE', 'line_no': 130}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy');", 'line_no': 133}, {'indent': 24, 'line': '                        END IF;', 'line_no': 134}, {'indent': 24, 'line': '                        MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 136}, {'indent': 28, 'line': '                            I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 137}, {'indent': 28, 'line': "                            I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 138}, {'indent': 53, 'line': '                                                     || V_COUNTRY_CD,', 'line_no': 139}, {'indent': 28, 'line': '                            I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 140}, {'indent': 28, 'line': '                            I_VALID_TO_DATE => NULL,', 'line_no': 141}, {'indent': 28, 'line': '                            I_CHANGE_USER => V_USERID,', 'line_no': 142}, {'indent': 28, 'line': "                            I_MAPPING_TYPE => 'JU',", 'line_no': 143}, {'indent': 28, 'line': "                            I_ACTION_TYPE => 'INSERT'", 'line_no': 144}, {'indent': 24, 'line': '                        );', 'line_no': 145}, {'indent': 24, 'line': "                        IF (V_COMPANY_TYPE_CD = 'L') THEN", 'line_no': 148}, {'indent': 28, 'line': '                            FOR V_REC IN (', 'line_no': 149}, {'indent': 32, 'line': '                                SELECT', 'line_no': 150}, {'indent': 36, 'line': '                                    COMPANY_CD', 'line_no': 151}, {'indent': 32, 'line': '                                FROM', 'line_no': 152}, {'indent': 36, 'line': '                                    CFG_V_COMPANIES', 'line_no': 153}, {'indent': 32, 'line': '                                WHERE', 'line_no': 154}, {'indent': 36, 'line': '                                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 155}, {'indent': 36, 'line': "                                    AND VALID_IND = 'Y'", 'line_no': 156}, {'indent': 36, 'line': "                                    AND CBC_GBE_SCOPE = 'Y'", 'line_no': 157}, {'indent': 36, 'line': "                                    AND COMPANY_TYPE_CD IN ('O', 'V')", 'line_no': 158}, {'indent': 28, 'line': '                            ) LOOP', 'line_no': 159}, {'indent': 32, 'line': '                                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 160}, {'indent': 36, 'line': '                                    I_COMPANY_CD => V_REC.COMPANY_CD,', 'line_no': 161}, {'indent': 36, 'line': "                                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 162}, {'indent': 61, 'line': '                                                             || V_COUNTRY_CD,', 'line_no': 163}, {'indent': 36, 'line': '                                    I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 164}, {'indent': 36, 'line': '                                    I_VALID_TO_DATE => NULL,', 'line_no': 165}, {'indent': 36, 'line': '                                    I_CHANGE_USER => V_USERID,', 'line_no': 166}, {'indent': 36, 'line': "                                    I_MAPPING_TYPE => 'JU',", 'line_no': 167}, {'indent': 36, 'line': "                                    I_ACTION_TYPE => 'INSERT'", 'line_no': 168}, {'indent': 32, 'line': '                                );', 'line_no': 169}, {'indent': 28, 'line': '                            END LOOP;', 'line_no': 170}, {'indent': 24, 'line': '                        END IF;', 'line_no': 171}, {'indent': 20, 'line': '                    END IF;', 'line_no': 172}, {'indent': 16, 'line': '                ELSE', 'line_no': 173}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 176}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 177}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 178}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 179}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 180}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 181}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 182}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 183}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 184}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 185}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 186}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 187}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 188}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 189}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 190}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 191}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'UPDATE'", 'line_no': 192}, {'indent': 20, 'line': '                    );', 'line_no': 193}, {'indent': 16, 'line': '                END IF;', 'line_no': 194}, {'indent': 12, 'line': '            END IF;', 'line_no': 195}]
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'indent': 12, 'line': '            IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 48}, {'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}, {'indent': 12, 'line': '            END IF;', 'line_no': 50}, {'indent': 12, 'line': '            IF (CNTR = 0) THEN', 'line_no': 52}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 56}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 57}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 58}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 59}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 60}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 61}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 62}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 63}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 64}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 65}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 66}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 67}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 68}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 69}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 70}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 71}, {'indent': 16, 'line': '                );', 'line_no': 72}, {'indent': 12, 'line': '            ELSE', 'line_no': 73}, {'indent': 16, 'line': '                IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 76}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 82}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 83}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 84}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 85}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 86}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 87}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 88}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 89}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 90}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 91}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 92}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 93}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 94}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 95}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 96}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 97}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'CTRY_CHANGE'", 'line_no': 98}, {'indent': 20, 'line': '                    );', 'line_no': 99}, {'indent': 20, 'line': '                    CNTR := 0;', 'line_no': 102}, {'indent': 20, 'line': '                    SELECT', 'line_no': 105}, {'indent': 24, 'line': '                        COUNT(*) INTO CNTR', 'line_no': 106}, {'indent': 20, 'line': '                    FROM', 'line_no': 107}, {'indent': 24, 'line': '                        CFG_V_COMPANIES', 'line_no': 108}, {'indent': 20, 'line': '                    WHERE', 'line_no': 109}, {'indent': 24, 'line': '                        COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 110}, {'indent': 24, 'line': "                        AND VALID_IND = 'Y'", 'line_no': 111}, {'indent': 24, 'line': "                        AND CBC_GBE_SCOPE = 'Y'", 'line_no': 112}, {'indent': 24, 'line': "                        AND COMPANY_TYPE_CD IN ('B', 'L');", 'line_no': 113}, {'indent': 20, 'line': "                    IF (:NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0) THEN", 'line_no': 114}, {'indent': 24, 'line': '                        SELECT', 'line_no': 118}, {'indent': 28, 'line': '                            COUNTRY_CD INTO V_COUNTRY_CD', 'line_no': 119}, {'indent': 24, 'line': '                        FROM', 'line_no': 120}, {'indent': 28, 'line': '                            MDM_V_COUNTRIES', 'line_no': 121}, {'indent': 24, 'line': '                        WHERE', 'line_no': 122}, {'indent': 28, 'line': '                            COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 123}, {'indent': 24, 'line': "                        IF (TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01') THEN", 'line_no': 126}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy');", 'line_no': 129}, {'indent': 24, 'line': '                        ELSE', 'line_no': 130}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy');", 'line_no': 133}, {'indent': 24, 'line': '                        END IF;', 'line_no': 134}, {'indent': 24, 'line': '                        MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 136}, {'indent': 28, 'line': '                            I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 137}, {'indent': 28, 'line': "                            I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 138}, {'indent': 53, 'line': '                                                     || V_COUNTRY_CD,', 'line_no': 139}, {'indent': 28, 'line': '                            I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 140}, {'indent': 28, 'line': '                            I_VALID_TO_DATE => NULL,', 'line_no': 141}, {'indent': 28, 'line': '                            I_CHANGE_USER => V_USERID,', 'line_no': 142}, {'indent': 28, 'line': "                            I_MAPPING_TYPE => 'JU',", 'line_no': 143}, {'indent': 28, 'line': "                            I_ACTION_TYPE => 'INSERT'", 'line_no': 144}, {'indent': 24, 'line': '                        );', 'line_no': 145}, {'indent': 24, 'line': "                        IF (V_COMPANY_TYPE_CD = 'L') THEN", 'line_no': 148}, {'indent': 28, 'line': '                            FOR V_REC IN (', 'line_no': 149}, {'indent': 32, 'line': '                                SELECT', 'line_no': 150}, {'indent': 36, 'line': '                                    COMPANY_CD', 'line_no': 151}, {'indent': 32, 'line': '                                FROM', 'line_no': 152}, {'indent': 36, 'line': '                                    CFG_V_COMPANIES', 'line_no': 153}, {'indent': 32, 'line': '                                WHERE', 'line_no': 154}, {'indent': 36, 'line': '                                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 155}, {'indent': 36, 'line': "                                    AND VALID_IND = 'Y'", 'line_no': 156}, {'indent': 36, 'line': "                                    AND CBC_GBE_SCOPE = 'Y'", 'line_no': 157}, {'indent': 36, 'line': "                                    AND COMPANY_TYPE_CD IN ('O', 'V')", 'line_no': 158}, {'indent': 28, 'line': '                            ) LOOP', 'line_no': 159}, {'indent': 32, 'line': '                                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 160}, {'indent': 36, 'line': '                                    I_COMPANY_CD => V_REC.COMPANY_CD,', 'line_no': 161}, {'indent': 36, 'line': "                                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 162}, {'indent': 61, 'line': '                                                             || V_COUNTRY_CD,', 'line_no': 163}, {'indent': 36, 'line': '                                    I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 164}, {'indent': 36, 'line': '                                    I_VALID_TO_DATE => NULL,', 'line_no': 165}, {'indent': 36, 'line': '                                    I_CHANGE_USER => V_USERID,', 'line_no': 166}, {'indent': 36, 'line': "                                    I_MAPPING_TYPE => 'JU',", 'line_no': 167}, {'indent': 36, 'line': "                                    I_ACTION_TYPE => 'INSERT'", 'line_no': 168}, {'indent': 32, 'line': '                                );', 'line_no': 169}, {'indent': 28, 'line': '                            END LOOP;', 'line_no': 170}, {'indent': 24, 'line': '                        END IF;', 'line_no': 171}, {'indent': 20, 'line': '                    END IF;', 'line_no': 172}, {'indent': 16, 'line': '                ELSE', 'line_no': 173}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 176}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 177}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 178}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 179}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 180}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 181}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 182}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 183}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 184}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 185}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 186}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 187}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 188}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 189}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 190}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 191}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'UPDATE'", 'line_no': 192}, {'indent': 20, 'line': '                    );', 'line_no': 193}, {'indent': 16, 'line': '                END IF;', 'line_no': 194}, {'indent': 12, 'line': '            END IF;', 'line_no': 195}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 48}
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 48
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 48 i: 50
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}]
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (CNTR = 0) THEN', 'line_no': 52}
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 52
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 52 i: 195
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 117
2025-09-03 04:09:44,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 56}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 57}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 58}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 59}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 60}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 61}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 62}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 63}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 64}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 65}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 66}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 67}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 68}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 69}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 70}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 71}, {'indent': 16, 'line': '                );', 'line_no': 72}], 'if_elses': [], 'else_statements': [[{'indent': 16, 'line': '                IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 76}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 82}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 83}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 84}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 85}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 86}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 87}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 88}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 89}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 90}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 91}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 92}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 93}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 94}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 95}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 96}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 97}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'CTRY_CHANGE'", 'line_no': 98}, {'indent': 20, 'line': '                    );', 'line_no': 99}, {'indent': 20, 'line': '                    CNTR := 0;', 'line_no': 102}, {'indent': 20, 'line': '                    SELECT', 'line_no': 105}, {'indent': 24, 'line': '                        COUNT(*) INTO CNTR', 'line_no': 106}, {'indent': 20, 'line': '                    FROM', 'line_no': 107}, {'indent': 24, 'line': '                        CFG_V_COMPANIES', 'line_no': 108}, {'indent': 20, 'line': '                    WHERE', 'line_no': 109}, {'indent': 24, 'line': '                        COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 110}, {'indent': 24, 'line': "                        AND VALID_IND = 'Y'", 'line_no': 111}, {'indent': 24, 'line': "                        AND CBC_GBE_SCOPE = 'Y'", 'line_no': 112}, {'indent': 24, 'line': "                        AND COMPANY_TYPE_CD IN ('B', 'L');", 'line_no': 113}, {'indent': 20, 'line': "                    IF (:NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0) THEN", 'line_no': 114}, {'indent': 24, 'line': '                        SELECT', 'line_no': 118}, {'indent': 28, 'line': '                            COUNTRY_CD INTO V_COUNTRY_CD', 'line_no': 119}, {'indent': 24, 'line': '                        FROM', 'line_no': 120}, {'indent': 28, 'line': '                            MDM_V_COUNTRIES', 'line_no': 121}, {'indent': 24, 'line': '                        WHERE', 'line_no': 122}, {'indent': 28, 'line': '                            COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 123}, {'indent': 24, 'line': "                        IF (TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01') THEN", 'line_no': 126}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy');", 'line_no': 129}, {'indent': 24, 'line': '                        ELSE', 'line_no': 130}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy');", 'line_no': 133}, {'indent': 24, 'line': '                        END IF;', 'line_no': 134}, {'indent': 24, 'line': '                        MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 136}, {'indent': 28, 'line': '                            I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 137}, {'indent': 28, 'line': "                            I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 138}, {'indent': 53, 'line': '                                                     || V_COUNTRY_CD,', 'line_no': 139}, {'indent': 28, 'line': '                            I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 140}, {'indent': 28, 'line': '                            I_VALID_TO_DATE => NULL,', 'line_no': 141}, {'indent': 28, 'line': '                            I_CHANGE_USER => V_USERID,', 'line_no': 142}, {'indent': 28, 'line': "                            I_MAPPING_TYPE => 'JU',", 'line_no': 143}, {'indent': 28, 'line': "                            I_ACTION_TYPE => 'INSERT'", 'line_no': 144}, {'indent': 24, 'line': '                        );', 'line_no': 145}, {'indent': 24, 'line': "                        IF (V_COMPANY_TYPE_CD = 'L') THEN", 'line_no': 148}, {'indent': 28, 'line': '                            FOR V_REC IN (', 'line_no': 149}, {'indent': 32, 'line': '                                SELECT', 'line_no': 150}, {'indent': 36, 'line': '                                    COMPANY_CD', 'line_no': 151}, {'indent': 32, 'line': '                                FROM', 'line_no': 152}, {'indent': 36, 'line': '                                    CFG_V_COMPANIES', 'line_no': 153}, {'indent': 32, 'line': '                                WHERE', 'line_no': 154}, {'indent': 36, 'line': '                                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 155}, {'indent': 36, 'line': "                                    AND VALID_IND = 'Y'", 'line_no': 156}, {'indent': 36, 'line': "                                    AND CBC_GBE_SCOPE = 'Y'", 'line_no': 157}, {'indent': 36, 'line': "                                    AND COMPANY_TYPE_CD IN ('O', 'V')", 'line_no': 158}, {'indent': 28, 'line': '                            ) LOOP', 'line_no': 159}, {'indent': 32, 'line': '                                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 160}, {'indent': 36, 'line': '                                    I_COMPANY_CD => V_REC.COMPANY_CD,', 'line_no': 161}, {'indent': 36, 'line': "                                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 162}, {'indent': 61, 'line': '                                                             || V_COUNTRY_CD,', 'line_no': 163}, {'indent': 36, 'line': '                                    I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 164}, {'indent': 36, 'line': '                                    I_VALID_TO_DATE => NULL,', 'line_no': 165}, {'indent': 36, 'line': '                                    I_CHANGE_USER => V_USERID,', 'line_no': 166}, {'indent': 36, 'line': "                                    I_MAPPING_TYPE => 'JU',", 'line_no': 167}, {'indent': 36, 'line': "                                    I_ACTION_TYPE => 'INSERT'", 'line_no': 168}, {'indent': 32, 'line': '                                );', 'line_no': 169}, {'indent': 28, 'line': '                            END LOOP;', 'line_no': 170}, {'indent': 24, 'line': '                        END IF;', 'line_no': 171}, {'indent': 20, 'line': '                    END IF;', 'line_no': 172}, {'indent': 16, 'line': '                ELSE', 'line_no': 173}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 176}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 177}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 178}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 179}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 180}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 181}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 182}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 183}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 184}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 185}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 186}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 187}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 188}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 189}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 190}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 191}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'UPDATE'", 'line_no': 192}, {'indent': 20, 'line': '                    );', 'line_no': 193}, {'indent': 16, 'line': '                END IF;', 'line_no': 194}, {'indent': 12, 'line': '            END IF;', 'line_no': 195}]]}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 56}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 57}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 58}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 59}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 60}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 61}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 62}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 63}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 64}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 65}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 66}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 67}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 68}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 69}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 70}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 71}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                );', 'line_no': 72}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 16, 'line': '                IF (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) <> NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) THEN', 'line_no': 76}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 82}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 83}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 84}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 85}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 86}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 87}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 88}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 89}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 90}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 91}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 92}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 93}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 94}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 95}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 96}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 97}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'CTRY_CHANGE'", 'line_no': 98}, {'indent': 20, 'line': '                    );', 'line_no': 99}, {'indent': 20, 'line': '                    CNTR := 0;', 'line_no': 102}, {'indent': 20, 'line': '                    SELECT', 'line_no': 105}, {'indent': 24, 'line': '                        COUNT(*) INTO CNTR', 'line_no': 106}, {'indent': 20, 'line': '                    FROM', 'line_no': 107}, {'indent': 24, 'line': '                        CFG_V_COMPANIES', 'line_no': 108}, {'indent': 20, 'line': '                    WHERE', 'line_no': 109}, {'indent': 24, 'line': '                        COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 110}, {'indent': 24, 'line': "                        AND VALID_IND = 'Y'", 'line_no': 111}, {'indent': 24, 'line': "                        AND CBC_GBE_SCOPE = 'Y'", 'line_no': 112}, {'indent': 24, 'line': "                        AND COMPANY_TYPE_CD IN ('B', 'L');", 'line_no': 113}, {'indent': 20, 'line': "                    IF (:NEW.ADDRESS_TYPE_CD = 'P' AND CNTR > 0) THEN", 'line_no': 114}, {'indent': 24, 'line': '                        SELECT', 'line_no': 118}, {'indent': 28, 'line': '                            COUNTRY_CD INTO V_COUNTRY_CD', 'line_no': 119}, {'indent': 24, 'line': '                        FROM', 'line_no': 120}, {'indent': 28, 'line': '                            MDM_V_COUNTRIES', 'line_no': 121}, {'indent': 24, 'line': '                        WHERE', 'line_no': 122}, {'indent': 28, 'line': '                            COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 123}, {'indent': 24, 'line': "                        IF (TO_CHAR(:NEW.VALID_FROM, 'dd.mm') = '01.01') THEN", 'line_no': 126}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 10), 'dd.mm.yyyy');", 'line_no': 129}, {'indent': 24, 'line': '                        ELSE', 'line_no': 130}, {'indent': 28, 'line': "                            V_VALID_FROM := TO_DATE(ADD_MONTHS(TRUNC(:NEW.VALID_FROM, 'yyyy'), 22), 'dd.mm.yyyy');", 'line_no': 133}, {'indent': 24, 'line': '                        END IF;', 'line_no': 134}, {'indent': 24, 'line': '                        MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 136}, {'indent': 28, 'line': '                            I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 137}, {'indent': 28, 'line': "                            I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 138}, {'indent': 53, 'line': '                                                     || V_COUNTRY_CD,', 'line_no': 139}, {'indent': 28, 'line': '                            I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 140}, {'indent': 28, 'line': '                            I_VALID_TO_DATE => NULL,', 'line_no': 141}, {'indent': 28, 'line': '                            I_CHANGE_USER => V_USERID,', 'line_no': 142}, {'indent': 28, 'line': "                            I_MAPPING_TYPE => 'JU',", 'line_no': 143}, {'indent': 28, 'line': "                            I_ACTION_TYPE => 'INSERT'", 'line_no': 144}, {'indent': 24, 'line': '                        );', 'line_no': 145}, {'indent': 24, 'line': "                        IF (V_COMPANY_TYPE_CD = 'L') THEN", 'line_no': 148}, {'indent': 28, 'line': '                            FOR V_REC IN (', 'line_no': 149}, {'indent': 32, 'line': '                                SELECT', 'line_no': 150}, {'indent': 36, 'line': '                                    COMPANY_CD', 'line_no': 151}, {'indent': 32, 'line': '                                FROM', 'line_no': 152}, {'indent': 36, 'line': '                                    CFG_V_COMPANIES', 'line_no': 153}, {'indent': 32, 'line': '                                WHERE', 'line_no': 154}, {'indent': 36, 'line': '                                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 155}, {'indent': 36, 'line': "                                    AND VALID_IND = 'Y'", 'line_no': 156}, {'indent': 36, 'line': "                                    AND CBC_GBE_SCOPE = 'Y'", 'line_no': 157}, {'indent': 36, 'line': "                                    AND COMPANY_TYPE_CD IN ('O', 'V')", 'line_no': 158}, {'indent': 28, 'line': '                            ) LOOP', 'line_no': 159}, {'indent': 32, 'line': '                                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 160}, {'indent': 36, 'line': '                                    I_COMPANY_CD => V_REC.COMPANY_CD,', 'line_no': 161}, {'indent': 36, 'line': "                                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 162}, {'indent': 61, 'line': '                                                             || V_COUNTRY_CD,', 'line_no': 163}, {'indent': 36, 'line': '                                    I_VALID_FROM_DATE => V_VALID_FROM,', 'line_no': 164}, {'indent': 36, 'line': '                                    I_VALID_TO_DATE => NULL,', 'line_no': 165}, {'indent': 36, 'line': '                                    I_CHANGE_USER => V_USERID,', 'line_no': 166}, {'indent': 36, 'line': "                                    I_MAPPING_TYPE => 'JU',", 'line_no': 167}, {'indent': 36, 'line': "                                    I_ACTION_TYPE => 'INSERT'", 'line_no': 168}, {'indent': 32, 'line': '                                );', 'line_no': 169}, {'indent': 28, 'line': '                            END LOOP;', 'line_no': 170}, {'indent': 24, 'line': '                        END IF;', 'line_no': 171}, {'indent': 20, 'line': '                    END IF;', 'line_no': 172}, {'indent': 16, 'line': '                ELSE', 'line_no': 173}, {'indent': 20, 'line': '                    MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 176}, {'indent': 24, 'line': '                        P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 177}, {'indent': 24, 'line': '                        P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 178}, {'indent': 24, 'line': '                        P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 179}, {'indent': 24, 'line': '                        P_STREET => :NEW.STREET,', 'line_no': 180}, {'indent': 24, 'line': '                        P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 181}, {'indent': 24, 'line': '                        P_BUILDING => :NEW.BUILDING,', 'line_no': 182}, {'indent': 24, 'line': '                        P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 183}, {'indent': 24, 'line': '                        P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 184}, {'indent': 24, 'line': '                        P_CITY=> :NEW.CITY,', 'line_no': 185}, {'indent': 24, 'line': '                        P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 186}, {'indent': 24, 'line': '                        P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 187}, {'indent': 24, 'line': '                        P_LATITUDE => :NEW.LATITUDE,', 'line_no': 188}, {'indent': 24, 'line': '                        P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 189}, {'indent': 24, 'line': '                        P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 190}, {'indent': 24, 'line': '                        P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 191}, {'indent': 24, 'line': "                        P_ACTION_TYPE => 'UPDATE'", 'line_no': 192}, {'indent': 20, 'line': '                    );', 'line_no': 193}, {'indent': 16, 'line': '                END IF;', 'line_no': 194}, {'indent': 12, 'line': '            END IF;', 'line_no': 195}]
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) THEN", 'line_no': 198}
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 198
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 198 i: 242
2025-09-03 04:09:44,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 41
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            IF (CNTR = 0) THEN', 'line_no': 199}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 203}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 204}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 205}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 206}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 207}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 208}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 209}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 210}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 211}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 212}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 213}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 214}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 215}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 216}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 217}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 218}, {'indent': 16, 'line': '                );', 'line_no': 219}, {'indent': 12, 'line': '            ELSE', 'line_no': 220}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 223}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 224}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 225}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 226}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 227}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 228}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 229}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 230}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 231}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 232}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 233}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 234}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 235}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 236}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 237}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 238}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'UPDATE'", 'line_no': 239}, {'indent': 16, 'line': '                );', 'line_no': 240}, {'indent': 12, 'line': '            END IF;', 'line_no': 241}]
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 8, 'end_if_line_no': 242, 'then_statements': [{'indent': 12, 'line': '            IF (CNTR = 0) THEN', 'line_no': 199}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 203}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 204}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 205}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 206}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 207}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 208}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 209}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 210}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 211}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 212}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 213}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 214}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 215}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 216}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 217}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 218}, {'indent': 16, 'line': '                );', 'line_no': 219}, {'indent': 12, 'line': '            ELSE', 'line_no': 220}, {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 223}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 224}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 225}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 226}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 227}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 228}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 229}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 230}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 231}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 232}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 233}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 234}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 235}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 236}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 237}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 238}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'UPDATE'", 'line_no': 239}, {'indent': 16, 'line': '                );', 'line_no': 240}, {'indent': 12, 'line': '            END IF;', 'line_no': 241}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (CNTR = 0) THEN', 'line_no': 199}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 199
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 199 i: 241
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 39
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 203}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 204}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 205}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 206}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 207}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 208}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 209}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 210}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 211}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 212}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 213}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 214}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 215}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 216}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 217}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 218}, {'indent': 16, 'line': '                );', 'line_no': 219}], 'if_elses': [], 'else_statements': [[{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 223}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 224}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 225}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 226}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 227}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 228}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 229}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 230}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 231}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 232}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 233}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 234}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 235}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 236}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 237}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 238}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'UPDATE'", 'line_no': 239}, {'indent': 16, 'line': '                );', 'line_no': 240}, {'indent': 12, 'line': '            END IF;', 'line_no': 241}]]}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 203}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 204}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 205}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 206}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 207}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 208}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 209}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 210}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 211}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 212}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 213}
2025-09-03 04:09:44,831 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 214}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 215}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 216}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 217}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 218}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                );', 'line_no': 219}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 223}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 224}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 225}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 226}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 227}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 228}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 229}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 230}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 231}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 232}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 233}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 234}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 235}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 236}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 237}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 238}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'UPDATE'", 'line_no': 239}, {'indent': 16, 'line': '                );', 'line_no': 240}, {'indent': 12, 'line': '            END IF;', 'line_no': 241}]
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (DELETING) THEN', 'line_no': 245}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 245
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 245 i: 251
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 6
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': "        IF (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) THEN", 'line_no': 246}, {'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}, {'indent': 8, 'line': '        END IF;', 'line_no': 248}, {'indent': 8, 'line': "        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');", 'line_no': 250}]
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 245, 'then_line_no': 245, 'if_indent': 4, 'end_if_line_no': 251, 'then_statements': [{'indent': 8, 'line': "        IF (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) THEN", 'line_no': 246}, {'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}, {'indent': 8, 'line': '        END IF;', 'line_no': 248}, {'indent': 8, 'line': "        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');", 'line_no': 250}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) THEN", 'line_no': 246}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 246
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 246 i: 248
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}]
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) ", 'type': 'if_else', 'if_line_no': 246, 'then_line_no': 246, 'if_indent': 8, 'end_if_line_no': 248, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');", 'line_no': 250}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD);", 'line_no': 254}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.');", 'line_no': 256}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.');", 'line_no': 258}
2025-09-03 04:09:44,832 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR);", 'line_no': 260}
2025-09-03 04:09:44,833 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'The legal address cannot be inserted for this type of company');", 'line_no': 262}
2025-09-03 04:09:44,833 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'It is not allowed to invalidate/delete this type of address');", 'line_no': 264}
2025-09-03 04:09:44,841 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'type': 'begin_end', 'begin_line_no': 15, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 16}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 18, 'when_indent': 8, 'then_line_no': 18, 'exception_statements': [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 19}]}], 'exception_line_no': 17, 'end_line_no': 20}, {'indent': 4, 'line': '    CNTR := 0;', 'line_no': 22}, {'indent': 4, 'line': '    SELECT', 'line_no': 23}, {'indent': 8, 'line': '        COUNT (*) INTO CNTR', 'line_no': 24}, {'indent': 4, 'line': '    FROM', 'line_no': 25}, {'indent': 8, 'line': '        CFG_V_COMPANY_ADDRESSES', 'line_no': 26}, {'indent': 4, 'line': '    WHERE', 'line_no': 27}, {'indent': 8, 'line': '        COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'line_no': 28}, {'indent': 8, 'line': '        AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);', 'line_no': 29}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 34, 'then_statements': [{'condition': ' (CNTR > 0) ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 8, 'end_if_line_no': 33, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 37}, {'indent': 12, 'line': '            COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD', 'line_no': 38}, {'indent': 8, 'line': '        FROM', 'line_no': 39}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 40}, {'indent': 8, 'line': '        WHERE', 'line_no': 41}, {'indent': 12, 'line': '            COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 42}, {'condition': " (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) ", 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 8, 'end_if_line_no': 45, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 56}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 57}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 58}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 59}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 60}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 61}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 62}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 63}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 64}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 65}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 66}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 67}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 68}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 69}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 70}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 71}, {'indent': 16, 'line': '                );', 'line_no': 72}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 8, 'end_if_line_no': 242, 'then_statements': [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 203}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 204}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 205}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 206}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 207}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 208}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 209}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 210}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 211}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 212}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 213}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 214}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 215}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 216}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 217}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 218}, {'indent': 16, 'line': '                );', 'line_no': 219}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 245, 'then_line_no': 245, 'if_indent': 4, 'end_if_line_no': 251, 'then_statements': [{'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) ", 'type': 'if_else', 'if_line_no': 246, 'then_line_no': 246, 'if_indent': 8, 'end_if_line_no': 248, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': "        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');", 'line_no': 250}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,841 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,849 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 16}]
2025-09-03 04:09:44,850 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,850 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 16}
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 19}]
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 19}
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    CNTR := 0;', 'line_no': 22}
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 23}
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        COUNT (*) INTO CNTR', 'line_no': 24}
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    FROM', 'line_no': 25}
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        CFG_V_COMPANY_ADDRESSES', 'line_no': 26}
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,858 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    WHERE', 'line_no': 27}
2025-09-03 04:09:44,859 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,859 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'line_no': 28}
2025-09-03 04:09:44,859 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:44,859 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);', 'line_no': 29}
2025-09-03 04:09:44,859 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:44,866 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (CNTR > 0) ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 8, 'end_if_line_no': 33, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,866 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,874 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}]
2025-09-03 04:09:44,874 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,874 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}
2025-09-03 04:09:44,883 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,892 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,892 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        SELECT', 'line_no': 37}, {'indent': 12, 'line': '            COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD', 'line_no': 38}, {'indent': 8, 'line': '        FROM', 'line_no': 39}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 40}, {'indent': 8, 'line': '        WHERE', 'line_no': 41}, {'indent': 12, 'line': '            COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 42}, {'condition': " (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) ", 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 8, 'end_if_line_no': 45, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 56}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 57}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 58}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 59}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 60}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 61}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 62}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 63}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 64}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 65}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 66}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 67}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 68}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 69}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 70}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 71}, {'indent': 16, 'line': '                );', 'line_no': 72}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 8, 'end_if_line_no': 242, 'then_statements': [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 203}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 204}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 205}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 206}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 207}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 208}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 209}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 210}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 211}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 212}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 213}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 214}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 215}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 216}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 217}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 218}, {'indent': 16, 'line': '                );', 'line_no': 219}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 37}
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD', 'line_no': 38}
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        FROM', 'line_no': 39}
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 40}
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 41}
2025-09-03 04:09:44,903 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:44,904 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 42}
2025-09-03 04:09:44,904 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:44,913 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}]
2025-09-03 04:09:44,913 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,913 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}
2025-09-03 04:09:44,926 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,926 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:44,936 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 56}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 57}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 58}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 59}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 60}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 61}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 62}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 63}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 64}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 65}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 66}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 67}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 68}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 69}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 70}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 71}, {'indent': 16, 'line': '                );', 'line_no': 72}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,936 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,950 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}]
2025-09-03 04:09:44,950 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,950 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}
2025-09-03 04:09:44,961 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,961 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:44,970 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 56}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 57}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 58}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 59}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 60}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 61}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 62}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 63}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 64}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 65}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 66}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 67}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 68}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 69}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 70}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 71}, {'indent': 16, 'line': '                );', 'line_no': 72}]
2025-09-03 04:09:44,970 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:44,970 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 55}
2025-09-03 04:09:44,970 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS
2025-09-03 04:09:44,970 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(
2025-09-03 04:09:44,970 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 55
2025-09-03 04:09:44,970 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 72
2025-09-03 04:09:44,971 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT' );
2025-09-03 04:09:44,971 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT' );
2025-09-03 04:09:44,971 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:44,981 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,989 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:44,990 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:44,998 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 203}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 204}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 205}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 206}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 207}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 208}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 209}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 210}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 211}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 212}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 213}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 214}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 215}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 216}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 217}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 218}, {'indent': 16, 'line': '                );', 'line_no': 219}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:44,998 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,007 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}, {'indent': 20, 'line': '                    P_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 203}, {'indent': 20, 'line': '                    P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD,', 'line_no': 204}, {'indent': 20, 'line': '                    P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME,', 'line_no': 205}, {'indent': 20, 'line': '                    P_STREET => :NEW.STREET,', 'line_no': 206}, {'indent': 20, 'line': '                    P_HOUSE_NO => :NEW.HOUSE_NO,', 'line_no': 207}, {'indent': 20, 'line': '                    P_BUILDING => :NEW.BUILDING,', 'line_no': 208}, {'indent': 20, 'line': '                    P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO,', 'line_no': 209}, {'indent': 20, 'line': '                    P_ZIP_CODE => :NEW.ZIP_CODE,', 'line_no': 210}, {'indent': 20, 'line': '                    P_CITY=> :NEW.CITY,', 'line_no': 211}, {'indent': 20, 'line': '                    P_DISTRICT_NAME => :NEW.DISTRICT_NAME,', 'line_no': 212}, {'indent': 20, 'line': '                    P_COUNTRY_ID => :NEW.COUNTRY_ID,', 'line_no': 213}, {'indent': 20, 'line': '                    P_LATITUDE => :NEW.LATITUDE,', 'line_no': 214}, {'indent': 20, 'line': '                    P_LONGITUDE => :NEW.LONGITUDE,', 'line_no': 215}, {'indent': 20, 'line': '                    P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK,', 'line_no': 216}, {'indent': 20, 'line': '                    P_VALID_FROM => :NEW.VALID_FROM,', 'line_no': 217}, {'indent': 20, 'line': "                    P_ACTION_TYPE => 'INSERT'", 'line_no': 218}, {'indent': 16, 'line': '                );', 'line_no': 219}]
2025-09-03 04:09:45,007 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,007 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(', 'line_no': 202}
2025-09-03 04:09:45,007 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS
2025-09-03 04:09:45,007 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(
2025-09-03 04:09:45,007 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 202
2025-09-03 04:09:45,007 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 219
2025-09-03 04:09:45,007 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT' );
2025-09-03 04:09:45,007 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS( P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT' );
2025-09-03 04:09:45,007 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:45,016 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,024 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,033 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,033 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:45,047 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) ", 'type': 'if_else', 'if_line_no': 246, 'then_line_no': 246, 'if_indent': 8, 'end_if_line_no': 248, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': "        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');", 'line_no': 250}]
2025-09-03 04:09:45,047 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,056 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}]
2025-09-03 04:09:45,056 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,056 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}
2025-09-03 04:09:45,064 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,064 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,064 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');", 'line_no': 250}
2025-09-03 04:09:45,064 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS
2025-09-03 04:09:45,064 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');
2025-09-03 04:09:45,064 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 250
2025-09-03 04:09:45,065 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 250
2025-09-03 04:09:45,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS(P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE');
2025-09-03 04:09:45,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': 'NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'P_ADDRESS_TYPE_CD': 'NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD)', 'P_ACTION_TYPE': "'DELETE'"}, 'raw_text': "P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE'"}}
2025-09-03 04:09:45,073 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,082 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD);", 'line_no': 254}]
2025-09-03 04:09:45,082 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,082 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD);", 'line_no': 254}
2025-09-03 04:09:45,082 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,082 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20111, 'THE ADDRESS CANNOT BE UPDATED BECAUSE THE ADDRESS TYPE IS DIFFERENT. OLD ADDRESS TYPE: ' || :OLD.ADDRESS_TYPE_CD || ' NEW ADDRESS TYPE: ' || :NEW.ADDRESS_TYPE_CD);
2025-09-03 04:09:45,082 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 254
2025-09-03 04:09:45,082 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 254
2025-09-03 04:09:45,082 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD);
2025-09-03 04:09:45,082 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', "'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"], 'named_params': {}, 'raw_text': "-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"}}
2025-09-03 04:09:45,091 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.');", 'line_no': 256}]
2025-09-03 04:09:45,091 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,091 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.');", 'line_no': 256}
2025-09-03 04:09:45,092 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,092 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20112, 'AN ADDRESS ALREADY EXISTS FOR THIS COMPANY AND ADDRESS TYPE. TO MODIFY THE EXISTING ADDRESS, PLEASE USE THE UPDATE BUTTON.');
2025-09-03 04:09:45,092 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 256
2025-09-03 04:09:45,092 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 256
2025-09-03 04:09:45,092 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.');
2025-09-03 04:09:45,092 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', "'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"], 'named_params': {}, 'raw_text': "-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"}}
2025-09-03 04:09:45,101 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.');", 'line_no': 258}]
2025-09-03 04:09:45,101 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,101 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.');", 'line_no': 258}
2025-09-03 04:09:45,101 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,101 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20113, 'THE COMPANY COUNTRY MODIFIED BUT NOT THE VALID FROM DATE. PLEASE UPDATE ALSO THE VALID FROM DATE.');
2025-09-03 04:09:45,101 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 258
2025-09-03 04:09:45,101 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 258
2025-09-03 04:09:45,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.');
2025-09-03 04:09:45,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"], 'named_params': {}, 'raw_text': "-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"}}
2025-09-03 04:09:45,109 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR);", 'line_no': 260}]
2025-09-03 04:09:45,109 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,109 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR);", 'line_no': 260}
2025-09-03 04:09:45,109 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,110 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20113, 'NEW: ' || :NEW.COMPANY_CD || ' OLD:' || :OLD.COMPANY_CD || 'COUNT: ' || CNTR);
2025-09-03 04:09:45,110 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 260
2025-09-03 04:09:45,110 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 260
2025-09-03 04:09:45,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR);
2025-09-03 04:09:45,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"], 'named_params': {}, 'raw_text': "-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"}}
2025-09-03 04:09:45,117 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'The legal address cannot be inserted for this type of company');", 'line_no': 262}]
2025-09-03 04:09:45,117 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,117 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'The legal address cannot be inserted for this type of company');", 'line_no': 262}
2025-09-03 04:09:45,117 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,118 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20113, 'THE LEGAL ADDRESS CANNOT BE INSERTED FOR THIS TYPE OF COMPANY');
2025-09-03 04:09:45,118 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 262
2025-09-03 04:09:45,118 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 262
2025-09-03 04:09:45,118 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20113, 'The legal address cannot be inserted for this type of company');
2025-09-03 04:09:45,118 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'The legal address cannot be inserted for this type of company'"], 'named_params': {}, 'raw_text': "-20113, 'The legal address cannot be inserted for this type of company'"}}
2025-09-03 04:09:45,125 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'It is not allowed to invalidate/delete this type of address');", 'line_no': 264}]
2025-09-03 04:09:45,125 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,125 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20113, 'It is not allowed to invalidate/delete this type of address');", 'line_no': 264}
2025-09-03 04:09:45,125 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,125 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20113, 'IT IS NOT ALLOWED TO INVALIDATE/DELETE THIS TYPE OF ADDRESS');
2025-09-03 04:09:45,125 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 264
2025-09-03 04:09:45,125 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 264
2025-09-03 04:09:45,125 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20113, 'It is not allowed to invalidate/delete this type of address');
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'It is not allowed to invalidate/delete this type of address'"], 'named_params': {}, 'raw_text': "-20113, 'It is not allowed to invalidate/delete this type of address'"}}
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'begin_end', 'begin_line_no': 15, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 16}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 18, 'when_indent': 8, 'then_line_no': 18, 'exception_statements': [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 19}]}], 'exception_line_no': 17, 'end_line_no': 20}, {'indent': 4, 'line': '    CNTR := 0;', 'line_no': 22}, {'indent': 4, 'line': '    SELECT', 'line_no': 23}, {'indent': 8, 'line': '        COUNT (*) INTO CNTR', 'line_no': 24}, {'indent': 4, 'line': '    FROM', 'line_no': 25}, {'indent': 8, 'line': '        CFG_V_COMPANY_ADDRESSES', 'line_no': 26}, {'indent': 4, 'line': '    WHERE', 'line_no': 27}, {'indent': 8, 'line': '        COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'line_no': 28}, {'indent': 8, 'line': '        AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);', 'line_no': 29}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 34, 'then_statements': [{'condition': ' (CNTR > 0) ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 8, 'end_if_line_no': 33, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 37}, {'indent': 12, 'line': '            COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD', 'line_no': 38}, {'indent': 8, 'line': '        FROM', 'line_no': 39}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 40}, {'indent': 8, 'line': '        WHERE', 'line_no': 41}, {'indent': 12, 'line': '            COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 42}, {'condition': " (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) ", 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 8, 'end_if_line_no': 45, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 8, 'end_if_line_no': 242, 'then_statements': [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 245, 'then_line_no': 245, 'if_indent': 4, 'end_if_line_no': 251, 'then_statements': [{'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) ", 'type': 'if_else', 'if_line_no': 246, 'then_line_no': 246, 'if_indent': 8, 'end_if_line_no': 248, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': 'NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'P_ADDRESS_TYPE_CD': 'NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD)', 'P_ACTION_TYPE': "'DELETE'"}, 'raw_text': "P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE'"}}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 16}]
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         V_USERID := TXO_UTIL.GET_USERID; || 16 || 8
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 16 || assignment
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 16 || assignment
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 16, 'assignment_indent': 8}
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 19}]
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             V_USERID := USER; || 19 || 12
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 19 || assignment
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 19 || assignment
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 19, 'assignment_indent': 12}
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:45,126 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     CNTR := 0; || 22 || 4
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 22 || assignment
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 22 || assignment
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 22, 'assignment_indent': 4}
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     SELECT || 23 || 4
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 23 || select_statement || SELECT
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 23 || select_statement
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 23 || select_statement
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 29 || select_statement
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 9
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (CNTR > 0) ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 8, 'end_if_line_no': 33, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 32}]
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_INS; || 32 || 12
2025-09-03 04:09:45,127 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 32 || raise_statement || RAISE
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 32 || raise_statement
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 32 || raise_statement
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 32 || raise_statement
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 10
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        SELECT', 'line_no': 37}, {'indent': 12, 'line': '            COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD', 'line_no': 38}, {'indent': 8, 'line': '        FROM', 'line_no': 39}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 40}, {'indent': 8, 'line': '        WHERE', 'line_no': 41}, {'indent': 12, 'line': '            COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 42}, {'condition': " (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) ", 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 8, 'end_if_line_no': 45, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 8, 'end_if_line_no': 242, 'then_statements': [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         SELECT || 37 || 8
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 37 || select_statement || SELECT
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 37 || select_statement
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 37 || select_statement
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 42 || select_statement
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 6
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_INS_LEGAL_ADDR;', 'line_no': 44}]
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_INS_LEGAL_ADDR; || 44 || 12
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 44 || raise_statement || RAISE
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 44 || raise_statement
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 44 || raise_statement
2025-09-03 04:09:45,128 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 44 || raise_statement
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                RAISE ERR_CTRY_CHG;', 'line_no': 49}]
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 RAISE ERR_CTRY_CHG; || 49 || 16
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 49 || raise_statement || RAISE
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 49 || raise_statement
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 49 || raise_statement
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 49 || raise_statement
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}]
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 8
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}]
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,129 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 11
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) ", 'type': 'if_else', 'if_line_no': 246, 'then_line_no': 246, 'if_indent': 8, 'end_if_line_no': 248, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': 'NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'P_ADDRESS_TYPE_CD': 'NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD)', 'P_ACTION_TYPE': "'DELETE'"}, 'raw_text': "P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE'"}}]
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'line_no': 247}]
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_NOT_ALLOWED_TO_INVALIDATE; || 247 || 12
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 247 || raise_statement || RAISE
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 247 || raise_statement
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 247 || raise_statement
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 247 || raise_statement
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', "'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"], 'named_params': {}, 'raw_text': "-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"}}]
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', "'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"], 'named_params': {}, 'raw_text': "-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"}}]
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"], 'named_params': {}, 'raw_text': "-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"}}]
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,130 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"], 'named_params': {}, 'raw_text': "-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"}}]
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'The legal address cannot be inserted for this type of company'"], 'named_params': {}, 'raw_text': "-20113, 'The legal address cannot be inserted for this type of company'"}}]
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'It is not allowed to invalidate/delete this type of address'"], 'named_params': {}, 'raw_text': "-20113, 'It is not allowed to invalidate/delete this type of address'"}}]
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 14, 'begin_indent': 0, 'begin_end_statements': [{'type': 'begin_end', 'begin_line_no': 15, 'begin_indent': 4, 'begin_end_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 16, 'assignment_indent': 8}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 18, 'when_indent': 8, 'then_line_no': 18, 'exception_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 19, 'assignment_indent': 12}]}], 'exception_line_no': 17, 'end_line_no': 20}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 22, 'assignment_indent': 4}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);', 'statement_line_no': 23, 'statement_indent': 4}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 34, 'then_statements': [{'condition': ' (CNTR > 0) ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 8, 'end_if_line_no': 33, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 32, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'statement_line_no': 37, 'statement_indent': 8}, {'condition': " (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) ", 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 8, 'end_if_line_no': 45, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_LEGAL_ADDR;', 'statement_line_no': 44, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CTRY_CHG;', 'statement_line_no': 49, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 8, 'end_if_line_no': 242, 'then_statements': [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 245, 'then_line_no': 245, 'if_indent': 4, 'end_if_line_no': 251, 'then_statements': [{'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) ", 'type': 'if_else', 'if_line_no': 246, 'then_line_no': 246, 'if_indent': 8, 'end_if_line_no': 248, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'statement_line_no': 247, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': 'NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'P_ADDRESS_TYPE_CD': 'NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD)', 'P_ACTION_TYPE': "'DELETE'"}, 'raw_text': "P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE'"}}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 253, 'when_indent': 4, 'then_line_no': 253, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', "'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"], 'named_params': {}, 'raw_text': "-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS', 'when_line_no': 255, 'when_indent': 4, 'then_line_no': 255, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', "'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"], 'named_params': {}, 'raw_text': "-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_CTRY_CHG', 'when_line_no': 257, 'when_indent': 4, 'then_line_no': 257, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"], 'named_params': {}, 'raw_text': "-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"}}]}, {'type': 'exception_handler', 'exception_name': 'TEST_ERR', 'when_line_no': 259, 'when_indent': 4, 'then_line_no': 259, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"], 'named_params': {}, 'raw_text': "-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS_LEGAL_ADDR', 'when_line_no': 261, 'when_indent': 4, 'then_line_no': 261, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'The legal address cannot be inserted for this type of company'"], 'named_params': {}, 'raw_text': "-20113, 'The legal address cannot be inserted for this type of company'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_NOT_ALLOWED_TO_INVALIDATE', 'when_line_no': 263, 'when_indent': 4, 'then_line_no': 263, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'It is not allowed to invalidate/delete this type of address'"], 'named_params': {}, 'raw_text': "-20113, 'It is not allowed to invalidate/delete this type of address'"}}]}], 'exception_line_no': 252, 'end_line_no': 265}
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 15, 'begin_indent': 4, 'begin_end_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 16, 'assignment_indent': 8}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 18, 'when_indent': 8, 'then_line_no': 18, 'exception_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 19, 'assignment_indent': 12}]}], 'exception_line_no': 17, 'end_line_no': 20}
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 16, 'assignment_indent': 8}
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 18, 'when_indent': 8, 'then_line_no': 18, 'exception_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 19, 'assignment_indent': 12}]}
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 19, 'assignment_indent': 12}
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 22, 'assignment_indent': 4}
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);', 'statement_line_no': 23, 'statement_indent': 4}
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 34, 'then_statements': [{'condition': ' (CNTR > 0) ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 8, 'end_if_line_no': 33, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 32, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (CNTR > 0) ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 8, 'end_if_line_no': 33, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 32, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,131 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 32, 'statement_indent': 12}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'statement_line_no': 37, 'statement_indent': 8}, {'condition': " (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) ", 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 8, 'end_if_line_no': 45, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_LEGAL_ADDR;', 'statement_line_no': 44, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CTRY_CHG;', 'statement_line_no': 49, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 8, 'end_if_line_no': 242, 'then_statements': [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'statement_line_no': 37, 'statement_indent': 8}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) ", 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 8, 'end_if_line_no': 45, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_LEGAL_ADDR;', 'statement_line_no': 44, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_LEGAL_ADDR;', 'statement_line_no': 44, 'statement_indent': 12}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CTRY_CHG;', 'statement_line_no': 49, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CTRY_CHG;', 'statement_line_no': 49, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CTRY_CHG;', 'statement_line_no': 49, 'statement_indent': 16}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 8, 'end_if_line_no': 242, 'then_statements': [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 245, 'then_line_no': 245, 'if_indent': 4, 'end_if_line_no': 251, 'then_statements': [{'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) ", 'type': 'if_else', 'if_line_no': 246, 'then_line_no': 246, 'if_indent': 8, 'end_if_line_no': 248, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'statement_line_no': 247, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': 'NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'P_ADDRESS_TYPE_CD': 'NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD)', 'P_ACTION_TYPE': "'DELETE'"}, 'raw_text': "P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) ", 'type': 'if_else', 'if_line_no': 246, 'then_line_no': 246, 'if_indent': 8, 'end_if_line_no': 248, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'statement_line_no': 247, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'statement_line_no': 247, 'statement_indent': 12}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': 'NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'P_ADDRESS_TYPE_CD': 'NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD)', 'P_ACTION_TYPE': "'DELETE'"}, 'raw_text': "P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE'"}}
2025-09-03 04:09:45,132 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 253, 'when_indent': 4, 'then_line_no': 253, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', "'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"], 'named_params': {}, 'raw_text': "-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"}}]}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', "'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"], 'named_params': {}, 'raw_text': "-20111, 'The address cannot be updated because the Address type is different. Old address type: ' || :OLD.ADDRESS_TYPE_CD || ' New address type: ' || :NEW.ADDRESS_TYPE_CD"}}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_INS', 'when_line_no': 255, 'when_indent': 4, 'then_line_no': 255, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', "'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"], 'named_params': {}, 'raw_text': "-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"}}]}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20112', "'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"], 'named_params': {}, 'raw_text': "-20112, 'An address already exists for this Company and Address type. To modify the existing address, please use the Update button.'"}}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_CTRY_CHG', 'when_line_no': 257, 'when_indent': 4, 'then_line_no': 257, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"], 'named_params': {}, 'raw_text': "-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"}}]}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"], 'named_params': {}, 'raw_text': "-20113, 'The company country modified but not the Valid From Date. Please update also the Valid From Date.'"}}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'TEST_ERR', 'when_line_no': 259, 'when_indent': 4, 'then_line_no': 259, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"], 'named_params': {}, 'raw_text': "-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"}}]}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"], 'named_params': {}, 'raw_text': "-20113, 'New: ' || :NEW.COMPANY_CD || ' Old:' || :OLD.COMPANY_CD || 'Count: ' || CNTR"}}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_INS_LEGAL_ADDR', 'when_line_no': 261, 'when_indent': 4, 'then_line_no': 261, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'The legal address cannot be inserted for this type of company'"], 'named_params': {}, 'raw_text': "-20113, 'The legal address cannot be inserted for this type of company'"}}]}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'The legal address cannot be inserted for this type of company'"], 'named_params': {}, 'raw_text': "-20113, 'The legal address cannot be inserted for this type of company'"}}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_NOT_ALLOWED_TO_INVALIDATE', 'when_line_no': 263, 'when_indent': 4, 'then_line_no': 263, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'It is not allowed to invalidate/delete this type of address'"], 'named_params': {}, 'raw_text': "-20113, 'It is not allowed to invalidate/delete this type of address'"}}]}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20113', "'It is not allowed to invalidate/delete this type of address'"], 'named_params': {}, 'raw_text': "-20113, 'It is not allowed to invalidate/delete this type of address'"}}
2025-09-03 04:09:45,133 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list []
2025-09-03 04:09:45,141 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:    filename                                               line  line_no  indent
0   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
1   zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
2   zzz.sql                              ELSIF (DELETING) THEN      192     8.0
3   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
4   zzz.sql                                            END IF;      196     8.0
5   eee.sql                                            DECLARE        5     4.0
6   eee.sql                            v_inner_counter NUMBER;        7     8.0
7   eee.sql                                     <<outer_loop>>       10     8.0
8   eee.sql                                               LOOP       11     8.0
9   eee.sql                                     <<inner_loop>>       14    12.0
10  eee.sql                                               LOOP       15    12.0
11  eee.sql          EXIT inner_loop WHEN v_inner_counter > 3;       20    16.0
12  eee.sql                               END LOOP inner_loop;       21    12.0
13  eee.sql          EXIT outer_loop WHEN v_outer_counter > 5;       24    12.0
14  eee.sql                               END LOOP outer_loop;       25     8.0
2025-09-03 04:09:45,141 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 04:09:45,141 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.3186507225036621 seconds
2025-09-03 04:09:45,141 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 04:09:45,142 - root - DEBUG - [common.py:105] - File details: trigger3.sql
2025-09-03 04:09:45,142 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 04:09:45,142 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 6 vars, 0 consts, 6 excs, 17 comments
2025-09-03 04:09:45,142 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 04:09:45,142 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:45,142 - root - DEBUG - [common.py:105] - File details in metadata: trigger3.sql (13249 bytes)
2025-09-03 04:09:45,142 - root - DEBUG - [common.py:105] - Analysis statistics: 6 vars, 0 consts, 6 excs, 17 comments
2025-09-03 04:09:45,142 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\trigger3_analysis.json
2025-09-03 04:09:45,146 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\trigger3_analysis.json
2025-09-03 04:09:45,146 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger trigger3.sql ===
2025-09-03 04:09:45,146 - root - DEBUG - [common.py:105] - ✓ Created trigger3_analysis.json
2025-09-03 04:09:45,146 - root - DEBUG - [common.py:105] - === Processing file 6/10: trigger4.sql ===
2025-09-03 04:09:45,146 - root - DEBUG - [common.py:105] - Source path: files/oracle\trigger4.sql
2025-09-03 04:09:45,146 - root - DEBUG - [common.py:105] - Output path: files/format_json\trigger4_analysis.json
2025-09-03 04:09:45,147 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger trigger4.sql ===
2025-09-03 04:09:45,147 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 04:09:45,147 - root - DEBUG - [main.py:245] - Reading SQL file: files/oracle\trigger4.sql
2025-09-03 04:09:45,147 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 25 characters of SQL
2025-09-03 04:09:45,147 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 04:09:45,147 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 04:09:45,147 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 04:09:45,148 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 04:09:45,148 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 22 total, 16 with semicolons, 1 empty lines skipped
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 22 lines cleaned
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 0 comments extracted, 22 lines cleaned
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 1
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 9
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 1-8
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_ACTION
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: COL_NAMES
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: COL_NEW_VALUES
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: COL_OLD_VALUES
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:2262] - LOWER(TG_TABLE_NAME)
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:2262] - '_his'
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_TABLE_NAME
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_SCHEMA_NAME
2025-09-03 04:09:45,148 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': "    IF TG_OP = 'INSERT' THEN", 'line_no': 10}
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 10
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 10 i: 16
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 7
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1276] - then_statements: 0 2
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 4, 'line': "    ELSIF TG_OP = 'DELETE' THEN", 'line_no': 14}
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1286] - {'indent': 4, 'line': "    ELSIF TG_OP = 'UPDATE' THEN", 'line_no': 12}
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 4, 'line': "    ELSIF TG_OP = 'UPDATE' THEN", 'line_no': 12}, {'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}]
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 4, 'line': "    ELSIF TG_OP = 'UPDATE' THEN", 'line_no': 12}, {'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}]
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 4, 'line': "    ELSIF TG_OP = 'UPDATE' THEN", 'line_no': 12}
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 12 then_i: 12
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 4, 'line': "    ELSIF TG_OP = 'UPDATE' THEN", 'line_no': 12}, {'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}]
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 4
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 4, 'line': '    END IF;', 'line_no': 16}
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1297] - {'indent': 4, 'line': "    ELSIF TG_OP = 'DELETE' THEN", 'line_no': 14}
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 4, 'line': "    ELSIF TG_OP = 'DELETE' THEN", 'line_no': 14}, {'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}]
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 4, 'line': "    ELSIF TG_OP = 'DELETE' THEN", 'line_no': 14}, {'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}]
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 4, 'line': "    ELSIF TG_OP = 'DELETE' THEN", 'line_no': 14}
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 14 then_i: 14
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 4, 'line': "    ELSIF TG_OP = 'DELETE' THEN", 'line_no': 14}, {'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}]
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 4
2025-09-03 04:09:45,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " TG_OP = 'INSERT' ", 'type': 'if_else', 'if_line_no': 10, 'then_line_no': 10, 'if_indent': 4, 'end_if_line_no': 16, 'then_statements': [{'indent': 8, 'line': "        V_ACTION := 'I';", 'line_no': 11}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 12, 'elif_indent': 4, 'condition': "TG_OP = 'UPDATE'", 'then_line_no': 12, 'then_statements': [{'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}]}, {'type': 'elif_statement', 'elif_line_no': 14, 'elif_indent': 4, 'condition': "TG_OP = 'DELETE'", 'then_line_no': 14, 'then_statements': [{'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}]}], 'else_statements': []}
2025-09-03 04:09:45,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        V_ACTION := 'I';", 'line_no': 11}
2025-09-03 04:09:45,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}
2025-09-03 04:09:45,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}
2025-09-03 04:09:45,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': "    COL_NAMES := ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ];", 'line_no': 18}
2025-09-03 04:09:45,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': "    COL_NEW_VALUES := ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'line_no': 19}
2025-09-03 04:09:45,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': "    COL_OLD_VALUES := ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'line_no': 20}
2025-09-03 04:09:45,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    PERFORM MDMTOOL."mdmt_util_history$write_history"( V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES );', 'line_no': 21}
2025-09-03 04:09:45,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    RETURN NULL;', 'line_no': 22}
2025-09-03 04:09:45,158 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " TG_OP = 'INSERT' ", 'type': 'if_else', 'if_line_no': 10, 'then_line_no': 10, 'if_indent': 4, 'end_if_line_no': 16, 'then_statements': [{'indent': 8, 'line': "        V_ACTION := 'I';", 'line_no': 11}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 12, 'elif_indent': 4, 'condition': "TG_OP = 'UPDATE'", 'then_line_no': 12, 'then_statements': [{'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}]}, {'type': 'elif_statement', 'elif_line_no': 14, 'elif_indent': 4, 'condition': "TG_OP = 'DELETE'", 'then_line_no': 14, 'then_statements': [{'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}]}], 'else_statements': []}, {'indent': 4, 'line': "    COL_NAMES := ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ];", 'line_no': 18}, {'indent': 4, 'line': "    COL_NEW_VALUES := ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'line_no': 19}, {'indent': 4, 'line': "    COL_OLD_VALUES := ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'line_no': 20}, {'indent': 4, 'line': '    PERFORM MDMTOOL."mdmt_util_history$write_history"( V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES );', 'line_no': 21}, {'indent': 4, 'line': '    RETURN NULL;', 'line_no': 22}]
2025-09-03 04:09:45,158 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,168 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        V_ACTION := 'I';", 'line_no': 11}]
2025-09-03 04:09:45,168 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,168 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        V_ACTION := 'I';", 'line_no': 11}
2025-09-03 04:09:45,176 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}]
2025-09-03 04:09:45,176 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,176 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}
2025-09-03 04:09:45,184 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}]
2025-09-03 04:09:45,184 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,184 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': "    COL_NAMES := ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ];", 'line_no': 18}
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': "    COL_NEW_VALUES := ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'line_no': 19}
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': "    COL_OLD_VALUES := ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'line_no': 20}
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    PERFORM MDMTOOL."mdmt_util_history$write_history"( V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES );', 'line_no': 21}
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDMTOOL."mdmt_util_history$write_history"
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: PERFORM MDMTOOL."MDMT_UTIL_HISTORY$WRITE_HISTORY"( V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES );
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 21
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 21
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: PERFORM MDMTOOL."mdmt_util_history$write_history"( V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES );
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'PERFORM MDMTOOL."mdmt_util_history$write_history"', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_ACTION', 'V_TABLE_NAME', 'V_SCHEMA_NAME', 'COL_NAMES', 'COL_NEW_VALUES', 'COL_OLD_VALUES'], 'named_params': {}, 'raw_text': 'V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES'}}
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:45,192 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    RETURN NULL;', 'line_no': 22}
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " TG_OP = 'INSERT' ", 'type': 'if_else', 'if_line_no': 10, 'then_line_no': 10, 'if_indent': 4, 'end_if_line_no': 16, 'then_statements': [{'indent': 8, 'line': "        V_ACTION := 'I';", 'line_no': 11}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 12, 'elif_indent': 4, 'condition': "TG_OP = 'UPDATE'", 'then_line_no': 12, 'then_statements': [{'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}]}, {'type': 'elif_statement', 'elif_line_no': 14, 'elif_indent': 4, 'condition': "TG_OP = 'DELETE'", 'then_line_no': 14, 'then_statements': [{'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}]}], 'else_statements': []}, {'indent': 4, 'line': "    COL_NAMES := ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ];", 'line_no': 18}, {'indent': 4, 'line': "    COL_NEW_VALUES := ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'line_no': 19}, {'indent': 4, 'line': "    COL_OLD_VALUES := ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'line_no': 20}, {'type': 'function_calling', 'function_name': 'PERFORM MDMTOOL."mdmt_util_history$write_history"', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_ACTION', 'V_TABLE_NAME', 'V_SCHEMA_NAME', 'COL_NAMES', 'COL_NEW_VALUES', 'COL_OLD_VALUES'], 'named_params': {}, 'raw_text': 'V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES'}}, {'indent': 4, 'line': '    RETURN NULL;', 'line_no': 22}]
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': "        V_ACTION := 'I';", 'line_no': 11}]
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         V_ACTION := 'I'; || 11 || 8
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 11 || assignment
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 11 || assignment
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'I';", 'assignment_line_no': 11, 'assignment_indent': 8}
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': "        V_ACTION := 'U';", 'line_no': 13}]
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         V_ACTION := 'U'; || 13 || 8
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 13 || assignment
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 13 || assignment
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'U';", 'assignment_line_no': 13, 'assignment_indent': 8}
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': "        V_ACTION := 'D';", 'line_no': 15}]
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         V_ACTION := 'D'; || 15 || 8
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 15 || assignment
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 15 || assignment
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'D';", 'assignment_line_no': 15, 'assignment_indent': 8}
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,193 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     COL_NAMES := ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ]; || 18 || 4
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 18 || assignment
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 18 || assignment
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'COL_NAMES', 'assignment_operator': ':=', 'expression': "ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ];", 'assignment_line_no': 18, 'assignment_indent': 4}
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     COL_NEW_VALUES := ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ]; || 19 || 4
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 19 || assignment
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 19 || assignment
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'COL_NEW_VALUES', 'assignment_operator': ':=', 'expression': "ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'assignment_line_no': 19, 'assignment_indent': 4}
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 3
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     COL_OLD_VALUES := ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ]; || 20 || 4
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 20 || assignment
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 20 || assignment
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'COL_OLD_VALUES', 'assignment_operator': ':=', 'expression': "ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'assignment_line_no': 20, 'assignment_indent': 4}
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 4
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 5
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     RETURN NULL; || 22 || 4
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 22 || return_statement || RETURN
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 22 || return_statement
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 22 || return_statement
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 22 || return_statement
2025-09-03 04:09:45,194 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 9, 'begin_indent': 0, 'begin_end_statements': [{'condition': " TG_OP = 'INSERT' ", 'type': 'if_else', 'if_line_no': 10, 'then_line_no': 10, 'if_indent': 4, 'end_if_line_no': 16, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'I';", 'assignment_line_no': 11, 'assignment_indent': 8}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 12, 'elif_indent': 4, 'condition': "TG_OP = 'UPDATE'", 'then_line_no': 12, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'U';", 'assignment_line_no': 13, 'assignment_indent': 8}]}, {'type': 'elif_statement', 'elif_line_no': 14, 'elif_indent': 4, 'condition': "TG_OP = 'DELETE'", 'then_line_no': 14, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'D';", 'assignment_line_no': 15, 'assignment_indent': 8}]}], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'COL_NAMES', 'assignment_operator': ':=', 'expression': "ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ];", 'assignment_line_no': 18, 'assignment_indent': 4}, {'type': 'assignment', 'variable_name': 'COL_NEW_VALUES', 'assignment_operator': ':=', 'expression': "ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'assignment_line_no': 19, 'assignment_indent': 4}, {'type': 'assignment', 'variable_name': 'COL_OLD_VALUES', 'assignment_operator': ':=', 'expression': "ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'assignment_line_no': 20, 'assignment_indent': 4}, {'type': 'function_calling', 'function_name': 'PERFORM MDMTOOL."mdmt_util_history$write_history"', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_ACTION', 'V_TABLE_NAME', 'V_SCHEMA_NAME', 'COL_NAMES', 'COL_NEW_VALUES', 'COL_OLD_VALUES'], 'named_params': {}, 'raw_text': 'V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES'}}, {'type': 'return_statement', 'sql_statement': 'RETURN NULL;', 'statement_line_no': 22, 'statement_indent': 4}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 23}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " TG_OP = 'INSERT' ", 'type': 'if_else', 'if_line_no': 10, 'then_line_no': 10, 'if_indent': 4, 'end_if_line_no': 16, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'I';", 'assignment_line_no': 11, 'assignment_indent': 8}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 12, 'elif_indent': 4, 'condition': "TG_OP = 'UPDATE'", 'then_line_no': 12, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'U';", 'assignment_line_no': 13, 'assignment_indent': 8}]}, {'type': 'elif_statement', 'elif_line_no': 14, 'elif_indent': 4, 'condition': "TG_OP = 'DELETE'", 'then_line_no': 14, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'D';", 'assignment_line_no': 15, 'assignment_indent': 8}]}], 'else_statements': []}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'I';", 'assignment_line_no': 11, 'assignment_indent': 8}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 12, 'elif_indent': 4, 'condition': "TG_OP = 'UPDATE'", 'then_line_no': 12, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'U';", 'assignment_line_no': 13, 'assignment_indent': 8}]}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'U';", 'assignment_line_no': 13, 'assignment_indent': 8}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 14, 'elif_indent': 4, 'condition': "TG_OP = 'DELETE'", 'then_line_no': 14, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'D';", 'assignment_line_no': 15, 'assignment_indent': 8}]}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'D';", 'assignment_line_no': 15, 'assignment_indent': 8}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'COL_NAMES', 'assignment_operator': ':=', 'expression': "ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ];", 'assignment_line_no': 18, 'assignment_indent': 4}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'COL_NEW_VALUES', 'assignment_operator': ':=', 'expression': "ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'assignment_line_no': 19, 'assignment_indent': 4}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'COL_OLD_VALUES', 'assignment_operator': ':=', 'expression': "ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'assignment_line_no': 20, 'assignment_indent': 4}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'PERFORM MDMTOOL."mdmt_util_history$write_history"', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_ACTION', 'V_TABLE_NAME', 'V_SCHEMA_NAME', 'COL_NAMES', 'COL_NEW_VALUES', 'COL_OLD_VALUES'], 'named_params': {}, 'raw_text': 'V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES'}}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'return_statement', 'sql_statement': 'RETURN NULL;', 'statement_line_no': 22, 'statement_indent': 4}
2025-09-03 04:09:45,195 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list []
2025-09-03 04:09:45,203 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:    filename                                               line  line_no  indent
0   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
1   zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
2   zzz.sql                              ELSIF (DELETING) THEN      192     8.0
3   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
4   zzz.sql                                            END IF;      196     8.0
5   eee.sql                                            DECLARE        5     4.0
6   eee.sql                            v_inner_counter NUMBER;        7     8.0
7   eee.sql                                     <<outer_loop>>       10     8.0
8   eee.sql                                               LOOP       11     8.0
9   eee.sql                                     <<inner_loop>>       14    12.0
10  eee.sql                                               LOOP       15    12.0
11  eee.sql          EXIT inner_loop WHEN v_inner_counter > 3;       20    16.0
12  eee.sql                               END LOOP inner_loop;       21    12.0
13  eee.sql          EXIT outer_loop WHEN v_outer_counter > 5;       24    12.0
14  eee.sql                               END LOOP outer_loop;       25     8.0
2025-09-03 04:09:45,204 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 04:09:45,204 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.057263851165771484 seconds
2025-09-03 04:09:45,204 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 04:09:45,204 - root - DEBUG - [common.py:105] - File details: trigger4.sql
2025-09-03 04:09:45,204 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 04:09:45,205 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 6 vars, 0 consts, 0 excs, 0 comments
2025-09-03 04:09:45,205 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 04:09:45,205 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:45,205 - root - DEBUG - [common.py:105] - File details in metadata: trigger4.sql (4099 bytes)
2025-09-03 04:09:45,205 - root - DEBUG - [common.py:105] - Analysis statistics: 6 vars, 0 consts, 0 excs, 0 comments
2025-09-03 04:09:45,205 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\trigger4_analysis.json
2025-09-03 04:09:45,207 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\trigger4_analysis.json
2025-09-03 04:09:45,207 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger trigger4.sql ===
2025-09-03 04:09:45,207 - root - DEBUG - [common.py:105] - ✓ Created trigger4_analysis.json
2025-09-03 04:09:45,208 - root - DEBUG - [common.py:105] - === Processing file 7/10: trigger5.sql ===
2025-09-03 04:09:45,208 - root - DEBUG - [common.py:105] - Source path: files/oracle\trigger5.sql
2025-09-03 04:09:45,208 - root - DEBUG - [common.py:105] - Output path: files/format_json\trigger5_analysis.json
2025-09-03 04:09:45,208 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger trigger5.sql ===
2025-09-03 04:09:45,208 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 04:09:45,208 - root - DEBUG - [main.py:245] - Reading SQL file: files/oracle\trigger5.sql
2025-09-03 04:09:45,208 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 25 characters of SQL
2025-09-03 04:09:45,209 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 04:09:45,209 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 04:09:45,209 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 04:09:45,209 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 04:09:45,209 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 34 total, 13 with semicolons, 2 empty lines skipped
2025-09-03 04:09:45,209 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 04:09:45,209 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 34 lines cleaned
2025-09-03 04:09:45,209 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 04:09:45,209 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 0 comments extracted, 34 lines cleaned
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 1
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 4
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 1-3
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_USERID
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_TRG_UPD_DATE_STR
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1389] - case_i: 9 i: 24
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1460] - line_info : {'indent': 16, 'line': "                WHEN NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R') THEN", 'line_no': 10}
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 16, 'line': "                WHEN NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R') THEN", 'line_no': 10}, {'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 10 then_i: 10
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 16, 'line': "                WHEN NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R') THEN", 'line_no': 10}, {'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 16, 'line': "                WHEN NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I') THEN", 'line_no': 16}, {'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 16 then_i: 16
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 16, 'line': "                WHEN NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I') THEN", 'line_no': 16}, {'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1485] - {'indent': 20, 'line': '                    NULL;', 'line_no': 23}
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    V_USERID := COALESCE(NEW.UPD_USER, OLD.UPD_USER);', 'line_no': 5}
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': "    V_TRG_UPD_DATE_STR := TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD');", 'line_no': 6}
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': "    IF TG_OP = 'UPDATE' THEN", 'line_no': 7}
2025-09-03 04:09:45,210 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 7
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 7 i: 33
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 11
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': "        IF COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') THEN", 'line_no': 8}, {'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}, {'indent': 12, 'line': '            CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC(', 'line_no': 26}, {'indent': 16, 'line': '                P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT,', 'line_no': 27}, {'indent': 16, 'line': '                P_REGISTRAR => V_USERID::TEXT,', 'line_no': 28}, {'indent': 16, 'line': "                P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT,", 'line_no': 29}, {'indent': 16, 'line': '                P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT', 'line_no': 30}, {'indent': 12, 'line': '            );', 'line_no': 31}, {'indent': 8, 'line': '        END IF;', 'line_no': 32}]
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " TG_OP = 'UPDATE' ", 'type': 'if_else', 'if_line_no': 7, 'then_line_no': 7, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'indent': 8, 'line': "        IF COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') THEN", 'line_no': 8}, {'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}, {'indent': 12, 'line': '            CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC(', 'line_no': 26}, {'indent': 16, 'line': '                P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT,', 'line_no': 27}, {'indent': 16, 'line': '                P_REGISTRAR => V_USERID::TEXT,', 'line_no': 28}, {'indent': 16, 'line': "                P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT,", 'line_no': 29}, {'indent': 16, 'line': '                P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT', 'line_no': 30}, {'indent': 12, 'line': '            );', 'line_no': 31}, {'indent': 8, 'line': '        END IF;', 'line_no': 32}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') THEN", 'line_no': 8}
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 8
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 8 i: 32
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 9
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}, {'indent': 12, 'line': '            CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC(', 'line_no': 26}, {'indent': 16, 'line': '                P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT,', 'line_no': 27}, {'indent': 16, 'line': '                P_REGISTRAR => V_USERID::TEXT,', 'line_no': 28}, {'indent': 16, 'line': "                P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT,", 'line_no': 29}, {'indent': 16, 'line': '                P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT', 'line_no': 30}, {'indent': 12, 'line': '            );', 'line_no': 31}]
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') ", 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 8, 'end_if_line_no': 32, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}, {'indent': 12, 'line': '            CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC(', 'line_no': 26}, {'indent': 16, 'line': '                P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT,', 'line_no': 27}, {'indent': 16, 'line': '                P_REGISTRAR => V_USERID::TEXT,', 'line_no': 28}, {'indent': 16, 'line': "                P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT,", 'line_no': 29}, {'indent': 16, 'line': '                P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT', 'line_no': 30}, {'indent': 12, 'line': '            );', 'line_no': 31}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    SET', 'line_no': 12}
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 14}
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}
2025-09-03 04:09:45,211 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    SET', 'line_no': 18}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 20}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    NULL;', 'line_no': 23}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC(', 'line_no': 26}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT,', 'line_no': 27}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                P_REGISTRAR => V_USERID::TEXT,', 'line_no': 28}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': "                P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT,", 'line_no': 29}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT', 'line_no': 30}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            );', 'line_no': 31}
2025-09-03 04:09:45,212 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    RETURN NULL;', 'line_no': 35}
2025-09-03 04:09:45,220 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 4, 'line': '    V_USERID := COALESCE(NEW.UPD_USER, OLD.UPD_USER);', 'line_no': 5}, {'indent': 4, 'line': "    V_TRG_UPD_DATE_STR := TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD');", 'line_no': 6}, {'condition': " TG_OP = 'UPDATE' ", 'type': 'if_else', 'if_line_no': 7, 'then_line_no': 7, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'condition': " COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') ", 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 8, 'end_if_line_no': 32, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}, {'indent': 12, 'line': '            CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC(', 'line_no': 26}, {'indent': 16, 'line': '                P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT,', 'line_no': 27}, {'indent': 16, 'line': '                P_REGISTRAR => V_USERID::TEXT,', 'line_no': 28}, {'indent': 16, 'line': "                P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT,", 'line_no': 29}, {'indent': 16, 'line': '                P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT', 'line_no': 30}, {'indent': 12, 'line': '            );', 'line_no': 31}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'indent': 4, 'line': '    RETURN NULL;', 'line_no': 35}]
2025-09-03 04:09:45,220 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,220 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    V_USERID := COALESCE(NEW.UPD_USER, OLD.UPD_USER);', 'line_no': 5}
2025-09-03 04:09:45,221 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,221 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': "    V_TRG_UPD_DATE_STR := TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD');", 'line_no': 6}
2025-09-03 04:09:45,221 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,228 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') ", 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 8, 'end_if_line_no': 32, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}, {'indent': 12, 'line': '            CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC(', 'line_no': 26}, {'indent': 16, 'line': '                P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT,', 'line_no': 27}, {'indent': 16, 'line': '                P_REGISTRAR => V_USERID::TEXT,', 'line_no': 28}, {'indent': 16, 'line': "                P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT,", 'line_no': 29}, {'indent': 16, 'line': '                P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT', 'line_no': 30}, {'indent': 12, 'line': '            );', 'line_no': 31}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,228 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,236 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}, {'indent': 12, 'line': '            CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC(', 'line_no': 26}, {'indent': 16, 'line': '                P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT,', 'line_no': 27}, {'indent': 16, 'line': '                P_REGISTRAR => V_USERID::TEXT,', 'line_no': 28}, {'indent': 16, 'line': "                P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT,", 'line_no': 29}, {'indent': 16, 'line': '                P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT', 'line_no': 30}, {'indent': 12, 'line': '            );', 'line_no': 31}]
2025-09-03 04:09:45,236 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    SET', 'line_no': 12}
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 14}
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,244 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}
2025-09-03 04:09:45,252 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]
2025-09-03 04:09:45,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,253 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}
2025-09-03 04:09:45,253 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,253 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    SET', 'line_no': 18}
2025-09-03 04:09:45,253 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,253 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}
2025-09-03 04:09:45,253 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,253 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    WHERE', 'line_no': 20}
2025-09-03 04:09:45,253 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,253 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    NULL;', 'line_no': 23}
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC(', 'line_no': 26}
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC(
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 26
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 31
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC( P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT );
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC( P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT );
2025-09-03 04:09:45,263 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}
2025-09-03 04:09:45,271 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,279 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,279 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,279 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    RETURN NULL;', 'line_no': 35}
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 4, 'line': '    V_USERID := COALESCE(NEW.UPD_USER, OLD.UPD_USER);', 'line_no': 5}, {'indent': 4, 'line': "    V_TRG_UPD_DATE_STR := TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD');", 'line_no': 6}, {'condition': " TG_OP = 'UPDATE' ", 'type': 'if_else', 'if_line_no': 7, 'then_line_no': 7, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'condition': " COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') ", 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 8, 'end_if_line_no': 32, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}, {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'indent': 4, 'line': '    RETURN NULL;', 'line_no': 35}]
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     V_USERID := COALESCE(NEW.UPD_USER, OLD.UPD_USER); || 5 || 4
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 5 || assignment
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 5 || assignment
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'COALESCE(NEW.UPD_USER, OLD.UPD_USER);', 'assignment_line_no': 5, 'assignment_indent': 4}
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     V_TRG_UPD_DATE_STR := TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD'); || 6 || 4
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 6 || assignment
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 6 || assignment
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_TRG_UPD_DATE_STR', 'assignment_operator': ':=', 'expression': "TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD');", 'assignment_line_no': 6, 'assignment_indent': 4}
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') ", 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 8, 'end_if_line_no': 32, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}, {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]}], 'else_statements': [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]}, {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}]
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 11}, {'indent': 20, 'line': '                    SET', 'line_no': 12}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.PROD_FAM_NAME', 'line_no': 13}, {'indent': 20, 'line': '                    WHERE', 'line_no': 14}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 15}]
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     UPDATE GMD.THEME_MOLECULES || 11 || 20
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 11 || update_statement || UPDATE
2025-09-03 04:09:45,280 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 11 || update_statement
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 11 || update_statement
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 15 || update_statement
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    UPDATE GMD.THEME_MOLECULES', 'line_no': 17}, {'indent': 20, 'line': '                    SET', 'line_no': 18}, {'indent': 24, 'line': '                        MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME', 'line_no': 19}, {'indent': 20, 'line': '                    WHERE', 'line_no': 20}, {'indent': 24, 'line': '                        PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'line_no': 21}]
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     UPDATE GMD.THEME_MOLECULES || 17 || 20
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 17 || update_statement || UPDATE
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 17 || update_statement
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 17 || update_statement
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 21 || update_statement
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    NULL;', 'line_no': 23}]
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     NULL; || 23 || 20
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 23 || null_statement || NULL
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 23 || null_statement
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 23 || null_statement
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 23 || null_statement
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 3
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     RETURN NULL; || 35 || 4
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 35 || return_statement || RETURN
2025-09-03 04:09:45,281 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 35 || return_statement
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 35 || return_statement
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 35 || return_statement
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 4, 'begin_indent': 0, 'begin_end_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'COALESCE(NEW.UPD_USER, OLD.UPD_USER);', 'assignment_line_no': 5, 'assignment_indent': 4}, {'type': 'assignment', 'variable_name': 'V_TRG_UPD_DATE_STR', 'assignment_operator': ':=', 'expression': "TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD');", 'assignment_line_no': 6, 'assignment_indent': 4}, {'condition': " TG_OP = 'UPDATE' ", 'type': 'if_else', 'if_line_no': 7, 'then_line_no': 7, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'condition': " COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') ", 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 8, 'end_if_line_no': 32, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 11, 'statement_indent': 20}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 17, 'statement_indent': 20}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 23, 'statement_indent': 20}]}, {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'return_statement', 'sql_statement': 'RETURN NULL;', 'statement_line_no': 35, 'statement_indent': 4}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 36}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'COALESCE(NEW.UPD_USER, OLD.UPD_USER);', 'assignment_line_no': 5, 'assignment_indent': 4}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_TRG_UPD_DATE_STR', 'assignment_operator': ':=', 'expression': "TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD');", 'assignment_line_no': 6, 'assignment_indent': 4}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " TG_OP = 'UPDATE' ", 'type': 'if_else', 'if_line_no': 7, 'then_line_no': 7, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'condition': " COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') ", 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 8, 'end_if_line_no': 32, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 11, 'statement_indent': 20}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 17, 'statement_indent': 20}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 23, 'statement_indent': 20}]}, {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') ", 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 8, 'end_if_line_no': 32, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 11, 'statement_indent': 20}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 17, 'statement_indent': 20}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 23, 'statement_indent': 20}]}, {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 11, 'statement_indent': 20}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 17, 'statement_indent': 20}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 23, 'statement_indent': 20}]}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 11, 'statement_indent': 20}]}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 11, 'statement_indent': 20}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 17, 'statement_indent': 20}]}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 17, 'statement_indent': 20}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 23, 'statement_indent': 20}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'return_statement', 'sql_statement': 'RETURN NULL;', 'statement_line_no': 35, 'statement_indent': 4}
2025-09-03 04:09:45,282 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list []
2025-09-03 04:09:45,290 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:    filename                                               line  line_no  indent
0   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
1   zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
2   zzz.sql                              ELSIF (DELETING) THEN      192     8.0
3   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
4   zzz.sql                                            END IF;      196     8.0
5   eee.sql                                            DECLARE        5     4.0
6   eee.sql                            v_inner_counter NUMBER;        7     8.0
7   eee.sql                                     <<outer_loop>>       10     8.0
8   eee.sql                                               LOOP       11     8.0
9   eee.sql                                     <<inner_loop>>       14    12.0
10  eee.sql                                               LOOP       15    12.0
11  eee.sql          EXIT inner_loop WHEN v_inner_counter > 3;       20    16.0
12  eee.sql                               END LOOP inner_loop;       21    12.0
13  eee.sql          EXIT outer_loop WHEN v_outer_counter > 5;       24    12.0
14  eee.sql                               END LOOP outer_loop;       25     8.0
2025-09-03 04:09:45,290 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 04:09:45,290 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.08201146125793457 seconds
2025-09-03 04:09:45,290 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 04:09:45,290 - root - DEBUG - [common.py:105] - File details: trigger5.sql
2025-09-03 04:09:45,291 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 04:09:45,291 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 2 vars, 0 consts, 0 excs, 0 comments
2025-09-03 04:09:45,291 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 04:09:45,291 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:45,291 - root - DEBUG - [common.py:105] - File details in metadata: trigger5.sql (1538 bytes)
2025-09-03 04:09:45,291 - root - DEBUG - [common.py:105] - Analysis statistics: 2 vars, 0 consts, 0 excs, 0 comments
2025-09-03 04:09:45,291 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\trigger5_analysis.json
2025-09-03 04:09:45,292 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\trigger5_analysis.json
2025-09-03 04:09:45,293 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger trigger5.sql ===
2025-09-03 04:09:45,293 - root - DEBUG - [common.py:105] - ✓ Created trigger5_analysis.json
2025-09-03 04:09:45,293 - root - DEBUG - [common.py:105] - === Processing file 8/10: trigger6.sql ===
2025-09-03 04:09:45,293 - root - DEBUG - [common.py:105] - Source path: files/oracle\trigger6.sql
2025-09-03 04:09:45,293 - root - DEBUG - [common.py:105] - Output path: files/format_json\trigger6_analysis.json
2025-09-03 04:09:45,293 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger trigger6.sql ===
2025-09-03 04:09:45,293 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 04:09:45,293 - root - DEBUG - [main.py:245] - Reading SQL file: files/oracle\trigger6.sql
2025-09-03 04:09:45,294 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 25 characters of SQL
2025-09-03 04:09:45,294 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 04:09:45,294 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 04:09:45,294 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 04:09:45,294 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 04:09:45,294 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 81 total, 32 with semicolons, 8 empty lines skipped
2025-09-03 04:09:45,294 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 04:09:45,294 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 81 lines cleaned
2025-09-03 04:09:45,294 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 04:09:45,294 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 6 comments extracted, 75 lines cleaned
2025-09-03 04:09:45,294 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 04:09:45,294 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 1
2025-09-03 04:09:45,294 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 12
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 1-11
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_TRIGGER_NAME
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_EVOLVED_THEME_NO
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_PROPOSAL_ID
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: C_PROPOSAL_STATUS_ACTIVE
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: C_PROPOSAL_STATUS_EVOLVED
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: C_PROPOSAL_STATUS_TERMINATED
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: V_NO_UPDATE_TO_EVOLVED
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: V_NO_UPDATE_TERMINATED_TO_ACTIVE
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: V_NO_UPDATE_EVOLVED_TO_TERMINATED
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: V_EXPLORATORY_THEMENO_NOT_NULL
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'DUP_VAL_ON_INDEX', 'when_line_no': 81, 'when_indent': 4, 'then_line_no': 81, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20600, V_TRIGGER_NAME);', 'line_no': 82}]}, {'type': 'exception_handler', 'exception_name': 'V_NO_UPDATE_EVOLVED_TO_TERMINATED', 'when_line_no': 83, 'when_indent': 4, 'then_line_no': 83, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20800, V_TRIGGER_NAME);', 'line_no': 84}]}, {'type': 'exception_handler', 'exception_name': 'V_NO_UPDATE_TO_EVOLVED', 'when_line_no': 85, 'when_indent': 4, 'then_line_no': 85, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20900, V_TRIGGER_NAME);', 'line_no': 86}]}, {'type': 'exception_handler', 'exception_name': 'V_EXPLORATORY_THEMENO_NOT_NULL', 'when_line_no': 87, 'when_indent': 4, 'then_line_no': 87, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20940, V_TRIGGER_NAME);', 'line_no': 88}]}]
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO;', 'line_no': 13}
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) THEN', 'line_no': 18}
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 18
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 18 i: 20
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,295 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_TO_EVOLVED;', 'line_no': 19}]
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 4, 'end_if_line_no': 20, 'then_statements': [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_TO_EVOLVED;', 'line_no': 19}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE V_NO_UPDATE_TO_EVOLVED;', 'line_no': 19}
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) THEN', 'line_no': 24}
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 24
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 24 i: 26
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'line_no': 25}]
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) ', 'type': 'if_else', 'if_line_no': 24, 'then_line_no': 24, 'if_indent': 4, 'end_if_line_no': 26, 'then_statements': [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'line_no': 25}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'line_no': 25}
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) THEN', 'line_no': 30}
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 30
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 30 i: 32
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        V_EVOLVED_THEME_NO := NULL;', 'line_no': 31}]
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 32, 'then_statements': [{'indent': 8, 'line': '        V_EVOLVED_THEME_NO := NULL;', 'line_no': 31}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        V_EVOLVED_THEME_NO := NULL;', 'line_no': 31}
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) THEN', 'line_no': 36}
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 36
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 36 i: 38
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'line_no': 37}]
2025-09-03 04:09:45,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 38, 'then_statements': [{'indent': 8, 'line': '        RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'line_no': 37}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'line_no': 37}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (INSERTING) THEN', 'line_no': 40}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 40
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 40 i: 79
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 40
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1276] - then_statements: 0 24
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        SET', 'line_no': 66}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        WHERE', 'line_no': 74}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': "        IF NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') THEN", 'line_no': 76}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}
2025-09-03 04:09:45,297 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 78}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 4, 'line': '    END IF;', 'line_no': 79}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1297] - {'indent': 4, 'line': '    ELSIF (UPDATING) THEN', 'line_no': 64}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 4, 'line': '    ELSIF (UPDATING) THEN', 'line_no': 64}, {'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}, {'indent': 8, 'line': '        SET', 'line_no': 66}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}, {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}, {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}, {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}, {'indent': 8, 'line': '        WHERE', 'line_no': 74}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}, {'indent': 8, 'line': "        IF NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') THEN", 'line_no': 76}, {'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}, {'indent': 8, 'line': '        END IF;', 'line_no': 78}]
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 4, 'line': '    ELSIF (UPDATING) THEN', 'line_no': 64}, {'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}, {'indent': 8, 'line': '        SET', 'line_no': 66}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}, {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}, {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}, {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}, {'indent': 8, 'line': '        WHERE', 'line_no': 74}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}, {'indent': 8, 'line': "        IF NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') THEN", 'line_no': 76}, {'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}, {'indent': 8, 'line': '        END IF;', 'line_no': 78}]
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 4, 'line': '    ELSIF (UPDATING) THEN', 'line_no': 64}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 64 then_i: 64
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 4, 'line': '    ELSIF (UPDATING) THEN', 'line_no': 64}, {'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}, {'indent': 8, 'line': '        SET', 'line_no': 66}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}, {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}, {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}, {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}, {'indent': 8, 'line': '        WHERE', 'line_no': 74}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}, {'indent': 8, 'line': "        IF NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') THEN", 'line_no': 76}, {'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}, {'indent': 8, 'line': '        END IF;', 'line_no': 78}]
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 4
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 40, 'then_line_no': 40, 'if_indent': 4, 'end_if_line_no': 79, 'then_statements': [{'indent': 8, 'line': '        V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'line_no': 41}, {'indent': 8, 'line': '        INSERT INTO V_NEW_MEDICINE_PROPOSALS(', 'line_no': 42}, {'indent': 12, 'line': '            PROPOSAL_ID,', 'line_no': 43}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO,', 'line_no': 44}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 45}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 46}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 47}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 48}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 49}, {'indent': 12, 'line': '            FIREWALL_ID', 'line_no': 50}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 51}, {'indent': 12, 'line': '            V_PROPOSAL_ID,', 'line_no': 52}, {'indent': 12, 'line': '            :NEW.EXPLORATORY_THEME_NO,', 'line_no': 53}, {'indent': 12, 'line': '            :NEW.PROPOSAL_NAME,', 'line_no': 54}, {'indent': 12, 'line': '            :NEW.PROPOSAL_STATUS_CD,', 'line_no': 55}, {'indent': 12, 'line': '            :NEW.EVOLVED_THEME_NO,', 'line_no': 56}, {'indent': 12, 'line': '            :NEW.MOLECULE_TYPE_ID,', 'line_no': 57}, {'indent': 12, 'line': '            :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 58}, {'indent': 12, 'line': '            :NEW.FIREWALL_ID', 'line_no': 59}, {'indent': 8, 'line': '        );', 'line_no': 60}, {'indent': 8, 'line': '        IF :NEW.PARTNER_ID IS NOT NULL THEN', 'line_no': 61}, {'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 62}, {'indent': 8, 'line': '        END IF;', 'line_no': 63}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 64, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 64, 'then_statements': [{'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}, {'indent': 8, 'line': '        SET', 'line_no': 66}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}, {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}, {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}, {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}, {'indent': 8, 'line': '        WHERE', 'line_no': 74}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}, {'indent': 8, 'line': "        IF NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') THEN", 'line_no': 76}, {'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}, {'indent': 8, 'line': '        END IF;', 'line_no': 78}]}], 'else_statements': []}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'line_no': 41}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        INSERT INTO V_NEW_MEDICINE_PROPOSALS(', 'line_no': 42}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROPOSAL_ID,', 'line_no': 43}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            EXPLORATORY_THEME_NO,', 'line_no': 44}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 45}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 46}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 47}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 48}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 49}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FIREWALL_ID', 'line_no': 50}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        ) VALUES (', 'line_no': 51}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_PROPOSAL_ID,', 'line_no': 52}
2025-09-03 04:09:45,298 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.EXPLORATORY_THEME_NO,', 'line_no': 53}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.PROPOSAL_NAME,', 'line_no': 54}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.PROPOSAL_STATUS_CD,', 'line_no': 55}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.EVOLVED_THEME_NO,', 'line_no': 56}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.MOLECULE_TYPE_ID,', 'line_no': 57}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 58}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            :NEW.FIREWALL_ID', 'line_no': 59}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        );', 'line_no': 60}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF :NEW.PARTNER_ID IS NOT NULL THEN', 'line_no': 61}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 61
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 61 i: 63
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 62}]
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' :NEW.PARTNER_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 61, 'then_line_no': 61, 'if_indent': 8, 'end_if_line_no': 63, 'then_statements': [{'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 62}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 62}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SET', 'line_no': 66}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 74}
2025-09-03 04:09:45,299 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') THEN", 'line_no': 76}
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 76
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 76 i: 78
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}]
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20600, V_TRIGGER_NAME);', 'line_no': 82}
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20800, V_TRIGGER_NAME);', 'line_no': 84}
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20900, V_TRIGGER_NAME);', 'line_no': 86}
2025-09-03 04:09:45,300 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20940, V_TRIGGER_NAME);', 'line_no': 88}
2025-09-03 04:09:45,308 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 4, 'line': '    V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO;', 'line_no': 13}, {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 4, 'end_if_line_no': 20, 'then_statements': [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_TO_EVOLVED;', 'line_no': 19}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) ', 'type': 'if_else', 'if_line_no': 24, 'then_line_no': 24, 'if_indent': 4, 'end_if_line_no': 26, 'then_statements': [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'line_no': 25}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 32, 'then_statements': [{'indent': 8, 'line': '        V_EVOLVED_THEME_NO := NULL;', 'line_no': 31}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 38, 'then_statements': [{'indent': 8, 'line': '        RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'line_no': 37}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 40, 'then_line_no': 40, 'if_indent': 4, 'end_if_line_no': 79, 'then_statements': [{'indent': 8, 'line': '        V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'line_no': 41}, {'indent': 8, 'line': '        INSERT INTO V_NEW_MEDICINE_PROPOSALS(', 'line_no': 42}, {'indent': 12, 'line': '            PROPOSAL_ID,', 'line_no': 43}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO,', 'line_no': 44}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 45}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 46}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 47}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 48}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 49}, {'indent': 12, 'line': '            FIREWALL_ID', 'line_no': 50}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 51}, {'indent': 12, 'line': '            V_PROPOSAL_ID,', 'line_no': 52}, {'indent': 12, 'line': '            :NEW.EXPLORATORY_THEME_NO,', 'line_no': 53}, {'indent': 12, 'line': '            :NEW.PROPOSAL_NAME,', 'line_no': 54}, {'indent': 12, 'line': '            :NEW.PROPOSAL_STATUS_CD,', 'line_no': 55}, {'indent': 12, 'line': '            :NEW.EVOLVED_THEME_NO,', 'line_no': 56}, {'indent': 12, 'line': '            :NEW.MOLECULE_TYPE_ID,', 'line_no': 57}, {'indent': 12, 'line': '            :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 58}, {'indent': 12, 'line': '            :NEW.FIREWALL_ID', 'line_no': 59}, {'indent': 8, 'line': '        );', 'line_no': 60}, {'condition': ' :NEW.PARTNER_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 61, 'then_line_no': 61, 'if_indent': 8, 'end_if_line_no': 63, 'then_statements': [{'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 62}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 64, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 64, 'then_statements': [{'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}, {'indent': 8, 'line': '        SET', 'line_no': 66}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}, {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}, {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}, {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}, {'indent': 8, 'line': '        WHERE', 'line_no': 74}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}, {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': []}]
2025-09-03 04:09:45,308 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,308 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 4, 'line': '    V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO;', 'line_no': 13}
2025-09-03 04:09:45,308 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,316 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_TO_EVOLVED;', 'line_no': 19}]
2025-09-03 04:09:45,316 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,316 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE V_NO_UPDATE_TO_EVOLVED;', 'line_no': 19}
2025-09-03 04:09:45,324 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,325 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,333 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'line_no': 25}]
2025-09-03 04:09:45,333 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,333 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'line_no': 25}
2025-09-03 04:09:45,342 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,342 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,351 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        V_EVOLVED_THEME_NO := NULL;', 'line_no': 31}]
2025-09-03 04:09:45,351 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,351 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        V_EVOLVED_THEME_NO := NULL;', 'line_no': 31}
2025-09-03 04:09:45,361 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,361 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,369 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'line_no': 37}]
2025-09-03 04:09:45,369 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,369 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'line_no': 37}
2025-09-03 04:09:45,377 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,377 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'line_no': 41}, {'indent': 8, 'line': '        INSERT INTO V_NEW_MEDICINE_PROPOSALS(', 'line_no': 42}, {'indent': 12, 'line': '            PROPOSAL_ID,', 'line_no': 43}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO,', 'line_no': 44}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 45}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 46}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 47}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 48}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 49}, {'indent': 12, 'line': '            FIREWALL_ID', 'line_no': 50}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 51}, {'indent': 12, 'line': '            V_PROPOSAL_ID,', 'line_no': 52}, {'indent': 12, 'line': '            :NEW.EXPLORATORY_THEME_NO,', 'line_no': 53}, {'indent': 12, 'line': '            :NEW.PROPOSAL_NAME,', 'line_no': 54}, {'indent': 12, 'line': '            :NEW.PROPOSAL_STATUS_CD,', 'line_no': 55}, {'indent': 12, 'line': '            :NEW.EVOLVED_THEME_NO,', 'line_no': 56}, {'indent': 12, 'line': '            :NEW.MOLECULE_TYPE_ID,', 'line_no': 57}, {'indent': 12, 'line': '            :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 58}, {'indent': 12, 'line': '            :NEW.FIREWALL_ID', 'line_no': 59}, {'indent': 8, 'line': '        );', 'line_no': 60}, {'condition': ' :NEW.PARTNER_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 61, 'then_line_no': 61, 'if_indent': 8, 'end_if_line_no': 63, 'then_statements': [{'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 62}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'line_no': 41}
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        INSERT INTO V_NEW_MEDICINE_PROPOSALS(', 'line_no': 42}
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROPOSAL_ID,', 'line_no': 43}
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            EXPLORATORY_THEME_NO,', 'line_no': 44}
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 45}
2025-09-03 04:09:45,385 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 46}
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 47}
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 48}
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 49}
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FIREWALL_ID', 'line_no': 50}
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        ) VALUES (', 'line_no': 51}
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_PROPOSAL_ID,', 'line_no': 52}
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.EXPLORATORY_THEME_NO,', 'line_no': 53}
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:45,386 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.PROPOSAL_NAME,', 'line_no': 54}
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.PROPOSAL_STATUS_CD,', 'line_no': 55}
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.EVOLVED_THEME_NO,', 'line_no': 56}
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.MOLECULE_TYPE_ID,', 'line_no': 57}
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 17
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 58}
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 18
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            :NEW.FIREWALL_ID', 'line_no': 59}
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 19
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        );', 'line_no': 60}
2025-09-03 04:09:45,387 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 20
2025-09-03 04:09:45,395 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 62}]
2025-09-03 04:09:45,395 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,395 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 62}
2025-09-03 04:09:45,395 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA
2025-09-03 04:09:45,395 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);
2025-09-03 04:09:45,395 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 62
2025-09-03 04:09:45,395 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 62
2025-09-03 04:09:45,395 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(V_PROPOSAL_ID, :NEW.PARTNER_ID);
2025-09-03 04:09:45,395 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}
2025-09-03 04:09:45,404 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}, {'indent': 8, 'line': '        SET', 'line_no': 66}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}, {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}, {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}, {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}, {'indent': 8, 'line': '        WHERE', 'line_no': 74}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}, {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SET', 'line_no': 66}
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}
2025-09-03 04:09:45,412 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:45,413 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}
2025-09-03 04:09:45,413 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:45,413 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}
2025-09-03 04:09:45,413 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:45,413 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 74}
2025-09-03 04:09:45,413 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:45,413 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}
2025-09-03 04:09:45,413 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:45,421 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}]
2025-09-03 04:09:45,421 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,421 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);', 'line_no': 77}
2025-09-03 04:09:45,421 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA
2025-09-03 04:09:45,421 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);
2025-09-03 04:09:45,421 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 77
2025-09-03 04:09:45,421 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 77
2025-09-03 04:09:45,421 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA(:NEW.PROPOSAL_ID, :NEW.PARTNER_ID);
2025-09-03 04:09:45,421 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}
2025-09-03 04:09:45,429 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,437 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,447 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20600, V_TRIGGER_NAME);', 'line_no': 82}]
2025-09-03 04:09:45,447 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,447 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20600, V_TRIGGER_NAME);', 'line_no': 82}
2025-09-03 04:09:45,447 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,447 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20600, V_TRIGGER_NAME);
2025-09-03 04:09:45,447 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 82
2025-09-03 04:09:45,447 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 82
2025-09-03 04:09:45,447 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20600, V_TRIGGER_NAME);
2025-09-03 04:09:45,448 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20600', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20600, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,459 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20800, V_TRIGGER_NAME);', 'line_no': 84}]
2025-09-03 04:09:45,459 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,459 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20800, V_TRIGGER_NAME);', 'line_no': 84}
2025-09-03 04:09:45,459 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,459 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20800, V_TRIGGER_NAME);
2025-09-03 04:09:45,459 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 84
2025-09-03 04:09:45,459 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 84
2025-09-03 04:09:45,459 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20800, V_TRIGGER_NAME);
2025-09-03 04:09:45,459 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20800', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20800, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,467 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20900, V_TRIGGER_NAME);', 'line_no': 86}]
2025-09-03 04:09:45,467 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,467 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20900, V_TRIGGER_NAME);', 'line_no': 86}
2025-09-03 04:09:45,467 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,467 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20900, V_TRIGGER_NAME);
2025-09-03 04:09:45,467 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 86
2025-09-03 04:09:45,467 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 86
2025-09-03 04:09:45,467 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20900, V_TRIGGER_NAME);
2025-09-03 04:09:45,467 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20900', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20900, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,478 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20940, V_TRIGGER_NAME);', 'line_no': 88}]
2025-09-03 04:09:45,478 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,479 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR(-20940, V_TRIGGER_NAME);', 'line_no': 88}
2025-09-03 04:09:45,479 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,479 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR(-20940, V_TRIGGER_NAME);
2025-09-03 04:09:45,479 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 88
2025-09-03 04:09:45,479 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 88
2025-09-03 04:09:45,479 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR(-20940, V_TRIGGER_NAME);
2025-09-03 04:09:45,479 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20940', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20940, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,479 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 4, 'line': '    V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO;', 'line_no': 13}, {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 4, 'end_if_line_no': 20, 'then_statements': [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_TO_EVOLVED;', 'line_no': 19}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) ', 'type': 'if_else', 'if_line_no': 24, 'then_line_no': 24, 'if_indent': 4, 'end_if_line_no': 26, 'then_statements': [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'line_no': 25}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 32, 'then_statements': [{'indent': 8, 'line': '        V_EVOLVED_THEME_NO := NULL;', 'line_no': 31}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 38, 'then_statements': [{'indent': 8, 'line': '        RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'line_no': 37}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 40, 'then_line_no': 40, 'if_indent': 4, 'end_if_line_no': 79, 'then_statements': [{'indent': 8, 'line': '        V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'line_no': 41}, {'indent': 8, 'line': '        INSERT INTO V_NEW_MEDICINE_PROPOSALS(', 'line_no': 42}, {'indent': 12, 'line': '            PROPOSAL_ID,', 'line_no': 43}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO,', 'line_no': 44}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 45}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 46}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 47}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 48}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 49}, {'indent': 12, 'line': '            FIREWALL_ID', 'line_no': 50}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 51}, {'indent': 12, 'line': '            V_PROPOSAL_ID,', 'line_no': 52}, {'indent': 12, 'line': '            :NEW.EXPLORATORY_THEME_NO,', 'line_no': 53}, {'indent': 12, 'line': '            :NEW.PROPOSAL_NAME,', 'line_no': 54}, {'indent': 12, 'line': '            :NEW.PROPOSAL_STATUS_CD,', 'line_no': 55}, {'indent': 12, 'line': '            :NEW.EVOLVED_THEME_NO,', 'line_no': 56}, {'indent': 12, 'line': '            :NEW.MOLECULE_TYPE_ID,', 'line_no': 57}, {'indent': 12, 'line': '            :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 58}, {'indent': 12, 'line': '            :NEW.FIREWALL_ID', 'line_no': 59}, {'indent': 8, 'line': '        );', 'line_no': 60}, {'condition': ' :NEW.PARTNER_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 61, 'then_line_no': 61, 'if_indent': 8, 'end_if_line_no': 63, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 64, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 64, 'then_statements': [{'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}, {'indent': 8, 'line': '        SET', 'line_no': 66}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}, {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}, {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}, {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}, {'indent': 8, 'line': '        WHERE', 'line_no': 74}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}, {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': []}]
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:     V_EVOLVED_THEME_NO := :NEW.EVOLVED_THEME_NO; || 13 || 4
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 13 || assignment
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 13 || assignment
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_EVOLVED_THEME_NO', 'assignment_operator': ':=', 'expression': ':NEW.EVOLVED_THEME_NO;', 'assignment_line_no': 13, 'assignment_indent': 4}
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_TO_EVOLVED;', 'line_no': 19}]
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         RAISE V_NO_UPDATE_TO_EVOLVED; || 19 || 8
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 19 || raise_statement || RAISE
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 19 || raise_statement
2025-09-03 04:09:45,480 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 19 || raise_statement
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 19 || raise_statement
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'line_no': 25}]
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED; || 25 || 8
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 25 || raise_statement || RAISE
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 25 || raise_statement
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 25 || raise_statement
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 25 || raise_statement
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,481 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 3
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        V_EVOLVED_THEME_NO := NULL;', 'line_no': 31}]
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         V_EVOLVED_THEME_NO := NULL; || 31 || 8
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 31 || assignment
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 31 || assignment
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_EVOLVED_THEME_NO', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 31, 'assignment_indent': 8}
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 4
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'line_no': 37}]
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         RAISE V_EXPLORATORY_THEMENO_NOT_NULL; || 37 || 8
2025-09-03 04:09:45,482 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 37 || raise_statement || RAISE
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 37 || raise_statement
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 37 || raise_statement
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 37 || raise_statement
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 5
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'line_no': 41}, {'indent': 8, 'line': '        INSERT INTO V_NEW_MEDICINE_PROPOSALS(', 'line_no': 42}, {'indent': 12, 'line': '            PROPOSAL_ID,', 'line_no': 43}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO,', 'line_no': 44}, {'indent': 12, 'line': '            PROPOSAL_NAME,', 'line_no': 45}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD,', 'line_no': 46}, {'indent': 12, 'line': '            EVOLVED_THEME_NO,', 'line_no': 47}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID,', 'line_no': 48}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID,', 'line_no': 49}, {'indent': 12, 'line': '            FIREWALL_ID', 'line_no': 50}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 51}, {'indent': 12, 'line': '            V_PROPOSAL_ID,', 'line_no': 52}, {'indent': 12, 'line': '            :NEW.EXPLORATORY_THEME_NO,', 'line_no': 53}, {'indent': 12, 'line': '            :NEW.PROPOSAL_NAME,', 'line_no': 54}, {'indent': 12, 'line': '            :NEW.PROPOSAL_STATUS_CD,', 'line_no': 55}, {'indent': 12, 'line': '            :NEW.EVOLVED_THEME_NO,', 'line_no': 56}, {'indent': 12, 'line': '            :NEW.MOLECULE_TYPE_ID,', 'line_no': 57}, {'indent': 12, 'line': '            :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 58}, {'indent': 12, 'line': '            :NEW.FIREWALL_ID', 'line_no': 59}, {'indent': 8, 'line': '        );', 'line_no': 60}, {'condition': ' :NEW.PARTNER_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 61, 'then_line_no': 61, 'if_indent': 8, 'end_if_line_no': 63, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         V_PROPOSAL_ID := PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL; || 41 || 8
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 41 || assignment
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 41 || assignment
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_PROPOSAL_ID', 'assignment_operator': ':=', 'expression': 'PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'assignment_line_no': 41, 'assignment_indent': 8}
2025-09-03 04:09:45,483 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         INSERT INTO V_NEW_MEDICINE_PROPOSALS( || 42 || 8
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 42 || insert_statement || INSERT
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 42 || insert_statement
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 42 || insert_statement
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 60 || insert_statement
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 20
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}]
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        UPDATE V_NEW_MEDICINE_PROPOSALS', 'line_no': 65}, {'indent': 8, 'line': '        SET', 'line_no': 66}, {'indent': 12, 'line': '            EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO,', 'line_no': 67}, {'indent': 12, 'line': '            PROPOSAL_NAME = :NEW.PROPOSAL_NAME,', 'line_no': 68}, {'indent': 12, 'line': '            PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD,', 'line_no': 69}, {'indent': 12, 'line': '            EVOLVED_THEME_NO = V_EVOLVED_THEME_NO,', 'line_no': 70}, {'indent': 12, 'line': '            MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID,', 'line_no': 71}, {'indent': 12, 'line': '            PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID,', 'line_no': 72}, {'indent': 12, 'line': '            FIREWALL_ID = :NEW.FIREWALL_ID', 'line_no': 73}, {'indent': 8, 'line': '        WHERE', 'line_no': 74}, {'indent': 12, 'line': '            PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'line_no': 75}, {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,484 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         UPDATE V_NEW_MEDICINE_PROPOSALS || 65 || 8
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 65 || update_statement || UPDATE
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 65 || update_statement
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 65 || update_statement
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 75 || update_statement
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO, PROPOSAL_NAME = :NEW.PROPOSAL_NAME, PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD, EVOLVED_THEME_NO = V_EVOLVED_THEME_NO, MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID = :NEW.FIREWALL_ID WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 11
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}]
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20600', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20600, V_TRIGGER_NAME'}}]
2025-09-03 04:09:45,485 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,486 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20800', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20800, V_TRIGGER_NAME'}}]
2025-09-03 04:09:45,486 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,486 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20900', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20900, V_TRIGGER_NAME'}}]
2025-09-03 04:09:45,486 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,486 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20940', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20940, V_TRIGGER_NAME'}}]
2025-09-03 04:09:45,486 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:45,486 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 12, 'begin_indent': 0, 'begin_end_statements': [{'type': 'assignment', 'variable_name': 'V_EVOLVED_THEME_NO', 'assignment_operator': ':=', 'expression': ':NEW.EVOLVED_THEME_NO;', 'assignment_line_no': 13, 'assignment_indent': 4}, {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 4, 'end_if_line_no': 20, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE V_NO_UPDATE_TO_EVOLVED;', 'statement_line_no': 19, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) ', 'type': 'if_else', 'if_line_no': 24, 'then_line_no': 24, 'if_indent': 4, 'end_if_line_no': 26, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'statement_line_no': 25, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 32, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_EVOLVED_THEME_NO', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 31, 'assignment_indent': 8}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 38, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'statement_line_no': 37, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 40, 'then_line_no': 40, 'if_indent': 4, 'end_if_line_no': 79, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_PROPOSAL_ID', 'assignment_operator': ':=', 'expression': 'PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'assignment_line_no': 41, 'assignment_indent': 8}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );', 'statement_line_no': 42, 'statement_indent': 8}, {'condition': ' :NEW.PARTNER_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 61, 'then_line_no': 61, 'if_indent': 8, 'end_if_line_no': 63, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 64, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 64, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO, PROPOSAL_NAME = :NEW.PROPOSAL_NAME, PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD, EVOLVED_THEME_NO = V_EVOLVED_THEME_NO, MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID = :NEW.FIREWALL_ID WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'statement_line_no': 65, 'statement_indent': 8}, {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'DUP_VAL_ON_INDEX', 'when_line_no': 81, 'when_indent': 4, 'then_line_no': 81, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20600', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20600, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'V_NO_UPDATE_EVOLVED_TO_TERMINATED', 'when_line_no': 83, 'when_indent': 4, 'then_line_no': 83, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20800', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20800, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'V_NO_UPDATE_TO_EVOLVED', 'when_line_no': 85, 'when_indent': 4, 'then_line_no': 85, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20900', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20900, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'V_EXPLORATORY_THEMENO_NOT_NULL', 'when_line_no': 87, 'when_indent': 4, 'then_line_no': 87, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20940', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20940, V_TRIGGER_NAME'}}]}], 'exception_line_no': 80, 'end_line_no': 89}
2025-09-03 04:09:45,486 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_EVOLVED_THEME_NO', 'assignment_operator': ':=', 'expression': ':NEW.EVOLVED_THEME_NO;', 'assignment_line_no': 13, 'assignment_indent': 4}
2025-09-03 04:09:45,486 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 4, 'end_if_line_no': 20, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE V_NO_UPDATE_TO_EVOLVED;', 'statement_line_no': 19, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE V_NO_UPDATE_TO_EVOLVED;', 'statement_line_no': 19, 'statement_indent': 8}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) ', 'type': 'if_else', 'if_line_no': 24, 'then_line_no': 24, 'if_indent': 4, 'end_if_line_no': 26, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'statement_line_no': 25, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'statement_line_no': 25, 'statement_indent': 8}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 32, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_EVOLVED_THEME_NO', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 31, 'assignment_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_EVOLVED_THEME_NO', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 31, 'assignment_indent': 8}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 38, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'statement_line_no': 37, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'statement_line_no': 37, 'statement_indent': 8}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 40, 'then_line_no': 40, 'if_indent': 4, 'end_if_line_no': 79, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_PROPOSAL_ID', 'assignment_operator': ':=', 'expression': 'PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'assignment_line_no': 41, 'assignment_indent': 8}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );', 'statement_line_no': 42, 'statement_indent': 8}, {'condition': ' :NEW.PARTNER_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 61, 'then_line_no': 61, 'if_indent': 8, 'end_if_line_no': 63, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 64, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 64, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO, PROPOSAL_NAME = :NEW.PROPOSAL_NAME, PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD, EVOLVED_THEME_NO = V_EVOLVED_THEME_NO, MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID = :NEW.FIREWALL_ID WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'statement_line_no': 65, 'statement_indent': 8}, {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': []}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_PROPOSAL_ID', 'assignment_operator': ':=', 'expression': 'PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'assignment_line_no': 41, 'assignment_indent': 8}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );', 'statement_line_no': 42, 'statement_indent': 8}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' :NEW.PARTNER_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 61, 'then_line_no': 61, 'if_indent': 8, 'end_if_line_no': 63, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 64, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 64, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO, PROPOSAL_NAME = :NEW.PROPOSAL_NAME, PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD, EVOLVED_THEME_NO = V_EVOLVED_THEME_NO, MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID = :NEW.FIREWALL_ID WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'statement_line_no': 65, 'statement_indent': 8}, {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:45,487 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': 'UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO, PROPOSAL_NAME = :NEW.PROPOSAL_NAME, PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD, EVOLVED_THEME_NO = V_EVOLVED_THEME_NO, MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID = :NEW.FIREWALL_ID WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'statement_line_no': 65, 'statement_indent': 8}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'DUP_VAL_ON_INDEX', 'when_line_no': 81, 'when_indent': 4, 'then_line_no': 81, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20600', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20600, V_TRIGGER_NAME'}}]}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20600', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20600, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'V_NO_UPDATE_EVOLVED_TO_TERMINATED', 'when_line_no': 83, 'when_indent': 4, 'then_line_no': 83, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20800', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20800, V_TRIGGER_NAME'}}]}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20800', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20800, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'V_NO_UPDATE_TO_EVOLVED', 'when_line_no': 85, 'when_indent': 4, 'then_line_no': 85, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20900', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20900, V_TRIGGER_NAME'}}]}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20900', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20900, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'V_EXPLORATORY_THEMENO_NOT_NULL', 'when_line_no': 87, 'when_indent': 4, 'then_line_no': 87, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20940', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20940, V_TRIGGER_NAME'}}]}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20940', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20940, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,488 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list []
2025-09-03 04:09:45,498 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:    filename                                               line  line_no  indent
0   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
1   zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
2   zzz.sql                              ELSIF (DELETING) THEN      192     8.0
3   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
4   zzz.sql                                            END IF;      196     8.0
5   eee.sql                                            DECLARE        5     4.0
6   eee.sql                            v_inner_counter NUMBER;        7     8.0
7   eee.sql                                     <<outer_loop>>       10     8.0
8   eee.sql                                               LOOP       11     8.0
9   eee.sql                                     <<inner_loop>>       14    12.0
10  eee.sql                                               LOOP       15    12.0
11  eee.sql          EXIT inner_loop WHEN v_inner_counter > 3;       20    16.0
12  eee.sql                               END LOOP inner_loop;       21    12.0
13  eee.sql          EXIT outer_loop WHEN v_outer_counter > 5;       24    12.0
14  eee.sql                               END LOOP outer_loop;       25     8.0
2025-09-03 04:09:45,499 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 04:09:45,499 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.2054133415222168 seconds
2025-09-03 04:09:45,499 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 04:09:45,499 - root - DEBUG - [common.py:105] - File details: trigger6.sql
2025-09-03 04:09:45,499 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 04:09:45,499 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 6 vars, 0 consts, 4 excs, 6 comments
2025-09-03 04:09:45,499 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 04:09:45,500 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:45,500 - root - DEBUG - [common.py:105] - File details in metadata: trigger6.sql (3898 bytes)
2025-09-03 04:09:45,500 - root - DEBUG - [common.py:105] - Analysis statistics: 6 vars, 0 consts, 4 excs, 6 comments
2025-09-03 04:09:45,500 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\trigger6_analysis.json
2025-09-03 04:09:45,502 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\trigger6_analysis.json
2025-09-03 04:09:45,502 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger trigger6.sql ===
2025-09-03 04:09:45,502 - root - DEBUG - [common.py:105] - ✓ Created trigger6_analysis.json
2025-09-03 04:09:45,503 - root - DEBUG - [common.py:105] - === Processing file 9/10: yyy.sql ===
2025-09-03 04:09:45,503 - root - DEBUG - [common.py:105] - Source path: files/oracle\yyy.sql
2025-09-03 04:09:45,503 - root - DEBUG - [common.py:105] - Output path: files/format_json\yyy_analysis.json
2025-09-03 04:09:45,503 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger yyy.sql ===
2025-09-03 04:09:45,503 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 04:09:45,503 - root - DEBUG - [main.py:245] - Reading SQL file: files/oracle\yyy.sql
2025-09-03 04:09:45,503 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 20 characters of SQL
2025-09-03 04:09:45,504 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 04:09:45,504 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 04:09:45,504 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 04:09:45,504 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 04:09:45,504 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 335 total, 98 with semicolons, 35 empty lines skipped
2025-09-03 04:09:45,504 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 04:09:45,504 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 335 lines cleaned
2025-09-03 04:09:45,504 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 04:09:45,504 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 20 comments extracted, 318 lines cleaned
2025-09-03 04:09:45,504 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 1
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 23
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 1-22
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:446] - Processed constant: V_TRIGGER_NAME
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: CNTR
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_INS
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_DEL
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_UPD
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_USERID
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_REPORTING_ENTITY_CD
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_LEGAL_COMPANY_CD
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_OLD_LEGAL_COMPANY_CD
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_REP_CBC_FLAG
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_VALID_FROM_DATE
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: RU_NOT_IN_CBC_SCOPE
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_NO_ADR
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_CPY_STILL_IN_SCOPE
2025-09-03 04:09:45,505 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: CPY_IN_USE
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: INVALID_LEGAL_COMP
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_CPY_STILL_IN_MFR
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_ADDR_VALID_FROM_DATE
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_COUNTRY_CD
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_COMPANY_CODES_LIST
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 346, 'when_indent': 4, 'then_line_no': 346, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);', 'line_no': 347}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 348, 'when_indent': 4, 'then_line_no': 348, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20111, V_TRIGGER_NAME);', 'line_no': 349}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS', 'when_line_no': 350, 'when_indent': 4, 'then_line_no': 350, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);', 'line_no': 351}]}, {'type': 'exception_handler', 'exception_name': 'ERR_VALID_FROM_DATE', 'when_line_no': 352, 'when_indent': 4, 'then_line_no': 352, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20122, 'Please insert : Rep. Code Assignm. Valid from Date');", 'line_no': 353}]}, {'type': 'exception_handler', 'exception_name': 'RU_NOT_IN_CBC_SCOPE', 'when_line_no': 354, 'when_indent': 4, 'then_line_no': 354, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20123, 'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope');", 'line_no': 355}]}, {'type': 'exception_handler', 'exception_name': 'ERR_CPY_STILL_IN_SCOPE', 'when_line_no': 356, 'when_indent': 4, 'then_line_no': 356, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20124, 'The CBC/GBE Scope must be set to No before deactivating the company');", 'line_no': 357}]}, {'type': 'exception_handler', 'exception_name': 'ERR_NO_ADR', 'when_line_no': 358, 'when_indent': 4, 'then_line_no': 358, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20124, 'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes');", 'line_no': 359}]}, {'type': 'exception_handler', 'exception_name': 'CPY_IN_USE', 'when_line_no': 360, 'when_indent': 4, 'then_line_no': 360, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: '", 'line_no': 361}, {'indent': 42, 'line': '                                          || V_COMPANY_CODES_LIST);', 'line_no': 362}]}, {'type': 'exception_handler', 'exception_name': 'INVALID_LEGAL_COMP', 'when_line_no': 363, 'when_indent': 4, 'then_line_no': 363, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR ( -20126, V_LEGAL_COMPANY_CD', 'line_no': 364}, {'indent': 42, 'line': "                                          || ' is not a valid Legal Company Code');", 'line_no': 365}]}, {'type': 'exception_handler', 'exception_name': 'ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC', 'when_line_no': 366, 'when_indent': 4, 'then_line_no': 366, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20127, 'An Associate Entity cannot be in CBC/GBE Scope!');", 'line_no': 367}]}, {'type': 'exception_handler', 'exception_name': 'ERR_CPY_STILL_IN_MFR', 'when_line_no': 368, 'when_indent': 4, 'then_line_no': 368, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20127, 'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company');", 'line_no': 369}]}]
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:1591] - Begin line: {'indent': 4, 'line': '    BEGIN', 'line_no': 24} 0
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:1598] - Exception line: {'indent': 4, 'line': '    EXCEPTION', 'line_no': 26} 2
2025-09-03 04:09:45,506 - root - DEBUG - [OracleTriggerAnalyzer.py:1601] - End line: {'indent': 4, 'line': '    END;', 'line_no': 29} 5
2025-09-03 04:09:45,507 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 27, 'when_indent': 8, 'then_line_no': 27, 'exception_statements': [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 28}]}]
2025-09-03 04:09:45,507 - root - DEBUG - [OracleTriggerAnalyzer.py:1389] - case_i: 129 i: 159
2025-09-03 04:09:45,508 - root - DEBUG - [OracleTriggerAnalyzer.py:1460] - line_info : {'indent': 12, 'line': "            WHEN NVL (:OLD.REPORTING_ENTITY_CD, '-') !=", 'line_no': 130}
2025-09-03 04:09:45,508 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 12, 'line': "            WHEN NVL (:OLD.REPORTING_ENTITY_CD, '-') !=", 'line_no': 130}, {'indent': 12, 'line': "            NVL (:NEW.REPORTING_ENTITY_CD, '-')", 'line_no': 131}, {'indent': 12, 'line': "            OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'),", 'line_no': 132}, {'indent': 12, 'line': '            SYSDATE + 100) !=', 'line_no': 133}, {'indent': 12, 'line': "            NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'),", 'line_no': 134}, {'indent': 12, 'line': '            SYSDATE + 100)', 'line_no': 135}, {'indent': 12, 'line': "            OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'),", 'line_no': 136}, {'indent': 12, 'line': '            SYSDATE + 100) !=', 'line_no': 137}, {'indent': 12, 'line': "            NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'),", 'line_no': 138}, {'indent': 12, 'line': '            SYSDATE + 100)', 'line_no': 139}, {'indent': 12, 'line': '            THEN', 'line_no': 140}, {'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}, {'indent': 16, 'line': '                CASE', 'line_no': 142}, {'indent': 20, 'line': '                    WHEN ( :NEW.VALID_FROM_DATE IS NULL', 'line_no': 143}, {'indent': 20, 'line': '                    OR :NEW.VALID_FROM_DATE IS NULL)', 'line_no': 144}, {'indent': 20, 'line': '                    THEN', 'line_no': 145}, {'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}, {'indent': 20, 'line': '                    ELSE', 'line_no': 147}, {'indent': 24, 'line': '                        NULL;', 'line_no': 148}, {'indent': 16, 'line': '                END CASE;', 'line_no': 149}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (', 'line_no': 150}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 151}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,', 'line_no': 152}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,', 'line_no': 153}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,', 'line_no': 154}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID', 'line_no': 155}, {'indent': 16, 'line': '                );', 'line_no': 156}]
2025-09-03 04:09:45,508 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - WHEN NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) THEN
2025-09-03 04:09:45,508 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 130 then_i: 140
2025-09-03 04:09:45,508 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 12, 'line': "            WHEN NVL (:OLD.REPORTING_ENTITY_CD, '-') !=", 'line_no': 130}, {'indent': 12, 'line': "            NVL (:NEW.REPORTING_ENTITY_CD, '-')", 'line_no': 131}, {'indent': 12, 'line': "            OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'),", 'line_no': 132}, {'indent': 12, 'line': '            SYSDATE + 100) !=', 'line_no': 133}, {'indent': 12, 'line': "            NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'),", 'line_no': 134}, {'indent': 12, 'line': '            SYSDATE + 100)', 'line_no': 135}, {'indent': 12, 'line': "            OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'),", 'line_no': 136}, {'indent': 12, 'line': '            SYSDATE + 100) !=', 'line_no': 137}, {'indent': 12, 'line': "            NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'),", 'line_no': 138}, {'indent': 12, 'line': '            SYSDATE + 100)', 'line_no': 139}, {'indent': 12, 'line': '            THEN', 'line_no': 140}, {'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}, {'indent': 16, 'line': '                CASE', 'line_no': 142}, {'indent': 20, 'line': '                    WHEN ( :NEW.VALID_FROM_DATE IS NULL', 'line_no': 143}, {'indent': 20, 'line': '                    OR :NEW.VALID_FROM_DATE IS NULL)', 'line_no': 144}, {'indent': 20, 'line': '                    THEN', 'line_no': 145}, {'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}, {'indent': 20, 'line': '                    ELSE', 'line_no': 147}, {'indent': 24, 'line': '                        NULL;', 'line_no': 148}, {'indent': 16, 'line': '                END CASE;', 'line_no': 149}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (', 'line_no': 150}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 151}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,', 'line_no': 152}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,', 'line_no': 153}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,', 'line_no': 154}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID', 'line_no': 155}, {'indent': 16, 'line': '                );', 'line_no': 156}]
2025-09-03 04:09:45,508 - root - DEBUG - [OracleTriggerAnalyzer.py:1485] - {'indent': 16, 'line': '                NULL;', 'line_no': 158}
2025-09-03 04:09:45,508 - root - DEBUG - [OracleTriggerAnalyzer.py:1389] - case_i: 142 i: 149
2025-09-03 04:09:45,508 - root - DEBUG - [OracleTriggerAnalyzer.py:1460] - line_info : {'indent': 20, 'line': '                    WHEN ( :NEW.VALID_FROM_DATE IS NULL', 'line_no': 143}
2025-09-03 04:09:45,508 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 20, 'line': '                    WHEN ( :NEW.VALID_FROM_DATE IS NULL', 'line_no': 143}, {'indent': 20, 'line': '                    OR :NEW.VALID_FROM_DATE IS NULL)', 'line_no': 144}, {'indent': 20, 'line': '                    THEN', 'line_no': 145}, {'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]
2025-09-03 04:09:45,508 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - WHEN ( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL) THEN
2025-09-03 04:09:45,509 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 143 then_i: 145
2025-09-03 04:09:45,509 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 20, 'line': '                    WHEN ( :NEW.VALID_FROM_DATE IS NULL', 'line_no': 143}, {'indent': 20, 'line': '                    OR :NEW.VALID_FROM_DATE IS NULL)', 'line_no': 144}, {'indent': 20, 'line': '                    THEN', 'line_no': 145}, {'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]
2025-09-03 04:09:45,509 - root - DEBUG - [OracleTriggerAnalyzer.py:1485] - {'indent': 24, 'line': '                        NULL;', 'line_no': 148}
2025-09-03 04:09:45,509 - root - DEBUG - [OracleTriggerAnalyzer.py:1389] - case_i: 329 i: 341
2025-09-03 04:09:45,509 - root - DEBUG - [OracleTriggerAnalyzer.py:1460] - line_info : {'indent': 12, 'line': "            WHEN (NVL (:OLD.OFFICIAL_NAME, '-') !=", 'line_no': 330}
2025-09-03 04:09:45,509 - root - DEBUG - [OracleTriggerAnalyzer.py:1500] - [{'indent': 12, 'line': "            WHEN (NVL (:OLD.OFFICIAL_NAME, '-') !=", 'line_no': 330}, {'indent': 12, 'line': "            NVL (:NEW.OFFICIAL_NAME, '-'))", 'line_no': 331}, {'indent': 12, 'line': '            AND :OLD.OFFICIAL_NAME IS NOT NULL', 'line_no': 332}, {'indent': 12, 'line': '            THEN', 'line_no': 333}, {'indent': 16, 'line': '                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (', 'line_no': 334}, {'indent': 16, 'line': '                :NEW.COMPANY_CD,', 'line_no': 335}, {'indent': 16, 'line': '                V_LEGAL_COMPANY_CD,', 'line_no': 336}, {'indent': 16, 'line': '                :NEW.OFFICIAL_NAME,', 'line_no': 337}, {'indent': 16, 'line': '                V_USERID);', 'line_no': 338}]
2025-09-03 04:09:45,509 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - WHEN (NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL THEN
2025-09-03 04:09:45,509 - root - DEBUG - [OracleTriggerAnalyzer.py:1528] - case_when_then_statements 0: 330 then_i: 333
2025-09-03 04:09:45,509 - root - DEBUG - [OracleTriggerAnalyzer.py:1529] - case_when_then_statements: [{'indent': 12, 'line': "            WHEN (NVL (:OLD.OFFICIAL_NAME, '-') !=", 'line_no': 330}, {'indent': 12, 'line': "            NVL (:NEW.OFFICIAL_NAME, '-'))", 'line_no': 331}, {'indent': 12, 'line': '            AND :OLD.OFFICIAL_NAME IS NOT NULL', 'line_no': 332}, {'indent': 12, 'line': '            THEN', 'line_no': 333}, {'indent': 16, 'line': '                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (', 'line_no': 334}, {'indent': 16, 'line': '                :NEW.COMPANY_CD,', 'line_no': 335}, {'indent': 16, 'line': '                V_LEGAL_COMPANY_CD,', 'line_no': 336}, {'indent': 16, 'line': '                :NEW.OFFICIAL_NAME,', 'line_no': 337}, {'indent': 16, 'line': '                V_USERID);', 'line_no': 338}]
2025-09-03 04:09:45,509 - root - DEBUG - [OracleTriggerAnalyzer.py:1485] - {'indent': 16, 'line': '                NULL;', 'line_no': 340}
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'type': 'begin_end', 'begin_line_no': 24, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 25}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 27, 'when_indent': 8, 'then_line_no': 27, 'exception_statements': [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 28}]}], 'exception_line_no': 26, 'end_line_no': 29}
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 25}
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 28}
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF UPDATING AND :OLD.COMPANY_CD != :NEW.COMPANY_CD THEN', 'line_no': 31}
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 31
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 31 i: 33
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        RAISE ERR_UPD;', 'line_no': 32}]
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' UPDATING AND :OLD.COMPANY_CD != :NEW.COMPANY_CD ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_UPD;', 'line_no': 32}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE ERR_UPD;', 'line_no': 32}
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF INSERTING THEN', 'line_no': 35}
2025-09-03 04:09:45,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 35
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 35 i: 48
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 12
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        CNTR := 0;', 'line_no': 36}, {'indent': 8, 'line': '        SELECT', 'line_no': 39}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 40}, {'indent': 8, 'line': '        FROM', 'line_no': 41}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 42}, {'indent': 8, 'line': '        WHERE', 'line_no': 43}, {'indent': 12, 'line': '            COMPANY_CD = :NEW.COMPANY_CD;', 'line_no': 44}, {'indent': 8, 'line': '        IF CNTR > 0 THEN', 'line_no': 45}, {'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}, {'indent': 8, 'line': '        END IF;', 'line_no': 47}]
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 4, 'end_if_line_no': 48, 'then_statements': [{'indent': 8, 'line': '        CNTR := 0;', 'line_no': 36}, {'indent': 8, 'line': '        SELECT', 'line_no': 39}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 40}, {'indent': 8, 'line': '        FROM', 'line_no': 41}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 42}, {'indent': 8, 'line': '        WHERE', 'line_no': 43}, {'indent': 12, 'line': '            COMPANY_CD = :NEW.COMPANY_CD;', 'line_no': 44}, {'indent': 8, 'line': '        IF CNTR > 0 THEN', 'line_no': 45}, {'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}, {'indent': 8, 'line': '        END IF;', 'line_no': 47}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        CNTR := 0;', 'line_no': 36}
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 39}
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 40}
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        FROM', 'line_no': 41}
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 42}
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 43}
2025-09-03 04:09:45,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COMPANY_CD = :NEW.COMPANY_CD;', 'line_no': 44}
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF CNTR > 0 THEN', 'line_no': 45}
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 45
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 45 i: 47
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}]
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 45, 'then_line_no': 45, 'if_indent': 8, 'end_if_line_no': 47, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF INSERTING OR UPDATING THEN', 'line_no': 50}
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 50
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 50 i: 344
2025-09-03 04:09:45,512 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 206
2025-09-03 04:09:45,513 - root - DEBUG - [OracleTriggerAnalyzer.py:1276] - then_statements: 0 203
2025-09-03 04:09:45,513 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}
2025-09-03 04:09:45,513 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 4, 'line': '    END IF;', 'line_no': 344}
2025-09-03 04:09:45,513 - root - DEBUG - [OracleTriggerAnalyzer.py:1297] - {'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 342}
2025-09-03 04:09:45,513 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 342}, {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}]
2025-09-03 04:09:45,513 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 342}, {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}]
2025-09-03 04:09:45,513 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 342}
2025-09-03 04:09:45,513 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 342 then_i: 342
2025-09-03 04:09:45,513 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 4, 'line': '    ELSIF DELETING THEN', 'line_no': 342}, {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}]
2025-09-03 04:09:45,513 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 4
2025-09-03 04:09:45,514 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' INSERTING OR UPDATING ', 'type': 'if_else', 'if_line_no': 50, 'then_line_no': 50, 'if_indent': 4, 'end_if_line_no': 344, 'then_statements': [{'indent': 8, 'line': "        IF :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL THEN", 'line_no': 53}, {'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;', 'line_no': 54}, {'indent': 8, 'line': '        ELSE', 'line_no': 55}, {'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.LEGAL_COMPANY_CD;', 'line_no': 56}, {'indent': 8, 'line': '        END IF;', 'line_no': 57}, {'indent': 8, 'line': '        CNTR := 0;', 'line_no': 61}, {'indent': 8, 'line': '        SELECT', 'line_no': 62}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 63}, {'indent': 8, 'line': '        FROM', 'line_no': 64}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 65}, {'indent': 8, 'line': '        WHERE', 'line_no': 66}, {'indent': 12, 'line': "            COMPANY_TYPE_CD IN ( 'L')", 'line_no': 67}, {'indent': 12, 'line': "            AND VALID_IND = 'Y'", 'line_no': 68}, {'indent': 12, 'line': '            AND COMPANY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 69}, {'indent': 8, 'line': "        IF CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L')", 'line_no': 72}, {'indent': 8, 'line': "        OR (:NEW.COMPANY_TYPE_CD = 'D'", 'line_no': 73}, {'indent': 8, 'line': "        AND :NEW.CBC_GBE_SCOPE = 'Y'", 'line_no': 74}, {'indent': 8, 'line': '        AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD))', 'line_no': 75}, {'indent': 8, 'line': '        THEN', 'line_no': 76}, {'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}, {'indent': 8, 'line': '        END IF;', 'line_no': 78}, {'indent': 8, 'line': '        MDM_UTIL_COMPANIES.MODIFYCOMPANY (', 'line_no': 80}, {'indent': 12, 'line': '            I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 81}, {'indent': 12, 'line': '            I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD,', 'line_no': 82}, {'indent': 12, 'line': '            I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE,', 'line_no': 83}, {'indent': 12, 'line': '            I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD,', 'line_no': 84}, {'indent': 12, 'line': '            I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME,', 'line_no': 85}, {'indent': 12, 'line': '            I_SHORT_NAME => :NEW.SHORT_NAME,', 'line_no': 86}, {'indent': 12, 'line': '            I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME,', 'line_no': 87}, {'indent': 12, 'line': '            I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD,', 'line_no': 88}, {'indent': 12, 'line': '            I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD,', 'line_no': 89}, {'indent': 12, 'line': '            I_URL => :NEW.URL,', 'line_no': 90}, {'indent': 12, 'line': '            I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL,', 'line_no': 91}, {'indent': 12, 'line': '            I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO,', 'line_no': 92}, {'indent': 12, 'line': '            I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO,', 'line_no': 93}, {'indent': 12, 'line': '            I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO,', 'line_no': 94}, {'indent': 12, 'line': '            I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND,', 'line_no': 95}, {'indent': 12, 'line': '            I_FATCA_CD => :NEW.FATCA_CD,', 'line_no': 96}, {'indent': 12, 'line': '            I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE,', 'line_no': 97}, {'indent': 12, 'line': '            I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE,', 'line_no': 98}, {'indent': 12, 'line': '            I_SAPINST_NO => :NEW.SAPINST_NO,', 'line_no': 99}, {'indent': 12, 'line': '            I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO,', 'line_no': 100}, {'indent': 12, 'line': '            I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE,', 'line_no': 101}, {'indent': 12, 'line': '            I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE,', 'line_no': 102}, {'indent': 12, 'line': '            I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA,', 'line_no': 103}, {'indent': 12, 'line': '            I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA,', 'line_no': 104}, {'indent': 12, 'line': '            I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND,', 'line_no': 105}, {'indent': 12, 'line': '            I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE,', 'line_no': 106}, {'indent': 12, 'line': '            I_TOP_REMARKS => :NEW.TOP_REMARKS,', 'line_no': 107}, {'indent': 12, 'line': '            I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS,', 'line_no': 108}, {'indent': 12, 'line': '            I_REMARKS => :NEW.REMARKS,', 'line_no': 109}, {'indent': 12, 'line': '            I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC,', 'line_no': 110}, {'indent': 12, 'line': '            I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER,', 'line_no': 111}, {'indent': 12, 'line': '            I_TRADING_PARTNER => :NEW.TRADING_PARTNER,', 'line_no': 112}, {'indent': 12, 'line': '            I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID,', 'line_no': 113}, {'indent': 12, 'line': '            I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG,', 'line_no': 114}, {'indent': 12, 'line': '            I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE', 'line_no': 115}, {'indent': 0, 'line': ',', 'line_no': 116}, {'indent': 12, 'line': '            I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND,', 'line_no': 117}, {'indent': 12, 'line': '            I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND,', 'line_no': 118}, {'indent': 12, 'line': '            I_VALID_IND => :NEW.VALID_IND,', 'line_no': 119}, {'indent': 12, 'line': '            I_CORE_REMARKS => :NEW.CORE_REMARKS,', 'line_no': 120}, {'indent': 12, 'line': '            I_REVIEW_USERID => :NEW.REVIEW_USERID,', 'line_no': 121}, {'indent': 12, 'line': '            I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE,', 'line_no': 122}, {'indent': 12, 'line': '            I_REQUESTER_USERID => :NEW.REQUESTER_USERID,', 'line_no': 123}, {'indent': 12, 'line': '            I_REQUEST_DATE => :NEW.REQUEST_DATE,', 'line_no': 124}, {'indent': 12, 'line': '            I_CHANGE_USER => V_USERID', 'line_no': 125}, {'indent': 8, 'line': '        );', 'line_no': 126}, {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]}], 'else_statements': [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (', 'line_no': 150}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 151}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,', 'line_no': 152}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,', 'line_no': 153}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,', 'line_no': 154}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID', 'line_no': 155}, {'indent': 16, 'line': '                );', 'line_no': 156}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 158}]}, {'indent': 8, 'line': "        IF NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' THEN", 'line_no': 161}, {'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}, {'indent': 12, 'line': '            SELECT', 'line_no': 165}, {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}, {'indent': 12, 'line': '            FROM', 'line_no': 167}, {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}, {'indent': 12, 'line': '            WHERE', 'line_no': 169}, {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}, {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}, {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}, {'indent': 12, 'line': '            IF CNTR > 0 THEN', 'line_no': 173}, {'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}, {'indent': 12, 'line': '            END IF;', 'line_no': 183}, {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}, {'indent': 12, 'line': '            SET', 'line_no': 188}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}, {'indent': 16, 'line': '                ) - 1', 'line_no': 191}, {'indent': 12, 'line': '            WHERE', 'line_no': 192}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}, {'indent': 8, 'line': '        END IF;', 'line_no': 196}, {'indent': 8, 'line': "        IF :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' THEN", 'line_no': 200}, {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}, {'indent': 12, 'line': '            SET', 'line_no': 202}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}, {'indent': 16, 'line': '                ) - 1', 'line_no': 205}, {'indent': 12, 'line': '            WHERE', 'line_no': 206}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}, {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}, {'indent': 8, 'line': '        END IF;', 'line_no': 211}, {'indent': 8, 'line': "        IF :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' THEN", 'line_no': 215}, {'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}, {'indent': 8, 'line': '        END IF;', 'line_no': 217}, {'indent': 8, 'line': "        IF :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL THEN", 'line_no': 221}, {'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}, {'indent': 8, 'line': '        END IF;', 'line_no': 223}, {'indent': 8, 'line': "        IF :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' THEN", 'line_no': 227}, {'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}, {'indent': 8, 'line': '        END IF;', 'line_no': 229}, {'indent': 8, 'line': "        IF NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' THEN", 'line_no': 233}, {'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 234}, {'indent': 8, 'line': '        ELSE', 'line_no': 235}, {'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := V_LEGAL_COMPANY_CD;', 'line_no': 236}, {'indent': 8, 'line': '        END IF;', 'line_no': 237}, {'indent': 8, 'line': "        IF V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' THEN", 'line_no': 241}, {'indent': 12, 'line': "            IF (:NEW.CBC_GBE_SCOPE = 'Y'", 'line_no': 242}, {'indent': 12, 'line': "            AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y'", 'line_no': 243}, {'indent': 12, 'line': '            AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) THEN', 'line_no': 244}, {'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'indent': 16, 'line': "                IF NVL (V_REP_CBC_FLAG, 'N') = 'N' THEN", 'line_no': 253}, {'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}, {'indent': 16, 'line': '                END IF;', 'line_no': 255}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'indent': 16, 'line': '                IF CNTR = 0 THEN', 'line_no': 267}, {'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}, {'indent': 16, 'line': '                END IF;', 'line_no': 269}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'indent': 16, 'line': '                IF V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) THEN', 'line_no': 282}, {'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}, {'indent': 16, 'line': '                END IF;', 'line_no': 284}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 287}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,', 'line_no': 288}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => TRUNC (SYSDATE),', 'line_no': 289}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 290}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 291}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 292}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 293}, {'indent': 16, 'line': '                );', 'line_no': 294}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 296}, {'indent': 20, 'line': "                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 297}, {'indent': 45, 'line': '                                             || V_COUNTRY_CD,', 'line_no': 298}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,', 'line_no': 299}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 300}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 301}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 302}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 303}, {'indent': 16, 'line': '                );', 'line_no': 304}, {'indent': 12, 'line': '            END IF;', 'line_no': 305}, {'indent': 12, 'line': "            IF :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' THEN", 'line_no': 307}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 309}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 310}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 311}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 312}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 313}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 314}, {'indent': 16, 'line': '                );', 'line_no': 315}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 317}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 318}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 319}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 320}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 321}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 322}, {'indent': 16, 'line': '                );', 'line_no': 323}, {'indent': 12, 'line': '            END IF;', 'line_no': 324}, {'indent': 8, 'line': '        END IF;', 'line_no': 325}, {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'indent': 16, 'line': '                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (', 'line_no': 334}, {'indent': 16, 'line': '                :NEW.COMPANY_CD,', 'line_no': 335}, {'indent': 16, 'line': '                V_LEGAL_COMPANY_CD,', 'line_no': 336}, {'indent': 16, 'line': '                :NEW.OFFICIAL_NAME,', 'line_no': 337}, {'indent': 16, 'line': '                V_USERID);', 'line_no': 338}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 340}]}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 342, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 342, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}]}], 'else_statements': []}
2025-09-03 04:09:45,514 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL THEN", 'line_no': 53}
2025-09-03 04:09:45,514 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 53
2025-09-03 04:09:45,514 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 53 i: 57
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 5
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ", 'type': 'if_else', 'if_line_no': 53, 'then_line_no': 53, 'if_indent': 8, 'end_if_line_no': 57, 'then_statements': [{'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;', 'line_no': 54}], 'if_elses': [], 'else_statements': [[{'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.LEGAL_COMPANY_CD;', 'line_no': 56}, {'indent': 8, 'line': '        END IF;', 'line_no': 57}]]}
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;', 'line_no': 54}
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.LEGAL_COMPANY_CD;', 'line_no': 56}, {'indent': 8, 'line': '        END IF;', 'line_no': 57}]
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        CNTR := 0;', 'line_no': 61}
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 62}
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 63}
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        FROM', 'line_no': 64}
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 65}
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 66}
2025-09-03 04:09:45,515 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            COMPANY_TYPE_CD IN ( 'L')", 'line_no': 67}
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            AND VALID_IND = 'Y'", 'line_no': 68}
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            AND COMPANY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 69}
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L')", 'line_no': 72}
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 72
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 72 i: 78
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 7
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 8, 'line': "        OR (:NEW.COMPANY_TYPE_CD = 'D'", 'line_no': 73}
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 8, 'line': "        AND :NEW.CBC_GBE_SCOPE = 'Y'", 'line_no': 74}
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 8, 'line': '        AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD))', 'line_no': 75}
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 8, 'line': '        THEN', 'line_no': 76}
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}]
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L') OR (:NEW.COMPANY_TYPE_CD = 'D' AND :NEW.CBC_GBE_SCOPE = 'Y' AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 72, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,516 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        MDM_UTIL_COMPANIES.MODIFYCOMPANY (', 'line_no': 80}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 81}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD,', 'line_no': 82}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE,', 'line_no': 83}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD,', 'line_no': 84}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME,', 'line_no': 85}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_SHORT_NAME => :NEW.SHORT_NAME,', 'line_no': 86}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME,', 'line_no': 87}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD,', 'line_no': 88}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD,', 'line_no': 89}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_URL => :NEW.URL,', 'line_no': 90}
2025-09-03 04:09:45,517 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL,', 'line_no': 91}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO,', 'line_no': 92}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO,', 'line_no': 93}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO,', 'line_no': 94}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND,', 'line_no': 95}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_FATCA_CD => :NEW.FATCA_CD,', 'line_no': 96}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE,', 'line_no': 97}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE,', 'line_no': 98}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_SAPINST_NO => :NEW.SAPINST_NO,', 'line_no': 99}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO,', 'line_no': 100}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE,', 'line_no': 101}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE,', 'line_no': 102}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA,', 'line_no': 103}
2025-09-03 04:09:45,518 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA,', 'line_no': 104}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND,', 'line_no': 105}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE,', 'line_no': 106}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_TOP_REMARKS => :NEW.TOP_REMARKS,', 'line_no': 107}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS,', 'line_no': 108}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_REMARKS => :NEW.REMARKS,', 'line_no': 109}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC,', 'line_no': 110}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER,', 'line_no': 111}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_TRADING_PARTNER => :NEW.TRADING_PARTNER,', 'line_no': 112}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID,', 'line_no': 113}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG,', 'line_no': 114}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE', 'line_no': 115}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 0, 'line': ',', 'line_no': 116}
2025-09-03 04:09:45,519 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND,', 'line_no': 117}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND,', 'line_no': 118}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_VALID_IND => :NEW.VALID_IND,', 'line_no': 119}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_CORE_REMARKS => :NEW.CORE_REMARKS,', 'line_no': 120}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_REVIEW_USERID => :NEW.REVIEW_USERID,', 'line_no': 121}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE,', 'line_no': 122}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_REQUESTER_USERID => :NEW.REQUESTER_USERID,', 'line_no': 123}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_REQUEST_DATE => :NEW.REQUEST_DATE,', 'line_no': 124}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            I_CHANGE_USER => V_USERID', 'line_no': 125}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        );', 'line_no': 126}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]}], 'else_statements': [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (', 'line_no': 150}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 151}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,', 'line_no': 152}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,', 'line_no': 153}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,', 'line_no': 154}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID', 'line_no': 155}, {'indent': 16, 'line': '                );', 'line_no': 156}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 158}]}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}
2025-09-03 04:09:45,520 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]}], 'else_statements': [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        NULL;', 'line_no': 148}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (', 'line_no': 150}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 151}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,', 'line_no': 152}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,', 'line_no': 153}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,', 'line_no': 154}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID', 'line_no': 155}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                );', 'line_no': 156}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                NULL;', 'line_no': 158}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' THEN", 'line_no': 161}
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 161
2025-09-03 04:09:45,521 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 161 i: 196
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 31
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}, {'indent': 12, 'line': '            SELECT', 'line_no': 165}, {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}, {'indent': 12, 'line': '            FROM', 'line_no': 167}, {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}, {'indent': 12, 'line': '            WHERE', 'line_no': 169}, {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}, {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}, {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}, {'indent': 12, 'line': '            IF CNTR > 0 THEN', 'line_no': 173}, {'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}, {'indent': 12, 'line': '            END IF;', 'line_no': 183}, {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}, {'indent': 12, 'line': '            SET', 'line_no': 188}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}, {'indent': 16, 'line': '                ) - 1', 'line_no': 191}, {'indent': 12, 'line': '            WHERE', 'line_no': 192}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}]
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ", 'type': 'if_else', 'if_line_no': 161, 'then_line_no': 161, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}, {'indent': 12, 'line': '            SELECT', 'line_no': 165}, {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}, {'indent': 12, 'line': '            FROM', 'line_no': 167}, {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}, {'indent': 12, 'line': '            WHERE', 'line_no': 169}, {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}, {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}, {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}, {'indent': 12, 'line': '            IF CNTR > 0 THEN', 'line_no': 173}, {'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}, {'indent': 12, 'line': '            END IF;', 'line_no': 183}, {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}, {'indent': 12, 'line': '            SET', 'line_no': 188}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}, {'indent': 16, 'line': '                ) - 1', 'line_no': 191}, {'indent': 12, 'line': '            WHERE', 'line_no': 192}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 165}
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FROM', 'line_no': 167}
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 169}
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}
2025-09-03 04:09:45,522 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF CNTR > 0 THEN', 'line_no': 173}
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 173
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 173 i: 183
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 11
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}]
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 174}
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                FROM', 'line_no': 176}
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}
2025-09-03 04:09:45,523 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 178}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SET', 'line_no': 188}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                ) - 1', 'line_no': 191}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 192}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}
2025-09-03 04:09:45,524 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' THEN", 'line_no': 200}
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 200
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 200 i: 211
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 12
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}, {'indent': 12, 'line': '            SET', 'line_no': 202}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}, {'indent': 16, 'line': '                ) - 1', 'line_no': 205}, {'indent': 12, 'line': '            WHERE', 'line_no': 206}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}, {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}]
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 200, 'then_line_no': 200, 'if_indent': 8, 'end_if_line_no': 211, 'then_statements': [{'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}, {'indent': 12, 'line': '            SET', 'line_no': 202}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}, {'indent': 16, 'line': '                ) - 1', 'line_no': 205}, {'indent': 12, 'line': '            WHERE', 'line_no': 206}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}, {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SET', 'line_no': 202}
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}
2025-09-03 04:09:45,525 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                ) - 1', 'line_no': 205}
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 206}
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' THEN", 'line_no': 215}
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 215
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 215 i: 217
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}]
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ", 'type': 'if_else', 'if_line_no': 215, 'then_line_no': 215, 'if_indent': 8, 'end_if_line_no': 217, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,526 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL THEN", 'line_no': 221}
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 221
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 221 i: 223
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}]
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ", 'type': 'if_else', 'if_line_no': 221, 'then_line_no': 221, 'if_indent': 8, 'end_if_line_no': 223, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' THEN", 'line_no': 227}
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 227
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 227 i: 229
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}]
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ", 'type': 'if_else', 'if_line_no': 227, 'then_line_no': 227, 'if_indent': 8, 'end_if_line_no': 229, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' THEN", 'line_no': 233}
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 233
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 233 i: 237
2025-09-03 04:09:45,527 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 5
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ", 'type': 'if_else', 'if_line_no': 233, 'then_line_no': 233, 'if_indent': 8, 'end_if_line_no': 237, 'then_statements': [{'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 234}], 'if_elses': [], 'else_statements': [[{'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := V_LEGAL_COMPANY_CD;', 'line_no': 236}, {'indent': 8, 'line': '        END IF;', 'line_no': 237}]]}
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 234}
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: [{'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := V_LEGAL_COMPANY_CD;', 'line_no': 236}, {'indent': 8, 'line': '        END IF;', 'line_no': 237}]
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        IF V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' THEN", 'line_no': 241}
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 241
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 241 i: 325
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 75
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': "            IF (:NEW.CBC_GBE_SCOPE = 'Y'", 'line_no': 242}, {'indent': 12, 'line': "            AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y'", 'line_no': 243}, {'indent': 12, 'line': '            AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) THEN', 'line_no': 244}, {'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'indent': 16, 'line': "                IF NVL (V_REP_CBC_FLAG, 'N') = 'N' THEN", 'line_no': 253}, {'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}, {'indent': 16, 'line': '                END IF;', 'line_no': 255}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'indent': 16, 'line': '                IF CNTR = 0 THEN', 'line_no': 267}, {'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}, {'indent': 16, 'line': '                END IF;', 'line_no': 269}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'indent': 16, 'line': '                IF V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) THEN', 'line_no': 282}, {'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}, {'indent': 16, 'line': '                END IF;', 'line_no': 284}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 287}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,', 'line_no': 288}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => TRUNC (SYSDATE),', 'line_no': 289}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 290}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 291}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 292}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 293}, {'indent': 16, 'line': '                );', 'line_no': 294}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 296}, {'indent': 20, 'line': "                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 297}, {'indent': 45, 'line': '                                             || V_COUNTRY_CD,', 'line_no': 298}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,', 'line_no': 299}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 300}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 301}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 302}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 303}, {'indent': 16, 'line': '                );', 'line_no': 304}, {'indent': 12, 'line': '            END IF;', 'line_no': 305}, {'indent': 12, 'line': "            IF :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' THEN", 'line_no': 307}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 309}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 310}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 311}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 312}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 313}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 314}, {'indent': 16, 'line': '                );', 'line_no': 315}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 317}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 318}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 319}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 320}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 321}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 322}, {'indent': 16, 'line': '                );', 'line_no': 323}, {'indent': 12, 'line': '            END IF;', 'line_no': 324}]
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 241, 'then_line_no': 241, 'if_indent': 8, 'end_if_line_no': 325, 'then_statements': [{'indent': 12, 'line': "            IF (:NEW.CBC_GBE_SCOPE = 'Y'", 'line_no': 242}, {'indent': 12, 'line': "            AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y'", 'line_no': 243}, {'indent': 12, 'line': '            AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) THEN', 'line_no': 244}, {'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'indent': 16, 'line': "                IF NVL (V_REP_CBC_FLAG, 'N') = 'N' THEN", 'line_no': 253}, {'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}, {'indent': 16, 'line': '                END IF;', 'line_no': 255}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'indent': 16, 'line': '                IF CNTR = 0 THEN', 'line_no': 267}, {'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}, {'indent': 16, 'line': '                END IF;', 'line_no': 269}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'indent': 16, 'line': '                IF V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) THEN', 'line_no': 282}, {'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}, {'indent': 16, 'line': '                END IF;', 'line_no': 284}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 287}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,', 'line_no': 288}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => TRUNC (SYSDATE),', 'line_no': 289}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 290}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 291}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 292}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 293}, {'indent': 16, 'line': '                );', 'line_no': 294}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 296}, {'indent': 20, 'line': "                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 297}, {'indent': 45, 'line': '                                             || V_COUNTRY_CD,', 'line_no': 298}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,', 'line_no': 299}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 300}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 301}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 302}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 303}, {'indent': 16, 'line': '                );', 'line_no': 304}, {'indent': 12, 'line': '            END IF;', 'line_no': 305}, {'indent': 12, 'line': "            IF :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' THEN", 'line_no': 307}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 309}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 310}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 311}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 312}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 313}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 314}, {'indent': 16, 'line': '                );', 'line_no': 315}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 317}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 318}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 319}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 320}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 321}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 322}, {'indent': 16, 'line': '                );', 'line_no': 323}, {'indent': 12, 'line': '            END IF;', 'line_no': 324}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            IF (:NEW.CBC_GBE_SCOPE = 'Y'", 'line_no': 242}
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 242
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 242 i: 305
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 55
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': "            AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y'", 'line_no': 243}
2025-09-03 04:09:45,528 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) THEN', 'line_no': 244}
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'indent': 16, 'line': "                IF NVL (V_REP_CBC_FLAG, 'N') = 'N' THEN", 'line_no': 253}, {'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}, {'indent': 16, 'line': '                END IF;', 'line_no': 255}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'indent': 16, 'line': '                IF CNTR = 0 THEN', 'line_no': 267}, {'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}, {'indent': 16, 'line': '                END IF;', 'line_no': 269}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'indent': 16, 'line': '                IF V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) THEN', 'line_no': 282}, {'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}, {'indent': 16, 'line': '                END IF;', 'line_no': 284}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 287}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,', 'line_no': 288}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => TRUNC (SYSDATE),', 'line_no': 289}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 290}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 291}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 292}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 293}, {'indent': 16, 'line': '                );', 'line_no': 294}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 296}, {'indent': 20, 'line': "                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 297}, {'indent': 45, 'line': '                                             || V_COUNTRY_CD,', 'line_no': 298}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,', 'line_no': 299}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 300}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 301}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 302}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 303}, {'indent': 16, 'line': '                );', 'line_no': 304}]
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'indent': 16, 'line': "                IF NVL (V_REP_CBC_FLAG, 'N') = 'N' THEN", 'line_no': 253}, {'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}, {'indent': 16, 'line': '                END IF;', 'line_no': 255}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'indent': 16, 'line': '                IF CNTR = 0 THEN', 'line_no': 267}, {'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}, {'indent': 16, 'line': '                END IF;', 'line_no': 269}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'indent': 16, 'line': '                IF V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) THEN', 'line_no': 282}, {'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}, {'indent': 16, 'line': '                END IF;', 'line_no': 284}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 287}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,', 'line_no': 288}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => TRUNC (SYSDATE),', 'line_no': 289}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 290}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 291}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 292}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 293}, {'indent': 16, 'line': '                );', 'line_no': 294}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 296}, {'indent': 20, 'line': "                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 297}, {'indent': 45, 'line': '                                             || V_COUNTRY_CD,', 'line_no': 298}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,', 'line_no': 299}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 300}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 301}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 302}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 303}, {'indent': 16, 'line': '                );', 'line_no': 304}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 245}
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                FROM', 'line_no': 247}
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 249}
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': "                IF NVL (V_REP_CBC_FLAG, 'N') = 'N' THEN", 'line_no': 253}
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 253
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 253 i: 255
2025-09-03 04:09:45,529 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}]
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 260}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                FROM', 'line_no': 262}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 264}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                IF CNTR = 0 THEN', 'line_no': 267}
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 267
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 267 i: 269
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,530 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}]
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 271}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                FROM', 'line_no': 275}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 277}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                IF V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) THEN', 'line_no': 282}
2025-09-03 04:09:45,531 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 282
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 282 i: 284
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}]
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 287}
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,', 'line_no': 288}
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_VALID_FROM_DATE => TRUNC (SYSDATE),', 'line_no': 289}
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 290}
2025-09-03 04:09:45,532 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 291}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 292}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 293}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                );', 'line_no': 294}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 296}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 297}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 45, 'line': '                                             || V_COUNTRY_CD,', 'line_no': 298}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,', 'line_no': 299}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 300}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 301}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 302}
2025-09-03 04:09:45,533 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 303}
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                );', 'line_no': 304}
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            IF :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' THEN", 'line_no': 307}
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 307
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 307 i: 324
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 18
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 309}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 310}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 311}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 312}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 313}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 314}, {'indent': 16, 'line': '                );', 'line_no': 315}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 317}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 318}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 319}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 320}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 321}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 322}, {'indent': 16, 'line': '                );', 'line_no': 323}]
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 309}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 310}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 311}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 312}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 313}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 314}, {'indent': 16, 'line': '                );', 'line_no': 315}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 317}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 318}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 319}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 320}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 321}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 322}, {'indent': 16, 'line': '                );', 'line_no': 323}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 309}
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 310}
2025-09-03 04:09:45,534 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 311}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 312}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 313}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 314}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                );', 'line_no': 315}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 317}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 318}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 319}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 320}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 321}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 322}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                );', 'line_no': 323}
2025-09-03 04:09:45,535 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'indent': 16, 'line': '                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (', 'line_no': 334}, {'indent': 16, 'line': '                :NEW.COMPANY_CD,', 'line_no': 335}, {'indent': 16, 'line': '                V_LEGAL_COMPANY_CD,', 'line_no': 336}, {'indent': 16, 'line': '                :NEW.OFFICIAL_NAME,', 'line_no': 337}, {'indent': 16, 'line': '                V_USERID);', 'line_no': 338}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 340}]}
2025-09-03 04:09:45,536 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (', 'line_no': 334}
2025-09-03 04:09:45,536 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.COMPANY_CD,', 'line_no': 335}
2025-09-03 04:09:45,536 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                V_LEGAL_COMPANY_CD,', 'line_no': 336}
2025-09-03 04:09:45,536 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                :NEW.OFFICIAL_NAME,', 'line_no': 337}
2025-09-03 04:09:45,536 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                V_USERID);', 'line_no': 338}
2025-09-03 04:09:45,536 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                NULL;', 'line_no': 340}
2025-09-03 04:09:45,536 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}
2025-09-03 04:09:45,536 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);', 'line_no': 347}
2025-09-03 04:09:45,536 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20111, V_TRIGGER_NAME);', 'line_no': 349}
2025-09-03 04:09:45,537 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);', 'line_no': 351}
2025-09-03 04:09:45,537 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20122, 'Please insert : Rep. Code Assignm. Valid from Date');", 'line_no': 353}
2025-09-03 04:09:45,537 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20123, 'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope');", 'line_no': 355}
2025-09-03 04:09:45,537 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20124, 'The CBC/GBE Scope must be set to No before deactivating the company');", 'line_no': 357}
2025-09-03 04:09:45,537 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20124, 'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes');", 'line_no': 359}
2025-09-03 04:09:45,538 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: '", 'line_no': 361}
2025-09-03 04:09:45,538 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 42, 'line': '                                          || V_COMPANY_CODES_LIST);', 'line_no': 362}
2025-09-03 04:09:45,538 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR ( -20126, V_LEGAL_COMPANY_CD', 'line_no': 364}
2025-09-03 04:09:45,538 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 42, 'line': "                                          || ' is not a valid Legal Company Code');", 'line_no': 365}
2025-09-03 04:09:45,538 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20127, 'An Associate Entity cannot be in CBC/GBE Scope!');", 'line_no': 367}
2025-09-03 04:09:45,538 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20127, 'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company');", 'line_no': 369}
2025-09-03 04:09:45,547 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'type': 'begin_end', 'begin_line_no': 24, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 25}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 27, 'when_indent': 8, 'then_line_no': 27, 'exception_statements': [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 28}]}], 'exception_line_no': 26, 'end_line_no': 29}, {'condition': ' UPDATING AND :OLD.COMPANY_CD != :NEW.COMPANY_CD ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_UPD;', 'line_no': 32}], 'if_elses': [], 'else_statements': []}, {'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 4, 'end_if_line_no': 48, 'then_statements': [{'indent': 8, 'line': '        CNTR := 0;', 'line_no': 36}, {'indent': 8, 'line': '        SELECT', 'line_no': 39}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 40}, {'indent': 8, 'line': '        FROM', 'line_no': 41}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 42}, {'indent': 8, 'line': '        WHERE', 'line_no': 43}, {'indent': 12, 'line': '            COMPANY_CD = :NEW.COMPANY_CD;', 'line_no': 44}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 45, 'then_line_no': 45, 'if_indent': 8, 'end_if_line_no': 47, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' INSERTING OR UPDATING ', 'type': 'if_else', 'if_line_no': 50, 'then_line_no': 50, 'if_indent': 4, 'end_if_line_no': 344, 'then_statements': [{'condition': " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ", 'type': 'if_else', 'if_line_no': 53, 'then_line_no': 53, 'if_indent': 8, 'end_if_line_no': 57, 'then_statements': [{'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;', 'line_no': 54}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        CNTR := 0;', 'line_no': 61}, {'indent': 8, 'line': '        SELECT', 'line_no': 62}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 63}, {'indent': 8, 'line': '        FROM', 'line_no': 64}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 65}, {'indent': 8, 'line': '        WHERE', 'line_no': 66}, {'indent': 12, 'line': "            COMPANY_TYPE_CD IN ( 'L')", 'line_no': 67}, {'indent': 12, 'line': "            AND VALID_IND = 'Y'", 'line_no': 68}, {'indent': 12, 'line': '            AND COMPANY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 69}, {'condition': " CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L') OR (:NEW.COMPANY_TYPE_CD = 'D' AND :NEW.CBC_GBE_SCOPE = 'Y' AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 72, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        MDM_UTIL_COMPANIES.MODIFYCOMPANY (', 'line_no': 80}, {'indent': 12, 'line': '            I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 81}, {'indent': 12, 'line': '            I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD,', 'line_no': 82}, {'indent': 12, 'line': '            I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE,', 'line_no': 83}, {'indent': 12, 'line': '            I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD,', 'line_no': 84}, {'indent': 12, 'line': '            I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME,', 'line_no': 85}, {'indent': 12, 'line': '            I_SHORT_NAME => :NEW.SHORT_NAME,', 'line_no': 86}, {'indent': 12, 'line': '            I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME,', 'line_no': 87}, {'indent': 12, 'line': '            I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD,', 'line_no': 88}, {'indent': 12, 'line': '            I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD,', 'line_no': 89}, {'indent': 12, 'line': '            I_URL => :NEW.URL,', 'line_no': 90}, {'indent': 12, 'line': '            I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL,', 'line_no': 91}, {'indent': 12, 'line': '            I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO,', 'line_no': 92}, {'indent': 12, 'line': '            I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO,', 'line_no': 93}, {'indent': 12, 'line': '            I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO,', 'line_no': 94}, {'indent': 12, 'line': '            I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND,', 'line_no': 95}, {'indent': 12, 'line': '            I_FATCA_CD => :NEW.FATCA_CD,', 'line_no': 96}, {'indent': 12, 'line': '            I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE,', 'line_no': 97}, {'indent': 12, 'line': '            I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE,', 'line_no': 98}, {'indent': 12, 'line': '            I_SAPINST_NO => :NEW.SAPINST_NO,', 'line_no': 99}, {'indent': 12, 'line': '            I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO,', 'line_no': 100}, {'indent': 12, 'line': '            I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE,', 'line_no': 101}, {'indent': 12, 'line': '            I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE,', 'line_no': 102}, {'indent': 12, 'line': '            I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA,', 'line_no': 103}, {'indent': 12, 'line': '            I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA,', 'line_no': 104}, {'indent': 12, 'line': '            I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND,', 'line_no': 105}, {'indent': 12, 'line': '            I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE,', 'line_no': 106}, {'indent': 12, 'line': '            I_TOP_REMARKS => :NEW.TOP_REMARKS,', 'line_no': 107}, {'indent': 12, 'line': '            I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS,', 'line_no': 108}, {'indent': 12, 'line': '            I_REMARKS => :NEW.REMARKS,', 'line_no': 109}, {'indent': 12, 'line': '            I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC,', 'line_no': 110}, {'indent': 12, 'line': '            I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER,', 'line_no': 111}, {'indent': 12, 'line': '            I_TRADING_PARTNER => :NEW.TRADING_PARTNER,', 'line_no': 112}, {'indent': 12, 'line': '            I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID,', 'line_no': 113}, {'indent': 12, 'line': '            I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG,', 'line_no': 114}, {'indent': 12, 'line': '            I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE', 'line_no': 115}, {'indent': 0, 'line': ',', 'line_no': 116}, {'indent': 12, 'line': '            I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND,', 'line_no': 117}, {'indent': 12, 'line': '            I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND,', 'line_no': 118}, {'indent': 12, 'line': '            I_VALID_IND => :NEW.VALID_IND,', 'line_no': 119}, {'indent': 12, 'line': '            I_CORE_REMARKS => :NEW.CORE_REMARKS,', 'line_no': 120}, {'indent': 12, 'line': '            I_REVIEW_USERID => :NEW.REVIEW_USERID,', 'line_no': 121}, {'indent': 12, 'line': '            I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE,', 'line_no': 122}, {'indent': 12, 'line': '            I_REQUESTER_USERID => :NEW.REQUESTER_USERID,', 'line_no': 123}, {'indent': 12, 'line': '            I_REQUEST_DATE => :NEW.REQUEST_DATE,', 'line_no': 124}, {'indent': 12, 'line': '            I_CHANGE_USER => V_USERID', 'line_no': 125}, {'indent': 8, 'line': '        );', 'line_no': 126}, {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]}], 'else_statements': [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (', 'line_no': 150}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 151}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,', 'line_no': 152}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,', 'line_no': 153}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,', 'line_no': 154}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID', 'line_no': 155}, {'indent': 16, 'line': '                );', 'line_no': 156}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 158}]}, {'condition': " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ", 'type': 'if_else', 'if_line_no': 161, 'then_line_no': 161, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}, {'indent': 12, 'line': '            SELECT', 'line_no': 165}, {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}, {'indent': 12, 'line': '            FROM', 'line_no': 167}, {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}, {'indent': 12, 'line': '            WHERE', 'line_no': 169}, {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}, {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}, {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}, {'indent': 12, 'line': '            SET', 'line_no': 188}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}, {'indent': 16, 'line': '                ) - 1', 'line_no': 191}, {'indent': 12, 'line': '            WHERE', 'line_no': 192}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}], 'if_elses': [], 'else_statements': []}, {'condition': " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 200, 'then_line_no': 200, 'if_indent': 8, 'end_if_line_no': 211, 'then_statements': [{'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}, {'indent': 12, 'line': '            SET', 'line_no': 202}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}, {'indent': 16, 'line': '                ) - 1', 'line_no': 205}, {'indent': 12, 'line': '            WHERE', 'line_no': 206}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}, {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ", 'type': 'if_else', 'if_line_no': 215, 'then_line_no': 215, 'if_indent': 8, 'end_if_line_no': 217, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ", 'type': 'if_else', 'if_line_no': 221, 'then_line_no': 221, 'if_indent': 8, 'end_if_line_no': 223, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ", 'type': 'if_else', 'if_line_no': 227, 'then_line_no': 227, 'if_indent': 8, 'end_if_line_no': 229, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}], 'if_elses': [], 'else_statements': []}, {'condition': " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ", 'type': 'if_else', 'if_line_no': 233, 'then_line_no': 233, 'if_indent': 8, 'end_if_line_no': 237, 'then_statements': [{'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 234}], 'if_elses': [], 'else_statements': []}, {'condition': " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 241, 'then_line_no': 241, 'if_indent': 8, 'end_if_line_no': 325, 'then_statements': [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 287}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,', 'line_no': 288}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => TRUNC (SYSDATE),', 'line_no': 289}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 290}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 291}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 292}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 293}, {'indent': 16, 'line': '                );', 'line_no': 294}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 296}, {'indent': 20, 'line': "                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 297}, {'indent': 45, 'line': '                                             || V_COUNTRY_CD,', 'line_no': 298}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,', 'line_no': 299}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 300}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 301}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 302}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 303}, {'indent': 16, 'line': '                );', 'line_no': 304}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 309}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 310}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 311}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 312}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 313}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 314}, {'indent': 16, 'line': '                );', 'line_no': 315}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 317}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 318}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 319}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 320}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 321}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 322}, {'indent': 16, 'line': '                );', 'line_no': 323}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'indent': 16, 'line': '                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (', 'line_no': 334}, {'indent': 16, 'line': '                :NEW.COMPANY_CD,', 'line_no': 335}, {'indent': 16, 'line': '                V_LEGAL_COMPANY_CD,', 'line_no': 336}, {'indent': 16, 'line': '                :NEW.OFFICIAL_NAME,', 'line_no': 337}, {'indent': 16, 'line': '                V_USERID);', 'line_no': 338}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 340}]}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 342, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 342, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}]}], 'else_statements': []}]
2025-09-03 04:09:45,547 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,556 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 25}]
2025-09-03 04:09:45,557 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,557 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 25}
2025-09-03 04:09:45,566 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 28}]
2025-09-03 04:09:45,567 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,567 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 28}
2025-09-03 04:09:45,567 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,574 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE ERR_UPD;', 'line_no': 32}]
2025-09-03 04:09:45,574 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,574 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE ERR_UPD;', 'line_no': 32}
2025-09-03 04:09:45,583 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,583 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        CNTR := 0;', 'line_no': 36}, {'indent': 8, 'line': '        SELECT', 'line_no': 39}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 40}, {'indent': 8, 'line': '        FROM', 'line_no': 41}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 42}, {'indent': 8, 'line': '        WHERE', 'line_no': 43}, {'indent': 12, 'line': '            COMPANY_CD = :NEW.COMPANY_CD;', 'line_no': 44}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 45, 'then_line_no': 45, 'if_indent': 8, 'end_if_line_no': 47, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        CNTR := 0;', 'line_no': 36}
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 39}
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 40}
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        FROM', 'line_no': 41}
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 42}
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 43}
2025-09-03 04:09:45,591 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:45,592 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COMPANY_CD = :NEW.COMPANY_CD;', 'line_no': 44}
2025-09-03 04:09:45,592 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:45,602 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}]
2025-09-03 04:09:45,602 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,602 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}
2025-09-03 04:09:45,610 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,618 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,618 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,625 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ", 'type': 'if_else', 'if_line_no': 53, 'then_line_no': 53, 'if_indent': 8, 'end_if_line_no': 57, 'then_statements': [{'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;', 'line_no': 54}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        CNTR := 0;', 'line_no': 61}, {'indent': 8, 'line': '        SELECT', 'line_no': 62}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 63}, {'indent': 8, 'line': '        FROM', 'line_no': 64}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 65}, {'indent': 8, 'line': '        WHERE', 'line_no': 66}, {'indent': 12, 'line': "            COMPANY_TYPE_CD IN ( 'L')", 'line_no': 67}, {'indent': 12, 'line': "            AND VALID_IND = 'Y'", 'line_no': 68}, {'indent': 12, 'line': '            AND COMPANY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 69}, {'condition': " CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L') OR (:NEW.COMPANY_TYPE_CD = 'D' AND :NEW.CBC_GBE_SCOPE = 'Y' AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 72, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        MDM_UTIL_COMPANIES.MODIFYCOMPANY (', 'line_no': 80}, {'indent': 12, 'line': '            I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 81}, {'indent': 12, 'line': '            I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD,', 'line_no': 82}, {'indent': 12, 'line': '            I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE,', 'line_no': 83}, {'indent': 12, 'line': '            I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD,', 'line_no': 84}, {'indent': 12, 'line': '            I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME,', 'line_no': 85}, {'indent': 12, 'line': '            I_SHORT_NAME => :NEW.SHORT_NAME,', 'line_no': 86}, {'indent': 12, 'line': '            I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME,', 'line_no': 87}, {'indent': 12, 'line': '            I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD,', 'line_no': 88}, {'indent': 12, 'line': '            I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD,', 'line_no': 89}, {'indent': 12, 'line': '            I_URL => :NEW.URL,', 'line_no': 90}, {'indent': 12, 'line': '            I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL,', 'line_no': 91}, {'indent': 12, 'line': '            I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO,', 'line_no': 92}, {'indent': 12, 'line': '            I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO,', 'line_no': 93}, {'indent': 12, 'line': '            I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO,', 'line_no': 94}, {'indent': 12, 'line': '            I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND,', 'line_no': 95}, {'indent': 12, 'line': '            I_FATCA_CD => :NEW.FATCA_CD,', 'line_no': 96}, {'indent': 12, 'line': '            I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE,', 'line_no': 97}, {'indent': 12, 'line': '            I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE,', 'line_no': 98}, {'indent': 12, 'line': '            I_SAPINST_NO => :NEW.SAPINST_NO,', 'line_no': 99}, {'indent': 12, 'line': '            I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO,', 'line_no': 100}, {'indent': 12, 'line': '            I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE,', 'line_no': 101}, {'indent': 12, 'line': '            I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE,', 'line_no': 102}, {'indent': 12, 'line': '            I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA,', 'line_no': 103}, {'indent': 12, 'line': '            I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA,', 'line_no': 104}, {'indent': 12, 'line': '            I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND,', 'line_no': 105}, {'indent': 12, 'line': '            I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE,', 'line_no': 106}, {'indent': 12, 'line': '            I_TOP_REMARKS => :NEW.TOP_REMARKS,', 'line_no': 107}, {'indent': 12, 'line': '            I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS,', 'line_no': 108}, {'indent': 12, 'line': '            I_REMARKS => :NEW.REMARKS,', 'line_no': 109}, {'indent': 12, 'line': '            I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC,', 'line_no': 110}, {'indent': 12, 'line': '            I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER,', 'line_no': 111}, {'indent': 12, 'line': '            I_TRADING_PARTNER => :NEW.TRADING_PARTNER,', 'line_no': 112}, {'indent': 12, 'line': '            I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID,', 'line_no': 113}, {'indent': 12, 'line': '            I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG,', 'line_no': 114}, {'indent': 12, 'line': '            I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE', 'line_no': 115}, {'indent': 0, 'line': ',', 'line_no': 116}, {'indent': 12, 'line': '            I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND,', 'line_no': 117}, {'indent': 12, 'line': '            I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND,', 'line_no': 118}, {'indent': 12, 'line': '            I_VALID_IND => :NEW.VALID_IND,', 'line_no': 119}, {'indent': 12, 'line': '            I_CORE_REMARKS => :NEW.CORE_REMARKS,', 'line_no': 120}, {'indent': 12, 'line': '            I_REVIEW_USERID => :NEW.REVIEW_USERID,', 'line_no': 121}, {'indent': 12, 'line': '            I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE,', 'line_no': 122}, {'indent': 12, 'line': '            I_REQUESTER_USERID => :NEW.REQUESTER_USERID,', 'line_no': 123}, {'indent': 12, 'line': '            I_REQUEST_DATE => :NEW.REQUEST_DATE,', 'line_no': 124}, {'indent': 12, 'line': '            I_CHANGE_USER => V_USERID', 'line_no': 125}, {'indent': 8, 'line': '        );', 'line_no': 126}, {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]}], 'else_statements': [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (', 'line_no': 150}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 151}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,', 'line_no': 152}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,', 'line_no': 153}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,', 'line_no': 154}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID', 'line_no': 155}, {'indent': 16, 'line': '                );', 'line_no': 156}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 158}]}, {'condition': " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ", 'type': 'if_else', 'if_line_no': 161, 'then_line_no': 161, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}, {'indent': 12, 'line': '            SELECT', 'line_no': 165}, {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}, {'indent': 12, 'line': '            FROM', 'line_no': 167}, {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}, {'indent': 12, 'line': '            WHERE', 'line_no': 169}, {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}, {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}, {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}, {'indent': 12, 'line': '            SET', 'line_no': 188}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}, {'indent': 16, 'line': '                ) - 1', 'line_no': 191}, {'indent': 12, 'line': '            WHERE', 'line_no': 192}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}], 'if_elses': [], 'else_statements': []}, {'condition': " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 200, 'then_line_no': 200, 'if_indent': 8, 'end_if_line_no': 211, 'then_statements': [{'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}, {'indent': 12, 'line': '            SET', 'line_no': 202}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}, {'indent': 16, 'line': '                ) - 1', 'line_no': 205}, {'indent': 12, 'line': '            WHERE', 'line_no': 206}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}, {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ", 'type': 'if_else', 'if_line_no': 215, 'then_line_no': 215, 'if_indent': 8, 'end_if_line_no': 217, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ", 'type': 'if_else', 'if_line_no': 221, 'then_line_no': 221, 'if_indent': 8, 'end_if_line_no': 223, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ", 'type': 'if_else', 'if_line_no': 227, 'then_line_no': 227, 'if_indent': 8, 'end_if_line_no': 229, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}], 'if_elses': [], 'else_statements': []}, {'condition': " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ", 'type': 'if_else', 'if_line_no': 233, 'then_line_no': 233, 'if_indent': 8, 'end_if_line_no': 237, 'then_statements': [{'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 234}], 'if_elses': [], 'else_statements': []}, {'condition': " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 241, 'then_line_no': 241, 'if_indent': 8, 'end_if_line_no': 325, 'then_statements': [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 287}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,', 'line_no': 288}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => TRUNC (SYSDATE),', 'line_no': 289}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 290}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 291}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 292}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 293}, {'indent': 16, 'line': '                );', 'line_no': 294}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 296}, {'indent': 20, 'line': "                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 297}, {'indent': 45, 'line': '                                             || V_COUNTRY_CD,', 'line_no': 298}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,', 'line_no': 299}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 300}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 301}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 302}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 303}, {'indent': 16, 'line': '                );', 'line_no': 304}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 309}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 310}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 311}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 312}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 313}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 314}, {'indent': 16, 'line': '                );', 'line_no': 315}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 317}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 318}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 319}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 320}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 321}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 322}, {'indent': 16, 'line': '                );', 'line_no': 323}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'indent': 16, 'line': '                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (', 'line_no': 334}, {'indent': 16, 'line': '                :NEW.COMPANY_CD,', 'line_no': 335}, {'indent': 16, 'line': '                V_LEGAL_COMPANY_CD,', 'line_no': 336}, {'indent': 16, 'line': '                :NEW.OFFICIAL_NAME,', 'line_no': 337}, {'indent': 16, 'line': '                V_USERID);', 'line_no': 338}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 340}]}]
2025-09-03 04:09:45,625 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,633 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;', 'line_no': 54}]
2025-09-03 04:09:45,633 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,633 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;', 'line_no': 54}
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        CNTR := 0;', 'line_no': 61}
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 62}
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 63}
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        FROM', 'line_no': 64}
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 65}
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:45,642 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 66}
2025-09-03 04:09:45,643 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:45,643 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            COMPANY_TYPE_CD IN ( 'L')", 'line_no': 67}
2025-09-03 04:09:45,643 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:45,643 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            AND VALID_IND = 'Y'", 'line_no': 68}
2025-09-03 04:09:45,643 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:45,643 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            AND COMPANY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 69}
2025-09-03 04:09:45,643 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:45,651 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}]
2025-09-03 04:09:45,651 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,651 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}
2025-09-03 04:09:45,659 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,659 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:45,659 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        MDM_UTIL_COMPANIES.MODIFYCOMPANY (', 'line_no': 80}
2025-09-03 04:09:45,659 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANY
2025-09-03 04:09:45,659 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDM_UTIL_COMPANIES.MODIFYCOMPANY (
2025-09-03 04:09:45,659 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 80
2025-09-03 04:09:45,660 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 126
2025-09-03 04:09:45,660 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDM_UTIL_COMPANIES.MODIFYCOMPANY ( I_COMPANY_CD => :NEW.COMPANY_CD, I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD, I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE, I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD, I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME, I_SHORT_NAME => :NEW.SHORT_NAME, I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME, I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD, I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD, I_URL => :NEW.URL, I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL, I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO, I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO, I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO, I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND, I_FATCA_CD => :NEW.FATCA_CD, I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE, I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE, I_SAPINST_NO => :NEW.SAPINST_NO, I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO, I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE, I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE, I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA, I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA, I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND, I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE, I_TOP_REMARKS => :NEW.TOP_REMARKS, I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS, I_REMARKS => :NEW.REMARKS, I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC, I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER, I_TRADING_PARTNER => :NEW.TRADING_PARTNER, I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID, I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG, I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE , I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND, I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND, I_VALID_IND => :NEW.VALID_IND, I_CORE_REMARKS => :NEW.CORE_REMARKS, I_REVIEW_USERID => :NEW.REVIEW_USERID, I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE, I_REQUESTER_USERID => :NEW.REQUESTER_USERID, I_REQUEST_DATE => :NEW.REQUEST_DATE, I_CHANGE_USER => V_USERID );
2025-09-03 04:09:45,660 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDM_UTIL_COMPANIES.MODIFYCOMPANY ( I_COMPANY_CD => :NEW.COMPANY_CD, I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD, I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE, I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD, I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME, I_SHORT_NAME => :NEW.SHORT_NAME, I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME, I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD, I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD, I_URL => :NEW.URL, I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL, I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO, I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO, I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO, I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND, I_FATCA_CD => :NEW.FATCA_CD, I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE, I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE, I_SAPINST_NO => :NEW.SAPINST_NO, I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO, I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE, I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE, I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA, I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA, I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND, I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE, I_TOP_REMARKS => :NEW.TOP_REMARKS, I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS, I_REMARKS => :NEW.REMARKS, I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC, I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER, I_TRADING_PARTNER => :NEW.TRADING_PARTNER, I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID, I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG, I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE , I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND, I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND, I_VALID_IND => :NEW.VALID_IND, I_CORE_REMARKS => :NEW.CORE_REMARKS, I_REVIEW_USERID => :NEW.REVIEW_USERID, I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE, I_REQUESTER_USERID => :NEW.REQUESTER_USERID, I_REQUEST_DATE => :NEW.REQUEST_DATE, I_CHANGE_USER => V_USERID );
2025-09-03 04:09:45,660 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_COMPANY_TYPE_CD': ':NEW.COMPANY_TYPE_CD', 'I_MULTISEL_COMPANY_PURPOSE': ':NEW.MULTISEL_COMPANY_PURPOSE', 'I_LEGAL_COMPANY_CD': 'V_LEGAL_COMPANY_CD', 'I_OFFICIAL_NAME': ':NEW.OFFICIAL_NAME', 'I_SHORT_NAME': ':NEW.SHORT_NAME', 'I_DISCLOSURE_NAME': ':NEW.DISCLOSURE_NAME', 'I_FUNCTIONAL_CURRENCY_CD': ':NEW.FUNCTIONAL_CURRENCY_CD', 'I_STATUTORY_CURRENCY_CD': ':NEW.STATUTORY_CURRENCY_CD', 'I_URL': ':NEW.URL', 'I_PHONEBOOK_URL': ':NEW.PHONEBOOK_URL', 'I_EMERGENCY_PHONE_NO': ':NEW.EMERGENCY_PHONE_NO', 'I_GENERAL_PHONE_NO': ':NEW.GENERAL_PHONE_NO', 'I_GENERAL_FAX_NO': ':NEW.GENERAL_FAX_NO', 'I_ANNUAL_REPORT_IND': ':NEW.ANNUAL_REPORT_IND', 'I_FATCA_CD': ':NEW.FATCA_CD', 'I_PHARMA_NUMBER_RANGE': ':NEW.PHARMA_NUMBER_RANGE', 'I_LIQUIDATION_DATE': ':NEW.LIQUIDATION_DATE', 'I_SAPINST_NO': ':NEW.SAPINST_NO', 'I_SAP_COMPANY_CODE_NO': ':NEW.SAP_COMPANY_CODE_NO', 'I_SAP_GO_LIVE_DATE': ':NEW.SAP_GO_LIVE_DATE', 'I_SAP_GROUP_CODE': ':NEW.SAP_GROUP_CODE', 'I_SAP_LOCAL_COA': ':NEW.SAP_LOCAL_COA', 'I_SAP_CONTROLLING_AREA': ':NEW.SAP_CONTROLLING_AREA', 'I_TOP_SYSTEM_IND': ':NEW.TOP_SYSTEM_IND', 'I_TOP_GO_LIVE_DATE': ':NEW.TOP_GO_LIVE_DATE', 'I_TOP_REMARKS': ':NEW.TOP_REMARKS', 'I_LEGAL_REMARKS': ':NEW.LEGAL_REMARKS', 'I_REMARKS': ':NEW.REMARKS', 'I_LOCAL_STATUTORY_ACC': ':NEW.LOCAL_STATUTORY_ACC', 'I_ICFR_COMPANY_LAYER': ':NEW.ICFR_COMPANY_LAYER', 'I_TRADING_PARTNER': ':NEW.TRADING_PARTNER', 'I_S4_ENTITY_ID': ':NEW.S4_ENTITY_ID', 'I_RCA_DISPLAY_FLAG': ':NEW.RCA_DISPLAY_FLAG', 'I_CBC_GBE_SCOPE': ':NEW.CBC_GBE_SCOPE', 'I_WEB_DISPLAY_IND': ':NEW.WEB_DISPLAY_IND', 'I_HEADCOUNT_IND': ':NEW.HEADCOUNT_IND', 'I_VALID_IND': ':NEW.VALID_IND', 'I_CORE_REMARKS': ':NEW.CORE_REMARKS', 'I_REVIEW_USERID': ':NEW.REVIEW_USERID', 'I_REVIEW_EXP_DATE': ':NEW.REVIEW_EXP_DATE', 'I_REQUESTER_USERID': ':NEW.REQUESTER_USERID', 'I_REQUEST_DATE': ':NEW.REQUEST_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD, I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE, I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD, I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME, I_SHORT_NAME => :NEW.SHORT_NAME, I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME, I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD, I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD, I_URL => :NEW.URL, I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL, I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO, I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO, I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO, I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND, I_FATCA_CD => :NEW.FATCA_CD, I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE, I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE, I_SAPINST_NO => :NEW.SAPINST_NO, I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO, I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE, I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE, I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA, I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA, I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND, I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE, I_TOP_REMARKS => :NEW.TOP_REMARKS, I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS, I_REMARKS => :NEW.REMARKS, I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC, I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER, I_TRADING_PARTNER => :NEW.TRADING_PARTNER, I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID, I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG, I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE , I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND, I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND, I_VALID_IND => :NEW.VALID_IND, I_CORE_REMARKS => :NEW.CORE_REMARKS, I_REVIEW_USERID => :NEW.REVIEW_USERID, I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE, I_REQUESTER_USERID => :NEW.REQUESTER_USERID, I_REQUEST_DATE => :NEW.REQUEST_DATE, I_CHANGE_USER => V_USERID'}}
2025-09-03 04:09:45,660 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 58
2025-09-03 04:09:45,668 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]}], 'else_statements': [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (', 'line_no': 150}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 151}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD,', 'line_no': 152}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE,', 'line_no': 153}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => :NEW.VALID_TO_DATE,', 'line_no': 154}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID', 'line_no': 155}, {'indent': 16, 'line': '                );', 'line_no': 156}]
2025-09-03 04:09:45,668 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,669 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}
2025-09-03 04:09:45,669 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,676 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]
2025-09-03 04:09:45,676 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,676 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}
2025-09-03 04:09:45,684 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]
2025-09-03 04:09:45,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        NULL;', 'line_no': 148}
2025-09-03 04:09:45,684 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,684 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (', 'line_no': 150}
2025-09-03 04:09:45,684 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR
2025-09-03 04:09:45,684 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANY
2025-09-03 04:09:45,684 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR (
2025-09-03 04:09:45,685 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 150
2025-09-03 04:09:45,685 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 156
2025-09-03 04:09:45,685 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR ( I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID );
2025-09-03 04:09:45,685 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_MFR ( I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID );
2025-09-03 04:09:45,685 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}
2025-09-03 04:09:45,695 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                NULL;', 'line_no': 158}]
2025-09-03 04:09:45,695 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,695 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                NULL;', 'line_no': 158}
2025-09-03 04:09:45,696 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 59
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}, {'indent': 12, 'line': '            SELECT', 'line_no': 165}, {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}, {'indent': 12, 'line': '            FROM', 'line_no': 167}, {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}, {'indent': 12, 'line': '            WHERE', 'line_no': 169}, {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}, {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}, {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}, {'indent': 12, 'line': '            SET', 'line_no': 188}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}, {'indent': 16, 'line': '                ) - 1', 'line_no': 191}, {'indent': 12, 'line': '            WHERE', 'line_no': 192}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}]
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 165}
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FROM', 'line_no': 167}
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,704 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}
2025-09-03 04:09:45,705 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:45,705 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 169}
2025-09-03 04:09:45,705 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:45,705 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}
2025-09-03 04:09:45,705 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:45,705 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}
2025-09-03 04:09:45,705 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:45,705 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}
2025-09-03 04:09:45,705 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}]
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 174}
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                FROM', 'line_no': 176}
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 178}
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:45,714 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}
2025-09-03 04:09:45,715 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:45,715 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}
2025-09-03 04:09:45,715 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:45,715 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}
2025-09-03 04:09:45,715 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:45,715 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}
2025-09-03 04:09:45,722 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,722 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:45,722 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SET', 'line_no': 188}
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                ) - 1', 'line_no': 191}
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 192}
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 17
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 18
2025-09-03 04:09:45,723 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}
2025-09-03 04:09:45,731 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,731 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 60
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}, {'indent': 12, 'line': '            SET', 'line_no': 202}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}, {'indent': 16, 'line': '                ) - 1', 'line_no': 205}, {'indent': 12, 'line': '            WHERE', 'line_no': 206}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}, {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}]
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SET', 'line_no': 202}
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,739 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                ) - 1', 'line_no': 205}
2025-09-03 04:09:45,740 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:45,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 206}
2025-09-03 04:09:45,740 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:45,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}
2025-09-03 04:09:45,740 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:45,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}
2025-09-03 04:09:45,740 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:45,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}
2025-09-03 04:09:45,740 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:45,740 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}
2025-09-03 04:09:45,747 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,748 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 61
2025-09-03 04:09:45,755 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}]
2025-09-03 04:09:45,755 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,755 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}
2025-09-03 04:09:45,763 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,763 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 62
2025-09-03 04:09:45,771 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}]
2025-09-03 04:09:45,771 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,771 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}
2025-09-03 04:09:45,779 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,779 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 63
2025-09-03 04:09:45,787 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}]
2025-09-03 04:09:45,787 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,787 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}
2025-09-03 04:09:45,797 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,797 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 64
2025-09-03 04:09:45,805 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 234}]
2025-09-03 04:09:45,805 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,805 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 234}
2025-09-03 04:09:45,813 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,813 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 65
2025-09-03 04:09:45,821 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 287}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,', 'line_no': 288}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => TRUNC (SYSDATE),', 'line_no': 289}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 290}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 291}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 292}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 293}, {'indent': 16, 'line': '                );', 'line_no': 294}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 296}, {'indent': 20, 'line': "                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 297}, {'indent': 45, 'line': '                                             || V_COUNTRY_CD,', 'line_no': 298}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,', 'line_no': 299}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 300}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 301}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 302}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 303}, {'indent': 16, 'line': '                );', 'line_no': 304}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 309}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 310}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 311}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 312}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 313}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 314}, {'indent': 16, 'line': '                );', 'line_no': 315}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 317}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 318}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 319}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 320}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 321}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 322}, {'indent': 16, 'line': '                );', 'line_no': 323}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:45,821 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,828 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 287}, {'indent': 20, 'line': '                    I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD,', 'line_no': 288}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => TRUNC (SYSDATE),', 'line_no': 289}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 290}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 291}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 292}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 293}, {'indent': 16, 'line': '                );', 'line_no': 294}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 296}, {'indent': 20, 'line': "                    I_REPORTING_ENTITY_CD => 'J-'", 'line_no': 297}, {'indent': 45, 'line': '                                             || V_COUNTRY_CD,', 'line_no': 298}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE,', 'line_no': 299}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => NULL,', 'line_no': 300}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 301}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 302}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'INSERT'", 'line_no': 303}, {'indent': 16, 'line': '                );', 'line_no': 304}]
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 245}
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                FROM', 'line_no': 247}
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 249}
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}
2025-09-03 04:09:45,829 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:45,836 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}]
2025-09-03 04:09:45,836 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,837 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}
2025-09-03 04:09:45,844 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,844 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:45,844 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}
2025-09-03 04:09:45,844 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:45,844 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 260}
2025-09-03 04:09:45,844 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:45,844 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}
2025-09-03 04:09:45,844 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:45,845 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                FROM', 'line_no': 262}
2025-09-03 04:09:45,845 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:45,845 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}
2025-09-03 04:09:45,845 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:45,845 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 264}
2025-09-03 04:09:45,845 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:45,845 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}
2025-09-03 04:09:45,845 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:45,845 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}
2025-09-03 04:09:45,845 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:45,853 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}]
2025-09-03 04:09:45,853 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,853 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}
2025-09-03 04:09:45,861 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,861 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 04:09:45,861 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 271}
2025-09-03 04:09:45,861 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 17
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 18
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 19
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 20
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                FROM', 'line_no': 275}
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 21
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 22
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 277}
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 23
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 24
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}
2025-09-03 04:09:45,862 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 25
2025-09-03 04:09:45,870 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}]
2025-09-03 04:09:45,870 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,870 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 26
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 286}
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANY
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 286
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 294
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT' );
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT' );
2025-09-03 04:09:45,879 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:45,880 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 35
2025-09-03 04:09:45,880 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 295}
2025-09-03 04:09:45,880 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU
2025-09-03 04:09:45,880 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANY
2025-09-03 04:09:45,880 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (
2025-09-03 04:09:45,880 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 295
2025-09-03 04:09:45,880 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 304
2025-09-03 04:09:45,880 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT' );
2025-09-03 04:09:45,880 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT' );
2025-09-03 04:09:45,880 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:45,888 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,888 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:45,900 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 309}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 310}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 311}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 312}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'CE',", 'line_no': 313}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 314}, {'indent': 16, 'line': '                );', 'line_no': 315}, {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}, {'indent': 20, 'line': '                    I_COMPANY_CD => :NEW.COMPANY_CD,', 'line_no': 317}, {'indent': 20, 'line': '                    I_VALID_FROM_DATE => NULL,', 'line_no': 318}, {'indent': 20, 'line': '                    I_VALID_TO_DATE => TRUNC (SYSDATE),', 'line_no': 319}, {'indent': 20, 'line': '                    I_CHANGE_USER => V_USERID,', 'line_no': 320}, {'indent': 20, 'line': "                    I_MAPPING_TYPE => 'JU',", 'line_no': 321}, {'indent': 20, 'line': "                    I_ACTION_TYPE => 'UPDATE'", 'line_no': 322}, {'indent': 16, 'line': '                );', 'line_no': 323}]
2025-09-03 04:09:45,900 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,900 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 308}
2025-09-03 04:09:45,900 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU
2025-09-03 04:09:45,900 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANY
2025-09-03 04:09:45,900 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (
2025-09-03 04:09:45,900 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 308
2025-09-03 04:09:45,900 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 315
2025-09-03 04:09:45,900 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE' );
2025-09-03 04:09:45,900 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE' );
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (', 'line_no': 316}
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDM_UTIL_COMPANIES.MODIFYCOMPANY
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU (
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 316
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 323
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE' );
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDM_UTIL_COMPANIES.MODIFYCOMPANYMAPPING_CE_JU ( I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE' );
2025-09-03 04:09:45,901 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}
2025-09-03 04:09:45,911 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,923 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,923 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 66
2025-09-03 04:09:45,932 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (', 'line_no': 334}, {'indent': 16, 'line': '                :NEW.COMPANY_CD,', 'line_no': 335}, {'indent': 16, 'line': '                V_LEGAL_COMPANY_CD,', 'line_no': 336}, {'indent': 16, 'line': '                :NEW.OFFICIAL_NAME,', 'line_no': 337}, {'indent': 16, 'line': '                V_USERID);', 'line_no': 338}]
2025-09-03 04:09:45,933 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,933 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (', 'line_no': 334}
2025-09-03 04:09:45,933 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME
2025-09-03 04:09:45,933 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME (
2025-09-03 04:09:45,933 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 334
2025-09-03 04:09:45,933 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 338
2025-09-03 04:09:45,933 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME ( :NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID);
2025-09-03 04:09:45,933 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME ( :NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID);
2025-09-03 04:09:45,933 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}
2025-09-03 04:09:45,946 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 16, 'line': '                NULL;', 'line_no': 340}]
2025-09-03 04:09:45,946 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,946 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                NULL;', 'line_no': 340}
2025-09-03 04:09:45,956 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}]
2025-09-03 04:09:45,956 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,956 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}
2025-09-03 04:09:45,965 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:45,972 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);', 'line_no': 347}]
2025-09-03 04:09:45,972 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,972 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);', 'line_no': 347}
2025-09-03 04:09:45,972 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,972 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);
2025-09-03 04:09:45,973 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 347
2025-09-03 04:09:45,973 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 347
2025-09-03 04:09:45,973 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20110, V_TRIGGER_NAME);
2025-09-03 04:09:45,973 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,980 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20111, V_TRIGGER_NAME);', 'line_no': 349}]
2025-09-03 04:09:45,980 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,980 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20111, V_TRIGGER_NAME);', 'line_no': 349}
2025-09-03 04:09:45,980 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,980 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20111, V_TRIGGER_NAME);
2025-09-03 04:09:45,981 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 349
2025-09-03 04:09:45,981 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 349
2025-09-03 04:09:45,981 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20111, V_TRIGGER_NAME);
2025-09-03 04:09:45,981 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20111, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,989 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);', 'line_no': 351}]
2025-09-03 04:09:45,989 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,989 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);', 'line_no': 351}
2025-09-03 04:09:45,989 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,989 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);
2025-09-03 04:09:45,989 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 351
2025-09-03 04:09:45,989 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 351
2025-09-03 04:09:45,989 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20114, V_TRIGGER_NAME);
2025-09-03 04:09:45,989 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20114', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20114, V_TRIGGER_NAME'}}
2025-09-03 04:09:45,997 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20122, 'Please insert : Rep. Code Assignm. Valid from Date');", 'line_no': 353}]
2025-09-03 04:09:45,997 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:45,997 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20122, 'Please insert : Rep. Code Assignm. Valid from Date');", 'line_no': 353}
2025-09-03 04:09:45,997 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:45,997 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR ( -20122, 'PLEASE INSERT : REP. CODE ASSIGNM. VALID FROM DATE');
2025-09-03 04:09:45,997 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 353
2025-09-03 04:09:45,997 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 353
2025-09-03 04:09:45,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR ( -20122, 'Please insert : Rep. Code Assignm. Valid from Date');
2025-09-03 04:09:45,997 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20122', "'Please insert : Rep. Code Assignm. Valid from Date'"], 'named_params': {}, 'raw_text': "-20122, 'Please insert : Rep. Code Assignm. Valid from Date'"}}
2025-09-03 04:09:46,005 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20123, 'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope');", 'line_no': 355}]
2025-09-03 04:09:46,005 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,005 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20123, 'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope');", 'line_no': 355}
2025-09-03 04:09:46,005 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,005 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR ( -20123, 'A COMPANY CANNOT BE IN CBC/GBE SCOPE IF THE RU THAT REPORTS IT IS NOT IN CBC SCOPE');
2025-09-03 04:09:46,005 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 355
2025-09-03 04:09:46,005 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 355
2025-09-03 04:09:46,005 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR ( -20123, 'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope');
2025-09-03 04:09:46,005 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20123', "'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"], 'named_params': {}, 'raw_text': "-20123, 'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"}}
2025-09-03 04:09:46,016 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20124, 'The CBC/GBE Scope must be set to No before deactivating the company');", 'line_no': 357}]
2025-09-03 04:09:46,016 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,016 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20124, 'The CBC/GBE Scope must be set to No before deactivating the company');", 'line_no': 357}
2025-09-03 04:09:46,016 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,016 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR ( -20124, 'THE CBC/GBE SCOPE MUST BE SET TO NO BEFORE DEACTIVATING THE COMPANY');
2025-09-03 04:09:46,016 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 357
2025-09-03 04:09:46,016 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 357
2025-09-03 04:09:46,016 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR ( -20124, 'The CBC/GBE Scope must be set to No before deactivating the company');
2025-09-03 04:09:46,016 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20124', "'The CBC/GBE Scope must be set to No before deactivating the company'"], 'named_params': {}, 'raw_text': "-20124, 'The CBC/GBE Scope must be set to No before deactivating the company'"}}
2025-09-03 04:09:46,024 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20124, 'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes');", 'line_no': 359}]
2025-09-03 04:09:46,024 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,024 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20124, 'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes');", 'line_no': 359}
2025-09-03 04:09:46,024 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,024 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR ( -20124, 'NO PHYSICAL ADDRESS FOUND. PLEASE INSERT THE ADDRESS BEFORE SETTING THE CBC/GBE SCOPE TO YES');
2025-09-03 04:09:46,024 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 359
2025-09-03 04:09:46,024 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 359
2025-09-03 04:09:46,024 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR ( -20124, 'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes');
2025-09-03 04:09:46,024 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20124', "'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"], 'named_params': {}, 'raw_text': "-20124, 'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"}}
2025-09-03 04:09:46,035 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: '", 'line_no': 361}, {'indent': 42, 'line': '                                          || V_COMPANY_CODES_LIST);', 'line_no': 362}]
2025-09-03 04:09:46,036 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,036 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: '", 'line_no': 361}
2025-09-03 04:09:46,036 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,036 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR ( -20125, 'THE COMPANY CANNOT BE INVALIDATED BECAUSE IS STILL USED AS LEGAL COMPANY FOR THE FOLLOWING COMPANIES: '
2025-09-03 04:09:46,036 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 361
2025-09-03 04:09:46,036 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 362
2025-09-03 04:09:46,036 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - RAISE_APPLICATION_ERROR ( -20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST);
2025-09-03 04:09:46,036 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR ( -20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST);
2025-09-03 04:09:46,036 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20125', "'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"], 'named_params': {}, 'raw_text': "-20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"}}
2025-09-03 04:09:46,045 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR ( -20126, V_LEGAL_COMPANY_CD', 'line_no': 364}, {'indent': 42, 'line': "                                          || ' is not a valid Legal Company Code');", 'line_no': 365}]
2025-09-03 04:09:46,045 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,045 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR ( -20126, V_LEGAL_COMPANY_CD', 'line_no': 364}
2025-09-03 04:09:46,045 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,045 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR ( -20126, V_LEGAL_COMPANY_CD
2025-09-03 04:09:46,045 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 364
2025-09-03 04:09:46,045 - root - DEBUG - [OracleTriggerAnalyzer.py:812] - function calling end: 365
2025-09-03 04:09:46,045 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - RAISE_APPLICATION_ERROR ( -20126, V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code');
2025-09-03 04:09:46,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR ( -20126, V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code');
2025-09-03 04:09:46,045 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20126', "V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"], 'named_params': {}, 'raw_text': "-20126, V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"}}
2025-09-03 04:09:46,054 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20127, 'An Associate Entity cannot be in CBC/GBE Scope!');", 'line_no': 367}]
2025-09-03 04:09:46,054 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,054 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20127, 'An Associate Entity cannot be in CBC/GBE Scope!');", 'line_no': 367}
2025-09-03 04:09:46,054 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,054 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR ( -20127, 'AN ASSOCIATE ENTITY CANNOT BE IN CBC/GBE SCOPE!');
2025-09-03 04:09:46,054 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 367
2025-09-03 04:09:46,054 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 367
2025-09-03 04:09:46,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR ( -20127, 'An Associate Entity cannot be in CBC/GBE Scope!');
2025-09-03 04:09:46,054 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20127', "'An Associate Entity cannot be in CBC/GBE Scope!'"], 'named_params': {}, 'raw_text': "-20127, 'An Associate Entity cannot be in CBC/GBE Scope!'"}}
2025-09-03 04:09:46,063 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20127, 'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company');", 'line_no': 369}]
2025-09-03 04:09:46,063 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,063 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20127, 'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company');", 'line_no': 369}
2025-09-03 04:09:46,063 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,063 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR ( -20127, 'PLEASE FILL IN REP. CODE ASSIGNM. VALID TO DATE FIELD BEFORE INVALIDATING THE COMPANY');
2025-09-03 04:09:46,063 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 369
2025-09-03 04:09:46,063 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 369
2025-09-03 04:09:46,063 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR ( -20127, 'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company');
2025-09-03 04:09:46,063 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20127', "'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"], 'named_params': {}, 'raw_text': "-20127, 'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"}}
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'begin_end', 'begin_line_no': 24, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 25}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 27, 'when_indent': 8, 'then_line_no': 27, 'exception_statements': [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 28}]}], 'exception_line_no': 26, 'end_line_no': 29}, {'condition': ' UPDATING AND :OLD.COMPANY_CD != :NEW.COMPANY_CD ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_UPD;', 'line_no': 32}], 'if_elses': [], 'else_statements': []}, {'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 4, 'end_if_line_no': 48, 'then_statements': [{'indent': 8, 'line': '        CNTR := 0;', 'line_no': 36}, {'indent': 8, 'line': '        SELECT', 'line_no': 39}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 40}, {'indent': 8, 'line': '        FROM', 'line_no': 41}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 42}, {'indent': 8, 'line': '        WHERE', 'line_no': 43}, {'indent': 12, 'line': '            COMPANY_CD = :NEW.COMPANY_CD;', 'line_no': 44}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 45, 'then_line_no': 45, 'if_indent': 8, 'end_if_line_no': 47, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' INSERTING OR UPDATING ', 'type': 'if_else', 'if_line_no': 50, 'then_line_no': 50, 'if_indent': 4, 'end_if_line_no': 344, 'then_statements': [{'condition': " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ", 'type': 'if_else', 'if_line_no': 53, 'then_line_no': 53, 'if_indent': 8, 'end_if_line_no': 57, 'then_statements': [{'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;', 'line_no': 54}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        CNTR := 0;', 'line_no': 61}, {'indent': 8, 'line': '        SELECT', 'line_no': 62}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 63}, {'indent': 8, 'line': '        FROM', 'line_no': 64}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 65}, {'indent': 8, 'line': '        WHERE', 'line_no': 66}, {'indent': 12, 'line': "            COMPANY_TYPE_CD IN ( 'L')", 'line_no': 67}, {'indent': 12, 'line': "            AND VALID_IND = 'Y'", 'line_no': 68}, {'indent': 12, 'line': '            AND COMPANY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 69}, {'condition': " CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L') OR (:NEW.COMPANY_TYPE_CD = 'D' AND :NEW.CBC_GBE_SCOPE = 'Y' AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 72, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_COMPANY_TYPE_CD': ':NEW.COMPANY_TYPE_CD', 'I_MULTISEL_COMPANY_PURPOSE': ':NEW.MULTISEL_COMPANY_PURPOSE', 'I_LEGAL_COMPANY_CD': 'V_LEGAL_COMPANY_CD', 'I_OFFICIAL_NAME': ':NEW.OFFICIAL_NAME', 'I_SHORT_NAME': ':NEW.SHORT_NAME', 'I_DISCLOSURE_NAME': ':NEW.DISCLOSURE_NAME', 'I_FUNCTIONAL_CURRENCY_CD': ':NEW.FUNCTIONAL_CURRENCY_CD', 'I_STATUTORY_CURRENCY_CD': ':NEW.STATUTORY_CURRENCY_CD', 'I_URL': ':NEW.URL', 'I_PHONEBOOK_URL': ':NEW.PHONEBOOK_URL', 'I_EMERGENCY_PHONE_NO': ':NEW.EMERGENCY_PHONE_NO', 'I_GENERAL_PHONE_NO': ':NEW.GENERAL_PHONE_NO', 'I_GENERAL_FAX_NO': ':NEW.GENERAL_FAX_NO', 'I_ANNUAL_REPORT_IND': ':NEW.ANNUAL_REPORT_IND', 'I_FATCA_CD': ':NEW.FATCA_CD', 'I_PHARMA_NUMBER_RANGE': ':NEW.PHARMA_NUMBER_RANGE', 'I_LIQUIDATION_DATE': ':NEW.LIQUIDATION_DATE', 'I_SAPINST_NO': ':NEW.SAPINST_NO', 'I_SAP_COMPANY_CODE_NO': ':NEW.SAP_COMPANY_CODE_NO', 'I_SAP_GO_LIVE_DATE': ':NEW.SAP_GO_LIVE_DATE', 'I_SAP_GROUP_CODE': ':NEW.SAP_GROUP_CODE', 'I_SAP_LOCAL_COA': ':NEW.SAP_LOCAL_COA', 'I_SAP_CONTROLLING_AREA': ':NEW.SAP_CONTROLLING_AREA', 'I_TOP_SYSTEM_IND': ':NEW.TOP_SYSTEM_IND', 'I_TOP_GO_LIVE_DATE': ':NEW.TOP_GO_LIVE_DATE', 'I_TOP_REMARKS': ':NEW.TOP_REMARKS', 'I_LEGAL_REMARKS': ':NEW.LEGAL_REMARKS', 'I_REMARKS': ':NEW.REMARKS', 'I_LOCAL_STATUTORY_ACC': ':NEW.LOCAL_STATUTORY_ACC', 'I_ICFR_COMPANY_LAYER': ':NEW.ICFR_COMPANY_LAYER', 'I_TRADING_PARTNER': ':NEW.TRADING_PARTNER', 'I_S4_ENTITY_ID': ':NEW.S4_ENTITY_ID', 'I_RCA_DISPLAY_FLAG': ':NEW.RCA_DISPLAY_FLAG', 'I_CBC_GBE_SCOPE': ':NEW.CBC_GBE_SCOPE', 'I_WEB_DISPLAY_IND': ':NEW.WEB_DISPLAY_IND', 'I_HEADCOUNT_IND': ':NEW.HEADCOUNT_IND', 'I_VALID_IND': ':NEW.VALID_IND', 'I_CORE_REMARKS': ':NEW.CORE_REMARKS', 'I_REVIEW_USERID': ':NEW.REVIEW_USERID', 'I_REVIEW_EXP_DATE': ':NEW.REVIEW_EXP_DATE', 'I_REQUESTER_USERID': ':NEW.REQUESTER_USERID', 'I_REQUEST_DATE': ':NEW.REQUEST_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD, I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE, I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD, I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME, I_SHORT_NAME => :NEW.SHORT_NAME, I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME, I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD, I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD, I_URL => :NEW.URL, I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL, I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO, I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO, I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO, I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND, I_FATCA_CD => :NEW.FATCA_CD, I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE, I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE, I_SAPINST_NO => :NEW.SAPINST_NO, I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO, I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE, I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE, I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA, I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA, I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND, I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE, I_TOP_REMARKS => :NEW.TOP_REMARKS, I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS, I_REMARKS => :NEW.REMARKS, I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC, I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER, I_TRADING_PARTNER => :NEW.TRADING_PARTNER, I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID, I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG, I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE , I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND, I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND, I_VALID_IND => :NEW.VALID_IND, I_CORE_REMARKS => :NEW.CORE_REMARKS, I_REVIEW_USERID => :NEW.REVIEW_USERID, I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE, I_REQUESTER_USERID => :NEW.REQUESTER_USERID, I_REQUEST_DATE => :NEW.REQUEST_DATE, I_CHANGE_USER => V_USERID'}}, {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]}], 'else_statements': [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 158}]}, {'condition': " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ", 'type': 'if_else', 'if_line_no': 161, 'then_line_no': 161, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}, {'indent': 12, 'line': '            SELECT', 'line_no': 165}, {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}, {'indent': 12, 'line': '            FROM', 'line_no': 167}, {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}, {'indent': 12, 'line': '            WHERE', 'line_no': 169}, {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}, {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}, {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}, {'indent': 12, 'line': '            SET', 'line_no': 188}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}, {'indent': 16, 'line': '                ) - 1', 'line_no': 191}, {'indent': 12, 'line': '            WHERE', 'line_no': 192}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}], 'if_elses': [], 'else_statements': []}, {'condition': " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 200, 'then_line_no': 200, 'if_indent': 8, 'end_if_line_no': 211, 'then_statements': [{'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}, {'indent': 12, 'line': '            SET', 'line_no': 202}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}, {'indent': 16, 'line': '                ) - 1', 'line_no': 205}, {'indent': 12, 'line': '            WHERE', 'line_no': 206}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}, {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ", 'type': 'if_else', 'if_line_no': 215, 'then_line_no': 215, 'if_indent': 8, 'end_if_line_no': 217, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ", 'type': 'if_else', 'if_line_no': 221, 'then_line_no': 221, 'if_indent': 8, 'end_if_line_no': 223, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ", 'type': 'if_else', 'if_line_no': 227, 'then_line_no': 227, 'if_indent': 8, 'end_if_line_no': 229, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}], 'if_elses': [], 'else_statements': []}, {'condition': " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ", 'type': 'if_else', 'if_line_no': 233, 'then_line_no': 233, 'if_indent': 8, 'end_if_line_no': 237, 'then_statements': [{'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 234}], 'if_elses': [], 'else_statements': []}, {'condition': " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 241, 'then_line_no': 241, 'if_indent': 8, 'end_if_line_no': 325, 'then_statements': [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 340}]}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 342, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 342, 'then_statements': [{'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}]}], 'else_statements': []}]
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        V_USERID := TXO_UTIL.GET_USERID;', 'line_no': 25}]
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         V_USERID := TXO_UTIL.GET_USERID; || 25 || 8
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 25 || assignment
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 25 || assignment
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 25, 'assignment_indent': 8}
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            V_USERID := USER;', 'line_no': 28}]
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             V_USERID := USER; || 28 || 12
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 28 || assignment
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 28 || assignment
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 28, 'assignment_indent': 12}
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        RAISE ERR_UPD;', 'line_no': 32}]
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         RAISE ERR_UPD; || 32 || 8
2025-09-03 04:09:46,064 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 32 || raise_statement || RAISE
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 32 || raise_statement
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 32 || raise_statement
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 32 || raise_statement
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        CNTR := 0;', 'line_no': 36}, {'indent': 8, 'line': '        SELECT', 'line_no': 39}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 40}, {'indent': 8, 'line': '        FROM', 'line_no': 41}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 42}, {'indent': 8, 'line': '        WHERE', 'line_no': 43}, {'indent': 12, 'line': '            COMPANY_CD = :NEW.COMPANY_CD;', 'line_no': 44}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 45, 'then_line_no': 45, 'if_indent': 8, 'end_if_line_no': 47, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         CNTR := 0; || 36 || 8
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 36 || assignment
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 36 || assignment
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 36, 'assignment_indent': 8}
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         SELECT || 39 || 8
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 39 || select_statement || SELECT
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 39 || select_statement
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 39 || select_statement
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 44 || select_statement
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD;
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_INS;', 'line_no': 46}]
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_INS; || 46 || 12
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 46 || raise_statement || RAISE
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 46 || raise_statement
2025-09-03 04:09:46,065 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 46 || raise_statement
2025-09-03 04:09:46,066 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 46 || raise_statement
2025-09-03 04:09:46,066 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,066 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,066 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 3
2025-09-03 04:09:46,066 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ", 'type': 'if_else', 'if_line_no': 53, 'then_line_no': 53, 'if_indent': 8, 'end_if_line_no': 57, 'then_statements': [{'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;', 'line_no': 54}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        CNTR := 0;', 'line_no': 61}, {'indent': 8, 'line': '        SELECT', 'line_no': 62}, {'indent': 12, 'line': '            COUNT (*) INTO CNTR', 'line_no': 63}, {'indent': 8, 'line': '        FROM', 'line_no': 64}, {'indent': 12, 'line': '            CFG_V_COMPANIES', 'line_no': 65}, {'indent': 8, 'line': '        WHERE', 'line_no': 66}, {'indent': 12, 'line': "            COMPANY_TYPE_CD IN ( 'L')", 'line_no': 67}, {'indent': 12, 'line': "            AND VALID_IND = 'Y'", 'line_no': 68}, {'indent': 12, 'line': '            AND COMPANY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 69}, {'condition': " CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L') OR (:NEW.COMPANY_TYPE_CD = 'D' AND :NEW.CBC_GBE_SCOPE = 'Y' AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 72, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_COMPANY_TYPE_CD': ':NEW.COMPANY_TYPE_CD', 'I_MULTISEL_COMPANY_PURPOSE': ':NEW.MULTISEL_COMPANY_PURPOSE', 'I_LEGAL_COMPANY_CD': 'V_LEGAL_COMPANY_CD', 'I_OFFICIAL_NAME': ':NEW.OFFICIAL_NAME', 'I_SHORT_NAME': ':NEW.SHORT_NAME', 'I_DISCLOSURE_NAME': ':NEW.DISCLOSURE_NAME', 'I_FUNCTIONAL_CURRENCY_CD': ':NEW.FUNCTIONAL_CURRENCY_CD', 'I_STATUTORY_CURRENCY_CD': ':NEW.STATUTORY_CURRENCY_CD', 'I_URL': ':NEW.URL', 'I_PHONEBOOK_URL': ':NEW.PHONEBOOK_URL', 'I_EMERGENCY_PHONE_NO': ':NEW.EMERGENCY_PHONE_NO', 'I_GENERAL_PHONE_NO': ':NEW.GENERAL_PHONE_NO', 'I_GENERAL_FAX_NO': ':NEW.GENERAL_FAX_NO', 'I_ANNUAL_REPORT_IND': ':NEW.ANNUAL_REPORT_IND', 'I_FATCA_CD': ':NEW.FATCA_CD', 'I_PHARMA_NUMBER_RANGE': ':NEW.PHARMA_NUMBER_RANGE', 'I_LIQUIDATION_DATE': ':NEW.LIQUIDATION_DATE', 'I_SAPINST_NO': ':NEW.SAPINST_NO', 'I_SAP_COMPANY_CODE_NO': ':NEW.SAP_COMPANY_CODE_NO', 'I_SAP_GO_LIVE_DATE': ':NEW.SAP_GO_LIVE_DATE', 'I_SAP_GROUP_CODE': ':NEW.SAP_GROUP_CODE', 'I_SAP_LOCAL_COA': ':NEW.SAP_LOCAL_COA', 'I_SAP_CONTROLLING_AREA': ':NEW.SAP_CONTROLLING_AREA', 'I_TOP_SYSTEM_IND': ':NEW.TOP_SYSTEM_IND', 'I_TOP_GO_LIVE_DATE': ':NEW.TOP_GO_LIVE_DATE', 'I_TOP_REMARKS': ':NEW.TOP_REMARKS', 'I_LEGAL_REMARKS': ':NEW.LEGAL_REMARKS', 'I_REMARKS': ':NEW.REMARKS', 'I_LOCAL_STATUTORY_ACC': ':NEW.LOCAL_STATUTORY_ACC', 'I_ICFR_COMPANY_LAYER': ':NEW.ICFR_COMPANY_LAYER', 'I_TRADING_PARTNER': ':NEW.TRADING_PARTNER', 'I_S4_ENTITY_ID': ':NEW.S4_ENTITY_ID', 'I_RCA_DISPLAY_FLAG': ':NEW.RCA_DISPLAY_FLAG', 'I_CBC_GBE_SCOPE': ':NEW.CBC_GBE_SCOPE', 'I_WEB_DISPLAY_IND': ':NEW.WEB_DISPLAY_IND', 'I_HEADCOUNT_IND': ':NEW.HEADCOUNT_IND', 'I_VALID_IND': ':NEW.VALID_IND', 'I_CORE_REMARKS': ':NEW.CORE_REMARKS', 'I_REVIEW_USERID': ':NEW.REVIEW_USERID', 'I_REVIEW_EXP_DATE': ':NEW.REVIEW_EXP_DATE', 'I_REQUESTER_USERID': ':NEW.REQUESTER_USERID', 'I_REQUEST_DATE': ':NEW.REQUEST_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD, I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE, I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD, I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME, I_SHORT_NAME => :NEW.SHORT_NAME, I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME, I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD, I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD, I_URL => :NEW.URL, I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL, I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO, I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO, I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO, I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND, I_FATCA_CD => :NEW.FATCA_CD, I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE, I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE, I_SAPINST_NO => :NEW.SAPINST_NO, I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO, I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE, I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE, I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA, I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA, I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND, I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE, I_TOP_REMARKS => :NEW.TOP_REMARKS, I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS, I_REMARKS => :NEW.REMARKS, I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC, I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER, I_TRADING_PARTNER => :NEW.TRADING_PARTNER, I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID, I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG, I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE , I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND, I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND, I_VALID_IND => :NEW.VALID_IND, I_CORE_REMARKS => :NEW.CORE_REMARKS, I_REVIEW_USERID => :NEW.REVIEW_USERID, I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE, I_REQUESTER_USERID => :NEW.REQUESTER_USERID, I_REQUEST_DATE => :NEW.REQUEST_DATE, I_CHANGE_USER => V_USERID'}}, {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]}], 'else_statements': [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 158}]}, {'condition': " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ", 'type': 'if_else', 'if_line_no': 161, 'then_line_no': 161, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}, {'indent': 12, 'line': '            SELECT', 'line_no': 165}, {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}, {'indent': 12, 'line': '            FROM', 'line_no': 167}, {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}, {'indent': 12, 'line': '            WHERE', 'line_no': 169}, {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}, {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}, {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}, {'indent': 12, 'line': '            SET', 'line_no': 188}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}, {'indent': 16, 'line': '                ) - 1', 'line_no': 191}, {'indent': 12, 'line': '            WHERE', 'line_no': 192}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}], 'if_elses': [], 'else_statements': []}, {'condition': " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 200, 'then_line_no': 200, 'if_indent': 8, 'end_if_line_no': 211, 'then_statements': [{'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}, {'indent': 12, 'line': '            SET', 'line_no': 202}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}, {'indent': 16, 'line': '                ) - 1', 'line_no': 205}, {'indent': 12, 'line': '            WHERE', 'line_no': 206}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}, {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ", 'type': 'if_else', 'if_line_no': 215, 'then_line_no': 215, 'if_indent': 8, 'end_if_line_no': 217, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ", 'type': 'if_else', 'if_line_no': 221, 'then_line_no': 221, 'if_indent': 8, 'end_if_line_no': 223, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ", 'type': 'if_else', 'if_line_no': 227, 'then_line_no': 227, 'if_indent': 8, 'end_if_line_no': 229, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}], 'if_elses': [], 'else_statements': []}, {'condition': " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ", 'type': 'if_else', 'if_line_no': 233, 'then_line_no': 233, 'if_indent': 8, 'end_if_line_no': 237, 'then_statements': [{'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 234}], 'if_elses': [], 'else_statements': []}, {'condition': " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 241, 'then_line_no': 241, 'if_indent': 8, 'end_if_line_no': 325, 'then_statements': [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}]}], 'else_statements': [{'indent': 16, 'line': '                NULL;', 'line_no': 340}]}]
2025-09-03 04:09:46,066 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,066 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD;', 'line_no': 54}]
2025-09-03 04:09:46,066 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,066 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             V_LEGAL_COMPANY_CD := :NEW.COMPANY_CD; || 54 || 12
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 54 || assignment
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 54 || assignment
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_LEGAL_COMPANY_CD', 'assignment_operator': ':=', 'expression': ':NEW.COMPANY_CD;', 'assignment_line_no': 54, 'assignment_indent': 12}
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         CNTR := 0; || 61 || 8
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 61 || assignment
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 61 || assignment
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 61, 'assignment_indent': 8}
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         SELECT || 62 || 8
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 62 || select_statement || SELECT
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 62 || select_statement
2025-09-03 04:09:46,067 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 62 || select_statement
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 69 || select_statement
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_TYPE_CD IN ( 'L') AND VALID_IND = 'Y' AND COMPANY_CD = V_LEGAL_COMPANY_CD;
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 10
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE INVALID_LEGAL_COMP;', 'line_no': 77}]
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE INVALID_LEGAL_COMP; || 77 || 12
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 77 || raise_statement || RAISE
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 77 || raise_statement
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 77 || raise_statement
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 77 || raise_statement
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 11
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 12
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD;', 'line_no': 141}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]}], 'else_statements': [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}]
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 V_REPORTING_ENTITY_CD := :NEW.REPORTING_ENTITY_CD; || 141 || 16
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 141 || assignment
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 141 || assignment
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': ':NEW.REPORTING_ENTITY_CD;', 'assignment_line_no': 141, 'assignment_indent': 16}
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 24, 'line': '                        RAISE ERR_VALID_FROM_DATE;', 'line_no': 146}]
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,068 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                         RAISE ERR_VALID_FROM_DATE; || 146 || 24
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 146 || raise_statement || RAISE
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 146 || raise_statement
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 146 || raise_statement
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 146 || raise_statement
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 24, 'line': '                        NULL;', 'line_no': 148}]
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                         NULL; || 148 || 24
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 148 || null_statement || NULL
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 148 || null_statement
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 148 || null_statement
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 148 || null_statement
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 2
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                NULL;', 'line_no': 158}]
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 NULL; || 158 || 16
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 158 || null_statement || NULL
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 158 || null_statement
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 158 || null_statement
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 158 || null_statement
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 13
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            CNTR := 0;', 'line_no': 162}, {'indent': 12, 'line': '            SELECT', 'line_no': 165}, {'indent': 16, 'line': '                COUNT (*) INTO CNTR', 'line_no': 166}, {'indent': 12, 'line': '            FROM', 'line_no': 167}, {'indent': 16, 'line': '                CFG_V_COMPANIES', 'line_no': 168}, {'indent': 12, 'line': '            WHERE', 'line_no': 169}, {'indent': 16, 'line': '                LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 170}, {'indent': 16, 'line': '                AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 171}, {'indent': 16, 'line': "                AND VALID_IND = 'Y';", 'line_no': 172}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}], 'if_elses': [], 'else_statements': []}, {'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 187}, {'indent': 12, 'line': '            SET', 'line_no': 188}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 189}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 190}, {'indent': 16, 'line': '                ) - 1', 'line_no': 191}, {'indent': 12, 'line': '            WHERE', 'line_no': 192}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 193}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 194}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 195}]
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             CNTR := 0; || 162 || 12
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 162 || assignment
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 162 || assignment
2025-09-03 04:09:46,069 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 162, 'assignment_indent': 12}
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             SELECT || 165 || 12
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 165 || select_statement || SELECT
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 165 || select_statement
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 165 || select_statement
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 172 || select_statement
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 9
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                SELECT', 'line_no': 174}, {'indent': 20, 'line': "                    LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST", 'line_no': 175}, {'indent': 16, 'line': '                FROM', 'line_no': 176}, {'indent': 20, 'line': '                    CFG_V_COMPANIES', 'line_no': 177}, {'indent': 16, 'line': '                WHERE', 'line_no': 178}, {'indent': 20, 'line': '                    LEGAL_COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 179}, {'indent': 20, 'line': '                    AND COMPANY_CD <> :NEW.COMPANY_CD', 'line_no': 180}, {'indent': 20, 'line': "                    AND VALID_IND = 'Y';", 'line_no': 181}, {'indent': 16, 'line': '                RAISE CPY_IN_USE;', 'line_no': 182}]
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 SELECT || 174 || 16
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 174 || select_statement || SELECT
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 174 || select_statement
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 174 || select_statement
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 181 || select_statement
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 8
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 RAISE CPY_IN_USE; || 182 || 16
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 182 || raise_statement || RAISE
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 182 || raise_statement
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 182 || raise_statement
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 182 || raise_statement
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 10
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             UPDATE CFG.CFG_COMPANY_ADDRESSES || 187 || 12
2025-09-03 04:09:46,070 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 187 || update_statement || UPDATE
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 187 || update_statement
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 187 || update_statement
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 195 || update_statement
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 14
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            UPDATE CFG.CFG_COMPANY_ADDRESSES', 'line_no': 201}, {'indent': 12, 'line': '            SET', 'line_no': 202}, {'indent': 16, 'line': '                VALID_TO = TRUNC (', 'line_no': 203}, {'indent': 20, 'line': '                    SYSDATE', 'line_no': 204}, {'indent': 16, 'line': '                ) - 1', 'line_no': 205}, {'indent': 12, 'line': '            WHERE', 'line_no': 206}, {'indent': 16, 'line': '                COMPANY_CD = :NEW.COMPANY_CD', 'line_no': 207}, {'indent': 16, 'line': "                AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC')", 'line_no': 208}, {'indent': 16, 'line': '                AND ( VALID_TO > TRUNC(SYSDATE)', 'line_no': 209}, {'indent': 16, 'line': '                OR VALID_TO IS NULL);', 'line_no': 210}]
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             UPDATE CFG.CFG_COMPANY_ADDRESSES || 201 || 12
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 201 || update_statement || UPDATE
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 201 || update_statement
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 201 || update_statement
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 210 || update_statement
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC') AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 15
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_SCOPE;', 'line_no': 216}]
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_CPY_STILL_IN_SCOPE; || 216 || 12
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 216 || raise_statement || RAISE
2025-09-03 04:09:46,071 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 216 || raise_statement
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 216 || raise_statement
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 216 || raise_statement
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 16
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_CPY_STILL_IN_MFR;', 'line_no': 222}]
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_CPY_STILL_IN_MFR; || 222 || 12
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 222 || raise_statement || RAISE
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 222 || raise_statement
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 222 || raise_statement
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 222 || raise_statement
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 17
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'line_no': 228}]
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC; || 228 || 12
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 228 || raise_statement || RAISE
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 228 || raise_statement
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 228 || raise_statement
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 228 || raise_statement
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 18
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'line_no': 234}]
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             V_REPORTING_ENTITY_CD := NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD); || 234 || 12
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 234 || assignment
2025-09-03 04:09:46,072 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 234 || assignment
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': 'NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'assignment_line_no': 234, 'assignment_indent': 12}
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 19
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}], 'if_elses': [], 'else_statements': []}]
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                SELECT', 'line_no': 245}, {'indent': 20, 'line': '                    CBC_FLAG INTO V_REP_CBC_FLAG', 'line_no': 246}, {'indent': 16, 'line': '                FROM', 'line_no': 247}, {'indent': 20, 'line': '                    CFG_V_REPORTING_ENTITIES', 'line_no': 248}, {'indent': 16, 'line': '                WHERE', 'line_no': 249}, {'indent': 20, 'line': '                    REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'line_no': 250}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                CNTR := 0;', 'line_no': 257}, {'indent': 16, 'line': '                SELECT', 'line_no': 260}, {'indent': 20, 'line': '                    COUNT (*) INTO CNTR', 'line_no': 261}, {'indent': 16, 'line': '                FROM', 'line_no': 262}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 263}, {'indent': 16, 'line': '                WHERE', 'line_no': 264}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 265}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 266}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}], 'if_elses': [], 'else_statements': []}, {'indent': 16, 'line': '                SELECT', 'line_no': 271}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 272}, {'indent': 20, 'line': '                    COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE,', 'line_no': 273}, {'indent': 20, 'line': '                    V_COUNTRY_CD', 'line_no': 274}, {'indent': 16, 'line': '                FROM', 'line_no': 275}, {'indent': 20, 'line': '                    CFG.CFG_V_COMPANY_ADDRESSES', 'line_no': 276}, {'indent': 16, 'line': '                WHERE', 'line_no': 277}, {'indent': 20, 'line': '                    COMPANY_CD = V_REPORTING_ENTITY_CD', 'line_no': 278}, {'indent': 20, 'line': "                    AND ADDRESS_TYPE_CD = 'RES';", 'line_no': 279}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}]
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 SELECT || 245 || 16
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 245 || select_statement || SELECT
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 245 || select_statement
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 245 || select_statement
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 250 || select_statement
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT CBC_FLAG INTO V_REP_CBC_FLAG FROM CFG_V_REPORTING_ENTITIES WHERE REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 6
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    RAISE RU_NOT_IN_CBC_SCOPE;', 'line_no': 254}]
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     RAISE RU_NOT_IN_CBC_SCOPE; || 254 || 20
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 254 || raise_statement || RAISE
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 254 || raise_statement
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 254 || raise_statement
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 254 || raise_statement
2025-09-03 04:09:46,073 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 7
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 CNTR := 0; || 257 || 16
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 257 || assignment
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 257 || assignment
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 257, 'assignment_indent': 16}
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 8
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 SELECT || 260 || 16
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 260 || select_statement || SELECT
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 260 || select_statement
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 260 || select_statement
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 266 || select_statement
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO CNTR FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 15
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    RAISE ERR_NO_ADR;', 'line_no': 268}]
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     RAISE ERR_NO_ADR; || 268 || 20
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 268 || raise_statement || RAISE
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 268 || raise_statement
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 268 || raise_statement
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 268 || raise_statement
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 16
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 SELECT || 271 || 16
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 271 || select_statement || SELECT
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 271 || select_statement
2025-09-03 04:09:46,074 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 271 || select_statement
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 279 || select_statement
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT VALID_FROM, COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE, V_COUNTRY_CD FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 25
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 20, 'line': '                    V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE);', 'line_no': 283}]
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                     V_ADDR_VALID_FROM_DATE := TRUNC(SYSDATE); || 283 || 20
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 283 || assignment
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 283 || assignment
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 26
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 27
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}]
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 20
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}]
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 16, 'line': '                NULL;', 'line_no': 340}]
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,075 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:                 NULL; || 340 || 16
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 340 || null_statement || NULL
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 340 || null_statement
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 340 || null_statement
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 340 || null_statement
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': '        RAISE ERR_DEL;', 'line_no': 343}]
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         RAISE ERR_DEL; || 343 || 8
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 343 || raise_statement || RAISE
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 343 || raise_statement
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 343 || raise_statement
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 343 || raise_statement
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20111, V_TRIGGER_NAME'}}]
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20114', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20114, V_TRIGGER_NAME'}}]
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20122', "'Please insert : Rep. Code Assignm. Valid from Date'"], 'named_params': {}, 'raw_text': "-20122, 'Please insert : Rep. Code Assignm. Valid from Date'"}}]
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20123', "'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"], 'named_params': {}, 'raw_text': "-20123, 'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"}}]
2025-09-03 04:09:46,076 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20124', "'The CBC/GBE Scope must be set to No before deactivating the company'"], 'named_params': {}, 'raw_text': "-20124, 'The CBC/GBE Scope must be set to No before deactivating the company'"}}]
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20124', "'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"], 'named_params': {}, 'raw_text': "-20124, 'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"}}]
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20125', "'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"], 'named_params': {}, 'raw_text': "-20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"}}]
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20126', "V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"], 'named_params': {}, 'raw_text': "-20126, V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"}}]
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20127', "'An Associate Entity cannot be in CBC/GBE Scope!'"], 'named_params': {}, 'raw_text': "-20127, 'An Associate Entity cannot be in CBC/GBE Scope!'"}}]
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20127', "'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"], 'named_params': {}, 'raw_text': "-20127, 'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"}}]
2025-09-03 04:09:46,077 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,078 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 23, 'begin_indent': 0, 'begin_end_statements': [{'type': 'begin_end', 'begin_line_no': 24, 'begin_indent': 4, 'begin_end_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 25, 'assignment_indent': 8}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 27, 'when_indent': 8, 'then_line_no': 27, 'exception_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 28, 'assignment_indent': 12}]}], 'exception_line_no': 26, 'end_line_no': 29}, {'condition': ' UPDATING AND :OLD.COMPANY_CD != :NEW.COMPANY_CD ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 32, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}, {'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 4, 'end_if_line_no': 48, 'then_statements': [{'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 36, 'assignment_indent': 8}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD;', 'statement_line_no': 39, 'statement_indent': 8}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 45, 'then_line_no': 45, 'if_indent': 8, 'end_if_line_no': 47, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 46, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' INSERTING OR UPDATING ', 'type': 'if_else', 'if_line_no': 50, 'then_line_no': 50, 'if_indent': 4, 'end_if_line_no': 344, 'then_statements': [{'condition': " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ", 'type': 'if_else', 'if_line_no': 53, 'then_line_no': 53, 'if_indent': 8, 'end_if_line_no': 57, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_LEGAL_COMPANY_CD', 'assignment_operator': ':=', 'expression': ':NEW.COMPANY_CD;', 'assignment_line_no': 54, 'assignment_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 61, 'assignment_indent': 8}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_TYPE_CD IN ( 'L') AND VALID_IND = 'Y' AND COMPANY_CD = V_LEGAL_COMPANY_CD;", 'statement_line_no': 62, 'statement_indent': 8}, {'condition': " CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L') OR (:NEW.COMPANY_TYPE_CD = 'D' AND :NEW.CBC_GBE_SCOPE = 'Y' AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 72, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_LEGAL_COMP;', 'statement_line_no': 77, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_COMPANY_TYPE_CD': ':NEW.COMPANY_TYPE_CD', 'I_MULTISEL_COMPANY_PURPOSE': ':NEW.MULTISEL_COMPANY_PURPOSE', 'I_LEGAL_COMPANY_CD': 'V_LEGAL_COMPANY_CD', 'I_OFFICIAL_NAME': ':NEW.OFFICIAL_NAME', 'I_SHORT_NAME': ':NEW.SHORT_NAME', 'I_DISCLOSURE_NAME': ':NEW.DISCLOSURE_NAME', 'I_FUNCTIONAL_CURRENCY_CD': ':NEW.FUNCTIONAL_CURRENCY_CD', 'I_STATUTORY_CURRENCY_CD': ':NEW.STATUTORY_CURRENCY_CD', 'I_URL': ':NEW.URL', 'I_PHONEBOOK_URL': ':NEW.PHONEBOOK_URL', 'I_EMERGENCY_PHONE_NO': ':NEW.EMERGENCY_PHONE_NO', 'I_GENERAL_PHONE_NO': ':NEW.GENERAL_PHONE_NO', 'I_GENERAL_FAX_NO': ':NEW.GENERAL_FAX_NO', 'I_ANNUAL_REPORT_IND': ':NEW.ANNUAL_REPORT_IND', 'I_FATCA_CD': ':NEW.FATCA_CD', 'I_PHARMA_NUMBER_RANGE': ':NEW.PHARMA_NUMBER_RANGE', 'I_LIQUIDATION_DATE': ':NEW.LIQUIDATION_DATE', 'I_SAPINST_NO': ':NEW.SAPINST_NO', 'I_SAP_COMPANY_CODE_NO': ':NEW.SAP_COMPANY_CODE_NO', 'I_SAP_GO_LIVE_DATE': ':NEW.SAP_GO_LIVE_DATE', 'I_SAP_GROUP_CODE': ':NEW.SAP_GROUP_CODE', 'I_SAP_LOCAL_COA': ':NEW.SAP_LOCAL_COA', 'I_SAP_CONTROLLING_AREA': ':NEW.SAP_CONTROLLING_AREA', 'I_TOP_SYSTEM_IND': ':NEW.TOP_SYSTEM_IND', 'I_TOP_GO_LIVE_DATE': ':NEW.TOP_GO_LIVE_DATE', 'I_TOP_REMARKS': ':NEW.TOP_REMARKS', 'I_LEGAL_REMARKS': ':NEW.LEGAL_REMARKS', 'I_REMARKS': ':NEW.REMARKS', 'I_LOCAL_STATUTORY_ACC': ':NEW.LOCAL_STATUTORY_ACC', 'I_ICFR_COMPANY_LAYER': ':NEW.ICFR_COMPANY_LAYER', 'I_TRADING_PARTNER': ':NEW.TRADING_PARTNER', 'I_S4_ENTITY_ID': ':NEW.S4_ENTITY_ID', 'I_RCA_DISPLAY_FLAG': ':NEW.RCA_DISPLAY_FLAG', 'I_CBC_GBE_SCOPE': ':NEW.CBC_GBE_SCOPE', 'I_WEB_DISPLAY_IND': ':NEW.WEB_DISPLAY_IND', 'I_HEADCOUNT_IND': ':NEW.HEADCOUNT_IND', 'I_VALID_IND': ':NEW.VALID_IND', 'I_CORE_REMARKS': ':NEW.CORE_REMARKS', 'I_REVIEW_USERID': ':NEW.REVIEW_USERID', 'I_REVIEW_EXP_DATE': ':NEW.REVIEW_EXP_DATE', 'I_REQUESTER_USERID': ':NEW.REQUESTER_USERID', 'I_REQUEST_DATE': ':NEW.REQUEST_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD, I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE, I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD, I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME, I_SHORT_NAME => :NEW.SHORT_NAME, I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME, I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD, I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD, I_URL => :NEW.URL, I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL, I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO, I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO, I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO, I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND, I_FATCA_CD => :NEW.FATCA_CD, I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE, I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE, I_SAPINST_NO => :NEW.SAPINST_NO, I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO, I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE, I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE, I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA, I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA, I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND, I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE, I_TOP_REMARKS => :NEW.TOP_REMARKS, I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS, I_REMARKS => :NEW.REMARKS, I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC, I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER, I_TRADING_PARTNER => :NEW.TRADING_PARTNER, I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID, I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG, I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE , I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND, I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND, I_VALID_IND => :NEW.VALID_IND, I_CORE_REMARKS => :NEW.CORE_REMARKS, I_REVIEW_USERID => :NEW.REVIEW_USERID, I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE, I_REQUESTER_USERID => :NEW.REQUESTER_USERID, I_REQUEST_DATE => :NEW.REQUEST_DATE, I_CHANGE_USER => V_USERID'}}, {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': ':NEW.REPORTING_ENTITY_CD;', 'assignment_line_no': 141, 'assignment_indent': 16}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 148, 'statement_indent': 24}]}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 158, 'statement_indent': 16}]}, {'condition': " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ", 'type': 'if_else', 'if_line_no': 161, 'then_line_no': 161, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 162, 'assignment_indent': 12}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 165, 'statement_indent': 12}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 174, 'statement_indent': 16}, {'type': 'raise_statement', 'sql_statement': 'RAISE CPY_IN_USE;', 'statement_line_no': 182, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);', 'statement_line_no': 187, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 200, 'then_line_no': 200, 'if_indent': 8, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC') AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);", 'statement_line_no': 201, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ", 'type': 'if_else', 'if_line_no': 215, 'then_line_no': 215, 'if_indent': 8, 'end_if_line_no': 217, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_SCOPE;', 'statement_line_no': 216, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ", 'type': 'if_else', 'if_line_no': 221, 'then_line_no': 221, 'if_indent': 8, 'end_if_line_no': 223, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_MFR;', 'statement_line_no': 222, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ", 'type': 'if_else', 'if_line_no': 227, 'then_line_no': 227, 'if_indent': 8, 'end_if_line_no': 229, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'statement_line_no': 228, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ", 'type': 'if_else', 'if_line_no': 233, 'then_line_no': 233, 'if_indent': 8, 'end_if_line_no': 237, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': 'NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'assignment_line_no': 234, 'assignment_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 241, 'then_line_no': 241, 'if_indent': 8, 'end_if_line_no': 325, 'then_statements': [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT CBC_FLAG INTO V_REP_CBC_FLAG FROM CFG_V_REPORTING_ENTITIES WHERE REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'statement_line_no': 245, 'statement_indent': 16}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 257, 'assignment_indent': 16}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 260, 'statement_indent': 16}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT VALID_FROM, COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE, V_COUNTRY_CD FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 271, 'statement_indent': 16}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 340, 'statement_indent': 16}]}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 342, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 342, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 343, 'statement_indent': 8}]}], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 346, 'when_indent': 4, 'then_line_no': 346, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 348, 'when_indent': 4, 'then_line_no': 348, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20111, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS', 'when_line_no': 350, 'when_indent': 4, 'then_line_no': 350, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20114', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20114, V_TRIGGER_NAME'}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_VALID_FROM_DATE', 'when_line_no': 352, 'when_indent': 4, 'then_line_no': 352, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20122', "'Please insert : Rep. Code Assignm. Valid from Date'"], 'named_params': {}, 'raw_text': "-20122, 'Please insert : Rep. Code Assignm. Valid from Date'"}}]}, {'type': 'exception_handler', 'exception_name': 'RU_NOT_IN_CBC_SCOPE', 'when_line_no': 354, 'when_indent': 4, 'then_line_no': 354, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20123', "'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"], 'named_params': {}, 'raw_text': "-20123, 'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_CPY_STILL_IN_SCOPE', 'when_line_no': 356, 'when_indent': 4, 'then_line_no': 356, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20124', "'The CBC/GBE Scope must be set to No before deactivating the company'"], 'named_params': {}, 'raw_text': "-20124, 'The CBC/GBE Scope must be set to No before deactivating the company'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_NO_ADR', 'when_line_no': 358, 'when_indent': 4, 'then_line_no': 358, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20124', "'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"], 'named_params': {}, 'raw_text': "-20124, 'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"}}]}, {'type': 'exception_handler', 'exception_name': 'CPY_IN_USE', 'when_line_no': 360, 'when_indent': 4, 'then_line_no': 360, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20125', "'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"], 'named_params': {}, 'raw_text': "-20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"}}]}, {'type': 'exception_handler', 'exception_name': 'INVALID_LEGAL_COMP', 'when_line_no': 363, 'when_indent': 4, 'then_line_no': 363, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20126', "V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"], 'named_params': {}, 'raw_text': "-20126, V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC', 'when_line_no': 366, 'when_indent': 4, 'then_line_no': 366, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20127', "'An Associate Entity cannot be in CBC/GBE Scope!'"], 'named_params': {}, 'raw_text': "-20127, 'An Associate Entity cannot be in CBC/GBE Scope!'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_CPY_STILL_IN_MFR', 'when_line_no': 368, 'when_indent': 4, 'then_line_no': 368, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20127', "'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"], 'named_params': {}, 'raw_text': "-20127, 'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"}}]}], 'exception_line_no': 345, 'end_line_no': 370}
2025-09-03 04:09:46,078 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 24, 'begin_indent': 4, 'begin_end_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 25, 'assignment_indent': 8}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 27, 'when_indent': 8, 'then_line_no': 27, 'exception_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 28, 'assignment_indent': 12}]}], 'exception_line_no': 26, 'end_line_no': 29}
2025-09-03 04:09:46,078 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 25, 'assignment_indent': 8}
2025-09-03 04:09:46,078 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 27, 'when_indent': 8, 'then_line_no': 27, 'exception_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 28, 'assignment_indent': 12}]}
2025-09-03 04:09:46,078 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 28, 'assignment_indent': 12}
2025-09-03 04:09:46,078 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' UPDATING AND :OLD.COMPANY_CD != :NEW.COMPANY_CD ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 32, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,078 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 32, 'statement_indent': 8}
2025-09-03 04:09:46,078 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 4, 'end_if_line_no': 48, 'then_statements': [{'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 36, 'assignment_indent': 8}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD;', 'statement_line_no': 39, 'statement_indent': 8}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 45, 'then_line_no': 45, 'if_indent': 8, 'end_if_line_no': 47, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 46, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,078 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 36, 'assignment_indent': 8}
2025-09-03 04:09:46,078 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD;', 'statement_line_no': 39, 'statement_indent': 8}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 45, 'then_line_no': 45, 'if_indent': 8, 'end_if_line_no': 47, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 46, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 46, 'statement_indent': 12}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' INSERTING OR UPDATING ', 'type': 'if_else', 'if_line_no': 50, 'then_line_no': 50, 'if_indent': 4, 'end_if_line_no': 344, 'then_statements': [{'condition': " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ", 'type': 'if_else', 'if_line_no': 53, 'then_line_no': 53, 'if_indent': 8, 'end_if_line_no': 57, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_LEGAL_COMPANY_CD', 'assignment_operator': ':=', 'expression': ':NEW.COMPANY_CD;', 'assignment_line_no': 54, 'assignment_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 61, 'assignment_indent': 8}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_TYPE_CD IN ( 'L') AND VALID_IND = 'Y' AND COMPANY_CD = V_LEGAL_COMPANY_CD;", 'statement_line_no': 62, 'statement_indent': 8}, {'condition': " CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L') OR (:NEW.COMPANY_TYPE_CD = 'D' AND :NEW.CBC_GBE_SCOPE = 'Y' AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 72, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_LEGAL_COMP;', 'statement_line_no': 77, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_COMPANY_TYPE_CD': ':NEW.COMPANY_TYPE_CD', 'I_MULTISEL_COMPANY_PURPOSE': ':NEW.MULTISEL_COMPANY_PURPOSE', 'I_LEGAL_COMPANY_CD': 'V_LEGAL_COMPANY_CD', 'I_OFFICIAL_NAME': ':NEW.OFFICIAL_NAME', 'I_SHORT_NAME': ':NEW.SHORT_NAME', 'I_DISCLOSURE_NAME': ':NEW.DISCLOSURE_NAME', 'I_FUNCTIONAL_CURRENCY_CD': ':NEW.FUNCTIONAL_CURRENCY_CD', 'I_STATUTORY_CURRENCY_CD': ':NEW.STATUTORY_CURRENCY_CD', 'I_URL': ':NEW.URL', 'I_PHONEBOOK_URL': ':NEW.PHONEBOOK_URL', 'I_EMERGENCY_PHONE_NO': ':NEW.EMERGENCY_PHONE_NO', 'I_GENERAL_PHONE_NO': ':NEW.GENERAL_PHONE_NO', 'I_GENERAL_FAX_NO': ':NEW.GENERAL_FAX_NO', 'I_ANNUAL_REPORT_IND': ':NEW.ANNUAL_REPORT_IND', 'I_FATCA_CD': ':NEW.FATCA_CD', 'I_PHARMA_NUMBER_RANGE': ':NEW.PHARMA_NUMBER_RANGE', 'I_LIQUIDATION_DATE': ':NEW.LIQUIDATION_DATE', 'I_SAPINST_NO': ':NEW.SAPINST_NO', 'I_SAP_COMPANY_CODE_NO': ':NEW.SAP_COMPANY_CODE_NO', 'I_SAP_GO_LIVE_DATE': ':NEW.SAP_GO_LIVE_DATE', 'I_SAP_GROUP_CODE': ':NEW.SAP_GROUP_CODE', 'I_SAP_LOCAL_COA': ':NEW.SAP_LOCAL_COA', 'I_SAP_CONTROLLING_AREA': ':NEW.SAP_CONTROLLING_AREA', 'I_TOP_SYSTEM_IND': ':NEW.TOP_SYSTEM_IND', 'I_TOP_GO_LIVE_DATE': ':NEW.TOP_GO_LIVE_DATE', 'I_TOP_REMARKS': ':NEW.TOP_REMARKS', 'I_LEGAL_REMARKS': ':NEW.LEGAL_REMARKS', 'I_REMARKS': ':NEW.REMARKS', 'I_LOCAL_STATUTORY_ACC': ':NEW.LOCAL_STATUTORY_ACC', 'I_ICFR_COMPANY_LAYER': ':NEW.ICFR_COMPANY_LAYER', 'I_TRADING_PARTNER': ':NEW.TRADING_PARTNER', 'I_S4_ENTITY_ID': ':NEW.S4_ENTITY_ID', 'I_RCA_DISPLAY_FLAG': ':NEW.RCA_DISPLAY_FLAG', 'I_CBC_GBE_SCOPE': ':NEW.CBC_GBE_SCOPE', 'I_WEB_DISPLAY_IND': ':NEW.WEB_DISPLAY_IND', 'I_HEADCOUNT_IND': ':NEW.HEADCOUNT_IND', 'I_VALID_IND': ':NEW.VALID_IND', 'I_CORE_REMARKS': ':NEW.CORE_REMARKS', 'I_REVIEW_USERID': ':NEW.REVIEW_USERID', 'I_REVIEW_EXP_DATE': ':NEW.REVIEW_EXP_DATE', 'I_REQUESTER_USERID': ':NEW.REQUESTER_USERID', 'I_REQUEST_DATE': ':NEW.REQUEST_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD, I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE, I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD, I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME, I_SHORT_NAME => :NEW.SHORT_NAME, I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME, I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD, I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD, I_URL => :NEW.URL, I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL, I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO, I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO, I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO, I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND, I_FATCA_CD => :NEW.FATCA_CD, I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE, I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE, I_SAPINST_NO => :NEW.SAPINST_NO, I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO, I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE, I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE, I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA, I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA, I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND, I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE, I_TOP_REMARKS => :NEW.TOP_REMARKS, I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS, I_REMARKS => :NEW.REMARKS, I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC, I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER, I_TRADING_PARTNER => :NEW.TRADING_PARTNER, I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID, I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG, I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE , I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND, I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND, I_VALID_IND => :NEW.VALID_IND, I_CORE_REMARKS => :NEW.CORE_REMARKS, I_REVIEW_USERID => :NEW.REVIEW_USERID, I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE, I_REQUESTER_USERID => :NEW.REQUESTER_USERID, I_REQUEST_DATE => :NEW.REQUEST_DATE, I_CHANGE_USER => V_USERID'}}, {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': ':NEW.REPORTING_ENTITY_CD;', 'assignment_line_no': 141, 'assignment_indent': 16}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 148, 'statement_indent': 24}]}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 158, 'statement_indent': 16}]}, {'condition': " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ", 'type': 'if_else', 'if_line_no': 161, 'then_line_no': 161, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 162, 'assignment_indent': 12}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 165, 'statement_indent': 12}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 174, 'statement_indent': 16}, {'type': 'raise_statement', 'sql_statement': 'RAISE CPY_IN_USE;', 'statement_line_no': 182, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);', 'statement_line_no': 187, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 200, 'then_line_no': 200, 'if_indent': 8, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC') AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);", 'statement_line_no': 201, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ", 'type': 'if_else', 'if_line_no': 215, 'then_line_no': 215, 'if_indent': 8, 'end_if_line_no': 217, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_SCOPE;', 'statement_line_no': 216, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ", 'type': 'if_else', 'if_line_no': 221, 'then_line_no': 221, 'if_indent': 8, 'end_if_line_no': 223, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_MFR;', 'statement_line_no': 222, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ", 'type': 'if_else', 'if_line_no': 227, 'then_line_no': 227, 'if_indent': 8, 'end_if_line_no': 229, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'statement_line_no': 228, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ", 'type': 'if_else', 'if_line_no': 233, 'then_line_no': 233, 'if_indent': 8, 'end_if_line_no': 237, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': 'NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'assignment_line_no': 234, 'assignment_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 241, 'then_line_no': 241, 'if_indent': 8, 'end_if_line_no': 325, 'then_statements': [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT CBC_FLAG INTO V_REP_CBC_FLAG FROM CFG_V_REPORTING_ENTITIES WHERE REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'statement_line_no': 245, 'statement_indent': 16}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 257, 'assignment_indent': 16}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 260, 'statement_indent': 16}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT VALID_FROM, COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE, V_COUNTRY_CD FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 271, 'statement_indent': 16}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 340, 'statement_indent': 16}]}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 342, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 342, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 343, 'statement_indent': 8}]}], 'else_statements': []}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ", 'type': 'if_else', 'if_line_no': 53, 'then_line_no': 53, 'if_indent': 8, 'end_if_line_no': 57, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_LEGAL_COMPANY_CD', 'assignment_operator': ':=', 'expression': ':NEW.COMPANY_CD;', 'assignment_line_no': 54, 'assignment_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_LEGAL_COMPANY_CD', 'assignment_operator': ':=', 'expression': ':NEW.COMPANY_CD;', 'assignment_line_no': 54, 'assignment_indent': 12}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 61, 'assignment_indent': 8}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_TYPE_CD IN ( 'L') AND VALID_IND = 'Y' AND COMPANY_CD = V_LEGAL_COMPANY_CD;", 'statement_line_no': 62, 'statement_indent': 8}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L') OR (:NEW.COMPANY_TYPE_CD = 'D' AND :NEW.CBC_GBE_SCOPE = 'Y' AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 72, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_LEGAL_COMP;', 'statement_line_no': 77, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_LEGAL_COMP;', 'statement_line_no': 77, 'statement_indent': 12}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_COMPANY_TYPE_CD': ':NEW.COMPANY_TYPE_CD', 'I_MULTISEL_COMPANY_PURPOSE': ':NEW.MULTISEL_COMPANY_PURPOSE', 'I_LEGAL_COMPANY_CD': 'V_LEGAL_COMPANY_CD', 'I_OFFICIAL_NAME': ':NEW.OFFICIAL_NAME', 'I_SHORT_NAME': ':NEW.SHORT_NAME', 'I_DISCLOSURE_NAME': ':NEW.DISCLOSURE_NAME', 'I_FUNCTIONAL_CURRENCY_CD': ':NEW.FUNCTIONAL_CURRENCY_CD', 'I_STATUTORY_CURRENCY_CD': ':NEW.STATUTORY_CURRENCY_CD', 'I_URL': ':NEW.URL', 'I_PHONEBOOK_URL': ':NEW.PHONEBOOK_URL', 'I_EMERGENCY_PHONE_NO': ':NEW.EMERGENCY_PHONE_NO', 'I_GENERAL_PHONE_NO': ':NEW.GENERAL_PHONE_NO', 'I_GENERAL_FAX_NO': ':NEW.GENERAL_FAX_NO', 'I_ANNUAL_REPORT_IND': ':NEW.ANNUAL_REPORT_IND', 'I_FATCA_CD': ':NEW.FATCA_CD', 'I_PHARMA_NUMBER_RANGE': ':NEW.PHARMA_NUMBER_RANGE', 'I_LIQUIDATION_DATE': ':NEW.LIQUIDATION_DATE', 'I_SAPINST_NO': ':NEW.SAPINST_NO', 'I_SAP_COMPANY_CODE_NO': ':NEW.SAP_COMPANY_CODE_NO', 'I_SAP_GO_LIVE_DATE': ':NEW.SAP_GO_LIVE_DATE', 'I_SAP_GROUP_CODE': ':NEW.SAP_GROUP_CODE', 'I_SAP_LOCAL_COA': ':NEW.SAP_LOCAL_COA', 'I_SAP_CONTROLLING_AREA': ':NEW.SAP_CONTROLLING_AREA', 'I_TOP_SYSTEM_IND': ':NEW.TOP_SYSTEM_IND', 'I_TOP_GO_LIVE_DATE': ':NEW.TOP_GO_LIVE_DATE', 'I_TOP_REMARKS': ':NEW.TOP_REMARKS', 'I_LEGAL_REMARKS': ':NEW.LEGAL_REMARKS', 'I_REMARKS': ':NEW.REMARKS', 'I_LOCAL_STATUTORY_ACC': ':NEW.LOCAL_STATUTORY_ACC', 'I_ICFR_COMPANY_LAYER': ':NEW.ICFR_COMPANY_LAYER', 'I_TRADING_PARTNER': ':NEW.TRADING_PARTNER', 'I_S4_ENTITY_ID': ':NEW.S4_ENTITY_ID', 'I_RCA_DISPLAY_FLAG': ':NEW.RCA_DISPLAY_FLAG', 'I_CBC_GBE_SCOPE': ':NEW.CBC_GBE_SCOPE', 'I_WEB_DISPLAY_IND': ':NEW.WEB_DISPLAY_IND', 'I_HEADCOUNT_IND': ':NEW.HEADCOUNT_IND', 'I_VALID_IND': ':NEW.VALID_IND', 'I_CORE_REMARKS': ':NEW.CORE_REMARKS', 'I_REVIEW_USERID': ':NEW.REVIEW_USERID', 'I_REVIEW_EXP_DATE': ':NEW.REVIEW_EXP_DATE', 'I_REQUESTER_USERID': ':NEW.REQUESTER_USERID', 'I_REQUEST_DATE': ':NEW.REQUEST_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD, I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE, I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD, I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME, I_SHORT_NAME => :NEW.SHORT_NAME, I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME, I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD, I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD, I_URL => :NEW.URL, I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL, I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO, I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO, I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO, I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND, I_FATCA_CD => :NEW.FATCA_CD, I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE, I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE, I_SAPINST_NO => :NEW.SAPINST_NO, I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO, I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE, I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE, I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA, I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA, I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND, I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE, I_TOP_REMARKS => :NEW.TOP_REMARKS, I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS, I_REMARKS => :NEW.REMARKS, I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC, I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER, I_TRADING_PARTNER => :NEW.TRADING_PARTNER, I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID, I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG, I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE , I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND, I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND, I_VALID_IND => :NEW.VALID_IND, I_CORE_REMARKS => :NEW.CORE_REMARKS, I_REVIEW_USERID => :NEW.REVIEW_USERID, I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE, I_REQUESTER_USERID => :NEW.REQUESTER_USERID, I_REQUEST_DATE => :NEW.REQUEST_DATE, I_CHANGE_USER => V_USERID'}}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': ':NEW.REPORTING_ENTITY_CD;', 'assignment_line_no': 141, 'assignment_indent': 16}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 148, 'statement_indent': 24}]}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 158, 'statement_indent': 16}]}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': ':NEW.REPORTING_ENTITY_CD;', 'assignment_line_no': 141, 'assignment_indent': 16}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 148, 'statement_indent': 24}]}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}]}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': ':NEW.REPORTING_ENTITY_CD;', 'assignment_line_no': 141, 'assignment_indent': 16}
2025-09-03 04:09:46,079 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 148, 'statement_indent': 24}]}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}]}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 148, 'statement_indent': 24}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 158, 'statement_indent': 16}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ", 'type': 'if_else', 'if_line_no': 161, 'then_line_no': 161, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 162, 'assignment_indent': 12}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 165, 'statement_indent': 12}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 174, 'statement_indent': 16}, {'type': 'raise_statement', 'sql_statement': 'RAISE CPY_IN_USE;', 'statement_line_no': 182, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);', 'statement_line_no': 187, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 162, 'assignment_indent': 12}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 165, 'statement_indent': 12}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 174, 'statement_indent': 16}, {'type': 'raise_statement', 'sql_statement': 'RAISE CPY_IN_USE;', 'statement_line_no': 182, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 174, 'statement_indent': 16}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE CPY_IN_USE;', 'statement_line_no': 182, 'statement_indent': 16}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': 'UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);', 'statement_line_no': 187, 'statement_indent': 12}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 200, 'then_line_no': 200, 'if_indent': 8, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC') AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);", 'statement_line_no': 201, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'update_statement', 'sql_statement': "UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC') AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);", 'statement_line_no': 201, 'statement_indent': 12}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ", 'type': 'if_else', 'if_line_no': 215, 'then_line_no': 215, 'if_indent': 8, 'end_if_line_no': 217, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_SCOPE;', 'statement_line_no': 216, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_SCOPE;', 'statement_line_no': 216, 'statement_indent': 12}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ", 'type': 'if_else', 'if_line_no': 221, 'then_line_no': 221, 'if_indent': 8, 'end_if_line_no': 223, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_MFR;', 'statement_line_no': 222, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_MFR;', 'statement_line_no': 222, 'statement_indent': 12}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ", 'type': 'if_else', 'if_line_no': 227, 'then_line_no': 227, 'if_indent': 8, 'end_if_line_no': 229, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'statement_line_no': 228, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'statement_line_no': 228, 'statement_indent': 12}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ", 'type': 'if_else', 'if_line_no': 233, 'then_line_no': 233, 'if_indent': 8, 'end_if_line_no': 237, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': 'NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'assignment_line_no': 234, 'assignment_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,080 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': 'NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'assignment_line_no': 234, 'assignment_indent': 12}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 241, 'then_line_no': 241, 'if_indent': 8, 'end_if_line_no': 325, 'then_statements': [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT CBC_FLAG INTO V_REP_CBC_FLAG FROM CFG_V_REPORTING_ENTITIES WHERE REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'statement_line_no': 245, 'statement_indent': 16}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 257, 'assignment_indent': 16}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 260, 'statement_indent': 16}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT VALID_FROM, COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE, V_COUNTRY_CD FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 271, 'statement_indent': 16}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT CBC_FLAG INTO V_REP_CBC_FLAG FROM CFG_V_REPORTING_ENTITIES WHERE REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'statement_line_no': 245, 'statement_indent': 16}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 257, 'assignment_indent': 16}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 260, 'statement_indent': 16}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT VALID_FROM, COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE, V_COUNTRY_CD FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 271, 'statement_indent': 16}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT CBC_FLAG INTO V_REP_CBC_FLAG FROM CFG_V_REPORTING_ENTITIES WHERE REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'statement_line_no': 245, 'statement_indent': 16}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 257, 'assignment_indent': 16}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 260, 'statement_indent': 16}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT VALID_FROM, COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE, V_COUNTRY_CD FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 271, 'statement_indent': 16}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 340, 'statement_indent': 16}]}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}]}
2025-09-03 04:09:46,081 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 340, 'statement_indent': 16}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 342, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 342, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 343, 'statement_indent': 8}]}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 343, 'statement_indent': 8}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 346, 'when_indent': 4, 'then_line_no': 346, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}]}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20110', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20110, V_TRIGGER_NAME'}}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 348, 'when_indent': 4, 'then_line_no': 348, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20111, V_TRIGGER_NAME'}}]}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20111', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20111, V_TRIGGER_NAME'}}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_INS', 'when_line_no': 350, 'when_indent': 4, 'then_line_no': 350, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20114', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20114, V_TRIGGER_NAME'}}]}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20114', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20114, V_TRIGGER_NAME'}}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_VALID_FROM_DATE', 'when_line_no': 352, 'when_indent': 4, 'then_line_no': 352, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20122', "'Please insert : Rep. Code Assignm. Valid from Date'"], 'named_params': {}, 'raw_text': "-20122, 'Please insert : Rep. Code Assignm. Valid from Date'"}}]}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20122', "'Please insert : Rep. Code Assignm. Valid from Date'"], 'named_params': {}, 'raw_text': "-20122, 'Please insert : Rep. Code Assignm. Valid from Date'"}}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'RU_NOT_IN_CBC_SCOPE', 'when_line_no': 354, 'when_indent': 4, 'then_line_no': 354, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20123', "'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"], 'named_params': {}, 'raw_text': "-20123, 'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"}}]}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20123', "'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"], 'named_params': {}, 'raw_text': "-20123, 'A company cannot be in CBC/GBE scope if the RU that reports it is not in CBC scope'"}}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_CPY_STILL_IN_SCOPE', 'when_line_no': 356, 'when_indent': 4, 'then_line_no': 356, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20124', "'The CBC/GBE Scope must be set to No before deactivating the company'"], 'named_params': {}, 'raw_text': "-20124, 'The CBC/GBE Scope must be set to No before deactivating the company'"}}]}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20124', "'The CBC/GBE Scope must be set to No before deactivating the company'"], 'named_params': {}, 'raw_text': "-20124, 'The CBC/GBE Scope must be set to No before deactivating the company'"}}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_NO_ADR', 'when_line_no': 358, 'when_indent': 4, 'then_line_no': 358, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20124', "'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"], 'named_params': {}, 'raw_text': "-20124, 'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"}}]}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20124', "'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"], 'named_params': {}, 'raw_text': "-20124, 'No Physical Address found. Please insert the address before setting the CBC/GBE Scope to Yes'"}}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'CPY_IN_USE', 'when_line_no': 360, 'when_indent': 4, 'then_line_no': 360, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20125', "'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"], 'named_params': {}, 'raw_text': "-20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"}}]}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20125', "'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"], 'named_params': {}, 'raw_text': "-20125, 'The Company cannot be invalidated because is still used as Legal Company for the following companies: ' || V_COMPANY_CODES_LIST"}}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'INVALID_LEGAL_COMP', 'when_line_no': 363, 'when_indent': 4, 'then_line_no': 363, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20126', "V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"], 'named_params': {}, 'raw_text': "-20126, V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"}}]}
2025-09-03 04:09:46,082 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20126', "V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"], 'named_params': {}, 'raw_text': "-20126, V_LEGAL_COMPANY_CD || ' is not a valid Legal Company Code'"}}
2025-09-03 04:09:46,083 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC', 'when_line_no': 366, 'when_indent': 4, 'then_line_no': 366, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20127', "'An Associate Entity cannot be in CBC/GBE Scope!'"], 'named_params': {}, 'raw_text': "-20127, 'An Associate Entity cannot be in CBC/GBE Scope!'"}}]}
2025-09-03 04:09:46,083 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20127', "'An Associate Entity cannot be in CBC/GBE Scope!'"], 'named_params': {}, 'raw_text': "-20127, 'An Associate Entity cannot be in CBC/GBE Scope!'"}}
2025-09-03 04:09:46,083 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_CPY_STILL_IN_MFR', 'when_line_no': 368, 'when_indent': 4, 'then_line_no': 368, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20127', "'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"], 'named_params': {}, 'raw_text': "-20127, 'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"}}]}
2025-09-03 04:09:46,083 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20127', "'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"], 'named_params': {}, 'raw_text': "-20127, 'Please fill in Rep. Code Assignm. Valid to Date field before invalidating the company'"}}
2025-09-03 04:09:46,083 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list []
2025-09-03 04:09:46,090 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:    filename                                               line  line_no  indent
0   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
1   zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
2   zzz.sql                              ELSIF (DELETING) THEN      192     8.0
3   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
4   zzz.sql                                            END IF;      196     8.0
5   eee.sql                                            DECLARE        5     4.0
6   eee.sql                            v_inner_counter NUMBER;        7     8.0
7   eee.sql                                     <<outer_loop>>       10     8.0
8   eee.sql                                               LOOP       11     8.0
9   eee.sql                                     <<inner_loop>>       14    12.0
10  eee.sql                                               LOOP       15    12.0
11  eee.sql          EXIT inner_loop WHEN v_inner_counter > 3;       20    16.0
12  eee.sql                               END LOOP inner_loop;       21    12.0
13  eee.sql          EXIT outer_loop WHEN v_outer_counter > 5;       24    12.0
14  eee.sql                               END LOOP outer_loop;       25     8.0
2025-09-03 04:09:46,091 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 04:09:46,091 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.5876731872558594 seconds
2025-09-03 04:09:46,091 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 04:09:46,091 - root - DEBUG - [common.py:105] - File details: yyy.sql
2025-09-03 04:09:46,091 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 04:09:46,091 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 9 vars, 1 consts, 11 excs, 20 comments
2025-09-03 04:09:46,091 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 04:09:46,091 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:46,091 - root - DEBUG - [common.py:105] - File details in metadata: yyy.sql (16135 bytes)
2025-09-03 04:09:46,091 - root - DEBUG - [common.py:105] - Analysis statistics: 9 vars, 1 consts, 11 excs, 20 comments
2025-09-03 04:09:46,092 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\yyy_analysis.json
2025-09-03 04:09:46,096 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\yyy_analysis.json
2025-09-03 04:09:46,096 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger yyy.sql ===
2025-09-03 04:09:46,096 - root - DEBUG - [common.py:105] - ✓ Created yyy_analysis.json
2025-09-03 04:09:46,096 - root - DEBUG - [common.py:105] - === Processing file 10/10: zzz.sql ===
2025-09-03 04:09:46,097 - root - DEBUG - [common.py:105] - Source path: files/oracle\zzz.sql
2025-09-03 04:09:46,097 - root - DEBUG - [common.py:105] - Output path: files/format_json\zzz_analysis.json
2025-09-03 04:09:46,097 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger zzz.sql ===
2025-09-03 04:09:46,097 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-03 04:09:46,097 - root - DEBUG - [main.py:245] - Reading SQL file: files/oracle\zzz.sql
2025-09-03 04:09:46,097 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 20 characters of SQL
2025-09-03 04:09:46,098 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 04:09:46,098 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 04:09:46,098 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 04:09:46,098 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 04:09:46,098 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 184 total, 41 with semicolons, 25 empty lines skipped
2025-09-03 04:09:46,098 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 04:09:46,098 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 184 lines cleaned
2025-09-03 04:09:46,098 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 25 comments extracted, 159 lines cleaned
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 3
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 10
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 3-9
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_EVENT_ID_REQUIRED
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_DATE_FROM_AFTER_DATE_UNTIL
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_DATE_RANGE_OVERLAP
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:462] - Processed exception: ERR_DO_NOT_MODIFY_PAST_DATA
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_KEY_CONTACTS_LIST
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: L_ERROR_COUNTER
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'ERR_EVENT_ID_REQUIRED', 'when_line_no': 198, 'when_indent': 4, 'then_line_no': 198, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 199}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DATE_FROM_AFTER_DATE_UNTIL', 'when_line_no': 200, 'when_indent': 4, 'then_line_no': 200, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 201}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DATE_RANGE_OVERLAP', 'when_line_no': 202, 'when_indent': 4, 'then_line_no': 202, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 203}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DO_NOT_MODIFY_PAST_DATA', 'when_line_no': 204, 'when_indent': 4, 'then_line_no': 204, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 205}]}]
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 4, 'line': '    IF (INSERTING) THEN', 'line_no': 11}
2025-09-03 04:09:46,099 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 11
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 11 i: 196
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 136
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1276] - then_statements: 0 2
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        IF :NEW.EVENT_ID IS NULL THEN', 'line_no': 18}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 20}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        SELECT', 'line_no': 25}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        FROM', 'line_no': 31}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        FOR R1 IN (', 'line_no': 41}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            SELECT', 'line_no': 42}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                B.VALUE_CD AS USER_ID,', 'line_no': 43}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                B.DATE_FROM AS VALID_FROM,', 'line_no': 44}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                B.DATE_UNTIL AS VALID_UNTIL,', 'line_no': 45}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                E.USERID,', 'line_no': 46}
2025-09-03 04:09:46,100 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                E.TERMINATIONDAY', 'line_no': 47}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            FROM', 'line_no': 48}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) B', 'line_no': 49}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E', 'line_no': 50}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                ON E.USERID = B. VALUE_CD', 'line_no': 51}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        ) LOOP', 'line_no': 52}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            IF (R1.USERID IS NULL) THEN', 'line_no': 56}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 57}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 58}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 59}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 60}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 61}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 33, 'line': "                                 ||' is not a valid Roche employee.'", 'line_no': 62}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                );', 'line_no': 63}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            END IF;', 'line_no': 64}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            IF (R1.TERMINATIONDAY IS NOT NULL', 'line_no': 68}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            AND R1.VALID_UNTIL IS NULL) THEN', 'line_no': 69}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 70}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 71}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 72}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 73}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 74}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 33, 'line': "                                 ||' was termintated '", 'line_no': 75}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 33, 'line': '                                 ||R1.TERMINATIONDAY', 'line_no': 76}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 33, 'line': '                                 ||\' as Roche employee. The "<b>Valid Until</b>" date is required.\'', 'line_no': 77}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                );', 'line_no': 78}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            END IF;', 'line_no': 79}
2025-09-03 04:09:46,101 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        END LOOP;', 'line_no': 80}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        IF (L_ERROR_COUNTER > 0) THEN', 'line_no': 84}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 86}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        SELECT', 'line_no': 91}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        FROM', 'line_no': 93}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        WHERE', 'line_no': 95}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 99}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 101}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        SELECT', 'line_no': 106}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        FROM', 'line_no': 108}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            (', 'line_no': 109}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                SELECT', 'line_no': 110}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 24, 'line': '                        THEN', 'line_no': 115}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 28, 'line': '                            1', 'line_no': 116}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    END CHK', 'line_no': 117}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                FROM', 'line_no': 118}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}
2025-09-03 04:09:46,102 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            );', 'line_no': 120}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 123}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 125}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        SELECT', 'line_no': 130}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        FROM', 'line_no': 132}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        WHERE', 'line_no': 137}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 143}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 145}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        WHERE', 'line_no': 150}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                SELECT', 'line_no': 153}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    1', 'line_no': 154}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                FROM', 'line_no': 155}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                WHERE', 'line_no': 157}
2025-09-03 04:09:46,103 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            );', 'line_no': 160}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            SELECT', 'line_no': 164}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            FROM', 'line_no': 168}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            WHERE', 'line_no': 170}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            UPDATE', 'line_no': 175}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            SET', 'line_no': 176}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    USERID,', 'line_no': 179}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}
2025-09-03 04:09:46,104 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 16, 'line': '                );', 'line_no': 187}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 192}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1286] - {'indent': 4, 'line': '    ELSIF (UPDATING) THEN', 'line_no': 15}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 4, 'line': '    ELSIF (UPDATING) THEN', 'line_no': 15}, {'indent': 8, 'line': '        IF :NEW.EVENT_ID IS NULL THEN', 'line_no': 18}, {'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}, {'indent': 8, 'line': '        END IF;', 'line_no': 20}, {'indent': 8, 'line': '        SELECT', 'line_no': 25}, {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}, {'indent': 8, 'line': '        FROM', 'line_no': 31}, {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}, {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}, {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}, {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}, {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}, {'indent': 8, 'line': '        FOR R1 IN (', 'line_no': 41}, {'indent': 12, 'line': '            SELECT', 'line_no': 42}, {'indent': 16, 'line': '                B.VALUE_CD AS USER_ID,', 'line_no': 43}, {'indent': 16, 'line': '                B.DATE_FROM AS VALID_FROM,', 'line_no': 44}, {'indent': 16, 'line': '                B.DATE_UNTIL AS VALID_UNTIL,', 'line_no': 45}, {'indent': 16, 'line': '                E.USERID,', 'line_no': 46}, {'indent': 16, 'line': '                E.TERMINATIONDAY', 'line_no': 47}, {'indent': 12, 'line': '            FROM', 'line_no': 48}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) B', 'line_no': 49}, {'indent': 16, 'line': '                LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E', 'line_no': 50}, {'indent': 16, 'line': '                ON E.USERID = B. VALUE_CD', 'line_no': 51}, {'indent': 8, 'line': '        ) LOOP', 'line_no': 52}, {'indent': 12, 'line': '            IF (R1.USERID IS NULL) THEN', 'line_no': 56}, {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 57}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 58}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 59}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 60}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 61}, {'indent': 33, 'line': "                                 ||' is not a valid Roche employee.'", 'line_no': 62}, {'indent': 16, 'line': '                );', 'line_no': 63}, {'indent': 12, 'line': '            END IF;', 'line_no': 64}, {'indent': 12, 'line': '            IF (R1.TERMINATIONDAY IS NOT NULL', 'line_no': 68}, {'indent': 12, 'line': '            AND R1.VALID_UNTIL IS NULL) THEN', 'line_no': 69}, {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 70}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 71}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 72}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 73}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 74}, {'indent': 33, 'line': "                                 ||' was termintated '", 'line_no': 75}, {'indent': 33, 'line': '                                 ||R1.TERMINATIONDAY', 'line_no': 76}, {'indent': 33, 'line': '                                 ||\' as Roche employee. The "<b>Valid Until</b>" date is required.\'', 'line_no': 77}, {'indent': 16, 'line': '                );', 'line_no': 78}, {'indent': 12, 'line': '            END IF;', 'line_no': 79}, {'indent': 8, 'line': '        END LOOP;', 'line_no': 80}, {'indent': 8, 'line': '        IF (L_ERROR_COUNTER > 0) THEN', 'line_no': 84}, {'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}, {'indent': 8, 'line': '        END IF;', 'line_no': 86}, {'indent': 8, 'line': '        SELECT', 'line_no': 91}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}, {'indent': 8, 'line': '        FROM', 'line_no': 93}, {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}, {'indent': 8, 'line': '        WHERE', 'line_no': 95}, {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 99}, {'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}, {'indent': 8, 'line': '        END IF;', 'line_no': 101}, {'indent': 8, 'line': '        SELECT', 'line_no': 106}, {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}, {'indent': 8, 'line': '        FROM', 'line_no': 108}, {'indent': 12, 'line': '            (', 'line_no': 109}, {'indent': 16, 'line': '                SELECT', 'line_no': 110}, {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}, {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}, {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}, {'indent': 24, 'line': '                        THEN', 'line_no': 115}, {'indent': 28, 'line': '                            1', 'line_no': 116}, {'indent': 20, 'line': '                    END CHK', 'line_no': 117}, {'indent': 16, 'line': '                FROM', 'line_no': 118}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}, {'indent': 12, 'line': '            );', 'line_no': 120}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 123}, {'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}, {'indent': 8, 'line': '        END IF;', 'line_no': 125}, {'indent': 8, 'line': '        SELECT', 'line_no': 130}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}, {'indent': 8, 'line': '        FROM', 'line_no': 132}, {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}, {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}, {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}, {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}, {'indent': 8, 'line': '        WHERE', 'line_no': 137}, {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}, {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}, {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 143}, {'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}, {'indent': 8, 'line': '        END IF;', 'line_no': 145}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}, {'indent': 8, 'line': '        WHERE', 'line_no': 150}, {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}, {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}, {'indent': 16, 'line': '                SELECT', 'line_no': 153}, {'indent': 20, 'line': '                    1', 'line_no': 154}, {'indent': 16, 'line': '                FROM', 'line_no': 155}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}, {'indent': 16, 'line': '                WHERE', 'line_no': 157}, {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}, {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}, {'indent': 12, 'line': '            );', 'line_no': 160}, {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}, {'indent': 12, 'line': '            SELECT', 'line_no': 164}, {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}, {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}, {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}, {'indent': 12, 'line': '            FROM', 'line_no': 168}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}, {'indent': 12, 'line': '            WHERE', 'line_no': 170}, {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}, {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}, {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}, {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}, {'indent': 12, 'line': '            UPDATE', 'line_no': 175}, {'indent': 12, 'line': '            SET', 'line_no': 176}, {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}, {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}, {'indent': 20, 'line': '                    USERID,', 'line_no': 179}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}, {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}, {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}, {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}, {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}, {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}, {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}, {'indent': 16, 'line': '                );', 'line_no': 187}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 4, 'line': '    ELSIF (UPDATING) THEN', 'line_no': 15}, {'indent': 8, 'line': '        IF :NEW.EVENT_ID IS NULL THEN', 'line_no': 18}, {'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}, {'indent': 8, 'line': '        END IF;', 'line_no': 20}, {'indent': 8, 'line': '        SELECT', 'line_no': 25}, {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}, {'indent': 8, 'line': '        FROM', 'line_no': 31}, {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}, {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}, {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}, {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}, {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}, {'indent': 8, 'line': '        FOR R1 IN (', 'line_no': 41}, {'indent': 12, 'line': '            SELECT', 'line_no': 42}, {'indent': 16, 'line': '                B.VALUE_CD AS USER_ID,', 'line_no': 43}, {'indent': 16, 'line': '                B.DATE_FROM AS VALID_FROM,', 'line_no': 44}, {'indent': 16, 'line': '                B.DATE_UNTIL AS VALID_UNTIL,', 'line_no': 45}, {'indent': 16, 'line': '                E.USERID,', 'line_no': 46}, {'indent': 16, 'line': '                E.TERMINATIONDAY', 'line_no': 47}, {'indent': 12, 'line': '            FROM', 'line_no': 48}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) B', 'line_no': 49}, {'indent': 16, 'line': '                LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E', 'line_no': 50}, {'indent': 16, 'line': '                ON E.USERID = B. VALUE_CD', 'line_no': 51}, {'indent': 8, 'line': '        ) LOOP', 'line_no': 52}, {'indent': 12, 'line': '            IF (R1.USERID IS NULL) THEN', 'line_no': 56}, {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 57}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 58}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 59}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 60}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 61}, {'indent': 33, 'line': "                                 ||' is not a valid Roche employee.'", 'line_no': 62}, {'indent': 16, 'line': '                );', 'line_no': 63}, {'indent': 12, 'line': '            END IF;', 'line_no': 64}, {'indent': 12, 'line': '            IF (R1.TERMINATIONDAY IS NOT NULL', 'line_no': 68}, {'indent': 12, 'line': '            AND R1.VALID_UNTIL IS NULL) THEN', 'line_no': 69}, {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 70}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 71}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 72}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 73}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 74}, {'indent': 33, 'line': "                                 ||' was termintated '", 'line_no': 75}, {'indent': 33, 'line': '                                 ||R1.TERMINATIONDAY', 'line_no': 76}, {'indent': 33, 'line': '                                 ||\' as Roche employee. The "<b>Valid Until</b>" date is required.\'', 'line_no': 77}, {'indent': 16, 'line': '                );', 'line_no': 78}, {'indent': 12, 'line': '            END IF;', 'line_no': 79}, {'indent': 8, 'line': '        END LOOP;', 'line_no': 80}, {'indent': 8, 'line': '        IF (L_ERROR_COUNTER > 0) THEN', 'line_no': 84}, {'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}, {'indent': 8, 'line': '        END IF;', 'line_no': 86}, {'indent': 8, 'line': '        SELECT', 'line_no': 91}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}, {'indent': 8, 'line': '        FROM', 'line_no': 93}, {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}, {'indent': 8, 'line': '        WHERE', 'line_no': 95}, {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 99}, {'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}, {'indent': 8, 'line': '        END IF;', 'line_no': 101}, {'indent': 8, 'line': '        SELECT', 'line_no': 106}, {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}, {'indent': 8, 'line': '        FROM', 'line_no': 108}, {'indent': 12, 'line': '            (', 'line_no': 109}, {'indent': 16, 'line': '                SELECT', 'line_no': 110}, {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}, {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}, {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}, {'indent': 24, 'line': '                        THEN', 'line_no': 115}, {'indent': 28, 'line': '                            1', 'line_no': 116}, {'indent': 20, 'line': '                    END CHK', 'line_no': 117}, {'indent': 16, 'line': '                FROM', 'line_no': 118}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}, {'indent': 12, 'line': '            );', 'line_no': 120}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 123}, {'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}, {'indent': 8, 'line': '        END IF;', 'line_no': 125}, {'indent': 8, 'line': '        SELECT', 'line_no': 130}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}, {'indent': 8, 'line': '        FROM', 'line_no': 132}, {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}, {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}, {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}, {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}, {'indent': 8, 'line': '        WHERE', 'line_no': 137}, {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}, {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}, {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 143}, {'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}, {'indent': 8, 'line': '        END IF;', 'line_no': 145}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}, {'indent': 8, 'line': '        WHERE', 'line_no': 150}, {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}, {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}, {'indent': 16, 'line': '                SELECT', 'line_no': 153}, {'indent': 20, 'line': '                    1', 'line_no': 154}, {'indent': 16, 'line': '                FROM', 'line_no': 155}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}, {'indent': 16, 'line': '                WHERE', 'line_no': 157}, {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}, {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}, {'indent': 12, 'line': '            );', 'line_no': 160}, {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}, {'indent': 12, 'line': '            SELECT', 'line_no': 164}, {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}, {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}, {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}, {'indent': 12, 'line': '            FROM', 'line_no': 168}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}, {'indent': 12, 'line': '            WHERE', 'line_no': 170}, {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}, {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}, {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}, {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}, {'indent': 12, 'line': '            UPDATE', 'line_no': 175}, {'indent': 12, 'line': '            SET', 'line_no': 176}, {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}, {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}, {'indent': 20, 'line': '                    USERID,', 'line_no': 179}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}, {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}, {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}, {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}, {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}, {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}, {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}, {'indent': 16, 'line': '                );', 'line_no': 187}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 4, 'line': '    ELSIF (UPDATING) THEN', 'line_no': 15}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 15 then_i: 15
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 4, 'line': '    ELSIF (UPDATING) THEN', 'line_no': 15}, {'indent': 8, 'line': '        IF :NEW.EVENT_ID IS NULL THEN', 'line_no': 18}, {'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}, {'indent': 8, 'line': '        END IF;', 'line_no': 20}, {'indent': 8, 'line': '        SELECT', 'line_no': 25}, {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}, {'indent': 8, 'line': '        FROM', 'line_no': 31}, {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}, {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}, {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}, {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}, {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}, {'indent': 8, 'line': '        FOR R1 IN (', 'line_no': 41}, {'indent': 12, 'line': '            SELECT', 'line_no': 42}, {'indent': 16, 'line': '                B.VALUE_CD AS USER_ID,', 'line_no': 43}, {'indent': 16, 'line': '                B.DATE_FROM AS VALID_FROM,', 'line_no': 44}, {'indent': 16, 'line': '                B.DATE_UNTIL AS VALID_UNTIL,', 'line_no': 45}, {'indent': 16, 'line': '                E.USERID,', 'line_no': 46}, {'indent': 16, 'line': '                E.TERMINATIONDAY', 'line_no': 47}, {'indent': 12, 'line': '            FROM', 'line_no': 48}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) B', 'line_no': 49}, {'indent': 16, 'line': '                LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E', 'line_no': 50}, {'indent': 16, 'line': '                ON E.USERID = B. VALUE_CD', 'line_no': 51}, {'indent': 8, 'line': '        ) LOOP', 'line_no': 52}, {'indent': 12, 'line': '            IF (R1.USERID IS NULL) THEN', 'line_no': 56}, {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 57}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 58}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 59}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 60}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 61}, {'indent': 33, 'line': "                                 ||' is not a valid Roche employee.'", 'line_no': 62}, {'indent': 16, 'line': '                );', 'line_no': 63}, {'indent': 12, 'line': '            END IF;', 'line_no': 64}, {'indent': 12, 'line': '            IF (R1.TERMINATIONDAY IS NOT NULL', 'line_no': 68}, {'indent': 12, 'line': '            AND R1.VALID_UNTIL IS NULL) THEN', 'line_no': 69}, {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 70}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 71}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 72}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 73}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 74}, {'indent': 33, 'line': "                                 ||' was termintated '", 'line_no': 75}, {'indent': 33, 'line': '                                 ||R1.TERMINATIONDAY', 'line_no': 76}, {'indent': 33, 'line': '                                 ||\' as Roche employee. The "<b>Valid Until</b>" date is required.\'', 'line_no': 77}, {'indent': 16, 'line': '                );', 'line_no': 78}, {'indent': 12, 'line': '            END IF;', 'line_no': 79}, {'indent': 8, 'line': '        END LOOP;', 'line_no': 80}, {'indent': 8, 'line': '        IF (L_ERROR_COUNTER > 0) THEN', 'line_no': 84}, {'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}, {'indent': 8, 'line': '        END IF;', 'line_no': 86}, {'indent': 8, 'line': '        SELECT', 'line_no': 91}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}, {'indent': 8, 'line': '        FROM', 'line_no': 93}, {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}, {'indent': 8, 'line': '        WHERE', 'line_no': 95}, {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 99}, {'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}, {'indent': 8, 'line': '        END IF;', 'line_no': 101}, {'indent': 8, 'line': '        SELECT', 'line_no': 106}, {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}, {'indent': 8, 'line': '        FROM', 'line_no': 108}, {'indent': 12, 'line': '            (', 'line_no': 109}, {'indent': 16, 'line': '                SELECT', 'line_no': 110}, {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}, {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}, {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}, {'indent': 24, 'line': '                        THEN', 'line_no': 115}, {'indent': 28, 'line': '                            1', 'line_no': 116}, {'indent': 20, 'line': '                    END CHK', 'line_no': 117}, {'indent': 16, 'line': '                FROM', 'line_no': 118}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}, {'indent': 12, 'line': '            );', 'line_no': 120}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 123}, {'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}, {'indent': 8, 'line': '        END IF;', 'line_no': 125}, {'indent': 8, 'line': '        SELECT', 'line_no': 130}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}, {'indent': 8, 'line': '        FROM', 'line_no': 132}, {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}, {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}, {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}, {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}, {'indent': 8, 'line': '        WHERE', 'line_no': 137}, {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}, {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}, {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 143}, {'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}, {'indent': 8, 'line': '        END IF;', 'line_no': 145}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}, {'indent': 8, 'line': '        WHERE', 'line_no': 150}, {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}, {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}, {'indent': 16, 'line': '                SELECT', 'line_no': 153}, {'indent': 20, 'line': '                    1', 'line_no': 154}, {'indent': 16, 'line': '                FROM', 'line_no': 155}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}, {'indent': 16, 'line': '                WHERE', 'line_no': 157}, {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}, {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}, {'indent': 12, 'line': '            );', 'line_no': 160}, {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}, {'indent': 12, 'line': '            SELECT', 'line_no': 164}, {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}, {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}, {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}, {'indent': 12, 'line': '            FROM', 'line_no': 168}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}, {'indent': 12, 'line': '            WHERE', 'line_no': 170}, {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}, {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}, {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}, {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}, {'indent': 12, 'line': '            UPDATE', 'line_no': 175}, {'indent': 12, 'line': '            SET', 'line_no': 176}, {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}, {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}, {'indent': 20, 'line': '                    USERID,', 'line_no': 179}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}, {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}, {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}, {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}, {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}, {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}, {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}, {'indent': 16, 'line': '                );', 'line_no': 187}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 4
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1282] - line_info: {'indent': 4, 'line': '    END IF;', 'line_no': 196}
2025-09-03 04:09:46,105 - root - DEBUG - [OracleTriggerAnalyzer.py:1297] - {'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 192}
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1324] - elif_else_then_statements: [{'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 192}, {'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1325] - [{'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 192}, {'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1328] - elif_else_then_statements[0]: {'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 192}
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1355] - elif_else_then_statements 0: 192 then_i: 192
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1356] - case_when_then_statements: [{'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 192}, {'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1357] - elif_else_then_statements[0]['indent']: 4
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 11, 'then_line_no': 11, 'if_indent': 4, 'end_if_line_no': 196, 'then_statements': [{'indent': 8, 'line': "        HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 15, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 15, 'then_statements': [{'indent': 8, 'line': '        IF :NEW.EVENT_ID IS NULL THEN', 'line_no': 18}, {'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}, {'indent': 8, 'line': '        END IF;', 'line_no': 20}, {'indent': 8, 'line': '        SELECT', 'line_no': 25}, {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}, {'indent': 8, 'line': '        FROM', 'line_no': 31}, {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}, {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}, {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}, {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}, {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}, {'indent': 8, 'line': '        FOR R1 IN (', 'line_no': 41}, {'indent': 12, 'line': '            SELECT', 'line_no': 42}, {'indent': 16, 'line': '                B.VALUE_CD AS USER_ID,', 'line_no': 43}, {'indent': 16, 'line': '                B.DATE_FROM AS VALID_FROM,', 'line_no': 44}, {'indent': 16, 'line': '                B.DATE_UNTIL AS VALID_UNTIL,', 'line_no': 45}, {'indent': 16, 'line': '                E.USERID,', 'line_no': 46}, {'indent': 16, 'line': '                E.TERMINATIONDAY', 'line_no': 47}, {'indent': 12, 'line': '            FROM', 'line_no': 48}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) B', 'line_no': 49}, {'indent': 16, 'line': '                LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E', 'line_no': 50}, {'indent': 16, 'line': '                ON E.USERID = B. VALUE_CD', 'line_no': 51}, {'indent': 8, 'line': '        ) LOOP', 'line_no': 52}, {'indent': 12, 'line': '            IF (R1.USERID IS NULL) THEN', 'line_no': 56}, {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 57}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 58}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 59}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 60}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 61}, {'indent': 33, 'line': "                                 ||' is not a valid Roche employee.'", 'line_no': 62}, {'indent': 16, 'line': '                );', 'line_no': 63}, {'indent': 12, 'line': '            END IF;', 'line_no': 64}, {'indent': 12, 'line': '            IF (R1.TERMINATIONDAY IS NOT NULL', 'line_no': 68}, {'indent': 12, 'line': '            AND R1.VALID_UNTIL IS NULL) THEN', 'line_no': 69}, {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 70}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 71}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 72}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 73}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 74}, {'indent': 33, 'line': "                                 ||' was termintated '", 'line_no': 75}, {'indent': 33, 'line': '                                 ||R1.TERMINATIONDAY', 'line_no': 76}, {'indent': 33, 'line': '                                 ||\' as Roche employee. The "<b>Valid Until</b>" date is required.\'', 'line_no': 77}, {'indent': 16, 'line': '                );', 'line_no': 78}, {'indent': 12, 'line': '            END IF;', 'line_no': 79}, {'indent': 8, 'line': '        END LOOP;', 'line_no': 80}, {'indent': 8, 'line': '        IF (L_ERROR_COUNTER > 0) THEN', 'line_no': 84}, {'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}, {'indent': 8, 'line': '        END IF;', 'line_no': 86}, {'indent': 8, 'line': '        SELECT', 'line_no': 91}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}, {'indent': 8, 'line': '        FROM', 'line_no': 93}, {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}, {'indent': 8, 'line': '        WHERE', 'line_no': 95}, {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 99}, {'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}, {'indent': 8, 'line': '        END IF;', 'line_no': 101}, {'indent': 8, 'line': '        SELECT', 'line_no': 106}, {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}, {'indent': 8, 'line': '        FROM', 'line_no': 108}, {'indent': 12, 'line': '            (', 'line_no': 109}, {'indent': 16, 'line': '                SELECT', 'line_no': 110}, {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}, {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}, {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}, {'indent': 24, 'line': '                        THEN', 'line_no': 115}, {'indent': 28, 'line': '                            1', 'line_no': 116}, {'indent': 20, 'line': '                    END CHK', 'line_no': 117}, {'indent': 16, 'line': '                FROM', 'line_no': 118}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}, {'indent': 12, 'line': '            );', 'line_no': 120}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 123}, {'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}, {'indent': 8, 'line': '        END IF;', 'line_no': 125}, {'indent': 8, 'line': '        SELECT', 'line_no': 130}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}, {'indent': 8, 'line': '        FROM', 'line_no': 132}, {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}, {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}, {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}, {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}, {'indent': 8, 'line': '        WHERE', 'line_no': 137}, {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}, {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}, {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}, {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 143}, {'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}, {'indent': 8, 'line': '        END IF;', 'line_no': 145}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}, {'indent': 8, 'line': '        WHERE', 'line_no': 150}, {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}, {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}, {'indent': 16, 'line': '                SELECT', 'line_no': 153}, {'indent': 20, 'line': '                    1', 'line_no': 154}, {'indent': 16, 'line': '                FROM', 'line_no': 155}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}, {'indent': 16, 'line': '                WHERE', 'line_no': 157}, {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}, {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}, {'indent': 12, 'line': '            );', 'line_no': 160}, {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}, {'indent': 12, 'line': '            SELECT', 'line_no': 164}, {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}, {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}, {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}, {'indent': 12, 'line': '            FROM', 'line_no': 168}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}, {'indent': 12, 'line': '            WHERE', 'line_no': 170}, {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}, {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}, {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}, {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}, {'indent': 12, 'line': '            UPDATE', 'line_no': 175}, {'indent': 12, 'line': '            SET', 'line_no': 176}, {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}, {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}, {'indent': 20, 'line': '                    USERID,', 'line_no': 179}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}, {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}, {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}, {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}, {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}, {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}, {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}, {'indent': 16, 'line': '                );', 'line_no': 187}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]}, {'type': 'elif_statement', 'elif_line_no': 192, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 192, 'then_statements': [{'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]}], 'else_statements': []}
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14}
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF :NEW.EVENT_ID IS NULL THEN', 'line_no': 18}
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 18
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 18 i: 20
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}]
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}
2025-09-03 04:09:46,106 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 25}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        FROM', 'line_no': 31}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        FOR R1 IN (', 'line_no': 41}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 42}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                B.VALUE_CD AS USER_ID,', 'line_no': 43}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                B.DATE_FROM AS VALID_FROM,', 'line_no': 44}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                B.DATE_UNTIL AS VALID_UNTIL,', 'line_no': 45}
2025-09-03 04:09:46,107 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                E.USERID,', 'line_no': 46}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                E.TERMINATIONDAY', 'line_no': 47}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FROM', 'line_no': 48}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) B', 'line_no': 49}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E', 'line_no': 50}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                ON E.USERID = B. VALUE_CD', 'line_no': 51}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        ) LOOP', 'line_no': 52}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (R1.USERID IS NULL) THEN', 'line_no': 56}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 56
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 56 i: 64
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 9
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 57}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 58}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 59}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 60}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 61}, {'indent': 33, 'line': "                                 ||' is not a valid Roche employee.'", 'line_no': 62}, {'indent': 16, 'line': '                );', 'line_no': 63}]
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (R1.USERID IS NULL) ', 'type': 'if_else', 'if_line_no': 56, 'then_line_no': 56, 'if_indent': 12, 'end_if_line_no': 64, 'then_statements': [{'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 57}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 58}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 59}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 60}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 61}, {'indent': 33, 'line': "                                 ||' is not a valid Roche employee.'", 'line_no': 62}, {'indent': 16, 'line': '                );', 'line_no': 63}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 57}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 58}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 59}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 60}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 61}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 33, 'line': "                                 ||' is not a valid Roche employee.'", 'line_no': 62}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                );', 'line_no': 63}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            IF (R1.TERMINATIONDAY IS NOT NULL', 'line_no': 68}
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 68
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 68 i: 79
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 12
2025-09-03 04:09:46,108 - root - DEBUG - [OracleTriggerAnalyzer.py:1260] - line_info : {'indent': 12, 'line': '            AND R1.VALID_UNTIL IS NULL) THEN', 'line_no': 69}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 70}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 71}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 72}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 73}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 74}, {'indent': 33, 'line': "                                 ||' was termintated '", 'line_no': 75}, {'indent': 33, 'line': '                                 ||R1.TERMINATIONDAY', 'line_no': 76}, {'indent': 33, 'line': '                                 ||\' as Roche employee. The "<b>Valid Until</b>" date is required.\'', 'line_no': 77}, {'indent': 16, 'line': '                );', 'line_no': 78}]
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (R1.TERMINATIONDAY IS NOT NULL AND R1.VALID_UNTIL IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 69, 'if_indent': 12, 'end_if_line_no': 79, 'then_statements': [{'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 70}, {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 71}, {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 72}, {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 73}, {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 74}, {'indent': 33, 'line': "                                 ||' was termintated '", 'line_no': 75}, {'indent': 33, 'line': '                                 ||R1.TERMINATIONDAY', 'line_no': 76}, {'indent': 33, 'line': '                                 ||\' as Roche employee. The "<b>Valid Until</b>" date is required.\'', 'line_no': 77}, {'indent': 16, 'line': '                );', 'line_no': 78}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                L_ERROR_COUNTER := L_ERROR_COUNTER + 1;', 'line_no': 70}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                MDM_UTIL_WEB.RETURN_FEEDBACK_DIV (', 'line_no': 71}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    P_STATUS => 'ERROR',", 'line_no': 72}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': "                    P_MESSAGE => 'Key contact '", 'line_no': 73}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 33, 'line': '                                 ||R1.USER_ID', 'line_no': 74}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 33, 'line': "                                 ||' was termintated '", 'line_no': 75}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 33, 'line': '                                 ||R1.TERMINATIONDAY', 'line_no': 76}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 33, 'line': '                                 ||\' as Roche employee. The "<b>Valid Until</b>" date is required.\'', 'line_no': 77}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                );', 'line_no': 78}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        END LOOP;', 'line_no': 80}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF (L_ERROR_COUNTER > 0) THEN', 'line_no': 84}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 84
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 84 i: 86
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}]
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 91}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        FROM', 'line_no': 93}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}
2025-09-03 04:09:46,109 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 95}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 99}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 99
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 99 i: 101
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}]
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 106}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        FROM', 'line_no': 108}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            (', 'line_no': 109}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 110}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 24, 'line': '                        THEN', 'line_no': 115}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 28, 'line': '                            1', 'line_no': 116}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    END CHK', 'line_no': 117}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                FROM', 'line_no': 118}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            );', 'line_no': 120}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 123}
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 123
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 123 i: 125
2025-09-03 04:09:46,110 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}]
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 130}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        FROM', 'line_no': 132}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 137}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        IF L_ERROR_COUNTER > 0 THEN', 'line_no': 143}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - if_indent: 143
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1177] - if_i: 143 i: 145
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1178] - if_elses working_lines lenght: 3
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}]
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1314] - if_else_statements: {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 150}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}
2025-09-03 04:09:46,111 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 153}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    1', 'line_no': 154}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                FROM', 'line_no': 155}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 157}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            );', 'line_no': 160}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 164}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            FROM', 'line_no': 168}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 170}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            UPDATE', 'line_no': 175}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            SET', 'line_no': 176}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}
2025-09-03 04:09:46,112 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    USERID,', 'line_no': 179}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 16, 'line': '                );', 'line_no': 187}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 199}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 201}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 203}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1167] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 205}
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1056] - for_i: 41 i: 41
2025-09-03 04:09:46,113 - root - DEBUG - [OracleTriggerAnalyzer.py:1151] - for_loop_statement: {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []} 41 52
2025-09-03 04:09:46,122 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 11, 'then_line_no': 11, 'if_indent': 4, 'end_if_line_no': 196, 'then_statements': [{'indent': 8, 'line': "        HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 15, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 15, 'then_statements': [{'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 25}, {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}, {'indent': 8, 'line': '        FROM', 'line_no': 31}, {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}, {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}, {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}, {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}, {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}, {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []}, {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 91}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}, {'indent': 8, 'line': '        FROM', 'line_no': 93}, {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}, {'indent': 8, 'line': '        WHERE', 'line_no': 95}, {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 106}, {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}, {'indent': 8, 'line': '        FROM', 'line_no': 108}, {'indent': 12, 'line': '            (', 'line_no': 109}, {'indent': 16, 'line': '                SELECT', 'line_no': 110}, {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}, {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}, {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}, {'indent': 24, 'line': '                        THEN', 'line_no': 115}, {'indent': 28, 'line': '                            1', 'line_no': 116}, {'indent': 20, 'line': '                    END CHK', 'line_no': 117}, {'indent': 16, 'line': '                FROM', 'line_no': 118}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}, {'indent': 12, 'line': '            );', 'line_no': 120}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 130}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}, {'indent': 8, 'line': '        FROM', 'line_no': 132}, {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}, {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}, {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}, {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}, {'indent': 8, 'line': '        WHERE', 'line_no': 137}, {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}, {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}, {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}, {'indent': 8, 'line': '        WHERE', 'line_no': 150}, {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}, {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}, {'indent': 16, 'line': '                SELECT', 'line_no': 153}, {'indent': 20, 'line': '                    1', 'line_no': 154}, {'indent': 16, 'line': '                FROM', 'line_no': 155}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}, {'indent': 16, 'line': '                WHERE', 'line_no': 157}, {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}, {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}, {'indent': 12, 'line': '            );', 'line_no': 160}, {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}, {'indent': 12, 'line': '            SELECT', 'line_no': 164}, {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}, {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}, {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}, {'indent': 12, 'line': '            FROM', 'line_no': 168}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}, {'indent': 12, 'line': '            WHERE', 'line_no': 170}, {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}, {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}, {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}, {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}, {'indent': 12, 'line': '            UPDATE', 'line_no': 175}, {'indent': 12, 'line': '            SET', 'line_no': 176}, {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}, {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}, {'indent': 20, 'line': '                    USERID,', 'line_no': 179}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}, {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}, {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}, {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}, {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}, {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}, {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}, {'indent': 16, 'line': '                );', 'line_no': 187}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]}, {'type': 'elif_statement', 'elif_line_no': 192, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 192, 'then_statements': [{'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]}], 'else_statements': []}]
2025-09-03 04:09:46,122 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,130 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14}]
2025-09-03 04:09:46,130 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,130 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14}
2025-09-03 04:09:46,138 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 25}, {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}, {'indent': 8, 'line': '        FROM', 'line_no': 31}, {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}, {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}, {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}, {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}, {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}, {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []}, {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 91}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}, {'indent': 8, 'line': '        FROM', 'line_no': 93}, {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}, {'indent': 8, 'line': '        WHERE', 'line_no': 95}, {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 106}, {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}, {'indent': 8, 'line': '        FROM', 'line_no': 108}, {'indent': 12, 'line': '            (', 'line_no': 109}, {'indent': 16, 'line': '                SELECT', 'line_no': 110}, {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}, {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}, {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}, {'indent': 24, 'line': '                        THEN', 'line_no': 115}, {'indent': 28, 'line': '                            1', 'line_no': 116}, {'indent': 20, 'line': '                    END CHK', 'line_no': 117}, {'indent': 16, 'line': '                FROM', 'line_no': 118}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}, {'indent': 12, 'line': '            );', 'line_no': 120}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 130}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}, {'indent': 8, 'line': '        FROM', 'line_no': 132}, {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}, {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}, {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}, {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}, {'indent': 8, 'line': '        WHERE', 'line_no': 137}, {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}, {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}, {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}, {'indent': 8, 'line': '        WHERE', 'line_no': 150}, {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}, {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}, {'indent': 16, 'line': '                SELECT', 'line_no': 153}, {'indent': 20, 'line': '                    1', 'line_no': 154}, {'indent': 16, 'line': '                FROM', 'line_no': 155}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}, {'indent': 16, 'line': '                WHERE', 'line_no': 157}, {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}, {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}, {'indent': 12, 'line': '            );', 'line_no': 160}, {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}, {'indent': 12, 'line': '            SELECT', 'line_no': 164}, {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}, {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}, {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}, {'indent': 12, 'line': '            FROM', 'line_no': 168}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}, {'indent': 12, 'line': '            WHERE', 'line_no': 170}, {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}, {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}, {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}, {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}, {'indent': 12, 'line': '            UPDATE', 'line_no': 175}, {'indent': 12, 'line': '            SET', 'line_no': 176}, {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}, {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}, {'indent': 20, 'line': '                    USERID,', 'line_no': 179}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}, {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}, {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}, {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}, {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}, {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}, {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}, {'indent': 16, 'line': '                );', 'line_no': 187}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]
2025-09-03 04:09:46,138 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,145 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}]
2025-09-03 04:09:46,145 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,145 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 1
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 25}
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 2
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 3
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 4
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 5
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 6
2025-09-03 04:09:46,161 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 7
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        FROM', 'line_no': 31}
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 8
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 9
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 10
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 11
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 12
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}
2025-09-03 04:09:46,162 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 13
2025-09-03 04:09:46,171 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:46,171 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 14
2025-09-03 04:09:46,180 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}]
2025-09-03 04:09:46,180 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,180 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');", 'line_no': 85}
2025-09-03 04:09:46,180 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,180 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20000, 'CORRECT YOUR INPUT, PLEASE.');
2025-09-03 04:09:46,180 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 85
2025-09-03 04:09:46,180 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 85
2025-09-03 04:09:46,180 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20000, 'Correct your input, please.');
2025-09-03 04:09:46,180 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 15
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 91}
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 16
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 17
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        FROM', 'line_no': 93}
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 18
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 19
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 95}
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 20
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}
2025-09-03 04:09:46,189 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 21
2025-09-03 04:09:46,198 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}]
2025-09-03 04:09:46,198 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,198 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 22
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 106}
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 23
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 24
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        FROM', 'line_no': 108}
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 25
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            (', 'line_no': 109}
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 26
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 110}
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 27
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 28
2025-09-03 04:09:46,211 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 29
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 30
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 24, 'line': '                        THEN', 'line_no': 115}
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 31
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 28, 'line': '                            1', 'line_no': 116}
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 32
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    END CHK', 'line_no': 117}
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 33
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                FROM', 'line_no': 118}
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 34
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 35
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            );', 'line_no': 120}
2025-09-03 04:09:46,212 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 36
2025-09-03 04:09:46,221 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}]
2025-09-03 04:09:46,221 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,221 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 37
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 130}
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 38
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 39
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        FROM', 'line_no': 132}
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 40
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 41
2025-09-03 04:09:46,230 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 42
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 43
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 44
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 137}
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 45
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 46
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 47
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}
2025-09-03 04:09:46,231 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 48
2025-09-03 04:09:46,240 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}]
2025-09-03 04:09:46,240 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,240 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 49
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 50
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 150}
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 51
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 52
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 53
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                SELECT', 'line_no': 153}
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 54
2025-09-03 04:09:46,249 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    1', 'line_no': 154}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 55
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                FROM', 'line_no': 155}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 56
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 57
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 157}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 58
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 59
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 60
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            );', 'line_no': 160}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 61
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 62
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SELECT', 'line_no': 164}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 63
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 64
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}
2025-09-03 04:09:46,250 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 65
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 66
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            FROM', 'line_no': 168}
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 67
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 68
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 170}
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 69
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 70
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 71
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 72
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 73
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            UPDATE', 'line_no': 175}
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 74
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            SET', 'line_no': 176}
2025-09-03 04:09:46,251 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 75
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 76
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 77
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    USERID,', 'line_no': 179}
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 78
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 79
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 80
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 81
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 82
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 83
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 84
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}
2025-09-03 04:09:46,252 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 85
2025-09-03 04:09:46,253 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 16, 'line': '                );', 'line_no': 187}
2025-09-03 04:09:46,253 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 86
2025-09-03 04:09:46,253 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}
2025-09-03 04:09:46,261 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]
2025-09-03 04:09:46,261 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,261 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}
2025-09-03 04:09:46,272 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: []
2025-09-03 04:09:46,280 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 199}]
2025-09-03 04:09:46,280 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,280 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 199}
2025-09-03 04:09:46,280 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,280 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');
2025-09-03 04:09:46,280 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 199
2025-09-03 04:09:46,280 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 199
2025-09-03 04:09:46,280 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');
2025-09-03 04:09:46,280 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}
2025-09-03 04:09:46,288 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 201}]
2025-09-03 04:09:46,288 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,288 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 201}
2025-09-03 04:09:46,288 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,288 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');
2025-09-03 04:09:46,288 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 201
2025-09-03 04:09:46,288 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 201
2025-09-03 04:09:46,288 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');
2025-09-03 04:09:46,289 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}
2025-09-03 04:09:46,296 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 203}]
2025-09-03 04:09:46,296 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,296 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 203}
2025-09-03 04:09:46,296 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,296 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');
2025-09-03 04:09:46,296 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 203
2025-09-03 04:09:46,296 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 203
2025-09-03 04:09:46,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');
2025-09-03 04:09:46,296 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}
2025-09-03 04:09:46,304 - root - DEBUG - [OracleTriggerAnalyzer.py:756] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 205}]
2025-09-03 04:09:46,304 - root - DEBUG - [OracleTriggerAnalyzer.py:762] - i: 0
2025-09-03 04:09:46,304 - root - DEBUG - [OracleTriggerAnalyzer.py:765] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');", 'line_no': 205}
2025-09-03 04:09:46,304 - root - DEBUG - [OracleTriggerAnalyzer.py:791] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 04:09:46,304 - root - DEBUG - [OracleTriggerAnalyzer.py:798] - item: RAISE_APPLICATION_ERROR (-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');
2025-09-03 04:09:46,304 - root - DEBUG - [OracleTriggerAnalyzer.py:799] - function calling start: 205
2025-09-03 04:09:46,304 - root - DEBUG - [OracleTriggerAnalyzer.py:801] - function calling end: 205
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN');
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:1779] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 11, 'then_line_no': 11, 'if_indent': 4, 'end_if_line_no': 196, 'then_statements': [{'indent': 8, 'line': "        HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 15, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 15, 'then_statements': [{'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 25}, {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}, {'indent': 8, 'line': '        FROM', 'line_no': 31}, {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}, {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}, {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}, {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}, {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}, {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []}, {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 91}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}, {'indent': 8, 'line': '        FROM', 'line_no': 93}, {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}, {'indent': 8, 'line': '        WHERE', 'line_no': 95}, {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 106}, {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}, {'indent': 8, 'line': '        FROM', 'line_no': 108}, {'indent': 12, 'line': '            (', 'line_no': 109}, {'indent': 16, 'line': '                SELECT', 'line_no': 110}, {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}, {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}, {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}, {'indent': 24, 'line': '                        THEN', 'line_no': 115}, {'indent': 28, 'line': '                            1', 'line_no': 116}, {'indent': 20, 'line': '                    END CHK', 'line_no': 117}, {'indent': 16, 'line': '                FROM', 'line_no': 118}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}, {'indent': 12, 'line': '            );', 'line_no': 120}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 130}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}, {'indent': 8, 'line': '        FROM', 'line_no': 132}, {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}, {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}, {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}, {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}, {'indent': 8, 'line': '        WHERE', 'line_no': 137}, {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}, {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}, {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}, {'indent': 8, 'line': '        WHERE', 'line_no': 150}, {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}, {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}, {'indent': 16, 'line': '                SELECT', 'line_no': 153}, {'indent': 20, 'line': '                    1', 'line_no': 154}, {'indent': 16, 'line': '                FROM', 'line_no': 155}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}, {'indent': 16, 'line': '                WHERE', 'line_no': 157}, {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}, {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}, {'indent': 12, 'line': '            );', 'line_no': 160}, {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}, {'indent': 12, 'line': '            SELECT', 'line_no': 164}, {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}, {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}, {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}, {'indent': 12, 'line': '            FROM', 'line_no': 168}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}, {'indent': 12, 'line': '            WHERE', 'line_no': 170}, {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}, {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}, {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}, {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}, {'indent': 12, 'line': '            UPDATE', 'line_no': 175}, {'indent': 12, 'line': '            SET', 'line_no': 176}, {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}, {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}, {'indent': 20, 'line': '                    USERID,', 'line_no': 179}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}, {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}, {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}, {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}, {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}, {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}, {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}, {'indent': 16, 'line': '                );', 'line_no': 187}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]}, {'type': 'elif_statement', 'elif_line_no': 192, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 192, 'then_statements': [{'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]}], 'else_statements': []}]
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 8, 'line': "        HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14}]
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!'); || 14 || 8
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 25}, {'indent': 12, 'line': '            IRTT_MULTIROW_REC_T( UPPER(XT.USERID),', 'line_no': 26}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_FROM,', 'line_no': 27}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY),', 'line_no': 28}, {'indent': 12, 'line': '            TO_DATE(XT.VALID_TO,', 'line_no': 29}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST', 'line_no': 30}, {'indent': 8, 'line': '        FROM', 'line_no': 31}, {'indent': 12, 'line': "            XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS", 'line_no': 32}, {'indent': 12, 'line': "            USERID VARCHAR2 (20) PATH 'field[1]',", 'line_no': 34}, {'indent': 12, 'line': "            VALID_FROM VARCHAR2 (20) PATH 'field[2]',", 'line_no': 35}, {'indent': 12, 'line': "            VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'line_no': 36}, {'indent': 8, 'line': '        L_ERROR_COUNTER := 0;', 'line_no': 40}, {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []}, {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 91}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 92}, {'indent': 8, 'line': '        FROM', 'line_no': 93}, {'indent': 12, 'line': '            TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 94}, {'indent': 8, 'line': '        WHERE', 'line_no': 95}, {'indent': 12, 'line': '            XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'line_no': 96}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 106}, {'indent': 12, 'line': '            COUNT(CHK) INTO L_ERROR_COUNTER', 'line_no': 107}, {'indent': 8, 'line': '        FROM', 'line_no': 108}, {'indent': 12, 'line': '            (', 'line_no': 109}, {'indent': 16, 'line': '                SELECT', 'line_no': 110}, {'indent': 20, 'line': '                    XT.DATE_FROM,', 'line_no': 111}, {'indent': 20, 'line': '                    XT.DATE_UNTIL,', 'line_no': 112}, {'indent': 24, 'line': '                        WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM)', 'line_no': 114}, {'indent': 24, 'line': '                        THEN', 'line_no': 115}, {'indent': 28, 'line': '                            1', 'line_no': 116}, {'indent': 20, 'line': '                    END CHK', 'line_no': 117}, {'indent': 16, 'line': '                FROM', 'line_no': 118}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 119}, {'indent': 12, 'line': '            );', 'line_no': 120}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        SELECT', 'line_no': 130}, {'indent': 12, 'line': '            COUNT(1) INTO L_ERROR_COUNTER', 'line_no': 131}, {'indent': 8, 'line': '        FROM', 'line_no': 132}, {'indent': 12, 'line': '            CFG.CFG_IRTT_EVENT_CONTACTS C', 'line_no': 133}, {'indent': 12, 'line': '            LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 134}, {'indent': 12, 'line': '            ON C.USERID = XT.VALUE_CD', 'line_no': 135}, {'indent': 12, 'line': '            AND C.VALID_FROM = XT.DATE_FROM', 'line_no': 136}, {'indent': 8, 'line': '        WHERE', 'line_no': 137}, {'indent': 12, 'line': '            C.EVENT_ID = :NEW.EVENT_ID', 'line_no': 138}, {'indent': 12, 'line': '            AND C.VALID_FROM < TRUNC(SYSDATE)', 'line_no': 139}, {'indent': 12, 'line': '            AND XT.DATE_FROM IS NULL;', 'line_no': 140}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A', 'line_no': 149}, {'indent': 8, 'line': '        WHERE', 'line_no': 150}, {'indent': 12, 'line': '            A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 151}, {'indent': 12, 'line': '            AND NOT EXISTS (', 'line_no': 152}, {'indent': 16, 'line': '                SELECT', 'line_no': 153}, {'indent': 20, 'line': '                    1', 'line_no': 154}, {'indent': 16, 'line': '                FROM', 'line_no': 155}, {'indent': 20, 'line': '                    TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 156}, {'indent': 16, 'line': '                WHERE', 'line_no': 157}, {'indent': 20, 'line': '                    A.USERID = XT.VALUE_CD', 'line_no': 158}, {'indent': 20, 'line': '                    AND A.VALID_FROM = XT.DATE_FROM', 'line_no': 159}, {'indent': 12, 'line': '            );', 'line_no': 160}, {'indent': 8, 'line': '        MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING (', 'line_no': 163}, {'indent': 12, 'line': '            SELECT', 'line_no': 164}, {'indent': 16, 'line': '                XT.VALUE_CD USERID,', 'line_no': 165}, {'indent': 16, 'line': '                XT.DATE_FROM VALID_FROM,', 'line_no': 166}, {'indent': 16, 'line': '                XT.DATE_UNTIL VALID_TO', 'line_no': 167}, {'indent': 12, 'line': '            FROM', 'line_no': 168}, {'indent': 16, 'line': '                TABLE(V_KEY_CONTACTS_LIST) XT', 'line_no': 169}, {'indent': 12, 'line': '            WHERE', 'line_no': 170}, {'indent': 16, 'line': '                XT.VALUE_CD IS NOT NULL', 'line_no': 171}, {'indent': 8, 'line': '        ) B ON (A.EVENT_ID = :NEW.EVENT_ID', 'line_no': 172}, {'indent': 8, 'line': '        AND A.USERID = B.USERID', 'line_no': 173}, {'indent': 8, 'line': '        AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN', 'line_no': 174}, {'indent': 12, 'line': '            UPDATE', 'line_no': 175}, {'indent': 12, 'line': '            SET', 'line_no': 176}, {'indent': 16, 'line': '                A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT(', 'line_no': 177}, {'indent': 20, 'line': '                    EVENT_ID,', 'line_no': 178}, {'indent': 20, 'line': '                    USERID,', 'line_no': 179}, {'indent': 20, 'line': '                    VALID_FROM,', 'line_no': 180}, {'indent': 20, 'line': '                    VALID_TO', 'line_no': 181}, {'indent': 16, 'line': '                ) VALUES(', 'line_no': 182}, {'indent': 20, 'line': '                    :NEW.EVENT_ID,', 'line_no': 183}, {'indent': 20, 'line': '                    B.USERID,', 'line_no': 184}, {'indent': 20, 'line': '                    B.VALID_FROM,', 'line_no': 185}, {'indent': 20, 'line': '                    B.VALID_TO', 'line_no': 186}, {'indent': 16, 'line': '                );', 'line_no': 187}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_EVENT_ID_REQUIRED;', 'line_no': 19}]
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_EVENT_ID_REQUIRED; || 19 || 12
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 19 || raise_statement || RAISE
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 19 || raise_statement
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 19 || raise_statement
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 19 || raise_statement
2025-09-03 04:09:46,305 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 1
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         SELECT || 25 || 8
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 25 || select_statement || SELECT
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 25 || select_statement
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 25 || select_statement
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 36 || select_statement
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT IRTT_MULTIROW_REC_T( UPPER(XT.USERID), TO_DATE(XT.VALID_FROM, MDM_UTIL_IRTT.CO_DD_MM_YYYY), TO_DATE(XT.VALID_TO, MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST FROM XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS USERID VARCHAR2 (20) PATH 'field[1]', VALID_FROM VARCHAR2 (20) PATH 'field[2]', VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 12
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         L_ERROR_COUNTER := 0; || 40 || 8
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:935] - stmt start: 40 || assignment
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:937] - stmt end: 40 || assignment
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:1026] - assignment_statement: {'type': 'assignment', 'variable_name': 'L_ERROR_COUNTER', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 40, 'assignment_indent': 8}
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 13
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 14
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}]
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 15
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         SELECT || 91 || 8
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 91 || select_statement || SELECT
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 91 || select_statement
2025-09-03 04:09:46,306 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 91 || select_statement
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 96 || select_statement
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(1) INTO L_ERROR_COUNTER FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 21
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'line_no': 100}]
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL; || 100 || 12
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 100 || raise_statement || RAISE
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 100 || raise_statement
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 100 || raise_statement
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 100 || raise_statement
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 22
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         SELECT || 106 || 8
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 106 || select_statement || SELECT
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 106 || select_statement
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 106 || select_statement
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 120 || select_statement
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(CHK) INTO L_ERROR_COUNTER FROM ( SELECT XT.DATE_FROM, XT.DATE_UNTIL, WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM) THEN 1 END CHK FROM TABLE(V_KEY_CONTACTS_LIST) XT );
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 36
2025-09-03 04:09:46,307 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_DATE_RANGE_OVERLAP;', 'line_no': 124}]
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_DATE_RANGE_OVERLAP; || 124 || 12
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 124 || raise_statement || RAISE
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 124 || raise_statement
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 124 || raise_statement
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 124 || raise_statement
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 37
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         SELECT || 130 || 8
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 130 || select_statement || SELECT
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 130 || select_statement
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 130 || select_statement
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 140 || select_statement
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT(1) INTO L_ERROR_COUNTER FROM CFG.CFG_IRTT_EVENT_CONTACTS C LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT ON C.USERID = XT.VALUE_CD AND C.VALID_FROM = XT.DATE_FROM WHERE C.EVENT_ID = :NEW.EVENT_ID AND C.VALID_FROM < TRUNC(SYSDATE) AND XT.DATE_FROM IS NULL;
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 48
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'line_no': 144}]
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,308 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             RAISE ERR_DO_NOT_MODIFY_PAST_DATA; || 144 || 12
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 144 || raise_statement || RAISE
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 144 || raise_statement
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 144 || raise_statement
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:920] - stmt end: 144 || raise_statement
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 49
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A || 149 || 8
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 149 || delete_statement || DELETE
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 149 || delete_statement
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 149 || delete_statement
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 160 || delete_statement
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A WHERE A.EVENT_ID = :NEW.EVENT_ID AND NOT EXISTS ( SELECT 1 FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE A.USERID = XT.VALUE_CD AND A.VALID_FROM = XT.DATE_FROM );
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 61
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:         MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING ( || 163 || 8
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:912] - stmt start: 163 || merge_statement || MERGE
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:915] - stmt start: 163 || merge_statement
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:918] - stmt start: 163 || merge_statement
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:928] - stmt end: 187 || merge_statement
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING ( SELECT XT.VALUE_CD USERID, XT.DATE_FROM VALID_FROM, XT.DATE_UNTIL VALID_TO FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.VALUE_CD IS NOT NULL ) B ON (A.EVENT_ID = :NEW.EVENT_ID AND A.USERID = B.USERID AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN UPDATE SET A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT( EVENT_ID, USERID, VALID_FROM, VALID_TO ) VALUES( :NEW.EVENT_ID, B.USERID, B.VALID_FROM, B.VALID_TO );
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 86
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES (); || 191 || 12
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,309 - root - DEBUG - [OracleTriggerAnalyzer.py:902] - item:             HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!'); || 195 || 12
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: []
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:897] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:899] - i: 0
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'begin_end', 'begin_line_no': 10, 'begin_indent': 0, 'begin_end_statements': [{'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 11, 'then_line_no': 11, 'if_indent': 4, 'end_if_line_no': 196, 'then_statements': [{'indent': 8, 'line': "        HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 15, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 15, 'then_statements': [{'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_EVENT_ID_REQUIRED;', 'statement_line_no': 19, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT IRTT_MULTIROW_REC_T( UPPER(XT.USERID), TO_DATE(XT.VALID_FROM, MDM_UTIL_IRTT.CO_DD_MM_YYYY), TO_DATE(XT.VALID_TO, MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST FROM XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS USERID VARCHAR2 (20) PATH 'field[1]', VALID_FROM VARCHAR2 (20) PATH 'field[2]', VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'statement_line_no': 25, 'statement_indent': 8}, {'type': 'assignment', 'variable_name': 'L_ERROR_COUNTER', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 40, 'assignment_indent': 8}, {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []}, {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'statement_line_no': 91, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'statement_line_no': 100, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(CHK) INTO L_ERROR_COUNTER FROM ( SELECT XT.DATE_FROM, XT.DATE_UNTIL, WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM) THEN 1 END CHK FROM TABLE(V_KEY_CONTACTS_LIST) XT );', 'statement_line_no': 106, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_RANGE_OVERLAP;', 'statement_line_no': 124, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM CFG.CFG_IRTT_EVENT_CONTACTS C LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT ON C.USERID = XT.VALUE_CD AND C.VALID_FROM = XT.DATE_FROM WHERE C.EVENT_ID = :NEW.EVENT_ID AND C.VALID_FROM < TRUNC(SYSDATE) AND XT.DATE_FROM IS NULL;', 'statement_line_no': 130, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'statement_line_no': 144, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'delete_statement', 'sql_statement': 'DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A WHERE A.EVENT_ID = :NEW.EVENT_ID AND NOT EXISTS ( SELECT 1 FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE A.USERID = XT.VALUE_CD AND A.VALID_FROM = XT.DATE_FROM );', 'statement_line_no': 149, 'statement_indent': 8}, {'type': 'merge_statement', 'sql_statement': 'MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING ( SELECT XT.VALUE_CD USERID, XT.DATE_FROM VALID_FROM, XT.DATE_UNTIL VALID_TO FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.VALUE_CD IS NOT NULL ) B ON (A.EVENT_ID = :NEW.EVENT_ID AND A.USERID = B.USERID AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN UPDATE SET A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT( EVENT_ID, USERID, VALID_FROM, VALID_TO ) VALUES( :NEW.EVENT_ID, B.USERID, B.VALID_FROM, B.VALID_TO );', 'statement_line_no': 163, 'statement_indent': 8}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]}, {'type': 'elif_statement', 'elif_line_no': 192, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 192, 'then_statements': [{'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]}], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'ERR_EVENT_ID_REQUIRED', 'when_line_no': 198, 'when_indent': 4, 'then_line_no': 198, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DATE_FROM_AFTER_DATE_UNTIL', 'when_line_no': 200, 'when_indent': 4, 'then_line_no': 200, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DATE_RANGE_OVERLAP', 'when_line_no': 202, 'when_indent': 4, 'then_line_no': 202, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DO_NOT_MODIFY_PAST_DATA', 'when_line_no': 204, 'when_indent': 4, 'then_line_no': 204, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]}], 'exception_line_no': 197, 'end_line_no': 206}
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 11, 'then_line_no': 11, 'if_indent': 4, 'end_if_line_no': 196, 'then_statements': [{'indent': 8, 'line': "        HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 15, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 15, 'then_statements': [{'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_EVENT_ID_REQUIRED;', 'statement_line_no': 19, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT IRTT_MULTIROW_REC_T( UPPER(XT.USERID), TO_DATE(XT.VALID_FROM, MDM_UTIL_IRTT.CO_DD_MM_YYYY), TO_DATE(XT.VALID_TO, MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST FROM XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS USERID VARCHAR2 (20) PATH 'field[1]', VALID_FROM VARCHAR2 (20) PATH 'field[2]', VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'statement_line_no': 25, 'statement_indent': 8}, {'type': 'assignment', 'variable_name': 'L_ERROR_COUNTER', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 40, 'assignment_indent': 8}, {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []}, {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'statement_line_no': 91, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'statement_line_no': 100, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(CHK) INTO L_ERROR_COUNTER FROM ( SELECT XT.DATE_FROM, XT.DATE_UNTIL, WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM) THEN 1 END CHK FROM TABLE(V_KEY_CONTACTS_LIST) XT );', 'statement_line_no': 106, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_RANGE_OVERLAP;', 'statement_line_no': 124, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM CFG.CFG_IRTT_EVENT_CONTACTS C LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT ON C.USERID = XT.VALUE_CD AND C.VALID_FROM = XT.DATE_FROM WHERE C.EVENT_ID = :NEW.EVENT_ID AND C.VALID_FROM < TRUNC(SYSDATE) AND XT.DATE_FROM IS NULL;', 'statement_line_no': 130, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'statement_line_no': 144, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'delete_statement', 'sql_statement': 'DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A WHERE A.EVENT_ID = :NEW.EVENT_ID AND NOT EXISTS ( SELECT 1 FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE A.USERID = XT.VALUE_CD AND A.VALID_FROM = XT.DATE_FROM );', 'statement_line_no': 149, 'statement_indent': 8}, {'type': 'merge_statement', 'sql_statement': 'MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING ( SELECT XT.VALUE_CD USERID, XT.DATE_FROM VALID_FROM, XT.DATE_UNTIL VALID_TO FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.VALUE_CD IS NOT NULL ) B ON (A.EVENT_ID = :NEW.EVENT_ID AND A.USERID = B.USERID AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN UPDATE SET A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT( EVENT_ID, USERID, VALID_FROM, VALID_TO ) VALUES( :NEW.EVENT_ID, B.USERID, B.VALID_FROM, B.VALID_TO );', 'statement_line_no': 163, 'statement_indent': 8}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]}, {'type': 'elif_statement', 'elif_line_no': 192, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 192, 'then_statements': [{'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]}], 'else_statements': []}
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -         HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 15, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 15, 'then_statements': [{'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_EVENT_ID_REQUIRED;', 'statement_line_no': 19, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT IRTT_MULTIROW_REC_T( UPPER(XT.USERID), TO_DATE(XT.VALID_FROM, MDM_UTIL_IRTT.CO_DD_MM_YYYY), TO_DATE(XT.VALID_TO, MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST FROM XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS USERID VARCHAR2 (20) PATH 'field[1]', VALID_FROM VARCHAR2 (20) PATH 'field[2]', VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'statement_line_no': 25, 'statement_indent': 8}, {'type': 'assignment', 'variable_name': 'L_ERROR_COUNTER', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 40, 'assignment_indent': 8}, {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []}, {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'statement_line_no': 91, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'statement_line_no': 100, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(CHK) INTO L_ERROR_COUNTER FROM ( SELECT XT.DATE_FROM, XT.DATE_UNTIL, WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM) THEN 1 END CHK FROM TABLE(V_KEY_CONTACTS_LIST) XT );', 'statement_line_no': 106, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_RANGE_OVERLAP;', 'statement_line_no': 124, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM CFG.CFG_IRTT_EVENT_CONTACTS C LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT ON C.USERID = XT.VALUE_CD AND C.VALID_FROM = XT.DATE_FROM WHERE C.EVENT_ID = :NEW.EVENT_ID AND C.VALID_FROM < TRUNC(SYSDATE) AND XT.DATE_FROM IS NULL;', 'statement_line_no': 130, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'statement_line_no': 144, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'delete_statement', 'sql_statement': 'DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A WHERE A.EVENT_ID = :NEW.EVENT_ID AND NOT EXISTS ( SELECT 1 FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE A.USERID = XT.VALUE_CD AND A.VALID_FROM = XT.DATE_FROM );', 'statement_line_no': 149, 'statement_indent': 8}, {'type': 'merge_statement', 'sql_statement': 'MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING ( SELECT XT.VALUE_CD USERID, XT.DATE_FROM VALID_FROM, XT.DATE_UNTIL VALID_TO FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.VALUE_CD IS NOT NULL ) B ON (A.EVENT_ID = :NEW.EVENT_ID AND A.USERID = B.USERID AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN UPDATE SET A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT( EVENT_ID, USERID, VALID_FROM, VALID_TO ) VALUES( :NEW.EVENT_ID, B.USERID, B.VALID_FROM, B.VALID_TO );', 'statement_line_no': 163, 'statement_indent': 8}, {'indent': 12, 'line': '            MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191}]}
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_EVENT_ID_REQUIRED;', 'statement_line_no': 19, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_EVENT_ID_REQUIRED;', 'statement_line_no': 19, 'statement_indent': 12}
2025-09-03 04:09:46,310 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': "SELECT IRTT_MULTIROW_REC_T( UPPER(XT.USERID), TO_DATE(XT.VALID_FROM, MDM_UTIL_IRTT.CO_DD_MM_YYYY), TO_DATE(XT.VALID_TO, MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST FROM XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS USERID VARCHAR2 (20) PATH 'field[1]', VALID_FROM VARCHAR2 (20) PATH 'field[2]', VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'statement_line_no': 25, 'statement_indent': 8}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'assignment', 'variable_name': 'L_ERROR_COUNTER', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 40, 'assignment_indent': 8}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'statement_line_no': 91, 'statement_indent': 8}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'statement_line_no': 100, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'statement_line_no': 100, 'statement_indent': 12}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(CHK) INTO L_ERROR_COUNTER FROM ( SELECT XT.DATE_FROM, XT.DATE_UNTIL, WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM) THEN 1 END CHK FROM TABLE(V_KEY_CONTACTS_LIST) XT );', 'statement_line_no': 106, 'statement_indent': 8}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_RANGE_OVERLAP;', 'statement_line_no': 124, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_RANGE_OVERLAP;', 'statement_line_no': 124, 'statement_indent': 12}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM CFG.CFG_IRTT_EVENT_CONTACTS C LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT ON C.USERID = XT.VALUE_CD AND C.VALID_FROM = XT.DATE_FROM WHERE C.EVENT_ID = :NEW.EVENT_ID AND C.VALID_FROM < TRUNC(SYSDATE) AND XT.DATE_FROM IS NULL;', 'statement_line_no': 130, 'statement_indent': 8}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'statement_line_no': 144, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'statement_line_no': 144, 'statement_indent': 12}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'delete_statement', 'sql_statement': 'DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A WHERE A.EVENT_ID = :NEW.EVENT_ID AND NOT EXISTS ( SELECT 1 FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE A.USERID = XT.VALUE_CD AND A.VALID_FROM = XT.DATE_FROM );', 'statement_line_no': 149, 'statement_indent': 8}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'merge_statement', 'sql_statement': 'MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING ( SELECT XT.VALUE_CD USERID, XT.DATE_FROM VALID_FROM, XT.DATE_UNTIL VALID_TO FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.VALUE_CD IS NOT NULL ) B ON (A.EVENT_ID = :NEW.EVENT_ID AND A.USERID = B.USERID AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN UPDATE SET A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT( EVENT_ID, USERID, VALID_FROM, VALID_TO ) VALUES( :NEW.EVENT_ID, B.USERID, B.VALID_FROM, B.VALID_TO );', 'statement_line_no': 163, 'statement_indent': 8}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -             MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'elif_statement', 'elif_line_no': 192, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 192, 'then_statements': [{'indent': 12, 'line': "            HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195}]}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2093] -             HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_EVENT_ID_REQUIRED', 'when_line_no': 198, 'when_indent': 4, 'then_line_no': 198, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20101, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_DATE_FROM_AFTER_DATE_UNTIL', 'when_line_no': 200, 'when_indent': 4, 'then_line_no': 200, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20103, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}
2025-09-03 04:09:46,311 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_DATE_RANGE_OVERLAP', 'when_line_no': 202, 'when_indent': 4, 'then_line_no': 202, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]}
2025-09-03 04:09:46,312 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20105, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}
2025-09-03 04:09:46,312 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'exception_handler', 'exception_name': 'ERR_DO_NOT_MODIFY_PAST_DATA', 'when_line_no': 204, 'when_indent': 4, 'then_line_no': 204, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}]}
2025-09-03 04:09:46,312 - root - DEBUG - [OracleTriggerAnalyzer.py:2099] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', "'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"], 'named_params': {}, 'raw_text': "-20108, 'MDM_V_IRTT_EVENTS_KEY_CONT_MTN'"}}
2025-09-03 04:09:46,312 - root - DEBUG - [OracleTriggerAnalyzer.py:2112] - rest_strings_list [{'indent': 8, 'line': "HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14, 'filename': 'zzz.sql'}, {'indent': 12, 'line': 'MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191, 'filename': 'zzz.sql'}, {'indent': 12, 'line': "HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195, 'filename': 'zzz.sql'}]
2025-09-03 04:09:46,320 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - dataframe_rest_strings:    filename                                               line  line_no  indent
0   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
1   zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
2   zzz.sql                              ELSIF (DELETING) THEN      192     8.0
3   zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
4   zzz.sql                                            END IF;      196     8.0
5   eee.sql                                            DECLARE        5     4.0
6   eee.sql                            v_inner_counter NUMBER;        7     8.0
7   eee.sql                                     <<outer_loop>>       10     8.0
8   eee.sql                                               LOOP       11     8.0
9   eee.sql                                     <<inner_loop>>       14    12.0
10  eee.sql                                               LOOP       15    12.0
11  eee.sql          EXIT inner_loop WHEN v_inner_counter > 3;       20    16.0
12  eee.sql                               END LOOP inner_loop;       21    12.0
13  eee.sql          EXIT outer_loop WHEN v_outer_counter > 5;       24    12.0
14  eee.sql                               END LOOP outer_loop;       25     8.0
15  zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTI...       14     8.0
16  zzz.sql              MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();      191    12.0
17  zzz.sql  HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETIN...      195    12.0
2025-09-03 04:09:46,320 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 04:09:46,320 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.2231132984161377 seconds
2025-09-03 04:09:46,321 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-03 04:09:46,321 - root - DEBUG - [common.py:105] - File details: zzz.sql
2025-09-03 04:09:46,321 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-03 04:09:46,321 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - JSON conversion complete: 2 vars, 0 consts, 4 excs, 25 comments
2025-09-03 04:09:46,321 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-03 04:09:46,321 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:46,321 - root - DEBUG - [common.py:105] - File details in metadata: zzz.sql (7230 bytes)
2025-09-03 04:09:46,321 - root - DEBUG - [common.py:105] - Analysis statistics: 2 vars, 0 consts, 4 excs, 25 comments
2025-09-03 04:09:46,321 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\zzz_analysis.json
2025-09-03 04:09:46,323 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\zzz_analysis.json
2025-09-03 04:09:46,323 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger zzz.sql ===
2025-09-03 04:09:46,323 - root - DEBUG - [common.py:105] - ✓ Created zzz_analysis.json
2025-09-03 04:09:46,323 - root - INFO - [common.py:110] - === File processing complete ===
2025-09-03 04:09:46,324 - root - INFO - [common.py:110] - Successfully processed: 10 files
2025-09-03 04:09:46,324 - root - INFO - [common.py:110] - === Oracle triggers to JSON conversion complete ===
2025-09-03 04:09:46,324 - root - DEBUG - [common.py:105] - Phase 1 complete: Oracle SQL files converted to JSON analysis structure with file metadata
2025-09-03 04:09:49,125 - root - INFO - [common.py:110] - === Starting JSON analysis to formatted Oracle SQL conversion ===
2025-09-03 04:09:49,126 - root - INFO - [common.py:110] - === Starting file processing ===
2025-09-03 04:09:49,126 - root - INFO - [common.py:110] - Source directory: 'files/format_json'
2025-09-03 04:09:49,126 - root - INFO - [common.py:110] - Target directory: 'files/format_sql'
2025-09-03 04:09:49,127 - root - INFO - [common.py:110] - File pattern: '_analysis.json'
2025-09-03 04:09:49,127 - root - INFO - [common.py:110] - Output suffix: '.sql'
2025-09-03 04:09:49,127 - root - DEBUG - [common.py:105] - Ensuring target directory exists...
2025-09-03 04:09:49,128 - root - DEBUG - [common.py:105] - Directory already exists: files/format_sql
2025-09-03 04:09:49,128 - root - DEBUG - [common.py:105] - Found 10 files in source directory
2025-09-03 04:09:49,128 - root - DEBUG - [common.py:105] - Files matching pattern '_analysis.json': ['bbb_analysis.json', 'eee_analysis.json', 'trigger1_analysis.json', 'trigger2_analysis.json', 'trigger3_analysis.json', 'trigger4_analysis.json', 'trigger5_analysis.json', 'trigger6_analysis.json', 'yyy_analysis.json', 'zzz_analysis.json']
2025-09-03 04:09:49,128 - root - DEBUG - [common.py:105] - === Processing file 1/10: bbb_analysis.json ===
2025-09-03 04:09:49,129 - root - DEBUG - [common.py:105] - Source path: files/format_json\bbb_analysis.json
2025-09-03 04:09:49,129 - root - DEBUG - [common.py:105] - Output path: files/format_sql\bbb_analysis.sql
2025-09-03 04:09:49,129 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger bbb_analysis.json ===
2025-09-03 04:09:49,129 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\bbb_analysis.json
2025-09-03 04:09:49,130 - root - DEBUG - [main.py:364] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:49,130 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 04:09:49,130 - root - DEBUG - [common.py:105] - JSON contains 31 total statements
2025-09-03 04:09:49,130 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 04:09:49,130 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 04:09:49,131 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,149 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 04:09:49,150 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,164 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 04:09:49,165 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 04:09:49,165 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 04:09:49,165 - root - DEBUG - [common.py:105] - Analysis contains 6 variables, 0 constants, 3 exceptions
2025-09-03 04:09:49,165 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 04:09:49,165 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:349] - Rendering 6 variables
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:377] - Rendering 3 exceptions
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 04:09:49,165 - root - DEBUG - [common.py:105] - Generated 10 lines of declarations
2025-09-03 04:09:49,165 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 04:09:49,165 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 6 statements in main block
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 6
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_PATTERN', 'assignment_operator': ':=', 'expression': ':NEW.PATTERN;', 'assignment_line_no': 16, 'assignment_indent': 4}
2025-09-03 04:09:49,165 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': '', 'type': 'case_when', 'case_line_no': 19, 'case_indent': 4, 'end_case_line_no': 33, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 20, 'when_indent': 8, 'condition': 'V_PATTERN IS NOT NULL', 'then_line_no': 20, 'then_statements': [{'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NULL;', 'statement_line_no': 22, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 27, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'condition': " :NEW.RULE_FLAG = 'M' ", 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 12, 'end_if_line_no': 32, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 31, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: case_when
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " :NEW.RULE_FLAG = 'N' ", 'type': 'if_else', 'if_line_no': 21, 'then_line_no': 21, 'if_indent': 12, 'end_if_line_no': 23, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NULL;', 'statement_line_no': 22, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NULL;', 'statement_line_no': 22, 'statement_indent': 16}
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' NOT OWA_PATTERN.MATCH (V_PATTERN, V_ALLOWED_PATTERN) ', 'type': 'if_else', 'if_line_no': 26, 'then_line_no': 26, 'if_indent': 12, 'end_if_line_no': 28, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 27, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 27, 'statement_indent': 16}
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " :NEW.RULE_FLAG = 'M' ", 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 12, 'end_if_line_no': 32, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 31, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_POSTAL_CODE;', 'statement_line_no': 31, 'statement_indent': 16}
2025-09-03 04:09:49,166 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,167 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM V_BPA_POSTAL_CODE_RULES WHERE COUNTRY_CD = :NEW.COUNTRY_CD;', 'statement_line_no': 37, 'statement_indent': 4}
2025-09-03 04:09:49,167 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,167 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 4, 'end_if_line_no': 59, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID FROM V_BPA_POSTAL_CODE_RULES;', 'statement_line_no': 44, 'statement_indent': 8}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_BPA_POSTAL_CODE_RULES ( RULE_ID, COUNTRY_CD, RULE_FLAG ) VALUES ( V_RULE_ID, UPPER (:NEW.COUNTRY_CD), :NEW.RULE_FLAG );', 'statement_line_no': 48, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,167 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,167 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT NVL (MAX (RULE_ID) + 1, 1) INTO V_RULE_ID FROM V_BPA_POSTAL_CODE_RULES;', 'statement_line_no': 44, 'statement_indent': 8}
2025-09-03 04:09:49,167 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,167 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_BPA_POSTAL_CODE_RULES ( RULE_ID, COUNTRY_CD, RULE_FLAG ) VALUES ( V_RULE_ID, UPPER (:NEW.COUNTRY_CD), :NEW.RULE_FLAG );', 'statement_line_no': 48, 'statement_indent': 8}
2025-09-03 04:09:49,167 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 04:09:49,167 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT NVL (MAX (PATTERN_ID) + 1, 1) INTO V_PATTERN_ID FROM V_BPA_POSTAL_CODE_PATTERNS;', 'statement_line_no': 63, 'statement_indent': 4}
2025-09-03 04:09:49,167 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,168 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' INSERTING AND V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 67, 'then_line_no': 67, 'if_indent': 4, 'end_if_line_no': 124, 'then_statements': [{'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_BPA_POSTAL_CODE_PATTERNS ( PATTERN_ID, RULE_ID, PATTERN, DESCRIPTION, VALID_IND ) VALUES ( V_PATTERN_ID, V_RULE_ID, V_PATTERN, :NEW.DESCRIPTION, :NEW.VALID_IND );', 'statement_line_no': 68, 'statement_indent': 8}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 81, 'elif_indent': 4, 'condition': 'UPDATING', 'then_line_no': 81, 'then_statements': [{'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_RULES SET RULE_FLAG = :NEW.RULE_FLAG WHERE RULE_ID = V_RULE_ID;', 'statement_line_no': 83, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;', 'statement_line_no': 92, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}]}, {'type': 'elif_statement', 'elif_line_no': 120, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 120, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS WHERE PATTERN_ID = :OLD.PATTERN_ID;', 'statement_line_no': 121, 'statement_indent': 8}]}], 'else_statements': []}
2025-09-03 04:09:49,168 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,168 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_BPA_POSTAL_CODE_PATTERNS ( PATTERN_ID, RULE_ID, PATTERN, DESCRIPTION, VALID_IND ) VALUES ( V_PATTERN_ID, V_RULE_ID, V_PATTERN, :NEW.DESCRIPTION, :NEW.VALID_IND );', 'statement_line_no': 68, 'statement_indent': 8}
2025-09-03 04:09:49,168 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 04:09:49,168 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' :OLD.RULE_FLAG != :NEW.RULE_FLAG ', 'type': 'if_else', 'if_line_no': 82, 'then_line_no': 82, 'if_indent': 8, 'end_if_line_no': 88, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_RULES SET RULE_FLAG = :NEW.RULE_FLAG WHERE RULE_ID = V_RULE_ID;', 'statement_line_no': 83, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,169 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,169 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_RULES SET RULE_FLAG = :NEW.RULE_FLAG WHERE RULE_ID = V_RULE_ID;', 'statement_line_no': 83, 'statement_indent': 12}
2025-09-03 04:09:49,169 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,169 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' :NEW.PATTERN_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 8, 'end_if_line_no': 119, 'then_statements': [{'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;', 'statement_line_no': 92, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,169 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,170 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' V_PATTERN IS NOT NULL ', 'type': 'if_else', 'if_line_no': 91, 'then_line_no': 91, 'if_indent': 12, 'end_if_line_no': 104, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;', 'statement_line_no': 92, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,170 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,170 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE V_BPA_POSTAL_CODE_PATTERNS SET PATTERN = V_PATTERN, DESCRIPTION = :NEW.DESCRIPTION, VALID_IND = :NEW.VALID_IND WHERE PATTERN_ID = :NEW.PATTERN_ID;', 'statement_line_no': 92, 'statement_indent': 16}
2025-09-03 04:09:49,170 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,170 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.V_BPA_POSTAL_CODE_PATTERNS WHERE PATTERN_ID = :OLD.PATTERN_ID;', 'statement_line_no': 121, 'statement_indent': 8}
2025-09-03 04:09:49,170 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: delete_statement
2025-09-03 04:09:49,170 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,170 - root - DEBUG - [common.py:105] - Generated 36 lines in main execution block
2025-09-03 04:09:49,170 - root - DEBUG - [common.py:105] - Main block rendering took 0.005s
2025-09-03 04:09:49,170 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 04:09:49,171 - root - DEBUG - [common.py:105] - Final SQL contains 46 lines, 1831 characters
2025-09-03 04:09:49,171 - root - DEBUG - [common.py:105] - Oracle SQL generation: 46 lines generated in 0.006s
2025-09-03 04:09:49,171 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 04:09:49,171 - root - DEBUG - [common.py:105] - Rendered SQL length: 1831 characters
2025-09-03 04:09:49,171 - root - DEBUG - [common.py:105] - SQL rendering took: 0.006 seconds
2025-09-03 04:09:49,171 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\bbb_analysis.sql
2025-09-03 04:09:49,173 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\bbb_analysis.sql
2025-09-03 04:09:49,173 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger bbb_analysis.json ===
2025-09-03 04:09:49,173 - root - DEBUG - [common.py:105] - ✓ Created bbb_analysis.sql
2025-09-03 04:09:49,173 - root - DEBUG - [common.py:105] - === Processing file 2/10: eee_analysis.json ===
2025-09-03 04:09:49,174 - root - DEBUG - [common.py:105] - Source path: files/format_json\eee_analysis.json
2025-09-03 04:09:49,174 - root - DEBUG - [common.py:105] - Output path: files/format_sql\eee_analysis.sql
2025-09-03 04:09:49,174 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger eee_analysis.json ===
2025-09-03 04:09:49,174 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\eee_analysis.json
2025-09-03 04:09:49,174 - root - DEBUG - [main.py:364] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:49,174 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 04:09:49,174 - root - DEBUG - [common.py:105] - JSON contains 7 total statements
2025-09-03 04:09:49,175 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 04:09:49,175 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 04:09:49,175 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,189 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 04:09:49,189 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,201 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 04:09:49,201 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 04:09:49,201 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 04:09:49,201 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 04:09:49,201 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 04:09:49,201 - root - DEBUG - [common.py:105] - Analysis contains 0 variables, 0 constants, 0 exceptions
2025-09-03 04:09:49,201 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 04:09:49,201 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 04:09:49,201 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 04:09:49,201 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 04:09:49,201 - root - DEBUG - [common.py:105] - Generated 1 lines of declarations
2025-09-03 04:09:49,201 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 04:09:49,201 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 4 statements in main block
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 4
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 4, 'line': 'DECLARE', 'line_no': 5, 'filename': 'eee.sql'}
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 4, 'line': 'DECLARE', 'line_no': 5, 'filename': 'eee.sql'}
2025-09-03 04:09:49,202 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'v_outer_counter NUMBER', 'assignment_operator': ':=', 'expression': '1;', 'assignment_line_no': 6, 'assignment_indent': 8}
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 8, 'line': 'v_inner_counter NUMBER;', 'line_no': 7, 'filename': 'eee.sql'}
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,202 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 8, 'line': 'v_inner_counter NUMBER;', 'line_no': 7, 'filename': 'eee.sql'}
2025-09-03 04:09:49,202 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'begin_end', 'begin_line_no': 8, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '<<outer_loop>>', 'line_no': 10, 'filename': 'eee.sql'}, {'indent': 8, 'line': 'LOOP', 'line_no': 11, 'filename': 'eee.sql'}, {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': '1;', 'assignment_line_no': 12, 'assignment_indent': 12}, {'indent': 12, 'line': '<<inner_loop>>', 'line_no': 14, 'filename': 'eee.sql'}, {'indent': 12, 'line': 'LOOP', 'line_no': 15, 'filename': 'eee.sql'}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO sales_analytics VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'statement_line_no': 16, 'statement_indent': 16}, {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': 'v_inner_counter + 1;', 'assignment_line_no': 19, 'assignment_indent': 16}, {'indent': 16, 'line': 'EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20, 'filename': 'eee.sql'}, {'indent': 12, 'line': 'END LOOP inner_loop;', 'line_no': 21, 'filename': 'eee.sql'}, {'type': 'assignment', 'variable_name': 'v_outer_counter', 'assignment_operator': ':=', 'expression': 'v_outer_counter + 1;', 'assignment_line_no': 23, 'assignment_indent': 12}, {'indent': 12, 'line': 'EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24, 'filename': 'eee.sql'}, {'indent': 8, 'line': 'END LOOP outer_loop;', 'line_no': 25, 'filename': 'eee.sql'}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 26}
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: begin_end
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 12 statements in main block
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 12
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 8, 'line': '<<outer_loop>>', 'line_no': 10, 'filename': 'eee.sql'}
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 8, 'line': '<<outer_loop>>', 'line_no': 10, 'filename': 'eee.sql'}
2025-09-03 04:09:49,203 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 8, 'line': 'LOOP', 'line_no': 11, 'filename': 'eee.sql'}
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,203 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 8, 'line': 'LOOP', 'line_no': 11, 'filename': 'eee.sql'}
2025-09-03 04:09:49,203 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,204 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': '1;', 'assignment_line_no': 12, 'assignment_indent': 12}
2025-09-03 04:09:49,204 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,204 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 12, 'line': '<<inner_loop>>', 'line_no': 14, 'filename': 'eee.sql'}
2025-09-03 04:09:49,204 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,204 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 12, 'line': '<<inner_loop>>', 'line_no': 14, 'filename': 'eee.sql'}
2025-09-03 04:09:49,204 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,204 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 12, 'line': 'LOOP', 'line_no': 15, 'filename': 'eee.sql'}
2025-09-03 04:09:49,204 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,204 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 12, 'line': 'LOOP', 'line_no': 15, 'filename': 'eee.sql'}
2025-09-03 04:09:49,204 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO sales_analytics VALUES (:NEW.order_id, v_outer_counter, v_inner_counter, SYSDATE);', 'statement_line_no': 16, 'statement_indent': 16}
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'v_inner_counter', 'assignment_operator': ':=', 'expression': 'v_inner_counter + 1;', 'assignment_line_no': 19, 'assignment_indent': 16}
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 16, 'line': 'EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20, 'filename': 'eee.sql'}
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 16, 'line': 'EXIT inner_loop WHEN v_inner_counter > 3;', 'line_no': 20, 'filename': 'eee.sql'}
2025-09-03 04:09:49,205 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 12, 'line': 'END LOOP inner_loop;', 'line_no': 21, 'filename': 'eee.sql'}
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 12, 'line': 'END LOOP inner_loop;', 'line_no': 21, 'filename': 'eee.sql'}
2025-09-03 04:09:49,205 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'v_outer_counter', 'assignment_operator': ':=', 'expression': 'v_outer_counter + 1;', 'assignment_line_no': 23, 'assignment_indent': 12}
2025-09-03 04:09:49,205 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,206 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 12, 'line': 'EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24, 'filename': 'eee.sql'}
2025-09-03 04:09:49,206 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,206 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 12, 'line': 'EXIT outer_loop WHEN v_outer_counter > 5;', 'line_no': 24, 'filename': 'eee.sql'}
2025-09-03 04:09:49,206 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,206 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 8, 'line': 'END LOOP outer_loop;', 'line_no': 25, 'filename': 'eee.sql'}
2025-09-03 04:09:49,206 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,206 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 8, 'line': 'END LOOP outer_loop;', 'line_no': 25, 'filename': 'eee.sql'}
2025-09-03 04:09:49,206 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,206 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,207 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,207 - root - DEBUG - [common.py:105] - Generated 17 lines in main execution block
2025-09-03 04:09:49,207 - root - DEBUG - [common.py:105] - Main block rendering took 0.005s
2025-09-03 04:09:49,207 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 04:09:49,207 - root - DEBUG - [common.py:105] - Final SQL contains 18 lines, 621 characters
2025-09-03 04:09:49,207 - root - DEBUG - [common.py:105] - Oracle SQL generation: 18 lines generated in 0.006s
2025-09-03 04:09:49,207 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 04:09:49,207 - root - DEBUG - [common.py:105] - Rendered SQL length: 621 characters
2025-09-03 04:09:49,207 - root - DEBUG - [common.py:105] - SQL rendering took: 0.006 seconds
2025-09-03 04:09:49,207 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\eee_analysis.sql
2025-09-03 04:09:49,209 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\eee_analysis.sql
2025-09-03 04:09:49,209 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger eee_analysis.json ===
2025-09-03 04:09:49,209 - root - DEBUG - [common.py:105] - ✓ Created eee_analysis.sql
2025-09-03 04:09:49,210 - root - DEBUG - [common.py:105] - === Processing file 3/10: trigger1_analysis.json ===
2025-09-03 04:09:49,210 - root - DEBUG - [common.py:105] - Source path: files/format_json\trigger1_analysis.json
2025-09-03 04:09:49,210 - root - DEBUG - [common.py:105] - Output path: files/format_sql\trigger1_analysis.sql
2025-09-03 04:09:49,210 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger trigger1_analysis.json ===
2025-09-03 04:09:49,210 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\trigger1_analysis.json
2025-09-03 04:09:49,211 - root - DEBUG - [main.py:364] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:49,211 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 04:09:49,212 - root - DEBUG - [common.py:105] - JSON contains 168 total statements
2025-09-03 04:09:49,212 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 04:09:49,212 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 04:09:49,212 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,226 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 04:09:49,226 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,236 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 04:09:49,236 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 04:09:49,236 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 04:09:49,236 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 04:09:49,236 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 04:09:49,236 - root - DEBUG - [common.py:105] - Analysis contains 29 variables, 2 constants, 18 exceptions
2025-09-03 04:09:49,236 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 04:09:49,236 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 04:09:49,236 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 04:09:49,236 - utilities.FormatSQL - DEBUG - [FormatSQL.py:349] - Rendering 29 variables
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:365] - Rendering 2 constants
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:377] - Rendering 18 exceptions
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 04:09:49,237 - root - DEBUG - [common.py:105] - Generated 50 lines of declarations
2025-09-03 04:09:49,237 - root - DEBUG - [common.py:105] - Declarations rendering took 0.001s
2025-09-03 04:09:49,237 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 20 statements in main block
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 20
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT NVL(TXO_SECURITY.GET_USERID, USER) INTO V_USERID FROM DUAL;', 'statement_line_no': 54, 'statement_indent': 3}
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(*) INTO V_IS_ADMIN_CNT FROM TXO_USERS_ROLES_MAP WHERE ROLE_ID IN (315) AND USERID = V_USERID;', 'statement_line_no': 61, 'statement_indent': 3}
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,237 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT NEW_RG_NO INTO V_NEW_RG_NO FROM ( SELECT NEW_RG_NO FROM ( SELECT ROWNUM AS NEW_RG_NO FROM DUAL CONNECT BY 1 = 1 AND ROWNUM <= 6999 ) WHERE NEW_RG_NO > 5999 MINUS SELECT TO_NUMBER(RG_NO) FROM V_THEME_MOLECULES ) WHERE ROWNUM = 1;', 'statement_line_no': 70, 'statement_indent': 3}
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.IN_PREP_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 95, 'then_line_no': 96, 'if_indent': 3, 'end_if_line_no': 111, 'then_statements': [{'condition': " (:NEW.PORTF_PROJ_CD <> 'Y') ", 'type': 'if_else', 'if_line_no': 97, 'then_line_no': 97, 'if_indent': 6, 'end_if_line_no': 99, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_PORTF_PROJ;', 'statement_line_no': 98, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 101, 'then_line_no': 102, 'if_indent': 6, 'end_if_line_no': 104, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_CLOSED;', 'statement_line_no': 103, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 106, 'then_line_no': 106, 'if_indent': 6, 'end_if_line_no': 110, 'then_statements': [{'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.PORTF_PROJ_CD <> 'Y') ", 'type': 'if_else', 'if_line_no': 97, 'then_line_no': 97, 'if_indent': 6, 'end_if_line_no': 99, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_PORTF_PROJ;', 'statement_line_no': 98, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_PORTF_PROJ;', 'statement_line_no': 98, 'statement_indent': 9}
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.STATUS_DESC <> 'CLOSED' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 101, 'then_line_no': 102, 'if_indent': 6, 'end_if_line_no': 104, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_CLOSED;', 'statement_line_no': 103, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE IN_PREP_NOT_CLOSED;', 'statement_line_no': 103, 'statement_indent': 9}
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 106, 'then_line_no': 106, 'if_indent': 6, 'end_if_line_no': 110, 'then_statements': [{'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,238 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'TXO_UTIL.SET_WARNING', 'parameters': {'parameter_type': 'positional', 'positional_params': ["'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"], 'named_params': {}, 'raw_text': "'No Molecule assigned to In-Prep Theme ' || :NEW.THEME_NO || '!'"}}
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 115, 'then_line_no': 115, 'if_indent': 3, 'end_if_line_no': 145, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 117, 'statement_indent': 9}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 128, 'statement_indent': 12}]}], 'exception_line_no': 126, 'end_line_no': 129}, {'condition': ' (V_MOLECULE_RG_NO IS NULL) ', 'type': 'if_else', 'if_line_no': 131, 'then_line_no': 131, 'if_indent': 6, 'end_if_line_no': 144, 'then_statements': [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 133, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'begin_end', 'begin_line_no': 116, 'begin_indent': 6, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 117, 'statement_indent': 9}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 127, 'when_indent': 9, 'then_line_no': 127, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 128, 'statement_indent': 12}]}], 'exception_line_no': 126, 'end_line_no': 129}
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: begin_end
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT RG_NO, M.COMPARATOR_IND INTO V_MOLECULE_RG_NO, V_COMPARATOR_IND FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 117, 'statement_indent': 9}
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (V_MOLECULE_RG_NO IS NULL) ', 'type': 'if_else', 'if_line_no': 131, 'then_line_no': 131, 'if_indent': 6, 'end_if_line_no': 144, 'then_statements': [{'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 133, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (V_COMPARATOR_IND = 'Y') ", 'type': 'if_else', 'if_line_no': 132, 'then_line_no': 132, 'if_indent': 9, 'end_if_line_no': 143, 'then_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 133, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,239 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 133, 'statement_indent': 12}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: null_statement
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_ODG_NO', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 1, 2);', 'assignment_line_no': 150, 'assignment_indent': 3}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_RESGRP_CD', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 4, 2);', 'assignment_line_no': 151, 'assignment_indent': 3}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_RESLIN_CD', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 7, 2);', 'assignment_line_no': 152, 'assignment_indent': 3}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_RESLIN_DESC', 'assignment_operator': ':=', 'expression': 'SUBSTR(:NEW.RESLIN_DESC_CONCAT, 12, LENGTH(:NEW.RESLIN_DESC_CONCAT));', 'assignment_line_no': 153, 'assignment_indent': 3}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.STATUS_DESC IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 154, 'then_line_no': 154, 'if_indent': 3, 'end_if_line_no': 163, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;', 'statement_line_no': 155, 'statement_indent': 6}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT STATUS_CD INTO V_STATUS_CD FROM MDM_V_THEME_STATUS WHERE STATE_DESC = :NEW.STATUS_DESC;', 'statement_line_no': 155, 'statement_indent': 6}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.DBA_DESC_CONCAT IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 165, 'then_line_no': 165, 'if_indent': 3, 'end_if_line_no': 176, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;", 'statement_line_no': 166, 'statement_indent': 6}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT DBA_CD INTO V_DBA_CD FROM MDM_V_DISEASE_BIOLOGY_AREAS WHERE DBA_SHORT_DESC || ' - ' || DBA_DESC = :NEW.DBA_DESC_CONCAT;", 'statement_line_no': 166, 'statement_indent': 6}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_MOLEC_IN_LIC_PRTNR', 'assignment_operator': ':=', 'expression': 'GMD_UTIL_THEMES.GET_MOLEC_IN_LIC_PRTNR(:NEW.MOLECULE_ID);', 'assignment_line_no': 178, 'assignment_indent': 3}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 179, 'then_line_no': 179, 'if_indent': 3, 'end_if_line_no': 183, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_TRADEMARK_NO', 'assignment_operator': ':=', 'expression': ':NEW.TRADEMARK_NO;', 'assignment_line_no': 180, 'assignment_indent': 6}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_TRADEMARK_NO', 'assignment_operator': ':=', 'expression': ':NEW.TRADEMARK_NO;', 'assignment_line_no': 180, 'assignment_indent': 6}
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,240 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_THEME_DESC_PROPOSAL', 'assignment_operator': ':=', 'expression': "GMD_UTIL_THEMES.GET_THEME_SHORT_NAME(P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => NULL, P_TRADEMARK_NO_PORTF => V_TRADEMARK_NO, P_TRUNC_DESC_LENGTH => 'N');", 'assignment_line_no': 185, 'assignment_indent': 3}
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MANUAL_SHORT_DESC IS NULL AND LENGTH(V_THEME_DESC_PROPOSAL) > 30) ', 'type': 'if_else', 'if_line_no': 186, 'then_line_no': 187, 'if_indent': 3, 'end_if_line_no': 189, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'statement_line_no': 188, 'statement_indent': 6}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_PROPOSAL_TOO_LONG;', 'statement_line_no': 188, 'statement_indent': 6}
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_SHORT_NAME', 'assignment_operator': ':=', 'expression': 'COALESCE(:NEW.MANUAL_SHORT_DESC, V_THEME_DESC_PROPOSAL);', 'assignment_line_no': 191, 'assignment_indent': 3}
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 192, 'then_line_no': 192, 'if_indent': 3, 'end_if_line_no': 656, 'then_statements': [{'condition': " (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 193, 'then_line_no': 194, 'if_indent': 6, 'end_if_line_no': 196, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 195, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_MOLECULE_ID', 'assignment_operator': ':=', 'expression': ':NEW.MOLECULE_ID;', 'assignment_line_no': 201, 'assignment_indent': 6}, {'condition': " (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) ", 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 203, 'if_indent': 6, 'end_if_line_no': 247, 'then_statements': [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE PORTF_PROJ_MOL_CRE_ERR;', 'statement_line_no': 205, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 259, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 272, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 275, 'statement_indent': 12}]}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 278, 'assignment_indent': 6}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SELECT THEME_NO FROM V_THEMES UNION ALL SELECT THEME_NO FROM GMD.THEMES_ARCHIVE )                  T WHERE T.THEME_NO = :NEW.THEME_NO;', 'statement_line_no': 281, 'statement_indent': 6}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 298, 'then_line_no': 298, 'if_indent': 6, 'end_if_line_no': 300, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_CANNOT_BE_INSERTED;', 'statement_line_no': 299, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 302, 'assignment_indent': 6}, {'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': 'SYSDATE;', 'assignment_line_no': 303, 'assignment_indent': 6}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 306, 'then_line_no': 306, 'if_indent': 6, 'end_if_line_no': 308, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INSERTSMUSTBEOFFICIAL;', 'statement_line_no': 307, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'N') ", 'type': 'if_else', 'if_line_no': 310, 'then_line_no': 310, 'if_indent': 6, 'end_if_line_no': 315, 'then_statements': [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEMEDESCRIPTIONMANDATORY;', 'statement_line_no': 313, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') ", 'type': 'if_else', 'if_line_no': 319, 'then_line_no': 319, 'if_indent': 6, 'end_if_line_no': 344, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 320, 'assignment_indent': 9}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 334, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 337, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 338, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 346, 'assignment_indent': 6}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION;', 'statement_line_no': 347, 'statement_indent': 6}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 353, 'then_line_no': 353, 'if_indent': 6, 'end_if_line_no': 355, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 354, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 357, 'assignment_indent': 6}, {'type': 'assignment', 'variable_name': 'V_VALID_TO', 'assignment_operator': ':=', 'expression': "TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'assignment_line_no': 358, 'assignment_indent': 6}, {'type': 'assignment', 'variable_name': 'V_SHORT_NAME', 'assignment_operator': ':=', 'expression': 'NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'assignment_line_no': 359, 'assignment_indent': 6}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ODG_NO, RESGRP_CD, RESLIN_CD, THEME_DESC, SHORT_NAME, STATUS_CD, DBA_CD, IN_PREP_IND, PROD_SHORT_CD, TRADEMARK_NO, BIO_ACTIVITY, APPLICANT, CONTACT, REGISTRAR, LINE_EXT_INFO, PORTF_PROJ_CD, CO_DEV_PRTNR, TECHNOLOGY_PRTNR, OFFICIAL_IND, CO_MAR_PRTNR, VALID_TO, PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC ) VALUES ( :NEW.THEME_NO, V_D_REGISTRAT_DATE, V_ODG_NO, V_RESGRP_CD, V_RESLIN_CD, V_DESCRIPTION, V_SHORT_NAME, V_STATUS_CD, V_DBA_CD, :NEW.IN_PREP_IND, :NEW.PROD_SHORT_CD, :NEW.TRADEMARK_NO, :NEW.BIO_ACTIVITY, :NEW.APPLICANT, :NEW.CONTACT, TXO_UTIL.GET_USERID, :NEW.LINE_EXT_INFO, V_PORTF_PROJ_CD, :NEW.CO_DEV_PRTNR, :NEW.TECHNOLOGY_PRTNR, :NEW.OFFICIAL_IND, :NEW.CO_MAR_PRTNR, V_VALID_TO, :NEW.PORTF_DA_GROUP_ID, :NEW.MANUAL_SHORT_DESC );', 'statement_line_no': 360, 'statement_indent': 6}, {'condition': ' (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 413, 'then_line_no': 414, 'if_indent': 6, 'end_if_line_no': 428, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 417, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 432, 'elif_indent': 3, 'condition': '(UPDATING)', 'then_line_no': 432, 'then_statements': [{'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 438, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_ONLY_INSERT;', 'statement_line_no': 442, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'assignment_line_no': 452, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 461, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 474, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 475, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 487, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 493, 'assignment_indent': 6}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO;', 'statement_line_no': 494, 'statement_indent': 6}, {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 502, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 505, 'assignment_indent': 6}, {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'statement_line_no': 509, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 590, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 604, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 613, 'statement_indent': 12}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 636, 'statement_indent': 12}]}]}, {'type': 'elif_statement', 'elif_line_no': 638, 'elif_indent': 3, 'condition': '(DELETING)', 'then_line_no': 638, 'then_statements': [{'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 641, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'statement_line_no': 649, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': []}
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.IN_PREP_IND = 'N' AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 193, 'then_line_no': 194, 'if_indent': 6, 'end_if_line_no': 196, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 195, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 195, 'statement_indent': 9}
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_MOLECULE_ID', 'assignment_operator': ':=', 'expression': ':NEW.MOLECULE_ID;', 'assignment_line_no': 201, 'assignment_indent': 6}
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.PORTF_PROJ_CD = 'Y' AND :NEW.MOLECULE_ID IS NULL) ", 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 203, 'if_indent': 6, 'end_if_line_no': 247, 'then_statements': [{'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE PORTF_PROJ_MOL_CRE_ERR;', 'statement_line_no': 205, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,241 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (NVL(:NEW.MANUAL_SHORT_DESC, :NEW.THEME_DESC_PROPOSAL) IS NULL) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 9, 'end_if_line_no': 246, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE PORTF_PROJ_MOL_CRE_ERR;', 'statement_line_no': 205, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE PORTF_PROJ_MOL_CRE_ERR;', 'statement_line_no': 205, 'statement_indent': 12}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' LENGTH(:NEW.THEME_NO)', 'type': 'case_when', 'case_line_no': 249, 'case_indent': 6, 'end_case_line_no': 276, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 250, 'when_indent': 9, 'condition': '4', 'then_line_no': 250, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 259, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 261, 'when_indent': 9, 'condition': '5', 'then_line_no': 261, 'then_statements': [{'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 272, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 275, 'statement_indent': 12}]}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: case_when
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 251, 'then_line_no': 258, 'if_indent': 12, 'end_if_line_no': 260, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 259, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 259, 'statement_indent': 15}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (SUBSTR(:NEW.THEME_NO, 1, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 2, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 3, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 4, 1) NOT BETWEEN 0 AND 9 OR SUBSTR(:NEW.THEME_NO, 5, 1) NOT BETWEEN 0 AND 9) ', 'type': 'if_else', 'if_line_no': 262, 'then_line_no': 271, 'if_indent': 12, 'end_if_line_no': 273, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 272, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 272, 'statement_indent': 15}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_THEME_NO;', 'statement_line_no': 275, 'statement_indent': 12}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 278, 'assignment_indent': 6}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM ( SELECT THEME_NO FROM V_THEMES UNION ALL SELECT THEME_NO FROM GMD.THEMES_ARCHIVE )                  T WHERE T.THEME_NO = :NEW.THEME_NO;', 'statement_line_no': 281, 'statement_indent': 6}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 298, 'then_line_no': 298, 'if_indent': 6, 'end_if_line_no': 300, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_CANNOT_BE_INSERTED;', 'statement_line_no': 299, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_CANNOT_BE_INSERTED;', 'statement_line_no': 299, 'statement_indent': 9}
2025-09-03 04:09:49,242 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 302, 'assignment_indent': 6}
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': 'SYSDATE;', 'assignment_line_no': 303, 'assignment_indent': 6}
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 306, 'then_line_no': 306, 'if_indent': 6, 'end_if_line_no': 308, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INSERTSMUSTBEOFFICIAL;', 'statement_line_no': 307, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE INSERTSMUSTBEOFFICIAL;', 'statement_line_no': 307, 'statement_indent': 9}
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'N') ", 'type': 'if_else', 'if_line_no': 310, 'then_line_no': 310, 'if_indent': 6, 'end_if_line_no': 315, 'then_statements': [{'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEMEDESCRIPTIONMANDATORY;', 'statement_line_no': 313, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.THEME_DESC IS NULL OR LENGTH(:NEW.THEME_DESC) = 0) ', 'type': 'if_else', 'if_line_no': 311, 'then_line_no': 312, 'if_indent': 9, 'end_if_line_no': 314, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEMEDESCRIPTIONMANDATORY;', 'statement_line_no': 313, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE THEMEDESCRIPTIONMANDATORY;', 'statement_line_no': 313, 'statement_indent': 12}
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y') ", 'type': 'if_else', 'if_line_no': 319, 'then_line_no': 319, 'if_indent': 6, 'end_if_line_no': 344, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 320, 'assignment_indent': 9}, {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 334, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 337, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 338, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => NULL, P_MOLECULE_ID_PORTF => V_MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 320, 'assignment_indent': 9}
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,243 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 333, 'then_line_no': 333, 'if_indent': 9, 'end_if_line_no': 335, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 334, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 334, 'statement_indent': 12}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 337, 'assignment_indent': 9}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 338, 'assignment_indent': 9}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 346, 'assignment_indent': 6}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION;', 'statement_line_no': 347, 'statement_indent': 6}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 353, 'then_line_no': 353, 'if_indent': 6, 'end_if_line_no': 355, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 354, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 354, 'statement_indent': 9}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 357, 'assignment_indent': 6}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_VALID_TO', 'assignment_operator': ':=', 'expression': "TO_DATE('09.09.9999', 'DD.MM.YYYY');", 'assignment_line_no': 358, 'assignment_indent': 6}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_SHORT_NAME', 'assignment_operator': ':=', 'expression': 'NVL(:NEW.MANUAL_SHORT_DESC, SUBSTR(V_DESCRIPTION, 1, 30));', 'assignment_line_no': 359, 'assignment_indent': 6}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO GMD.THEMES( THEME_NO, REGISTRAT_DATE, ODG_NO, RESGRP_CD, RESLIN_CD, THEME_DESC, SHORT_NAME, STATUS_CD, DBA_CD, IN_PREP_IND, PROD_SHORT_CD, TRADEMARK_NO, BIO_ACTIVITY, APPLICANT, CONTACT, REGISTRAR, LINE_EXT_INFO, PORTF_PROJ_CD, CO_DEV_PRTNR, TECHNOLOGY_PRTNR, OFFICIAL_IND, CO_MAR_PRTNR, VALID_TO, PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC ) VALUES ( :NEW.THEME_NO, V_D_REGISTRAT_DATE, V_ODG_NO, V_RESGRP_CD, V_RESLIN_CD, V_DESCRIPTION, V_SHORT_NAME, V_STATUS_CD, V_DBA_CD, :NEW.IN_PREP_IND, :NEW.PROD_SHORT_CD, :NEW.TRADEMARK_NO, :NEW.BIO_ACTIVITY, :NEW.APPLICANT, :NEW.CONTACT, TXO_UTIL.GET_USERID, :NEW.LINE_EXT_INFO, V_PORTF_PROJ_CD, :NEW.CO_DEV_PRTNR, :NEW.TECHNOLOGY_PRTNR, :NEW.OFFICIAL_IND, :NEW.CO_MAR_PRTNR, V_VALID_TO, :NEW.PORTF_DA_GROUP_ID, :NEW.MANUAL_SHORT_DESC );', 'statement_line_no': 360, 'statement_indent': 6}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 413, 'then_line_no': 414, 'if_indent': 6, 'end_if_line_no': 428, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 417, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,244 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, V_MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 417, 'statement_indent': 9}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:OLD.IN_PREP_IND = 'N' OR (:OLD.IN_PREP_IND = 'Y' AND :NEW.IN_PREP_IND = 'N')) AND V_IS_ADMIN_CNT = 0 ", 'type': 'if_else', 'if_line_no': 435, 'then_line_no': 437, 'if_indent': 6, 'end_if_line_no': 439, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 438, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 438, 'statement_indent': 9}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.THEME_NO <> :OLD.THEME_NO) ', 'type': 'if_else', 'if_line_no': 441, 'then_line_no': 441, 'if_indent': 6, 'end_if_line_no': 443, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_ONLY_INSERT;', 'statement_line_no': 442, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE THEME_NO_ONLY_INSERT;', 'statement_line_no': 442, 'statement_indent': 9}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 449, 'then_line_no': 449, 'if_indent': 6, 'end_if_line_no': 456, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'assignment_line_no': 452, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_D_REGISTRAT_DATE', 'assignment_operator': ':=', 'expression': "TO_DATE(:OLD.REGISTRAT_DATE, 'dd-mm-yyyy');", 'assignment_line_no': 452, 'assignment_indent': 9}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (UPPER(:NEW.PORTF_PROJ_CD) = 'Y' AND(V_STATUS_CD <> 'C' OR:NEW.IN_PREP_IND = 'Y')) UPPER(:NEW.PORTF_PROJ_CD) ", 'type': 'if_else', 'if_line_no': 458, 'then_line_no': 460, 'if_indent': 6, 'end_if_line_no': 484, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 461, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 474, 'assignment_indent': 9}, {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 475, 'assignment_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': "GMD.GMD_UTIL_THEMES.GET_THEME_DESC_PORTFOLIO( P_THEME_NO_PORTF => :NEW.THEME_NO, P_MOLECULE_ID_PORTF => :NEW.MOLECULE_ID, P_PROD_SHORT_CD_PORTF => :NEW.PROD_SHORT_CD, P_ODG_NO_PORT => V_ODG_NO, P_RESGRP_CD_PORT => V_RESGRP_CD, P_RESLIN_CD_PORT => V_RESLIN_CD, P_LINE_EXT_INFO_PORT => :NEW.LINE_EXT_INFO, P_IN_LIC_PRTNR_PORTF => V_MOLEC_IN_LIC_PRTNR, P_TRADEMARK_NO_PORTF => :NEW.TRADEMARK_NO, P_SHORT_NAME_PORTF => :NEW.SHORT_NAME, P_TRUNC_DESC_LENGTH => 'N' );", 'assignment_line_no': 461, 'assignment_indent': 9}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_DESCRIPTION', 'assignment_operator': ':=', 'expression': 'TRIM(V_DESCRIPTION);', 'assignment_line_no': 474, 'assignment_indent': 9}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_PORTF_PROJ_CD', 'assignment_operator': ':=', 'expression': "'Y';", 'assignment_line_no': 475, 'assignment_indent': 9}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (LENGTH(V_DESCRIPTION) > 90) ', 'type': 'if_else', 'if_line_no': 486, 'then_line_no': 486, 'if_indent': 6, 'end_if_line_no': 488, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 487, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,245 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE DESCRIPTION_TOO_LONG;', 'statement_line_no': 487, 'statement_indent': 9}
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 493, 'assignment_indent': 6}
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(T.THEME_NO) INTO V_COUNTER FROM V_THEMES T WHERE T.THEME_DESC = V_DESCRIPTION AND T.THEME_NO <> :NEW.THEME_NO;', 'statement_line_no': 494, 'statement_indent': 6}
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (V_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 501, 'then_line_no': 501, 'if_indent': 6, 'end_if_line_no': 503, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 502, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE THEME_DESC_NOT_UNIQUE;', 'statement_line_no': 502, 'statement_indent': 9}
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_COUNTER', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 505, 'assignment_indent': 6}
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.OFFICIAL_IND = 'N') ", 'type': 'if_else', 'if_line_no': 508, 'then_line_no': 508, 'if_indent': 6, 'end_if_line_no': 581, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'statement_line_no': 509, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE GMD.THEMES SET ODG_NO = V_ODG_NO, RESGRP_CD = V_RESGRP_CD, RESLIN_CD = V_RESLIN_CD, THEME_DESC = V_DESCRIPTION, SHORT_NAME = V_SHORT_NAME, STATUS_CD = V_STATUS_CD, DBA_CD = V_DBA_CD, IN_PREP_IND = :NEW.IN_PREP_IND, PROD_SHORT_CD = :NEW.PROD_SHORT_CD, TRADEMARK_NO = :NEW.TRADEMARK_NO, BIO_ACTIVITY = :NEW.BIO_ACTIVITY, APPLICANT = :NEW.APPLICANT, CONTACT = :NEW.CONTACT, LINE_EXT_INFO = :NEW.LINE_EXT_INFO, PORTF_PROJ_CD = V_PORTF_PROJ_CD, CO_DEV_PRTNR = :NEW.CO_DEV_PRTNR, TECHNOLOGY_PRTNR = :NEW.TECHNOLOGY_PRTNR, OFFICIAL_IND = :NEW.OFFICIAL_IND, CO_MAR_PRTNR = :NEW.CO_MAR_PRTNR, PORTF_DA_GROUP_ID = :NEW.PORTF_DA_GROUP_ID, MANUAL_SHORT_DESC = :NEW.MANUAL_SHORT_DESC WHERE THEME_NO = :NEW.THEME_NO AND TO_DATE(REGISTRAT_DATE, 'DD-MM-YYYY') = V_D_REGISTRAT_DATE;", 'statement_line_no': 509, 'statement_indent': 9}
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': '', 'type': 'case_when', 'case_line_no': 586, 'case_indent': 6, 'end_case_line_no': 637, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 587, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 587, 'then_statements': [{'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 590, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 601, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NOT NULL', 'then_line_no': 601, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 604, 'statement_indent': 12}]}, {'type': 'when_statement', 'when_line_no': 612, 'when_indent': 9, 'condition': ':OLD.MOLECULE_ID IS NOT NULL AND :NEW.MOLECULE_ID IS NULL', 'then_line_no': 612, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 613, 'statement_indent': 12}, {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 636, 'statement_indent': 12}]}
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: case_when
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_THEME_MOLECULE_MAP_MTN A( A.THEME_NO, A.MOLECULE_ID, A.MOLECULE_SEQ_NO, A.VALID_IND ) VALUES ( :NEW.THEME_NO, :NEW.MOLECULE_ID, 1, 'Y' );", 'statement_line_no': 590, 'statement_indent': 12}
2025-09-03 04:09:49,246 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_THEME_MOLECULE_MAP A SET A.MOLECULE_ID = :NEW.MOLECULE_ID, A.VALID_IND = 'Y' WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO = 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 604, 'statement_indent': 12}
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_SEC_MOL_CNT FROM MDM_V_THEME_MOLECULE_MAP_MTN A WHERE A.THEME_NO = :NEW.THEME_NO AND A.MOLECULE_SEQ_NO > 1 AND A.VALID_IND = 'Y';", 'statement_line_no': 613, 'statement_indent': 12}
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (V_SEC_MOL_CNT > 0) ', 'type': 'if_else', 'if_line_no': 621, 'then_line_no': 621, 'if_indent': 12, 'end_if_line_no': 634, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE SEC_MOL_LIST_NOT_EMPTY;', 'statement_line_no': 622, 'statement_indent': 15}
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 636, 'statement_indent': 12}
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: null_statement
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " ((:OLD.IN_PREP_IND = 'N') AND V_IS_ADMIN_CNT = 0) ", 'type': 'if_else', 'if_line_no': 639, 'then_line_no': 640, 'if_indent': 6, 'end_if_line_no': 642, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 641, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,247 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ADMIN_UPDATE_ONLY;', 'statement_line_no': 641, 'statement_indent': 9}
2025-09-03 04:09:49,248 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,248 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (TRUNC(TO_DATE(:OLD.REGISTRAT_DATE, 'DD-MM-YYYY')) = TRUNC(SYSDATE)) ", 'type': 'if_else', 'if_line_no': 648, 'then_line_no': 648, 'if_indent': 6, 'end_if_line_no': 655, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'statement_line_no': 649, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,248 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,248 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'delete_statement', 'sql_statement': 'DELETE FROM GMD.THEMES A WHERE A.THEME_NO = :OLD.THEME_NO AND TRUNC(A.REGISTRAT_DATE) = TRUNC(SYSDATE);', 'statement_line_no': 649, 'statement_indent': 9}
2025-09-03 04:09:49,248 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: delete_statement
2025-09-03 04:09:49,248 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 660, 'then_line_no': 661, 'if_indent': 3, 'end_if_line_no': 747, 'then_statements': [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 662, 'then_line_no': 663, 'if_indent': 6, 'end_if_line_no': 720, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 666, 'statement_indent': 9}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;", 'statement_line_no': 678, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) ", 'type': 'if_else', 'if_line_no': 724, 'then_line_no': 725, 'if_indent': 6, 'end_if_line_no': 746, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 728, 'statement_indent': 9}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 738, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,248 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,248 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL AND :OLD.PROPOSAL_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 662, 'then_line_no': 663, 'if_indent': 6, 'end_if_line_no': 720, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 666, 'statement_indent': 9}, {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;", 'statement_line_no': 678, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,248 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,248 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 666, 'statement_indent': 9}
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (V_EVOLVED_NMP_CNT = 0) ', 'type': 'if_else', 'if_line_no': 677, 'then_line_no': 677, 'if_indent': 9, 'end_if_line_no': 686, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;", 'statement_line_no': 678, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN SET PROPOSAL_STATUS_CD = 'E', EVOLVED_THEME_NO = :NEW.THEME_NO, PROPOSAL_NAME = V_SHORT_NAME, REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;", 'statement_line_no': 678, 'statement_indent': 12}
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (NVL(:NEW.PROPOSAL_ID, 0) = NVL(:OLD.PROPOSAL_ID, 0) AND NVL(:OLD.SHORT_NAME, '-') <> NVL(V_SHORT_NAME, '-')) ", 'type': 'if_else', 'if_line_no': 724, 'then_line_no': 725, 'if_indent': 6, 'end_if_line_no': 746, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 728, 'statement_indent': 9}, {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 738, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 728, 'statement_indent': 9}
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (V_EVOLVED_NMP_CNT > 0) ', 'type': 'if_else', 'if_line_no': 735, 'then_line_no': 735, 'if_indent': 9, 'end_if_line_no': 745, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 738, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE MDM_V_NEW_MEDICINE_PROPOSALS_MTN NMP SET NMP.PROPOSAL_NAME = V_SHORT_NAME, NMP.REASON_FOR_CHANGE = '** Automatic update of proposal_name after short_name change in evolved theme **' WHERE NMP.EVOLVED_THEME_NO =:NEW.THEME_NO AND NMP.PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 738, 'statement_indent': 12}
2025-09-03 04:09:49,249 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (INSERTING AND :NEW.THEME_NO IS NOT NULL AND GMD_UTIL_THEMES.GET_THEMES_RANGE_AUTOMATIC_NMP(:NEW.THEME_NO) = 'Y') ", 'type': 'if_else', 'if_line_no': 751, 'then_line_no': 753, 'if_indent': 3, 'end_if_line_no': 803, 'then_statements': [{'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 754, 'then_line_no': 754, 'if_indent': 6, 'end_if_line_no': 763, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 755, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) ', 'type': 'if_else', 'if_line_no': 767, 'then_line_no': 769, 'if_indent': 6, 'end_if_line_no': 802, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );", 'statement_line_no': 787, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.PROPOSAL_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 754, 'then_line_no': 754, 'if_indent': 6, 'end_if_line_no': 763, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 755, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT(*) INTO V_EVOLVED_NMP_CNT FROM MDM_V_NEW_MEDICINE_PROPOSALS_MTN WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID AND PROPOSAL_NAME = V_SHORT_NAME AND PROPOSAL_STATUS_CD = 'E';", 'statement_line_no': 755, 'statement_indent': 9}
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.PROPOSAL_ID IS NULL OR (:NEW.PROPOSAL_ID IS NOT NULL AND V_EVOLVED_NMP_CNT = 0)) ', 'type': 'if_else', 'if_line_no': 767, 'then_line_no': 769, 'if_indent': 6, 'end_if_line_no': 802, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}, {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );", 'statement_line_no': 787, 'statement_indent': 9}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 770, 'then_line_no': 770, 'if_indent': 9, 'end_if_line_no': 785, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}]}], 'exception_line_no': 781, 'end_line_no': 784}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'begin_end', 'begin_line_no': 771, 'begin_indent': 12, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 782, 'when_indent': 15, 'then_line_no': 782, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_MOLECULE_ID;', 'statement_line_no': 783, 'statement_indent': 18}]}], 'exception_line_no': 781, 'end_line_no': 784}
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: begin_end
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID INTO V_PHARMACOLOGICAL_TYPE_ID, V_MOLECULE_TYPE_ID FROM V_THEME_MOLECULES M WHERE MOLECULE_ID = :NEW.MOLECULE_ID AND M.VALID_IND = 'Y';", 'statement_line_no': 772, 'statement_indent': 15}
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': "INSERT INTO MDM_V_NEW_MEDICINE_PROPOSALS_MTN ( PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, PROPOSAL_NAME, PHARMACOLOGICAL_TYPE_ID, MOLECULE_TYPE_ID, REASON_FOR_CHANGE ) VALUES ( 'E', :NEW.THEME_NO, V_SHORT_NAME, NVL(V_PHARMACOLOGICAL_TYPE_ID, C_PHARMACOLOGICAL_TYPE_ID), NVL(V_MOLECULE_TYPE_ID, C_MOLECULE_TYPE_ID), '** Automatic creation of nmp for early development themes **' );", 'statement_line_no': 787, 'statement_indent': 9}
2025-09-03 04:09:49,250 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 04:09:49,251 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'begin_end', 'begin_line_no': 805, 'begin_indent': 3, 'begin_end_statements': [{'for_expression': '( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )', 'type': 'for_loop', 'for_line_no': 809, 'for_indent': 6, 'end_for_line_no': 822, 'loop_variable': 'I1', 'for_statements': []}], 'exception_handlers': [], 'exception_line_no': -1, 'end_line_no': 823}
2025-09-03 04:09:49,251 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: begin_end
2025-09-03 04:09:49,251 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,251 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 04:09:49,251 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 04:09:49,251 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'for_expression': '( FOR I1 IN ( SELECT A.THEME_NO, A.REGISTRAT_DATE FROM V_THEMES A WHERE A.VALID_TO <= TRUNC(SYSDATE) )', 'type': 'for_loop', 'for_line_no': 809, 'for_indent': 6, 'end_for_line_no': 822, 'loop_variable': 'I1', 'for_statements': []}
2025-09-03 04:09:49,251 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: for_loop
2025-09-03 04:09:49,251 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,251 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,251 - root - DEBUG - [common.py:105] - Generated 175 lines in main execution block
2025-09-03 04:09:49,251 - root - DEBUG - [common.py:105] - Main block rendering took 0.014s
2025-09-03 04:09:49,251 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 04:09:49,251 - root - DEBUG - [common.py:105] - Final SQL contains 225 lines, 13302 characters
2025-09-03 04:09:49,251 - root - DEBUG - [common.py:105] - Oracle SQL generation: 225 lines generated in 0.015s
2025-09-03 04:09:49,251 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 04:09:49,251 - root - DEBUG - [common.py:105] - Rendered SQL length: 13302 characters
2025-09-03 04:09:49,251 - root - DEBUG - [common.py:105] - SQL rendering took: 0.015 seconds
2025-09-03 04:09:49,251 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\trigger1_analysis.sql
2025-09-03 04:09:49,253 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\trigger1_analysis.sql
2025-09-03 04:09:49,253 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger trigger1_analysis.json ===
2025-09-03 04:09:49,253 - root - DEBUG - [common.py:105] - ✓ Created trigger1_analysis.sql
2025-09-03 04:09:49,253 - root - DEBUG - [common.py:105] - === Processing file 4/10: trigger2_analysis.json ===
2025-09-03 04:09:49,254 - root - DEBUG - [common.py:105] - Source path: files/format_json\trigger2_analysis.json
2025-09-03 04:09:49,254 - root - DEBUG - [common.py:105] - Output path: files/format_sql\trigger2_analysis.sql
2025-09-03 04:09:49,254 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger trigger2_analysis.json ===
2025-09-03 04:09:49,254 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\trigger2_analysis.json
2025-09-03 04:09:49,254 - root - DEBUG - [main.py:364] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:49,254 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 04:09:49,254 - root - DEBUG - [common.py:105] - JSON contains 63 total statements
2025-09-03 04:09:49,255 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 04:09:49,255 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 04:09:49,255 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,269 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 04:09:49,269 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,280 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 04:09:49,280 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 04:09:49,280 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 04:09:49,280 - root - DEBUG - [common.py:105] - Analysis contains 6 variables, 0 constants, 7 exceptions
2025-09-03 04:09:49,280 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 04:09:49,280 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:349] - Rendering 6 variables
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:377] - Rendering 7 exceptions
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 04:09:49,280 - root - DEBUG - [common.py:105] - Generated 14 lines of declarations
2025-09-03 04:09:49,280 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 04:09:49,280 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 5 statements in main block
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 5
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT MANUAL_SHORT_DESC INTO V_MANUAL_SHORT_DESC FROM GMD.THEMES WHERE THEME_NO = NVL(:NEW.THEME_NO, :OLD.THEME_NO);', 'statement_line_no': 21, 'statement_indent': 4}
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,280 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 27, 'then_line_no': 27, 'if_indent': 4, 'end_if_line_no': 58, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 33, 'statement_indent': 8}, {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 41, 'statement_indent': 8}, {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':OLD.THEME_NO', 'P_MOLECULE_ID': ':OLD.MOLECULE_ID', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 33, 'statement_indent': 8}
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :OLD.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 41, 'statement_indent': 8}
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':OLD.THEME_NO', 'P_MOLECULE_ID': ':OLD.MOLECULE_ID', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :OLD.THEME_NO, P_MOLECULE_ID => :OLD.MOLECULE_ID, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 60, 'then_line_no': 60, 'if_indent': 4, 'end_if_line_no': 401, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 61, 'statement_indent': 8}, {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 68, 'if_indent': 8, 'end_if_line_no': 87, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MOLEC_ID_MISSING;', 'statement_line_no': 69, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 89, 'then_line_no': 89, 'if_indent': 8, 'end_if_line_no': 93, 'then_statements': [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD_INV_MAP;', 'statement_line_no': 91, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) ", 'type': 'if_else', 'if_line_no': 98, 'then_line_no': 98, 'if_indent': 8, 'end_if_line_no': 122, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';", 'statement_line_no': 99, 'statement_indent': 12}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MAP_EXISTS;', 'statement_line_no': 108, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';", 'statement_line_no': 111, 'statement_indent': 12}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'type': 'assignment', 'variable_name': 'INVALID_MAPPING_EXISTS', 'assignment_operator': ':=', 'expression': 'TRUE;', 'assignment_line_no': 120, 'assignment_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 124, 'then_line_no': 124, 'if_indent': 8, 'end_if_line_no': 201, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 158, 'statement_indent': 20}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_INV_MAP;', 'statement_line_no': 199, 'statement_indent': 20}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 202, 'if_indent': 8, 'end_if_line_no': 393, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 302, 'statement_indent': 16}, {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 310, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;", 'statement_line_no': 355, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':NEW.THEME_NO', 'P_MOLECULE_ID': '0', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MAPPINGS FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 61, 'statement_indent': 8}
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MOLECULE_ID IS NULL) ', 'type': 'if_else', 'if_line_no': 68, 'then_line_no': 68, 'if_indent': 8, 'end_if_line_no': 87, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MOLEC_ID_MISSING;', 'statement_line_no': 69, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MOLEC_ID_MISSING;', 'statement_line_no': 69, 'statement_indent': 12}
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 89, 'then_line_no': 89, 'if_indent': 8, 'end_if_line_no': 93, 'then_statements': [{'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD_INV_MAP;', 'statement_line_no': 91, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MOLECULE_SEQ_NO > V_COUNT_T_MAPPINGS) ', 'type': 'if_else', 'if_line_no': 90, 'then_line_no': 90, 'if_indent': 12, 'end_if_line_no': 92, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD_INV_MAP;', 'statement_line_no': 91, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,281 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD_INV_MAP;', 'statement_line_no': 91, 'statement_indent': 16}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.MOLECULE_ID <> NVL (:OLD.MOLECULE_ID, '-1')) ", 'type': 'if_else', 'if_line_no': 98, 'then_line_no': 98, 'if_indent': 8, 'end_if_line_no': 122, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';", 'statement_line_no': 99, 'statement_indent': 12}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MAP_EXISTS;', 'statement_line_no': 108, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';", 'statement_line_no': 111, 'statement_indent': 12}, {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'type': 'assignment', 'variable_name': 'INVALID_MAPPING_EXISTS', 'assignment_operator': ':=', 'expression': 'TRUE;', 'assignment_line_no': 120, 'assignment_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'Y';", 'statement_line_no': 99, 'statement_indent': 12}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 107, 'then_line_no': 107, 'if_indent': 12, 'end_if_line_no': 109, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MAP_EXISTS;', 'statement_line_no': 108, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_MAP_EXISTS;', 'statement_line_no': 108, 'statement_indent': 16}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_COUNT_T_MOL_MAP FROM V_THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID AND TMM.VALID_IND = 'N';", 'statement_line_no': 111, 'statement_indent': 12}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (V_COUNT_T_MOL_MAP > 0) ', 'type': 'if_else', 'if_line_no': 119, 'then_line_no': 119, 'if_indent': 12, 'end_if_line_no': 121, 'then_statements': [{'type': 'assignment', 'variable_name': 'INVALID_MAPPING_EXISTS', 'assignment_operator': ':=', 'expression': 'TRUE;', 'assignment_line_no': 120, 'assignment_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'INVALID_MAPPING_EXISTS', 'assignment_operator': ':=', 'expression': 'TRUE;', 'assignment_line_no': 120, 'assignment_indent': 16}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 124, 'then_line_no': 124, 'if_indent': 8, 'end_if_line_no': 201, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 158, 'statement_indent': 20}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_INV_MAP;', 'statement_line_no': 199, 'statement_indent': 20}]}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': '', 'type': 'case_when', 'case_line_no': 125, 'case_indent': 12, 'end_case_line_no': 200, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 126, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO = V_COUNT_T_MAPPINGS + 1', 'then_line_no': 126, 'then_statements': [{'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}, {'type': 'when_statement', 'when_line_no': 156, 'when_indent': 16, 'condition': ':NEW.MOLECULE_SEQ_NO < V_COUNT_T_MAPPINGS + 1', 'then_line_no': 156, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 158, 'statement_indent': 20}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_INV_MAP;', 'statement_line_no': 199, 'statement_indent': 20}]}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: case_when
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 127, 'then_line_no': 127, 'if_indent': 20, 'end_if_line_no': 152, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,282 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 130, 'statement_indent': 24}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO + 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO >= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 158, 'statement_indent': 20}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 167, 'then_line_no': 167, 'if_indent': 20, 'end_if_line_no': 192, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 170, 'statement_indent': 24}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_INV_MAP;', 'statement_line_no': 199, 'statement_indent': 20}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 202, 'then_line_no': 202, 'if_indent': 8, 'end_if_line_no': 393, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 302, 'statement_indent': 16}, {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 310, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;", 'statement_line_no': 355, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MOLECULE_ID IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 203, 'then_line_no': 203, 'if_indent': 12, 'end_if_line_no': 289, 'then_statements': [{'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO AND :NEW.MOLECULE_MAP_CHAR <> :OLD.MOLECULE_MAP_CHAR) ', 'type': 'if_else', 'if_line_no': 204, 'then_line_no': 204, 'if_indent': 16, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_MAP_CHAR = :NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;', 'statement_line_no': 205, 'statement_indent': 20}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MOLECULE_ID = :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 213, 'then_line_no': 213, 'if_indent': 16, 'end_if_line_no': 285, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}, {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 222, 'statement_indent': 20}
2025-09-03 04:09:49,283 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:OLD.MOLECULE_SEQ_NO < :NEW.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 228, 'then_line_no': 228, 'if_indent': 20, 'end_if_line_no': 250, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y' AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO;", 'statement_line_no': 231, 'statement_indent': 24}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,284 - root - DEBUG - [common.py:105] - Deep nesting detected (level 6): 'UPDATE THEME_MOLECULE_MAP TMM ...'
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 254, 'then_line_no': 254, 'if_indent': 20, 'end_if_line_no': 280, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =: NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 257, 'statement_indent': 24}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,284 - root - DEBUG - [common.py:105] - Deep nesting detected (level 6): 'UPDATE THEME_MOLECULE_MAP TMM ...'
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID AND :NEW.MOLECULE_SEQ_NO <> :OLD.MOLECULE_SEQ_NO) ', 'type': 'if_else', 'if_line_no': 291, 'then_line_no': 291, 'if_indent': 12, 'end_if_line_no': 351, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 302, 'statement_indent': 16}, {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 310, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID;", 'statement_line_no': 302, 'statement_indent': 16}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.MOLECULE_SEQ_NO = TMM.MOLECULE_SEQ_NO - 1 WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_SEQ_NO > :OLD.MOLECULE_SEQ_NO AND TMM.MOLECULE_SEQ_NO <= :NEW.MOLECULE_SEQ_NO AND TMM.VALID_IND = 'Y';", 'statement_line_no': 310, 'statement_indent': 16}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 320, 'then_line_no': 320, 'if_indent': 16, 'end_if_line_no': 346, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 323, 'statement_indent': 20}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.MOLECULE_ID <> :OLD.MOLECULE_ID) AND :NEW.MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO ', 'type': 'if_else', 'if_line_no': 352, 'then_line_no': 352, 'if_indent': 12, 'end_if_line_no': 392, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;", 'statement_line_no': 355, 'statement_indent': 16}, {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'N' WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :OLD.MOLECULE_ID AND MOLECULE_SEQ_NO = :OLD.MOLECULE_SEQ_NO;", 'statement_line_no': 355, 'statement_indent': 16}
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,284 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INVALID_MAPPING_EXISTS) ', 'type': 'if_else', 'if_line_no': 363, 'then_line_no': 363, 'if_indent': 16, 'end_if_line_no': 387, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE THEME_MOLECULE_MAP TMM SET TMM.VALID_IND = 'Y', TMM.MOLECULE_SEQ_NO = :NEW.MOLECULE_SEQ_NO, TMM.MOLECULE_MAP_CHAR =:NEW.MOLECULE_MAP_CHAR WHERE TMM.THEME_NO = :NEW.THEME_NO AND TMM.MOLECULE_ID = :NEW.MOLECULE_ID;", 'statement_line_no': 366, 'statement_indent': 20}
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_THEMES.REFRESH_THEME_DESC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_THEME_NO': ':NEW.THEME_NO', 'P_MOLECULE_ID': '0', 'P_DATE': 'SYSDATE', 'P_MANUAL_SHORT_DESC': 'V_MANUAL_SHORT_DESC'}, 'raw_text': 'P_THEME_NO => :NEW.THEME_NO, P_MOLECULE_ID => 0, P_DATE => SYSDATE, P_MANUAL_SHORT_DESC => V_MANUAL_SHORT_DESC'}}
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO V_SEQ_NO_DUPLICATE_CNT FROM ( SELECT MOLECULE_SEQ_NO FROM THEME_MOLECULE_MAP TMM WHERE TMM.THEME_NO = :NEW.THEME_NO AND VALID_IND = 'Y' GROUP BY MOLECULE_SEQ_NO HAVING COUNT (*) > 1 );", 'statement_line_no': 403, 'statement_indent': 4}
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (V_SEQ_NO_DUPLICATE_CNT > 0) ', 'type': 'if_else', 'if_line_no': 419, 'then_line_no': 419, 'if_indent': 4, 'end_if_line_no': 421, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INV_MOL_SEQUENCE;', 'statement_line_no': 420, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INV_MOL_SEQUENCE;', 'statement_line_no': 420, 'statement_indent': 8}
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,285 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,285 - root - DEBUG - [common.py:105] - Generated 78 lines in main execution block
2025-09-03 04:09:49,285 - root - DEBUG - [common.py:105] - Main block rendering took 0.005s
2025-09-03 04:09:49,285 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 04:09:49,285 - root - DEBUG - [common.py:105] - Final SQL contains 92 lines, 5714 characters
2025-09-03 04:09:49,285 - root - DEBUG - [common.py:105] - Oracle SQL generation: 92 lines generated in 0.005s
2025-09-03 04:09:49,285 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 04:09:49,285 - root - DEBUG - [common.py:105] - Rendered SQL length: 5714 characters
2025-09-03 04:09:49,285 - root - DEBUG - [common.py:105] - SQL rendering took: 0.005 seconds
2025-09-03 04:09:49,285 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\trigger2_analysis.sql
2025-09-03 04:09:49,287 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\trigger2_analysis.sql
2025-09-03 04:09:49,287 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger trigger2_analysis.json ===
2025-09-03 04:09:49,287 - root - DEBUG - [common.py:105] - ✓ Created trigger2_analysis.sql
2025-09-03 04:09:49,288 - root - DEBUG - [common.py:105] - === Processing file 5/10: trigger3_analysis.json ===
2025-09-03 04:09:49,288 - root - DEBUG - [common.py:105] - Source path: files/format_json\trigger3_analysis.json
2025-09-03 04:09:49,288 - root - DEBUG - [common.py:105] - Output path: files/format_sql\trigger3_analysis.sql
2025-09-03 04:09:49,288 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger trigger3_analysis.json ===
2025-09-03 04:09:49,288 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\trigger3_analysis.json
2025-09-03 04:09:49,289 - root - DEBUG - [main.py:364] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:49,289 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 04:09:49,289 - root - DEBUG - [common.py:105] - JSON contains 38 total statements
2025-09-03 04:09:49,289 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 04:09:49,289 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 04:09:49,289 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,300 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 04:09:49,300 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,310 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 04:09:49,310 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 04:09:49,310 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 04:09:49,310 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 04:09:49,311 - root - DEBUG - [common.py:105] - Analysis contains 6 variables, 0 constants, 6 exceptions
2025-09-03 04:09:49,311 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 04:09:49,311 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:349] - Rendering 6 variables
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:377] - Rendering 6 exceptions
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 04:09:49,311 - root - DEBUG - [common.py:105] - Generated 13 lines of declarations
2025-09-03 04:09:49,311 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 04:09:49,311 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 6 statements in main block
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 6
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'begin_end', 'begin_line_no': 15, 'begin_indent': 4, 'begin_end_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 16, 'assignment_indent': 8}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 18, 'when_indent': 8, 'then_line_no': 18, 'exception_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 19, 'assignment_indent': 12}]}], 'exception_line_no': 17, 'end_line_no': 20}
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: begin_end
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 16, 'assignment_indent': 8}
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 22, 'assignment_indent': 4}
2025-09-03 04:09:49,311 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD) AND ADDRESS_TYPE_CD = NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD);', 'statement_line_no': 23, 'statement_indent': 4}
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 34, 'then_statements': [{'condition': ' (CNTR > 0) ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 8, 'end_if_line_no': 33, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 32, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (CNTR > 0) ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 8, 'end_if_line_no': 33, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 32, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 32, 'statement_indent': 12}
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'statement_line_no': 37, 'statement_indent': 8}, {'condition': " (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) ", 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 8, 'end_if_line_no': 45, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_LEGAL_ADDR;', 'statement_line_no': 44, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CTRY_CHG;', 'statement_line_no': 49, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 8, 'end_if_line_no': 242, 'then_statements': [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COMPANY_TYPE_CD INTO V_COMPANY_TYPE_CD FROM CFG_V_COMPANIES WHERE COMPANY_CD = NVL ( :NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'statement_line_no': 37, 'statement_indent': 8}
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (V_COMPANY_TYPE_CD NOT IN ('L', 'A') AND NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L')) ", 'type': 'if_else', 'if_line_no': 43, 'then_line_no': 43, 'if_indent': 8, 'end_if_line_no': 45, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_LEGAL_ADDR;', 'statement_line_no': 44, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS_LEGAL_ADDR;', 'statement_line_no': 44, 'statement_indent': 12}
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CTRY_CHG;', 'statement_line_no': 49, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,312 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (NVL(:OLD.VALID_FROM, TRUNC(SYSDATE)) = NVL(:NEW.VALID_FROM, TRUNC(SYSDATE)) AND :OLD.COUNTRY_ID <> :NEW.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 12, 'end_if_line_no': 50, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CTRY_CHG;', 'statement_line_no': 49, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CTRY_CHG;', 'statement_line_no': 49, 'statement_indent': 16}
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 52, 'then_line_no': 52, 'if_indent': 12, 'end_if_line_no': 195, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) NOT IN ( 'P', 'L')) ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 8, 'end_if_line_no': 242, 'then_statements': [{'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (CNTR = 0) ', 'type': 'if_else', 'if_line_no': 199, 'then_line_no': 199, 'if_indent': 12, 'end_if_line_no': 241, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': ':NEW.COMPANY_CD', 'P_ADDRESS_TYPE_CD': ':NEW.ADDRESS_TYPE_CD', 'P_ADDITIONAL_NAME': ':NEW.ADDITIONAL_NAME', 'P_STREET': ':NEW.STREET', 'P_HOUSE_NO': ':NEW.HOUSE_NO', 'P_BUILDING': ':NEW.BUILDING', 'P_ADDITIONAL_INFO': ':NEW.ADDITIONAL_INFO', 'P_ZIP_CODE': ':NEW.ZIP_CODE', 'P_CITY': ':NEW.CITY', 'P_DISTRICT_NAME': ':NEW.DISTRICT_NAME', 'P_COUNTRY_ID': ':NEW.COUNTRY_ID', 'P_LATITUDE': ':NEW.LATITUDE', 'P_LONGITUDE': ':NEW.LONGITUDE', 'P_ADDRESS_REMARK': ':NEW.ADDRESS_REMARK', 'P_VALID_FROM': ':NEW.VALID_FROM', 'P_ACTION_TYPE': "'INSERT'"}, 'raw_text': "P_COMPANY_CD => :NEW.COMPANY_CD, P_ADDRESS_TYPE_CD => :NEW.ADDRESS_TYPE_CD, P_ADDITIONAL_NAME => :NEW.ADDITIONAL_NAME, P_STREET => :NEW.STREET, P_HOUSE_NO => :NEW.HOUSE_NO, P_BUILDING => :NEW.BUILDING, P_ADDITIONAL_INFO => :NEW.ADDITIONAL_INFO, P_ZIP_CODE => :NEW.ZIP_CODE, P_CITY=> :NEW.CITY, P_DISTRICT_NAME => :NEW.DISTRICT_NAME, P_COUNTRY_ID => :NEW.COUNTRY_ID, P_LATITUDE => :NEW.LATITUDE, P_LONGITUDE => :NEW.LONGITUDE, P_ADDRESS_REMARK => :NEW.ADDRESS_REMARK, P_VALID_FROM => :NEW.VALID_FROM, P_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (DELETING) ', 'type': 'if_else', 'if_line_no': 245, 'then_line_no': 245, 'if_indent': 4, 'end_if_line_no': 251, 'then_statements': [{'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) ", 'type': 'if_else', 'if_line_no': 246, 'then_line_no': 246, 'if_indent': 8, 'end_if_line_no': 248, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'statement_line_no': 247, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': 'NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'P_ADDRESS_TYPE_CD': 'NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD)', 'P_ACTION_TYPE': "'DELETE'"}, 'raw_text': "P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD) IN ('L', 'P')) ", 'type': 'if_else', 'if_line_no': 246, 'then_line_no': 246, 'if_indent': 8, 'end_if_line_no': 248, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'statement_line_no': 247, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,313 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,314 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NOT_ALLOWED_TO_INVALIDATE;', 'statement_line_no': 247, 'statement_indent': 12}
2025-09-03 04:09:49,314 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,314 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDM_UTIL_ADDRESSES.MODIFY_COMPANY_ADDRESS', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_COMPANY_CD': 'NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD)', 'P_ADDRESS_TYPE_CD': 'NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD)', 'P_ACTION_TYPE': "'DELETE'"}, 'raw_text': "P_COMPANY_CD => NVL(:NEW.COMPANY_CD, :OLD.COMPANY_CD), P_ADDRESS_TYPE_CD => NVL(:NEW.ADDRESS_TYPE_CD, :OLD.ADDRESS_TYPE_CD), P_ACTION_TYPE => 'DELETE'"}}
2025-09-03 04:09:49,314 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,314 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,314 - root - DEBUG - [common.py:105] - Generated 35 lines in main execution block
2025-09-03 04:09:49,314 - root - DEBUG - [common.py:105] - Main block rendering took 0.003s
2025-09-03 04:09:49,314 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 04:09:49,314 - root - DEBUG - [common.py:105] - Final SQL contains 48 lines, 2938 characters
2025-09-03 04:09:49,314 - root - DEBUG - [common.py:105] - Oracle SQL generation: 48 lines generated in 0.003s
2025-09-03 04:09:49,314 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 04:09:49,314 - root - DEBUG - [common.py:105] - Rendered SQL length: 2938 characters
2025-09-03 04:09:49,314 - root - DEBUG - [common.py:105] - SQL rendering took: 0.003 seconds
2025-09-03 04:09:49,314 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\trigger3_analysis.sql
2025-09-03 04:09:49,316 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\trigger3_analysis.sql
2025-09-03 04:09:49,317 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger trigger3_analysis.json ===
2025-09-03 04:09:49,317 - root - DEBUG - [common.py:105] - ✓ Created trigger3_analysis.sql
2025-09-03 04:09:49,317 - root - DEBUG - [common.py:105] - === Processing file 6/10: trigger4_analysis.json ===
2025-09-03 04:09:49,317 - root - DEBUG - [common.py:105] - Source path: files/format_json\trigger4_analysis.json
2025-09-03 04:09:49,317 - root - DEBUG - [common.py:105] - Output path: files/format_sql\trigger4_analysis.sql
2025-09-03 04:09:49,317 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger trigger4_analysis.json ===
2025-09-03 04:09:49,317 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\trigger4_analysis.json
2025-09-03 04:09:49,318 - root - DEBUG - [main.py:364] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:49,318 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 04:09:49,318 - root - DEBUG - [common.py:105] - JSON contains 12 total statements
2025-09-03 04:09:49,318 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 04:09:49,318 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 04:09:49,318 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,331 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 04:09:49,331 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,340 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 04:09:49,340 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 04:09:49,340 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 04:09:49,340 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 04:09:49,340 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 04:09:49,340 - root - DEBUG - [common.py:105] - Analysis contains 6 variables, 0 constants, 0 exceptions
2025-09-03 04:09:49,341 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 04:09:49,341 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:349] - Rendering 6 variables
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 04:09:49,341 - root - DEBUG - [common.py:105] - Generated 7 lines of declarations
2025-09-03 04:09:49,341 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 04:09:49,341 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 6 statements in main block
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 6
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " TG_OP = 'INSERT' ", 'type': 'if_else', 'if_line_no': 10, 'then_line_no': 10, 'if_indent': 4, 'end_if_line_no': 16, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'I';", 'assignment_line_no': 11, 'assignment_indent': 8}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 12, 'elif_indent': 4, 'condition': "TG_OP = 'UPDATE'", 'then_line_no': 12, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'U';", 'assignment_line_no': 13, 'assignment_indent': 8}]}, {'type': 'elif_statement', 'elif_line_no': 14, 'elif_indent': 4, 'condition': "TG_OP = 'DELETE'", 'then_line_no': 14, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'D';", 'assignment_line_no': 15, 'assignment_indent': 8}]}], 'else_statements': []}
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'I';", 'assignment_line_no': 11, 'assignment_indent': 8}
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'U';", 'assignment_line_no': 13, 'assignment_indent': 8}
2025-09-03 04:09:49,341 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_ACTION', 'assignment_operator': ':=', 'expression': "'D';", 'assignment_line_no': 15, 'assignment_indent': 8}
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'COL_NAMES', 'assignment_operator': ':=', 'expression': "ARRAY[ 'exploratory_theme_no', 'proposal_id', 'proposal_name', 'proposal_status_cd', 'evolved_theme_no', 'global_change_id', 'reason_for_change', 'ins_date', 'ins_user', 'upd_date', 'upd_user', 'molecule_type_id', 'pharmacological_type_id', 'firewall_id', 'mrhub_load_job_id', 'mrhub_load_date', 'mrhub_source_system_id' ];", 'assignment_line_no': 18, 'assignment_indent': 4}
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'COL_NEW_VALUES', 'assignment_operator': ':=', 'expression': "ARRAY[ CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN TO_CHAR(NEW.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('INSERT', 'UPDATE') THEN NEW.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'assignment_line_no': 19, 'assignment_indent': 4}
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'COL_OLD_VALUES', 'assignment_operator': ':=', 'expression': "ARRAY[ CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EXPLORATORY_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_NAME::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PROPOSAL_STATUS_CD::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.EVOLVED_THEME_NO::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.GLOBAL_CHANGE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.REASON_FOR_CHANGE::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.INS_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.INS_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.UPD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.UPD_USER::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MOLECULE_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.PHARMACOLOGICAL_TYPE_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.FIREWALL_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_LOAD_JOB_ID::TEXT ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN TO_CHAR(OLD.MRHUB_LOAD_DATE, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END, CASE WHEN TG_OP IN ('UPDATE', 'DELETE') THEN OLD.MRHUB_SOURCE_SYSTEM_ID::TEXT ELSE NULL END ];", 'assignment_line_no': 20, 'assignment_indent': 4}
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'PERFORM MDMTOOL."mdmt_util_history$write_history"', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_ACTION', 'V_TABLE_NAME', 'V_SCHEMA_NAME', 'COL_NAMES', 'COL_NEW_VALUES', 'COL_OLD_VALUES'], 'named_params': {}, 'raw_text': 'V_ACTION, V_TABLE_NAME, V_SCHEMA_NAME, COL_NAMES, COL_NEW_VALUES, COL_OLD_VALUES'}}
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'return_statement', 'sql_statement': 'RETURN NULL;', 'statement_line_no': 22, 'statement_indent': 4}
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: return_statement
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:533] - {'type': 'return_statement', 'sql_statement': 'RETURN NULL;', 'statement_line_no': 22, 'statement_indent': 4}
2025-09-03 04:09:49,342 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,342 - root - DEBUG - [common.py:105] - Generated 14 lines in main execution block
2025-09-03 04:09:49,342 - root - DEBUG - [common.py:105] - Main block rendering took 0.001s
2025-09-03 04:09:49,342 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 04:09:49,342 - root - DEBUG - [common.py:105] - Final SQL contains 21 lines, 3978 characters
2025-09-03 04:09:49,342 - root - DEBUG - [common.py:105] - Oracle SQL generation: 21 lines generated in 0.002s
2025-09-03 04:09:49,342 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 04:09:49,342 - root - DEBUG - [common.py:105] - Rendered SQL length: 3978 characters
2025-09-03 04:09:49,343 - root - DEBUG - [common.py:105] - SQL rendering took: 0.002 seconds
2025-09-03 04:09:49,343 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\trigger4_analysis.sql
2025-09-03 04:09:49,345 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\trigger4_analysis.sql
2025-09-03 04:09:49,345 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger trigger4_analysis.json ===
2025-09-03 04:09:49,345 - root - DEBUG - [common.py:105] - ✓ Created trigger4_analysis.sql
2025-09-03 04:09:49,345 - root - DEBUG - [common.py:105] - === Processing file 7/10: trigger5_analysis.json ===
2025-09-03 04:09:49,346 - root - DEBUG - [common.py:105] - Source path: files/format_json\trigger5_analysis.json
2025-09-03 04:09:49,346 - root - DEBUG - [common.py:105] - Output path: files/format_sql\trigger5_analysis.sql
2025-09-03 04:09:49,346 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger trigger5_analysis.json ===
2025-09-03 04:09:49,346 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\trigger5_analysis.json
2025-09-03 04:09:49,346 - root - DEBUG - [main.py:364] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:49,346 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 04:09:49,347 - root - DEBUG - [common.py:105] - JSON contains 13 total statements
2025-09-03 04:09:49,347 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 04:09:49,347 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 04:09:49,347 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,359 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 04:09:49,360 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,369 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 04:09:49,369 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 04:09:49,369 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 04:09:49,369 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 04:09:49,369 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 04:09:49,369 - root - DEBUG - [common.py:105] - Analysis contains 2 variables, 0 constants, 0 exceptions
2025-09-03 04:09:49,370 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 04:09:49,370 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:349] - Rendering 2 variables
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 04:09:49,370 - root - DEBUG - [common.py:105] - Generated 3 lines of declarations
2025-09-03 04:09:49,370 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 04:09:49,370 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 4 statements in main block
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 4
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'COALESCE(NEW.UPD_USER, OLD.UPD_USER);', 'assignment_line_no': 5, 'assignment_indent': 4}
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_TRG_UPD_DATE_STR', 'assignment_operator': ':=', 'expression': "TO_CHAR(COALESCE(NEW.UPD_DATE, OLD.UPD_DATE), 'YYYY-MM-DD');", 'assignment_line_no': 6, 'assignment_indent': 4}
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " TG_OP = 'UPDATE' ", 'type': 'if_else', 'if_line_no': 7, 'then_line_no': 7, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'condition': " COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') ", 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 8, 'end_if_line_no': 32, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 11, 'statement_indent': 20}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 17, 'statement_indent': 20}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 23, 'statement_indent': 20}]}, {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " COALESCE (OLD.PROD_FAM_NAME_STATUS_CD, 'X') <> COALESCE (NEW.PROD_FAM_NAME_STATUS_CD, 'X') OR OLD.PROD_FAM_NAME <> NEW.PROD_FAM_NAME OR COALESCE(OLD.ACT_SUBSTANCE_NAME, 'X') <> COALESCE(NEW.ACT_SUBSTANCE_NAME, 'X') ", 'type': 'if_else', 'if_line_no': 8, 'then_line_no': 8, 'if_indent': 8, 'end_if_line_no': 32, 'then_statements': [{'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 11, 'statement_indent': 20}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 17, 'statement_indent': 20}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 23, 'statement_indent': 20}]}, {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': '', 'type': 'case_when', 'case_line_no': 9, 'case_indent': 12, 'end_case_line_no': 24, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 10, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('T', 'R')", 'then_line_no': 10, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 11, 'statement_indent': 20}]}, {'type': 'when_statement', 'when_line_no': 16, 'when_indent': 16, 'condition': "NEW.PROD_FAM_NAME_STATUS_CD IN ('G', 'I')", 'then_line_no': 16, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 17, 'statement_indent': 20}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 23, 'statement_indent': 20}]}
2025-09-03 04:09:49,370 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: case_when
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.PROD_FAM_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 11, 'statement_indent': 20}
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE GMD.THEME_MOLECULES SET MOLECULE_DESC = NEW.ACT_SUBSTANCE_NAME WHERE PRODUCT_FAMILY_CD = NEW.PRODUCT_FAMILY_CD;', 'statement_line_no': 17, 'statement_indent': 20}
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 23, 'statement_indent': 20}
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: null_statement
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_PRODUCT_FAMILY_CD': 'NEW.PRODUCT_FAMILY_CD::TEXT', 'P_REGISTRAR': 'V_USERID::TEXT', 'P_TRG_TABLE': "'PRODUCT_FAMILIES'::TEXT", 'P_TRG_UPD_DATE': 'V_TRG_UPD_DATE_STR::TEXT'}, 'raw_text': "P_PRODUCT_FAMILY_CD => NEW.PRODUCT_FAMILY_CD::TEXT, P_REGISTRAR => V_USERID::TEXT, P_TRG_TABLE => 'PRODUCT_FAMILIES'::TEXT, P_TRG_UPD_DATE => V_TRG_UPD_DATE_STR::TEXT"}}
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'return_statement', 'sql_statement': 'RETURN NULL;', 'statement_line_no': 35, 'statement_indent': 4}
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: return_statement
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:533] - {'type': 'return_statement', 'sql_statement': 'RETURN NULL;', 'statement_line_no': 35, 'statement_indent': 4}
2025-09-03 04:09:49,371 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,371 - root - DEBUG - [common.py:105] - Generated 18 lines in main execution block
2025-09-03 04:09:49,371 - root - DEBUG - [common.py:105] - Main block rendering took 0.001s
2025-09-03 04:09:49,371 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 04:09:49,371 - root - DEBUG - [common.py:105] - Final SQL contains 21 lines, 1080 characters
2025-09-03 04:09:49,371 - root - DEBUG - [common.py:105] - Oracle SQL generation: 21 lines generated in 0.002s
2025-09-03 04:09:49,371 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 04:09:49,372 - root - DEBUG - [common.py:105] - Rendered SQL length: 1080 characters
2025-09-03 04:09:49,372 - root - DEBUG - [common.py:105] - SQL rendering took: 0.002 seconds
2025-09-03 04:09:49,372 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\trigger5_analysis.sql
2025-09-03 04:09:49,422 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\trigger5_analysis.sql
2025-09-03 04:09:49,423 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger trigger5_analysis.json ===
2025-09-03 04:09:49,423 - root - DEBUG - [common.py:105] - ✓ Created trigger5_analysis.sql
2025-09-03 04:09:49,423 - root - DEBUG - [common.py:105] - === Processing file 8/10: trigger6_analysis.json ===
2025-09-03 04:09:49,423 - root - DEBUG - [common.py:105] - Source path: files/format_json\trigger6_analysis.json
2025-09-03 04:09:49,423 - root - DEBUG - [common.py:105] - Output path: files/format_sql\trigger6_analysis.sql
2025-09-03 04:09:49,423 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger trigger6_analysis.json ===
2025-09-03 04:09:49,423 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\trigger6_analysis.json
2025-09-03 04:09:49,424 - root - DEBUG - [main.py:364] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:49,424 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 04:09:49,424 - root - DEBUG - [common.py:105] - JSON contains 27 total statements
2025-09-03 04:09:49,424 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 04:09:49,424 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 04:09:49,424 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,435 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 04:09:49,435 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,445 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 04:09:49,445 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 04:09:49,445 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 04:09:49,445 - root - DEBUG - [common.py:105] - Analysis contains 6 variables, 0 constants, 4 exceptions
2025-09-03 04:09:49,445 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 04:09:49,445 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:349] - Rendering 6 variables
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:377] - Rendering 4 exceptions
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 04:09:49,445 - root - DEBUG - [common.py:105] - Generated 11 lines of declarations
2025-09-03 04:09:49,445 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 04:09:49,445 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 6 statements in main block
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 6
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_EVOLVED_THEME_NO', 'assignment_operator': ':=', 'expression': ':NEW.EVOLVED_THEME_NO;', 'assignment_line_no': 13, 'assignment_indent': 4}
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED AND(:NEW.EVOLVED_THEME_NO IS NULL OR :NEW.EVOLVED_THEME_NO = :OLD.EVOLVED_THEME_NO) AND :NEW.MOLECULE_TYPE_ID = :OLD.MOLECULE_TYPE_ID AND :NEW.PHARMACOLOGICAL_TYPE_ID = :OLD.PHARMACOLOGICAL_TYPE_ID AND :NEW.PROPOSAL_NAME = :OLD.PROPOSAL_NAME) ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 4, 'end_if_line_no': 20, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE V_NO_UPDATE_TO_EVOLVED;', 'statement_line_no': 19, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,445 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE V_NO_UPDATE_TO_EVOLVED;', 'statement_line_no': 19, 'statement_indent': 8}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_TERMINATED AND :OLD.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_EVOLVED) ', 'type': 'if_else', 'if_line_no': 24, 'then_line_no': 24, 'if_indent': 4, 'end_if_line_no': 26, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'statement_line_no': 25, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE V_NO_UPDATE_EVOLVED_TO_TERMINATED;', 'statement_line_no': 25, 'statement_indent': 8}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.PROPOSAL_STATUS_CD = C_PROPOSAL_STATUS_ACTIVE AND :OLD.EVOLVED_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 30, 'then_line_no': 30, 'if_indent': 4, 'end_if_line_no': 32, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_EVOLVED_THEME_NO', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 31, 'assignment_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_EVOLVED_THEME_NO', 'assignment_operator': ':=', 'expression': 'NULL;', 'assignment_line_no': 31, 'assignment_indent': 8}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (:NEW.EXPLORATORY_THEME_NO IS NULL AND :OLD.EXPLORATORY_THEME_NO IS NOT NULL) ', 'type': 'if_else', 'if_line_no': 36, 'then_line_no': 36, 'if_indent': 4, 'end_if_line_no': 38, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'statement_line_no': 37, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE V_EXPLORATORY_THEMENO_NOT_NULL;', 'statement_line_no': 37, 'statement_indent': 8}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 40, 'then_line_no': 40, 'if_indent': 4, 'end_if_line_no': 79, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_PROPOSAL_ID', 'assignment_operator': ':=', 'expression': 'PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'assignment_line_no': 41, 'assignment_indent': 8}, {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );', 'statement_line_no': 42, 'statement_indent': 8}, {'condition': ' :NEW.PARTNER_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 61, 'then_line_no': 61, 'if_indent': 8, 'end_if_line_no': 63, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 64, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 64, 'then_statements': [{'type': 'update_statement', 'sql_statement': 'UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO, PROPOSAL_NAME = :NEW.PROPOSAL_NAME, PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD, EVOLVED_THEME_NO = V_EVOLVED_THEME_NO, MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID = :NEW.FIREWALL_ID WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'statement_line_no': 65, 'statement_indent': 8}, {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}]}], 'else_statements': []}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_PROPOSAL_ID', 'assignment_operator': ':=', 'expression': 'PREDMD.SEQ_NMP_PROPOSAL_ID.NEXTVAL;', 'assignment_line_no': 41, 'assignment_indent': 8}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'insert_statement', 'sql_statement': 'INSERT INTO V_NEW_MEDICINE_PROPOSALS( PROPOSAL_ID, EXPLORATORY_THEME_NO, PROPOSAL_NAME, PROPOSAL_STATUS_CD, EVOLVED_THEME_NO, MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID ) VALUES ( V_PROPOSAL_ID, :NEW.EXPLORATORY_THEME_NO, :NEW.PROPOSAL_NAME, :NEW.PROPOSAL_STATUS_CD, :NEW.EVOLVED_THEME_NO, :NEW.MOLECULE_TYPE_ID, :NEW.PHARMACOLOGICAL_TYPE_ID, :NEW.FIREWALL_ID );', 'statement_line_no': 42, 'statement_indent': 8}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: insert_statement
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' :NEW.PARTNER_ID IS NOT NULL ', 'type': 'if_else', 'if_line_no': 61, 'then_line_no': 61, 'if_indent': 8, 'end_if_line_no': 63, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,446 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': ['V_PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': 'V_PROPOSAL_ID, :NEW.PARTNER_ID'}}
2025-09-03 04:09:49,447 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,447 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE V_NEW_MEDICINE_PROPOSALS SET EXPLORATORY_THEME_NO = :NEW.EXPLORATORY_THEME_NO, PROPOSAL_NAME = :NEW.PROPOSAL_NAME, PROPOSAL_STATUS_CD = :NEW.PROPOSAL_STATUS_CD, EVOLVED_THEME_NO = V_EVOLVED_THEME_NO, MOLECULE_TYPE_ID = :NEW.MOLECULE_TYPE_ID, PHARMACOLOGICAL_TYPE_ID = :NEW.PHARMACOLOGICAL_TYPE_ID, FIREWALL_ID = :NEW.FIREWALL_ID WHERE PROPOSAL_ID = :NEW.PROPOSAL_ID;', 'statement_line_no': 65, 'statement_indent': 8}
2025-09-03 04:09:49,447 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,447 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " NVL(:OLD.PARTNER_ID, 'NULL') <> NVL(:NEW.PARTNER_ID, 'NULL') ", 'type': 'if_else', 'if_line_no': 76, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,447 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,447 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_LOAD_NPM_PARTNER_DATA.LOAD_NPM_PARTNER_DATA', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.PROPOSAL_ID', ':NEW.PARTNER_ID'], 'named_params': {}, 'raw_text': ':NEW.PROPOSAL_ID, :NEW.PARTNER_ID'}}
2025-09-03 04:09:49,447 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,447 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,447 - root - DEBUG - [common.py:105] - Generated 27 lines in main execution block
2025-09-03 04:09:49,447 - root - DEBUG - [common.py:105] - Main block rendering took 0.002s
2025-09-03 04:09:49,447 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 04:09:49,447 - root - DEBUG - [common.py:105] - Final SQL contains 38 lines, 2499 characters
2025-09-03 04:09:49,447 - root - DEBUG - [common.py:105] - Oracle SQL generation: 38 lines generated in 0.002s
2025-09-03 04:09:49,447 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 04:09:49,447 - root - DEBUG - [common.py:105] - Rendered SQL length: 2499 characters
2025-09-03 04:09:49,447 - root - DEBUG - [common.py:105] - SQL rendering took: 0.002 seconds
2025-09-03 04:09:49,447 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\trigger6_analysis.sql
2025-09-03 04:09:49,448 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\trigger6_analysis.sql
2025-09-03 04:09:49,448 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger trigger6_analysis.json ===
2025-09-03 04:09:49,448 - root - DEBUG - [common.py:105] - ✓ Created trigger6_analysis.sql
2025-09-03 04:09:49,448 - root - DEBUG - [common.py:105] - === Processing file 9/10: yyy_analysis.json ===
2025-09-03 04:09:49,448 - root - DEBUG - [common.py:105] - Source path: files/format_json\yyy_analysis.json
2025-09-03 04:09:49,449 - root - DEBUG - [common.py:105] - Output path: files/format_sql\yyy_analysis.sql
2025-09-03 04:09:49,449 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger yyy_analysis.json ===
2025-09-03 04:09:49,449 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\yyy_analysis.json
2025-09-03 04:09:49,449 - root - DEBUG - [main.py:364] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:49,450 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 04:09:49,450 - root - DEBUG - [common.py:105] - JSON contains 91 total statements
2025-09-03 04:09:49,450 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 04:09:49,450 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 04:09:49,450 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,461 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 04:09:49,461 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,469 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 04:09:49,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 04:09:49,469 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 04:09:49,469 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 04:09:49,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 04:09:49,469 - root - DEBUG - [common.py:105] - Analysis contains 9 variables, 1 constants, 11 exceptions
2025-09-03 04:09:49,469 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 04:09:49,469 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 04:09:49,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 04:09:49,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:349] - Rendering 9 variables
2025-09-03 04:09:49,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:365] - Rendering 1 constants
2025-09-03 04:09:49,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:377] - Rendering 11 exceptions
2025-09-03 04:09:49,469 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 04:09:49,469 - root - DEBUG - [common.py:105] - Generated 22 lines of declarations
2025-09-03 04:09:49,470 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 04:09:49,470 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 4 statements in main block
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 4
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'begin_end', 'begin_line_no': 24, 'begin_indent': 4, 'begin_end_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 25, 'assignment_indent': 8}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 27, 'when_indent': 8, 'then_line_no': 27, 'exception_statements': [{'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'USER;', 'assignment_line_no': 28, 'assignment_indent': 12}]}], 'exception_line_no': 26, 'end_line_no': 29}
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: begin_end
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_USERID', 'assignment_operator': ':=', 'expression': 'TXO_UTIL.GET_USERID;', 'assignment_line_no': 25, 'assignment_indent': 8}
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' UPDATING AND :OLD.COMPANY_CD != :NEW.COMPANY_CD ', 'type': 'if_else', 'if_line_no': 31, 'then_line_no': 31, 'if_indent': 4, 'end_if_line_no': 33, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 32, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD;', 'statement_line_no': 32, 'statement_indent': 8}
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' INSERTING ', 'type': 'if_else', 'if_line_no': 35, 'then_line_no': 35, 'if_indent': 4, 'end_if_line_no': 48, 'then_statements': [{'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 36, 'assignment_indent': 8}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD;', 'statement_line_no': 39, 'statement_indent': 8}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 45, 'then_line_no': 45, 'if_indent': 8, 'end_if_line_no': 47, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 46, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 36, 'assignment_indent': 8}
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,470 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_CD = :NEW.COMPANY_CD;', 'statement_line_no': 39, 'statement_indent': 8}
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 45, 'then_line_no': 45, 'if_indent': 8, 'end_if_line_no': 47, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 46, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 46, 'statement_indent': 12}
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' INSERTING OR UPDATING ', 'type': 'if_else', 'if_line_no': 50, 'then_line_no': 50, 'if_indent': 4, 'end_if_line_no': 344, 'then_statements': [{'condition': " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ", 'type': 'if_else', 'if_line_no': 53, 'then_line_no': 53, 'if_indent': 8, 'end_if_line_no': 57, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_LEGAL_COMPANY_CD', 'assignment_operator': ':=', 'expression': ':NEW.COMPANY_CD;', 'assignment_line_no': 54, 'assignment_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 61, 'assignment_indent': 8}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_TYPE_CD IN ( 'L') AND VALID_IND = 'Y' AND COMPANY_CD = V_LEGAL_COMPANY_CD;", 'statement_line_no': 62, 'statement_indent': 8}, {'condition': " CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L') OR (:NEW.COMPANY_TYPE_CD = 'D' AND :NEW.CBC_GBE_SCOPE = 'Y' AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 72, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_LEGAL_COMP;', 'statement_line_no': 77, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_COMPANY_TYPE_CD': ':NEW.COMPANY_TYPE_CD', 'I_MULTISEL_COMPANY_PURPOSE': ':NEW.MULTISEL_COMPANY_PURPOSE', 'I_LEGAL_COMPANY_CD': 'V_LEGAL_COMPANY_CD', 'I_OFFICIAL_NAME': ':NEW.OFFICIAL_NAME', 'I_SHORT_NAME': ':NEW.SHORT_NAME', 'I_DISCLOSURE_NAME': ':NEW.DISCLOSURE_NAME', 'I_FUNCTIONAL_CURRENCY_CD': ':NEW.FUNCTIONAL_CURRENCY_CD', 'I_STATUTORY_CURRENCY_CD': ':NEW.STATUTORY_CURRENCY_CD', 'I_URL': ':NEW.URL', 'I_PHONEBOOK_URL': ':NEW.PHONEBOOK_URL', 'I_EMERGENCY_PHONE_NO': ':NEW.EMERGENCY_PHONE_NO', 'I_GENERAL_PHONE_NO': ':NEW.GENERAL_PHONE_NO', 'I_GENERAL_FAX_NO': ':NEW.GENERAL_FAX_NO', 'I_ANNUAL_REPORT_IND': ':NEW.ANNUAL_REPORT_IND', 'I_FATCA_CD': ':NEW.FATCA_CD', 'I_PHARMA_NUMBER_RANGE': ':NEW.PHARMA_NUMBER_RANGE', 'I_LIQUIDATION_DATE': ':NEW.LIQUIDATION_DATE', 'I_SAPINST_NO': ':NEW.SAPINST_NO', 'I_SAP_COMPANY_CODE_NO': ':NEW.SAP_COMPANY_CODE_NO', 'I_SAP_GO_LIVE_DATE': ':NEW.SAP_GO_LIVE_DATE', 'I_SAP_GROUP_CODE': ':NEW.SAP_GROUP_CODE', 'I_SAP_LOCAL_COA': ':NEW.SAP_LOCAL_COA', 'I_SAP_CONTROLLING_AREA': ':NEW.SAP_CONTROLLING_AREA', 'I_TOP_SYSTEM_IND': ':NEW.TOP_SYSTEM_IND', 'I_TOP_GO_LIVE_DATE': ':NEW.TOP_GO_LIVE_DATE', 'I_TOP_REMARKS': ':NEW.TOP_REMARKS', 'I_LEGAL_REMARKS': ':NEW.LEGAL_REMARKS', 'I_REMARKS': ':NEW.REMARKS', 'I_LOCAL_STATUTORY_ACC': ':NEW.LOCAL_STATUTORY_ACC', 'I_ICFR_COMPANY_LAYER': ':NEW.ICFR_COMPANY_LAYER', 'I_TRADING_PARTNER': ':NEW.TRADING_PARTNER', 'I_S4_ENTITY_ID': ':NEW.S4_ENTITY_ID', 'I_RCA_DISPLAY_FLAG': ':NEW.RCA_DISPLAY_FLAG', 'I_CBC_GBE_SCOPE': ':NEW.CBC_GBE_SCOPE', 'I_WEB_DISPLAY_IND': ':NEW.WEB_DISPLAY_IND', 'I_HEADCOUNT_IND': ':NEW.HEADCOUNT_IND', 'I_VALID_IND': ':NEW.VALID_IND', 'I_CORE_REMARKS': ':NEW.CORE_REMARKS', 'I_REVIEW_USERID': ':NEW.REVIEW_USERID', 'I_REVIEW_EXP_DATE': ':NEW.REVIEW_EXP_DATE', 'I_REQUESTER_USERID': ':NEW.REQUESTER_USERID', 'I_REQUEST_DATE': ':NEW.REQUEST_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD, I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE, I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD, I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME, I_SHORT_NAME => :NEW.SHORT_NAME, I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME, I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD, I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD, I_URL => :NEW.URL, I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL, I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO, I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO, I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO, I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND, I_FATCA_CD => :NEW.FATCA_CD, I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE, I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE, I_SAPINST_NO => :NEW.SAPINST_NO, I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO, I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE, I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE, I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA, I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA, I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND, I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE, I_TOP_REMARKS => :NEW.TOP_REMARKS, I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS, I_REMARKS => :NEW.REMARKS, I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC, I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER, I_TRADING_PARTNER => :NEW.TRADING_PARTNER, I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID, I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG, I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE , I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND, I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND, I_VALID_IND => :NEW.VALID_IND, I_CORE_REMARKS => :NEW.CORE_REMARKS, I_REVIEW_USERID => :NEW.REVIEW_USERID, I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE, I_REQUESTER_USERID => :NEW.REQUESTER_USERID, I_REQUEST_DATE => :NEW.REQUEST_DATE, I_CHANGE_USER => V_USERID'}}, {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': ':NEW.REPORTING_ENTITY_CD;', 'assignment_line_no': 141, 'assignment_indent': 16}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 148, 'statement_indent': 24}]}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 158, 'statement_indent': 16}]}, {'condition': " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ", 'type': 'if_else', 'if_line_no': 161, 'then_line_no': 161, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 162, 'assignment_indent': 12}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 165, 'statement_indent': 12}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 174, 'statement_indent': 16}, {'type': 'raise_statement', 'sql_statement': 'RAISE CPY_IN_USE;', 'statement_line_no': 182, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);', 'statement_line_no': 187, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 200, 'then_line_no': 200, 'if_indent': 8, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC') AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);", 'statement_line_no': 201, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ", 'type': 'if_else', 'if_line_no': 215, 'then_line_no': 215, 'if_indent': 8, 'end_if_line_no': 217, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_SCOPE;', 'statement_line_no': 216, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ", 'type': 'if_else', 'if_line_no': 221, 'then_line_no': 221, 'if_indent': 8, 'end_if_line_no': 223, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_MFR;', 'statement_line_no': 222, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ", 'type': 'if_else', 'if_line_no': 227, 'then_line_no': 227, 'if_indent': 8, 'end_if_line_no': 229, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'statement_line_no': 228, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ", 'type': 'if_else', 'if_line_no': 233, 'then_line_no': 233, 'if_indent': 8, 'end_if_line_no': 237, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': 'NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'assignment_line_no': 234, 'assignment_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 241, 'then_line_no': 241, 'if_indent': 8, 'end_if_line_no': 325, 'then_statements': [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT CBC_FLAG INTO V_REP_CBC_FLAG FROM CFG_V_REPORTING_ENTITIES WHERE REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'statement_line_no': 245, 'statement_indent': 16}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 257, 'assignment_indent': 16}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 260, 'statement_indent': 16}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT VALID_FROM, COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE, V_COUNTRY_CD FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 271, 'statement_indent': 16}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 340, 'statement_indent': 16}]}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 342, 'elif_indent': 4, 'condition': 'DELETING', 'then_line_no': 342, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 343, 'statement_indent': 8}]}], 'else_statements': []}
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " :NEW.COMPANY_TYPE_CD IN ('L', 'A') AND :NEW.LEGAL_COMPANY_CD IS NULL ", 'type': 'if_else', 'if_line_no': 53, 'then_line_no': 53, 'if_indent': 8, 'end_if_line_no': 57, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_LEGAL_COMPANY_CD', 'assignment_operator': ':=', 'expression': ':NEW.COMPANY_CD;', 'assignment_line_no': 54, 'assignment_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_LEGAL_COMPANY_CD', 'assignment_operator': ':=', 'expression': ':NEW.COMPANY_CD;', 'assignment_line_no': 54, 'assignment_indent': 12}
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 61, 'assignment_indent': 8}
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE COMPANY_TYPE_CD IN ( 'L') AND VALID_IND = 'Y' AND COMPANY_CD = V_LEGAL_COMPANY_CD;", 'statement_line_no': 62, 'statement_indent': 8}
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,471 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " CNTR = 0 AND (NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) NOT IN ('D', 'A', 'L') OR (:NEW.COMPANY_TYPE_CD = 'D' AND :NEW.CBC_GBE_SCOPE = 'Y' AND V_LEGAL_COMPANY_CD <> :NEW.COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 72, 'then_line_no': 76, 'if_indent': 8, 'end_if_line_no': 78, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_LEGAL_COMP;', 'statement_line_no': 77, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE INVALID_LEGAL_COMP;', 'statement_line_no': 77, 'statement_indent': 12}
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_COMPANY_TYPE_CD': ':NEW.COMPANY_TYPE_CD', 'I_MULTISEL_COMPANY_PURPOSE': ':NEW.MULTISEL_COMPANY_PURPOSE', 'I_LEGAL_COMPANY_CD': 'V_LEGAL_COMPANY_CD', 'I_OFFICIAL_NAME': ':NEW.OFFICIAL_NAME', 'I_SHORT_NAME': ':NEW.SHORT_NAME', 'I_DISCLOSURE_NAME': ':NEW.DISCLOSURE_NAME', 'I_FUNCTIONAL_CURRENCY_CD': ':NEW.FUNCTIONAL_CURRENCY_CD', 'I_STATUTORY_CURRENCY_CD': ':NEW.STATUTORY_CURRENCY_CD', 'I_URL': ':NEW.URL', 'I_PHONEBOOK_URL': ':NEW.PHONEBOOK_URL', 'I_EMERGENCY_PHONE_NO': ':NEW.EMERGENCY_PHONE_NO', 'I_GENERAL_PHONE_NO': ':NEW.GENERAL_PHONE_NO', 'I_GENERAL_FAX_NO': ':NEW.GENERAL_FAX_NO', 'I_ANNUAL_REPORT_IND': ':NEW.ANNUAL_REPORT_IND', 'I_FATCA_CD': ':NEW.FATCA_CD', 'I_PHARMA_NUMBER_RANGE': ':NEW.PHARMA_NUMBER_RANGE', 'I_LIQUIDATION_DATE': ':NEW.LIQUIDATION_DATE', 'I_SAPINST_NO': ':NEW.SAPINST_NO', 'I_SAP_COMPANY_CODE_NO': ':NEW.SAP_COMPANY_CODE_NO', 'I_SAP_GO_LIVE_DATE': ':NEW.SAP_GO_LIVE_DATE', 'I_SAP_GROUP_CODE': ':NEW.SAP_GROUP_CODE', 'I_SAP_LOCAL_COA': ':NEW.SAP_LOCAL_COA', 'I_SAP_CONTROLLING_AREA': ':NEW.SAP_CONTROLLING_AREA', 'I_TOP_SYSTEM_IND': ':NEW.TOP_SYSTEM_IND', 'I_TOP_GO_LIVE_DATE': ':NEW.TOP_GO_LIVE_DATE', 'I_TOP_REMARKS': ':NEW.TOP_REMARKS', 'I_LEGAL_REMARKS': ':NEW.LEGAL_REMARKS', 'I_REMARKS': ':NEW.REMARKS', 'I_LOCAL_STATUTORY_ACC': ':NEW.LOCAL_STATUTORY_ACC', 'I_ICFR_COMPANY_LAYER': ':NEW.ICFR_COMPANY_LAYER', 'I_TRADING_PARTNER': ':NEW.TRADING_PARTNER', 'I_S4_ENTITY_ID': ':NEW.S4_ENTITY_ID', 'I_RCA_DISPLAY_FLAG': ':NEW.RCA_DISPLAY_FLAG', 'I_CBC_GBE_SCOPE': ':NEW.CBC_GBE_SCOPE', 'I_WEB_DISPLAY_IND': ':NEW.WEB_DISPLAY_IND', 'I_HEADCOUNT_IND': ':NEW.HEADCOUNT_IND', 'I_VALID_IND': ':NEW.VALID_IND', 'I_CORE_REMARKS': ':NEW.CORE_REMARKS', 'I_REVIEW_USERID': ':NEW.REVIEW_USERID', 'I_REVIEW_EXP_DATE': ':NEW.REVIEW_EXP_DATE', 'I_REQUESTER_USERID': ':NEW.REQUESTER_USERID', 'I_REQUEST_DATE': ':NEW.REQUEST_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_COMPANY_TYPE_CD => :NEW.COMPANY_TYPE_CD, I_MULTISEL_COMPANY_PURPOSE => :NEW.MULTISEL_COMPANY_PURPOSE, I_LEGAL_COMPANY_CD => V_LEGAL_COMPANY_CD, I_OFFICIAL_NAME => :NEW.OFFICIAL_NAME, I_SHORT_NAME => :NEW.SHORT_NAME, I_DISCLOSURE_NAME => :NEW.DISCLOSURE_NAME, I_FUNCTIONAL_CURRENCY_CD => :NEW.FUNCTIONAL_CURRENCY_CD, I_STATUTORY_CURRENCY_CD => :NEW.STATUTORY_CURRENCY_CD, I_URL => :NEW.URL, I_PHONEBOOK_URL => :NEW.PHONEBOOK_URL, I_EMERGENCY_PHONE_NO => :NEW.EMERGENCY_PHONE_NO, I_GENERAL_PHONE_NO => :NEW.GENERAL_PHONE_NO, I_GENERAL_FAX_NO => :NEW.GENERAL_FAX_NO, I_ANNUAL_REPORT_IND => :NEW.ANNUAL_REPORT_IND, I_FATCA_CD => :NEW.FATCA_CD, I_PHARMA_NUMBER_RANGE => :NEW.PHARMA_NUMBER_RANGE, I_LIQUIDATION_DATE => :NEW.LIQUIDATION_DATE, I_SAPINST_NO => :NEW.SAPINST_NO, I_SAP_COMPANY_CODE_NO => :NEW.SAP_COMPANY_CODE_NO, I_SAP_GO_LIVE_DATE => :NEW.SAP_GO_LIVE_DATE, I_SAP_GROUP_CODE => :NEW.SAP_GROUP_CODE, I_SAP_LOCAL_COA => :NEW.SAP_LOCAL_COA, I_SAP_CONTROLLING_AREA => :NEW.SAP_CONTROLLING_AREA, I_TOP_SYSTEM_IND => :NEW.TOP_SYSTEM_IND, I_TOP_GO_LIVE_DATE => :NEW.TOP_GO_LIVE_DATE, I_TOP_REMARKS => :NEW.TOP_REMARKS, I_LEGAL_REMARKS => :NEW.LEGAL_REMARKS, I_REMARKS => :NEW.REMARKS, I_LOCAL_STATUTORY_ACC => :NEW.LOCAL_STATUTORY_ACC, I_ICFR_COMPANY_LAYER => :NEW.ICFR_COMPANY_LAYER, I_TRADING_PARTNER => :NEW.TRADING_PARTNER, I_S4_ENTITY_ID => :NEW.S4_ENTITY_ID, I_RCA_DISPLAY_FLAG => :NEW.RCA_DISPLAY_FLAG, I_CBC_GBE_SCOPE => :NEW.CBC_GBE_SCOPE , I_WEB_DISPLAY_IND => :NEW.WEB_DISPLAY_IND, I_HEADCOUNT_IND => :NEW.HEADCOUNT_IND, I_VALID_IND => :NEW.VALID_IND, I_CORE_REMARKS => :NEW.CORE_REMARKS, I_REVIEW_USERID => :NEW.REVIEW_USERID, I_REVIEW_EXP_DATE => :NEW.REVIEW_EXP_DATE, I_REQUESTER_USERID => :NEW.REQUESTER_USERID, I_REQUEST_DATE => :NEW.REQUEST_DATE, I_CHANGE_USER => V_USERID'}}
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': '', 'type': 'case_when', 'case_line_no': 129, 'case_indent': 8, 'end_case_line_no': 159, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 130, 'when_indent': 12, 'condition': "NVL (:OLD.REPORTING_ENTITY_CD, '-') != NVL (:NEW.REPORTING_ENTITY_CD, '-') OR NVL (TO_DATE (:OLD.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_FROM_DATE, 'DD-MM-YYYY'), SYSDATE + 100) OR NVL (TO_DATE (:OLD.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100) != NVL (TO_DATE (:NEW.VALID_TO_DATE, 'DD-MM-YYYY'), SYSDATE + 100)", 'then_line_no': 140, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': ':NEW.REPORTING_ENTITY_CD;', 'assignment_line_no': 141, 'assignment_indent': 16}, {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 148, 'statement_indent': 24}]}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 158, 'statement_indent': 16}]}
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: case_when
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': ':NEW.REPORTING_ENTITY_CD;', 'assignment_line_no': 141, 'assignment_indent': 16}
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': '', 'type': 'case_when', 'case_line_no': 142, 'case_indent': 16, 'end_case_line_no': 149, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 143, 'when_indent': 20, 'condition': '( :NEW.VALID_FROM_DATE IS NULL OR :NEW.VALID_FROM_DATE IS NULL)', 'then_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 148, 'statement_indent': 24}]}
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: case_when
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_VALID_FROM_DATE;', 'statement_line_no': 146, 'statement_indent': 24}
2025-09-03 04:09:49,472 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 148, 'statement_indent': 24}
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: null_statement
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': ':NEW.REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': ':NEW.VALID_FROM_DATE', 'I_VALID_TO_DATE': ':NEW.VALID_TO_DATE', 'I_CHANGE_USER': 'V_USERID'}, 'raw_text': 'I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => :NEW.REPORTING_ENTITY_CD, I_VALID_FROM_DATE => :NEW.VALID_FROM_DATE, I_VALID_TO_DATE => :NEW.VALID_TO_DATE, I_CHANGE_USER => V_USERID'}}
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 158, 'statement_indent': 16}
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: null_statement
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " NVL(:NEW.VALID_IND, 'Y') = 'N' AND NVL(:OLD.VALID_IND, 'N') = 'Y' ", 'type': 'if_else', 'if_line_no': 161, 'then_line_no': 161, 'if_indent': 8, 'end_if_line_no': 196, 'then_statements': [{'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 162, 'assignment_indent': 12}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 165, 'statement_indent': 12}, {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 174, 'statement_indent': 16}, {'type': 'raise_statement', 'sql_statement': 'RAISE CPY_IN_USE;', 'statement_line_no': 182, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}, {'type': 'update_statement', 'sql_statement': 'UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);', 'statement_line_no': 187, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 162, 'assignment_indent': 12}
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 165, 'statement_indent': 12}
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' CNTR > 0 ', 'type': 'if_else', 'if_line_no': 173, 'then_line_no': 173, 'if_indent': 12, 'end_if_line_no': 183, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 174, 'statement_indent': 16}, {'type': 'raise_statement', 'sql_statement': 'RAISE CPY_IN_USE;', 'statement_line_no': 182, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT LISTAGG(DISTINCT COMPANY_CD, ', ') WITHIN GROUP (ORDER BY COMPANY_CD) INTO V_COMPANY_CODES_LIST FROM CFG_V_COMPANIES WHERE LEGAL_COMPANY_CD = :NEW.COMPANY_CD AND COMPANY_CD <> :NEW.COMPANY_CD AND VALID_IND = 'Y';", 'statement_line_no': 174, 'statement_indent': 16}
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE CPY_IN_USE;', 'statement_line_no': 182, 'statement_indent': 16}
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': 'UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);', 'statement_line_no': 187, 'statement_indent': 12}
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,473 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " :OLD.COMPANY_TYPE_CD IN ('L', 'B') AND :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 200, 'then_line_no': 200, 'if_indent': 8, 'end_if_line_no': 211, 'then_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC') AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);", 'statement_line_no': 201, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'update_statement', 'sql_statement': "UPDATE CFG.CFG_COMPANY_ADDRESSES SET VALID_TO = TRUNC ( SYSDATE ) - 1 WHERE COMPANY_CD = :NEW.COMPANY_CD AND ADDRESS_TYPE_CD NOT IN ('P', 'RES', 'L', 'INC') AND ( VALID_TO > TRUNC(SYSDATE) OR VALID_TO IS NULL);", 'statement_line_no': 201, 'statement_indent': 12}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: update_statement
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " :NEW.CBC_GBE_SCOPE = 'Y' AND :NEW.VALID_IND = 'N' ", 'type': 'if_else', 'if_line_no': 215, 'then_line_no': 215, 'if_indent': 8, 'end_if_line_no': 217, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_SCOPE;', 'statement_line_no': 216, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_SCOPE;', 'statement_line_no': 216, 'statement_indent': 12}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " :NEW.VALID_IND = 'N' AND NVL(:NEW.REPORTING_ENTITY_CD, :OLD.REPORTING_ENTITY_CD) IS NOT NULL AND NVL(:NEW.VALID_TO_DATE, :OLD.VALID_TO_DATE) IS NULL ", 'type': 'if_else', 'if_line_no': 221, 'then_line_no': 221, 'if_indent': 8, 'end_if_line_no': 223, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_MFR;', 'statement_line_no': 222, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_CPY_STILL_IN_MFR;', 'statement_line_no': 222, 'statement_indent': 12}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " :NEW.COMPANY_TYPE_CD = 'A' AND :NEW.CBC_GBE_SCOPE = 'Y' ", 'type': 'if_else', 'if_line_no': 227, 'then_line_no': 227, 'if_indent': 8, 'end_if_line_no': 229, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'statement_line_no': 228, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_ASSOC_ENT_NOT_ALLOWED_FOR_CBC;', 'statement_line_no': 228, 'statement_indent': 12}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " NVL(:NEW.COMPANY_TYPE_CD, :OLD.COMPANY_TYPE_CD) = 'L' OR NVL(:NEW.COMPANY_TYPE_CD, :NEW.COMPANY_TYPE_CD) = 'B' ", 'type': 'if_else', 'if_line_no': 233, 'then_line_no': 233, 'if_indent': 8, 'end_if_line_no': 237, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': 'NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'assignment_line_no': 234, 'assignment_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_REPORTING_ENTITY_CD', 'assignment_operator': ':=', 'expression': 'NVL (:NEW.COMPANY_CD, :OLD.COMPANY_CD);', 'assignment_line_no': 234, 'assignment_indent': 12}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " V_REPORTING_ENTITY_CD IS NOT NULL OR :NEW.COMPANY_TYPE_CD = 'D' ", 'type': 'if_else', 'if_line_no': 241, 'then_line_no': 241, 'if_indent': 8, 'end_if_line_no': 325, 'then_statements': [{'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT CBC_FLAG INTO V_REP_CBC_FLAG FROM CFG_V_REPORTING_ENTITIES WHERE REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'statement_line_no': 245, 'statement_indent': 16}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 257, 'assignment_indent': 16}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 260, 'statement_indent': 16}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT VALID_FROM, COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE, V_COUNTRY_CD FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 271, 'statement_indent': 16}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,474 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " (:NEW.CBC_GBE_SCOPE = 'Y' AND NVL (:OLD.CBC_GBE_SCOPE, 'N') = 'N') OR (NVL(:NEW.CBC_GBE_SCOPE, :OLD.CBC_GBE_SCOPE) = 'Y' AND V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD)) ", 'type': 'if_else', 'if_line_no': 242, 'then_line_no': 244, 'if_indent': 12, 'end_if_line_no': 305, 'then_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT CBC_FLAG INTO V_REP_CBC_FLAG FROM CFG_V_REPORTING_ENTITIES WHERE REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'statement_line_no': 245, 'statement_indent': 16}, {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 257, 'assignment_indent': 16}, {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 260, 'statement_indent': 16}, {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT VALID_FROM, COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE, V_COUNTRY_CD FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 271, 'statement_indent': 16}, {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}], 'if_elses': [], 'else_statements': []}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT CBC_FLAG INTO V_REP_CBC_FLAG FROM CFG_V_REPORTING_ENTITIES WHERE REPORTING_ENTITY_CD = V_LEGAL_COMPANY_CD;', 'statement_line_no': 245, 'statement_indent': 16}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " NVL (V_REP_CBC_FLAG, 'N') = 'N' ", 'type': 'if_else', 'if_line_no': 253, 'then_line_no': 253, 'if_indent': 16, 'end_if_line_no': 255, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE RU_NOT_IN_CBC_SCOPE;', 'statement_line_no': 254, 'statement_indent': 20}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'CNTR', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 257, 'assignment_indent': 16}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT COUNT (*) INTO CNTR FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 260, 'statement_indent': 16}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' CNTR = 0 ', 'type': 'if_else', 'if_line_no': 267, 'then_line_no': 267, 'if_indent': 16, 'end_if_line_no': 269, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_NO_ADR;', 'statement_line_no': 268, 'statement_indent': 20}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT VALID_FROM, COUNTRY_CD INTO V_ADDR_VALID_FROM_DATE, V_COUNTRY_CD FROM CFG.CFG_V_COMPANY_ADDRESSES WHERE COMPANY_CD = V_REPORTING_ENTITY_CD AND ADDRESS_TYPE_CD = 'RES';", 'statement_line_no': 271, 'statement_indent': 16}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' V_LEGAL_COMPANY_CD <> NVL(:OLD.LEGAL_COMPANY_CD, :NEW.LEGAL_COMPANY_CD) ', 'type': 'if_else', 'if_line_no': 282, 'then_line_no': 282, 'if_indent': 16, 'end_if_line_no': 284, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'V_ADDR_VALID_FROM_DATE', 'assignment_operator': ':=', 'expression': 'TRUNC(SYSDATE);', 'assignment_line_no': 283, 'assignment_indent': 20}
2025-09-03 04:09:49,475 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': 'V_REPORTING_ENTITY_CD', 'I_VALID_FROM_DATE': 'TRUNC (SYSDATE)', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => V_REPORTING_ENTITY_CD, I_VALID_FROM_DATE => TRUNC (SYSDATE), I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_REPORTING_ENTITY_CD': "'J-' || V_COUNTRY_CD", 'I_VALID_FROM_DATE': 'V_ADDR_VALID_FROM_DATE', 'I_VALID_TO_DATE': 'NULL', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'INSERT'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_REPORTING_ENTITY_CD => 'J-' || V_COUNTRY_CD, I_VALID_FROM_DATE => V_ADDR_VALID_FROM_DATE, I_VALID_TO_DATE => NULL, I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'INSERT'"}}
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': " :NEW.CBC_GBE_SCOPE = 'N' AND NVL (:OLD.CBC_GBE_SCOPE, 'Y') = 'Y' ", 'type': 'if_else', 'if_line_no': 307, 'then_line_no': 307, 'if_indent': 12, 'end_if_line_no': 324, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}, {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'CE'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'CE', I_ACTION_TYPE => 'UPDATE'"}}
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDM_UTIL_COMPANIES.MODIFYCOMPANY', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'I_COMPANY_CD': ':NEW.COMPANY_CD', 'I_VALID_FROM_DATE': 'NULL', 'I_VALID_TO_DATE': 'TRUNC (SYSDATE)', 'I_CHANGE_USER': 'V_USERID', 'I_MAPPING_TYPE': "'JU'", 'I_ACTION_TYPE': "'UPDATE'"}, 'raw_text': "I_COMPANY_CD => :NEW.COMPANY_CD, I_VALID_FROM_DATE => NULL, I_VALID_TO_DATE => TRUNC (SYSDATE), I_CHANGE_USER => V_USERID, I_MAPPING_TYPE => 'JU', I_ACTION_TYPE => 'UPDATE'"}}
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': '', 'type': 'case_when', 'case_line_no': 329, 'case_indent': 8, 'end_case_line_no': 341, 'when_clauses': [{'type': 'when_statement', 'when_line_no': 330, 'when_indent': 12, 'condition': "(NVL (:OLD.OFFICIAL_NAME, '-') != NVL (:NEW.OFFICIAL_NAME, '-')) AND :OLD.OFFICIAL_NAME IS NOT NULL", 'then_line_no': 333, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}]}], 'else_statements': [{'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 340, 'statement_indent': 16}]}
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: case_when
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_COMPANIES.MODIFYCOMPANYNAME', 'parameters': {'parameter_type': 'positional', 'positional_params': [':NEW.COMPANY_CD', 'V_LEGAL_COMPANY_CD', ':NEW.OFFICIAL_NAME', 'V_USERID'], 'named_params': {}, 'raw_text': ':NEW.COMPANY_CD, V_LEGAL_COMPANY_CD, :NEW.OFFICIAL_NAME, V_USERID'}}
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'null_statement', 'sql_statement': 'NULL;', 'statement_line_no': 340, 'statement_indent': 16}
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: null_statement
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 343, 'statement_indent': 8}
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,476 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,476 - root - DEBUG - [common.py:105] - Generated 92 lines in main execution block
2025-09-03 04:09:49,476 - root - DEBUG - [common.py:105] - Main block rendering took 0.007s
2025-09-03 04:09:49,477 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 04:09:49,477 - root - DEBUG - [common.py:105] - Final SQL contains 114 lines, 8231 characters
2025-09-03 04:09:49,477 - root - DEBUG - [common.py:105] - Oracle SQL generation: 114 lines generated in 0.008s
2025-09-03 04:09:49,477 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 04:09:49,477 - root - DEBUG - [common.py:105] - Rendered SQL length: 8231 characters
2025-09-03 04:09:49,477 - root - DEBUG - [common.py:105] - SQL rendering took: 0.008 seconds
2025-09-03 04:09:49,477 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\yyy_analysis.sql
2025-09-03 04:09:49,478 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\yyy_analysis.sql
2025-09-03 04:09:49,478 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger yyy_analysis.json ===
2025-09-03 04:09:49,478 - root - DEBUG - [common.py:105] - ✓ Created yyy_analysis.sql
2025-09-03 04:09:49,478 - root - DEBUG - [common.py:105] - === Processing file 10/10: zzz_analysis.json ===
2025-09-03 04:09:49,478 - root - DEBUG - [common.py:105] - Source path: files/format_json\zzz_analysis.json
2025-09-03 04:09:49,478 - root - DEBUG - [common.py:105] - Output path: files/format_sql\zzz_analysis.sql
2025-09-03 04:09:49,478 - root - DEBUG - [common.py:105] - === JSON to SQL processing for trigger zzz_analysis.json ===
2025-09-03 04:09:49,479 - root - DEBUG - [common.py:105] - Reading JSON analysis file: files/format_json\zzz_analysis.json
2025-09-03 04:09:49,479 - root - DEBUG - [main.py:364] - Successfully loaded analysis JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-03 04:09:49,479 - root - DEBUG - [common.py:105] - Validating JSON structure...
2025-09-03 04:09:49,479 - root - DEBUG - [common.py:105] - JSON contains 30 total statements
2025-09-03 04:09:49,479 - root - DEBUG - [common.py:105] - JSON validation passed
2025-09-03 04:09:49,479 - root - DEBUG - [common.py:105] - Creating FormatSQL instance...
2025-09-03 04:09:49,479 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,491 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-03 04:09:49,491 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-03 04:09:49,499 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-03 04:09:49,500 - root - DEBUG - [common.py:105] - FormatSQL created successfully
2025-09-03 04:09:49,500 - root - DEBUG - [common.py:105] - Rendering SQL from analysis...
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted Oracle SQL
2025-09-03 04:09:49,500 - root - DEBUG - [common.py:105] - Analysis contains 2 variables, 0 constants, 4 exceptions
2025-09-03 04:09:49,500 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for Oracle
2025-09-03 04:09:49,500 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:339] - === Rendering Oracle declarations ===
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:349] - Rendering 2 variables
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:377] - Rendering 4 exceptions
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:389] - === Oracle declarations complete ===
2025-09-03 04:09:49,500 - root - DEBUG - [common.py:105] - Generated 7 lines of declarations
2025-09-03 04:09:49,500 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-03 04:09:49,500 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:408] - === Rendering main block for Oracle ===
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:448] - Processing 1 statements in main block
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:449] - begin_end_statements statements: 1
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 11, 'then_line_no': 11, 'if_indent': 4, 'end_if_line_no': 196, 'then_statements': [{'indent': 8, 'line': "HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14, 'filename': 'zzz.sql'}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 15, 'elif_indent': 4, 'condition': '(UPDATING)', 'then_line_no': 15, 'then_statements': [{'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_EVENT_ID_REQUIRED;', 'statement_line_no': 19, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': "SELECT IRTT_MULTIROW_REC_T( UPPER(XT.USERID), TO_DATE(XT.VALID_FROM, MDM_UTIL_IRTT.CO_DD_MM_YYYY), TO_DATE(XT.VALID_TO, MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST FROM XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS USERID VARCHAR2 (20) PATH 'field[1]', VALID_FROM VARCHAR2 (20) PATH 'field[2]', VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'statement_line_no': 25, 'statement_indent': 8}, {'type': 'assignment', 'variable_name': 'L_ERROR_COUNTER', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 40, 'assignment_indent': 8}, {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []}, {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'statement_line_no': 91, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'statement_line_no': 100, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(CHK) INTO L_ERROR_COUNTER FROM ( SELECT XT.DATE_FROM, XT.DATE_UNTIL, WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM) THEN 1 END CHK FROM TABLE(V_KEY_CONTACTS_LIST) XT );', 'statement_line_no': 106, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_RANGE_OVERLAP;', 'statement_line_no': 124, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM CFG.CFG_IRTT_EVENT_CONTACTS C LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT ON C.USERID = XT.VALUE_CD AND C.VALID_FROM = XT.DATE_FROM WHERE C.EVENT_ID = :NEW.EVENT_ID AND C.VALID_FROM < TRUNC(SYSDATE) AND XT.DATE_FROM IS NULL;', 'statement_line_no': 130, 'statement_indent': 8}, {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'statement_line_no': 144, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'delete_statement', 'sql_statement': 'DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A WHERE A.EVENT_ID = :NEW.EVENT_ID AND NOT EXISTS ( SELECT 1 FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE A.USERID = XT.VALUE_CD AND A.VALID_FROM = XT.DATE_FROM );', 'statement_line_no': 149, 'statement_indent': 8}, {'type': 'merge_statement', 'sql_statement': 'MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING ( SELECT XT.VALUE_CD USERID, XT.DATE_FROM VALID_FROM, XT.DATE_UNTIL VALID_TO FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.VALUE_CD IS NOT NULL ) B ON (A.EVENT_ID = :NEW.EVENT_ID AND A.USERID = B.USERID AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN UPDATE SET A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT( EVENT_ID, USERID, VALID_FROM, VALID_TO ) VALUES( :NEW.EVENT_ID, B.USERID, B.VALID_FROM, B.VALID_TO );', 'statement_line_no': 163, 'statement_indent': 8}, {'indent': 12, 'line': 'MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191, 'filename': 'zzz.sql'}]}, {'type': 'elif_statement', 'elif_line_no': 192, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 192, 'then_statements': [{'indent': 12, 'line': "HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195, 'filename': 'zzz.sql'}]}], 'else_statements': []}
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 8, 'line': "HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14, 'filename': 'zzz.sql'}
2025-09-03 04:09:49,500 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 8, 'line': "HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>INSERTING not supported!');", 'line_no': 14, 'filename': 'zzz.sql'}
2025-09-03 04:09:49,501 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' :NEW.EVENT_ID IS NULL ', 'type': 'if_else', 'if_line_no': 18, 'then_line_no': 18, 'if_indent': 8, 'end_if_line_no': 20, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_EVENT_ID_REQUIRED;', 'statement_line_no': 19, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_EVENT_ID_REQUIRED;', 'statement_line_no': 19, 'statement_indent': 12}
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': "SELECT IRTT_MULTIROW_REC_T( UPPER(XT.USERID), TO_DATE(XT.VALID_FROM, MDM_UTIL_IRTT.CO_DD_MM_YYYY), TO_DATE(XT.VALID_TO, MDM_UTIL_IRTT.CO_DD_MM_YYYY)) BULK COLLECT INTO V_KEY_CONTACTS_LIST FROM XMLTABLE ('/rows/row' PASSING XMLTYPE (:NEW.KEY_CONTACTS_LIST) COLUMNS USERID VARCHAR2 (20) PATH 'field[1]', VALID_FROM VARCHAR2 (20) PATH 'field[2]', VALID_TO VARCHAR2 (20) PATH 'field[3]' ) XT;", 'statement_line_no': 25, 'statement_indent': 8}
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'assignment', 'variable_name': 'L_ERROR_COUNTER', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 40, 'assignment_indent': 8}
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: assignment
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'for_expression': '( FOR R1 IN ( SELECT B.VALUE_CD AS USER_ID, B.DATE_FROM AS VALID_FROM, B.DATE_UNTIL AS VALID_UNTIL, E.USERID, E.TERMINATIONDAY FROM TABLE(V_KEY_CONTACTS_LIST) B LEFT OUTER JOIN V_ROCHE_EMPLOYEES_ALL E ON E.USERID = B. VALUE_CD )', 'type': 'for_loop', 'for_line_no': 41, 'for_indent': 8, 'end_for_line_no': 80, 'loop_variable': 'R1', 'for_statements': []}
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: for_loop
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' (L_ERROR_COUNTER > 0) ', 'type': 'if_else', 'if_line_no': 84, 'then_line_no': 84, 'if_indent': 8, 'end_if_line_no': 86, 'then_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20000', "'Correct your input, please.'"], 'named_params': {}, 'raw_text': "-20000, 'Correct your input, please.'"}}
2025-09-03 04:09:49,501 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: function_calling
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.DATE_FROM > NVL(XT.DATE_UNTIL, XT.DATE_FROM);', 'statement_line_no': 91, 'statement_indent': 8}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 99, 'if_indent': 8, 'end_if_line_no': 101, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'statement_line_no': 100, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_FROM_AFTER_DATE_UNTIL;', 'statement_line_no': 100, 'statement_indent': 12}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(CHK) INTO L_ERROR_COUNTER FROM ( SELECT XT.DATE_FROM, XT.DATE_UNTIL, WHEN XT.DATE_FROM <= LAG(NVL(XT.DATE_UNTIL, XT.DATE_FROM + 1)) OVER (ORDER BY XT.DATE_FROM) THEN 1 END CHK FROM TABLE(V_KEY_CONTACTS_LIST) XT );', 'statement_line_no': 106, 'statement_indent': 8}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 123, 'then_line_no': 123, 'if_indent': 8, 'end_if_line_no': 125, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_RANGE_OVERLAP;', 'statement_line_no': 124, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DATE_RANGE_OVERLAP;', 'statement_line_no': 124, 'statement_indent': 12}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'select_statement', 'sql_statement': 'SELECT COUNT(1) INTO L_ERROR_COUNTER FROM CFG.CFG_IRTT_EVENT_CONTACTS C LEFT JOIN TABLE(V_KEY_CONTACTS_LIST) XT ON C.USERID = XT.VALUE_CD AND C.VALID_FROM = XT.DATE_FROM WHERE C.EVENT_ID = :NEW.EVENT_ID AND C.VALID_FROM < TRUNC(SYSDATE) AND XT.DATE_FROM IS NULL;', 'statement_line_no': 130, 'statement_indent': 8}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: select_statement
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'condition': ' L_ERROR_COUNTER > 0 ', 'type': 'if_else', 'if_line_no': 143, 'then_line_no': 143, 'if_indent': 8, 'end_if_line_no': 145, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'statement_line_no': 144, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: if_else
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DO_NOT_MODIFY_PAST_DATA;', 'statement_line_no': 144, 'statement_indent': 12}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: raise_statement
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'delete_statement', 'sql_statement': 'DELETE FROM CFG.CFG_IRTT_EVENT_CONTACTS A WHERE A.EVENT_ID = :NEW.EVENT_ID AND NOT EXISTS ( SELECT 1 FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE A.USERID = XT.VALUE_CD AND A.VALID_FROM = XT.DATE_FROM );', 'statement_line_no': 149, 'statement_indent': 8}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: delete_statement
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'type': 'merge_statement', 'sql_statement': 'MERGE INTO CFG.CFG_IRTT_EVENT_CONTACTS A USING ( SELECT XT.VALUE_CD USERID, XT.DATE_FROM VALID_FROM, XT.DATE_UNTIL VALID_TO FROM TABLE(V_KEY_CONTACTS_LIST) XT WHERE XT.VALUE_CD IS NOT NULL ) B ON (A.EVENT_ID = :NEW.EVENT_ID AND A.USERID = B.USERID AND A.VALID_FROM = B.VALID_FROM) WHEN MATCHED THEN UPDATE SET A.VALID_TO = B.VALID_TO WHEN NOT MATCHED THEN INSERT( EVENT_ID, USERID, VALID_FROM, VALID_TO ) VALUES( :NEW.EVENT_ID, B.USERID, B.VALID_FROM, B.VALID_TO );', 'statement_line_no': 163, 'statement_indent': 8}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: merge_statement
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 12, 'line': 'MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191, 'filename': 'zzz.sql'}
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,502 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 12, 'line': 'MDM_UTIL_IRTT.MAINTAIN_IRTT_ROLES ();', 'line_no': 191, 'filename': 'zzz.sql'}
2025-09-03 04:09:49,502 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,503 - utilities.FormatSQL - DEBUG - [FormatSQL.py:491] - statement: {'indent': 12, 'line': "HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195, 'filename': 'zzz.sql'}
2025-09-03 04:09:49,503 - utilities.FormatSQL - DEBUG - [FormatSQL.py:499] - Rendering statement type: 
2025-09-03 04:09:49,503 - utilities.FormatSQL - DEBUG - [FormatSQL.py:537] - {'indent': 12, 'line': "HTP.P ('MDM_V_IRTT_EVENTS_KEYC_MTN_IOF>DELETING not supported!');", 'line_no': 195, 'filename': 'zzz.sql'}
2025-09-03 04:09:49,503 - utilities.FormatSQL - WARNING - [FormatSQL.py:850] - Unknown statement type: unknown
2025-09-03 04:09:49,503 - utilities.FormatSQL - DEBUG - [FormatSQL.py:468] - === Main block complete for Oracle ===
2025-09-03 04:09:49,503 - root - DEBUG - [common.py:105] - Generated 33 lines in main execution block
2025-09-03 04:09:49,503 - root - DEBUG - [common.py:105] - Main block rendering took 0.003s
2025-09-03 04:09:49,503 - root - DEBUG - [common.py:105] - Adding footer comments
2025-09-03 04:09:49,503 - root - DEBUG - [common.py:105] - Final SQL contains 40 lines, 2780 characters
2025-09-03 04:09:49,503 - root - DEBUG - [common.py:105] - Oracle SQL generation: 40 lines generated in 0.004s
2025-09-03 04:09:49,504 - root - DEBUG - [common.py:105] - SQL rendering completed successfully
2025-09-03 04:09:49,504 - root - DEBUG - [common.py:105] - Rendered SQL length: 2780 characters
2025-09-03 04:09:49,504 - root - DEBUG - [common.py:105] - SQL rendering took: 0.004 seconds
2025-09-03 04:09:49,504 - root - DEBUG - [common.py:105] - Writing formatted SQL to: files/format_sql\zzz_analysis.sql
2025-09-03 04:09:49,504 - root - DEBUG - [common.py:105] - Successfully wrote formatted SQL to files/format_sql\zzz_analysis.sql
2025-09-03 04:09:49,505 - root - DEBUG - [common.py:105] - === JSON to SQL processing complete for trigger zzz_analysis.json ===
2025-09-03 04:09:49,505 - root - DEBUG - [common.py:105] - ✓ Created zzz_analysis.sql
2025-09-03 04:09:49,505 - root - INFO - [common.py:110] - === File processing complete ===
2025-09-03 04:09:49,505 - root - INFO - [common.py:110] - Successfully processed: 10 files
2025-09-03 04:09:49,505 - root - INFO - [common.py:110] - === Starting comparison with original files ===
2025-09-03 04:09:49,506 - root - DEBUG - [common.py:105] - Comparison complete for bbb.sql: 132 original, 1 generated lines
2025-09-03 04:09:49,507 - root - DEBUG - [common.py:105] - Comparison complete for eee.sql: 29 original, 1 generated lines
2025-09-03 04:09:49,507 - root - DEBUG - [common.py:105] - Comparison complete for trigger1.sql: 870 original, 1 generated lines
2025-09-03 04:09:49,508 - root - DEBUG - [common.py:105] - Comparison complete for trigger2.sql: 465 original, 1 generated lines
2025-09-03 04:09:49,509 - root - DEBUG - [common.py:105] - Comparison complete for trigger3.sql: 265 original, 1 generated lines
2025-09-03 04:09:49,509 - root - DEBUG - [common.py:105] - Comparison complete for trigger4.sql: 23 original, 1 generated lines
2025-09-03 04:09:49,510 - root - DEBUG - [common.py:105] - Comparison complete for trigger5.sql: 36 original, 1 generated lines
2025-09-03 04:09:49,510 - root - DEBUG - [common.py:105] - Comparison complete for trigger6.sql: 89 original, 1 generated lines
2025-09-03 04:09:49,511 - root - DEBUG - [common.py:105] - Comparison complete for yyy.sql: 370 original, 1 generated lines
2025-09-03 04:09:49,511 - root - DEBUG - [common.py:105] - Comparison complete for zzz.sql: 209 original, 1 generated lines
2025-09-03 04:09:49,511 - root - INFO - [common.py:110] - === Conversion Statistics ===
2025-09-03 04:09:49,511 - root - INFO - [common.py:110] - Total files processed: 10
2025-09-03 04:09:49,511 - root - INFO - [common.py:110] - Successful conversions: 0
2025-09-03 04:09:49,512 - root - INFO - [common.py:110] - Failed conversions: 0
2025-09-03 04:09:49,512 - root - INFO - [common.py:110] - Files with validation warnings: 10
2025-09-03 04:09:49,512 - root - INFO - [common.py:110] - === Comparison Results ===
2025-09-03 04:09:49,512 - root - WARNING - [common.py:115] - File bbb.sql: Significant line count difference: 99.2%
2025-09-03 04:09:49,513 - root - WARNING - [common.py:115] - File eee.sql: Significant line count difference: 96.0%
2025-09-03 04:09:49,513 - root - WARNING - [common.py:115] - File trigger1.sql: Significant line count difference: 99.9%
2025-09-03 04:09:49,513 - root - WARNING - [common.py:115] - File trigger2.sql: Significant line count difference: 99.8%
2025-09-03 04:09:49,513 - root - WARNING - [common.py:115] - File trigger3.sql: Significant line count difference: 99.6%
2025-09-03 04:09:49,513 - root - WARNING - [common.py:115] - File trigger4.sql: Significant line count difference: 95.5%
2025-09-03 04:09:49,514 - root - WARNING - [common.py:115] - File trigger5.sql: Significant line count difference: 97.1%
2025-09-03 04:09:49,514 - root - WARNING - [common.py:115] - File trigger6.sql: Significant line count difference: 98.8%
2025-09-03 04:09:49,514 - root - WARNING - [common.py:115] - File yyy.sql: Significant line count difference: 99.7%
2025-09-03 04:09:49,514 - root - WARNING - [common.py:115] - File zzz.sql: Significant line count difference: 99.5%
2025-09-03 04:09:49,514 - root - INFO - [common.py:110] - === JSON analysis to formatted Oracle SQL conversion complete ===
