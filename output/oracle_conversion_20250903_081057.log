2025-09-03 08:10:57,744 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 20 characters of SQL
2025-09-03 08:10:57,745 - root - DEBUG - [OracleTriggerAnalyzer.py:106] - structured lines conversion 0 lines processed
2025-09-03 08:10:57,745 - root - DEBUG - [OracleTriggerAnalyzer.py:109] - SQL section parsing
2025-09-03 08:10:57,745 - root - DEBUG - [OracleTriggerAnalyzer.py:322] - structured lines conversion
2025-09-03 08:10:57,745 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-03 08:10:57,745 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 203 total, 45 with semicolons, 18 empty lines skipped
2025-09-03 08:10:57,747 - root - DEBUG - [OracleTriggerAnalyzer.py:324] - structured lines conversion
2025-09-03 08:10:57,747 - root - DEBUG - [OracleTriggerAnalyzer.py:261] - Block comment stripping complete: 0 comments extracted, 203 lines cleaned
2025-09-03 08:10:57,747 - root - DEBUG - [OracleTriggerAnalyzer.py:328] - Removed block comments from main section
2025-09-03 08:10:57,747 - root - DEBUG - [OracleTriggerAnalyzer.py:305] - Inline comment stripping complete: 18 comments extracted, 185 lines cleaned
2025-09-03 08:10:57,747 - root - DEBUG - [OracleTriggerAnalyzer.py:332] - Removed inline comments from main section
2025-09-03 08:10:57,747 - root - DEBUG - [OracleTriggerAnalyzer.py:344] - Found DECLARE at line 3
2025-09-03 08:10:57,747 - root - DEBUG - [OracleTriggerAnalyzer.py:348] - Found BEGIN at line 15
2025-09-03 08:10:57,747 - root - DEBUG - [OracleTriggerAnalyzer.py:358] - DECLARE section: lines 3-14
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:386] - Starting declaration parsing
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_INS
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_UPD
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_UPD2
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_UPD3
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_UPD4
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_DEL
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:464] - Processed exception: ERR_LEVEL
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_HOLIDAY_DESCS
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_COUNTRY_CODES
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_CHK_IS_MULTIVALUE
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:430] - Processed variable: V_CHK_DISTINCT
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:1597] - Starting top-level BEGIN blocks parsing
2025-09-03 08:10:57,748 - root - DEBUG - [OracleTriggerAnalyzer.py:1782] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'DUP_VAL_ON_INDEX', 'when_line_no': 186, 'when_indent': 4, 'then_line_no': 186, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 189}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS', 'when_line_no': 190, 'when_indent': 4, 'then_line_no': 190, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 193}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 194, 'when_indent': 4, 'then_line_no': 194, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 197}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD2', 'when_line_no': 198, 'when_indent': 4, 'then_line_no': 198, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 201}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD3', 'when_line_no': 202, 'when_indent': 4, 'then_line_no': 202, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 205}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD4', 'when_line_no': 206, 'when_indent': 4, 'then_line_no': 206, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 209}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 210, 'when_indent': 4, 'then_line_no': 210, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 213}]}, {'type': 'exception_handler', 'exception_name': 'ERR_LEVEL', 'when_line_no': 214, 'when_indent': 4, 'then_line_no': 214, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 217}]}]
2025-09-03 08:10:57,749 - root - DEBUG - [OracleTriggerAnalyzer.py:1642] - Begin line: {'indent': 12, 'line': '            BEGIN', 'line_no': 59} 32
2025-09-03 08:10:57,749 - root - DEBUG - [OracleTriggerAnalyzer.py:1649] - Exception line: {'indent': 12, 'line': '            EXCEPTION', 'line_no': 91} 64
2025-09-03 08:10:57,749 - root - DEBUG - [OracleTriggerAnalyzer.py:1652] - End line: {'indent': 12, 'line': '            END;', 'line_no': 98} 71
2025-09-03 08:10:57,749 - root - DEBUG - [OracleTriggerAnalyzer.py:1782] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 93}, {'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}, {'indent': 20, 'line': '                    ELSE', 'line_no': 95}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 96}, {'indent': 20, 'line': '                    END IF;', 'line_no': 97}]}]
2025-09-03 08:10:57,749 - root - DEBUG - [OracleTriggerAnalyzer.py:1642] - Begin line: {'indent': 12, 'line': '            BEGIN', 'line_no': 100} 73
2025-09-03 08:10:57,749 - root - DEBUG - [OracleTriggerAnalyzer.py:1649] - Exception line: {'indent': 12, 'line': '            EXCEPTION', 'line_no': 153} 126
2025-09-03 08:10:57,749 - root - DEBUG - [OracleTriggerAnalyzer.py:1652] - End line: {'indent': 12, 'line': '            END;', 'line_no': 160} 133
2025-09-03 08:10:57,749 - root - DEBUG - [OracleTriggerAnalyzer.py:1782] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 154, 'when_indent': 16, 'then_line_no': 154, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 155}, {'indent': 24, 'line': '                        RAISE ERR_UPD4;', 'line_no': 156}, {'indent': 20, 'line': '                    ELSE', 'line_no': 157}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 158}, {'indent': 20, 'line': '                    END IF;', 'line_no': 159}]}]
2025-09-03 08:10:57,750 - root - INFO - [OracleTriggerAnalyzer.py:659] - with_indent: 21
2025-09-03 08:10:57,750 - root - INFO - [OracleTriggerAnalyzer.py:681] - with_i: 21 i: 52
2025-09-03 08:10:57,750 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - WITH C AS ( SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL )
2025-09-03 08:10:57,750 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C; SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ; IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN RAISE ERR_UPD2; END IF;
2025-09-03 08:10:57,750 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 4, 'line': '    IF (INSERTING', 'line_no': 19}
2025-09-03 08:10:57,750 - root - DEBUG - [OracleTriggerAnalyzer.py:1222] - if_indent: 19
2025-09-03 08:10:57,750 - root - DEBUG - [OracleTriggerAnalyzer.py:1228] - if_i: 19 i: 182
2025-09-03 08:10:57,750 - root - DEBUG - [OracleTriggerAnalyzer.py:1229] - if_elses working_lines lenght: 26
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1311] - line_info : {'indent': 4, 'line': '    OR UPDATING) THEN', 'line_no': 20}
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1327] - then_statements: 0 18
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1333] - line_info: {'indent': 8, 'line': '        IF :OLD.HOLIDAY_DATE IS NULL THEN', 'line_no': 176}
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1333] - line_info: {'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1333] - line_info: {'indent': 8, 'line': '        END IF;', 'line_no': 178}
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1333] - line_info: {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1333] - line_info: {'indent': 8, 'line': '        WHERE', 'line_no': 180}
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1333] - line_info: {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1333] - line_info: {'indent': 4, 'line': '    END IF;', 'line_no': 182}
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1348] - {'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 175}
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1375] - elif_else_then_statements: [{'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 175}, {'indent': 8, 'line': '        IF :OLD.HOLIDAY_DATE IS NULL THEN', 'line_no': 176}, {'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}, {'indent': 8, 'line': '        END IF;', 'line_no': 178}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}, {'indent': 8, 'line': '        WHERE', 'line_no': 180}, {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}]
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1376] - [{'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 175}, {'indent': 8, 'line': '        IF :OLD.HOLIDAY_DATE IS NULL THEN', 'line_no': 176}, {'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}, {'indent': 8, 'line': '        END IF;', 'line_no': 178}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}, {'indent': 8, 'line': '        WHERE', 'line_no': 180}, {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}]
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1379] - elif_else_then_statements[0]: {'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 175}
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1406] - elif_else_then_statements 0: 175 then_i: 175
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1407] - case_when_then_statements: [{'indent': 4, 'line': '    ELSIF (DELETING) THEN', 'line_no': 175}, {'indent': 8, 'line': '        IF :OLD.HOLIDAY_DATE IS NULL THEN', 'line_no': 176}, {'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}, {'indent': 8, 'line': '        END IF;', 'line_no': 178}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}, {'indent': 8, 'line': '        WHERE', 'line_no': 180}, {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}]
2025-09-03 08:10:57,751 - root - DEBUG - [OracleTriggerAnalyzer.py:1408] - elif_else_then_statements[0]['indent']: 4
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1365] - if_else_statements: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 19, 'then_line_no': 20, 'if_indent': 4, 'end_if_line_no': 182, 'then_statements': [{'type': 'with_statement', 'with_line_no': 21, 'with_indent': 21, 'with_values': "C AS ( SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL )", 'with_statements': "SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C; SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ; IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN RAISE ERR_UPD2; END IF", 'with_end_line_no': 52}, {'indent': 8, 'line': '        IF V_CHK_DISTINCT > 0 THEN', 'line_no': 54}, {'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}, {'indent': 8, 'line': '        END IF;', 'line_no': 56}, {'indent': 8, 'line': '        IF V_CHK_IS_MULTIVALUE <= 1 THEN', 'line_no': 58}, {'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 93}, {'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}, {'indent': 20, 'line': '                    ELSE', 'line_no': 95}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 96}, {'indent': 20, 'line': '                    END IF;', 'line_no': 97}]}], 'exception_line_no': 91, 'end_line_no': 98}, {'indent': 8, 'line': '        ELSE', 'line_no': 99}, {'type': 'begin_end', 'begin_line_no': 100, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( WITH HN AS (', 'line_no': 101}, {'indent': 20, 'line': '                    SELECT', 'line_no': 102}, {'indent': 24, 'line': '                        A.COLUMN_VALUE HOLIDAY_DESC,', 'line_no': 103}, {'indent': 24, 'line': '                        B.COLUMN_VALUE COUNTRY_CODE', 'line_no': 104}, {'indent': 20, 'line': '                    FROM', 'line_no': 105}, {'indent': 24, 'line': '                        (', 'line_no': 106}, {'indent': 28, 'line': '                            SELECT', 'line_no': 107}, {'indent': 32, 'line': '                                COLUMN_VALUE,', 'line_no': 108}, {'indent': 32, 'line': '                                ROWNUM       RN', 'line_no': 109}, {'indent': 28, 'line': '                            FROM', 'line_no': 110}, {'indent': 32, 'line': '                                TABLE(V_HOLIDAY_DESCS)', 'line_no': 111}, {'indent': 24, 'line': '                        ) A', 'line_no': 112}, {'indent': 24, 'line': '                        JOIN (', 'line_no': 113}, {'indent': 28, 'line': '                            SELECT', 'line_no': 114}, {'indent': 32, 'line': '                                COLUMN_VALUE,', 'line_no': 115}, {'indent': 32, 'line': '                                ROWNUM       RN', 'line_no': 116}, {'indent': 28, 'line': '                            FROM', 'line_no': 117}, {'indent': 32, 'line': '                                TABLE(V_COUNTRY_CODES)', 'line_no': 118}, {'indent': 24, 'line': '                        ) B', 'line_no': 119}, {'indent': 24, 'line': '                        ON A.RN = B.RN', 'line_no': 120}, {'indent': 16, 'line': '                )', 'line_no': 121}, {'indent': 20, 'line': '                    SELECT', 'line_no': 122}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 123}, {'indent': 24, 'line': "                        DECODE(VALID_IND, 'N', 'N/A', HOLIDAY_DESC) HOLIDAY_DESC,", 'line_no': 124}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 125}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 126}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 127}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 128}, {'indent': 20, 'line': '                    FROM', 'line_no': 129}, {'indent': 24, 'line': '                        (', 'line_no': 130}, {'indent': 28, 'line': '                            SELECT', 'line_no': 131}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 132}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 133}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 134}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 135}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 136}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 137}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 138}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 139}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 140}, {'indent': 28, 'line': '                            FROM', 'line_no': 141}, {'indent': 32, 'line': '                                DUAL', 'line_no': 142}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 143}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 144}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 145}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 146}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 147}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 148}, {'indent': 24, 'line': '                        LEFT JOIN HN', 'line_no': 149}, {'indent': 24, 'line': '                        ON HN.COUNTRY_CODE = COUNTRY_CD', 'line_no': 150}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 151}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 152}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 154, 'when_indent': 16, 'then_line_no': 154, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 155}, {'indent': 24, 'line': '                        RAISE ERR_UPD4;', 'line_no': 156}, {'indent': 20, 'line': '                    ELSE', 'line_no': 157}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 158}, {'indent': 20, 'line': '                    END IF;', 'line_no': 159}]}], 'exception_line_no': 153, 'end_line_no': 160}, {'indent': 8, 'line': '        END IF;', 'line_no': 161}, {'indent': 8, 'line': '        IF (:NEW.GRANTED != :OLD.GRANTED) THEN', 'line_no': 166}, {'indent': 12, 'line': '            MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(', 'line_no': 169}, {'indent': 16, 'line': '                P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE),', 'line_no': 170}, {'indent': 16, 'line': '                P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE),', 'line_no': 171}, {'indent': 16, 'line': '                P_START_EVENT_DATE => :NEW.HOLIDAY_DATE', 'line_no': 172}, {'indent': 12, 'line': '            );', 'line_no': 173}, {'indent': 8, 'line': '        END IF;', 'line_no': 174}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 175, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 175, 'then_statements': [{'indent': 8, 'line': '        IF :OLD.HOLIDAY_DATE IS NULL THEN', 'line_no': 176}, {'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}, {'indent': 8, 'line': '        END IF;', 'line_no': 178}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}, {'indent': 8, 'line': '        WHERE', 'line_no': 180}, {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}]}], 'else_statements': []}
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'type': 'with_statement', 'with_line_no': 21, 'with_indent': 21, 'with_values': "C AS ( SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL )", 'with_statements': "SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C; SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ; IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN RAISE ERR_UPD2; END IF", 'with_end_line_no': 52}
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': '        IF V_CHK_DISTINCT > 0 THEN', 'line_no': 54}
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1222] - if_indent: 54
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1228] - if_i: 54 i: 56
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1229] - if_elses working_lines lenght: 3
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1362] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}]
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1365] - if_else_statements: {'condition': ' V_CHK_DISTINCT > 0 ', 'type': 'if_else', 'if_line_no': 54, 'then_line_no': 54, 'if_indent': 8, 'end_if_line_no': 56, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}], 'if_elses': [], 'else_statements': []}
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': '        IF V_CHK_IS_MULTIVALUE <= 1 THEN', 'line_no': 58}
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1222] - if_indent: 58
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1228] - if_i: 58 i: 161
2025-09-03 08:10:57,752 - root - DEBUG - [OracleTriggerAnalyzer.py:1229] - if_elses working_lines lenght: 5
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1365] - if_else_statements: {'condition': ' V_CHK_IS_MULTIVALUE <= 1 ', 'type': 'if_else', 'if_line_no': 58, 'then_line_no': 58, 'if_indent': 8, 'end_if_line_no': 161, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 93}, {'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}, {'indent': 20, 'line': '                    ELSE', 'line_no': 95}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 96}, {'indent': 20, 'line': '                    END IF;', 'line_no': 97}]}], 'exception_line_no': 91, 'end_line_no': 98}], 'if_elses': [], 'else_statements': [[{'type': 'begin_end', 'begin_line_no': 100, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( WITH HN AS (', 'line_no': 101}, {'indent': 20, 'line': '                    SELECT', 'line_no': 102}, {'indent': 24, 'line': '                        A.COLUMN_VALUE HOLIDAY_DESC,', 'line_no': 103}, {'indent': 24, 'line': '                        B.COLUMN_VALUE COUNTRY_CODE', 'line_no': 104}, {'indent': 20, 'line': '                    FROM', 'line_no': 105}, {'indent': 24, 'line': '                        (', 'line_no': 106}, {'indent': 28, 'line': '                            SELECT', 'line_no': 107}, {'indent': 32, 'line': '                                COLUMN_VALUE,', 'line_no': 108}, {'indent': 32, 'line': '                                ROWNUM       RN', 'line_no': 109}, {'indent': 28, 'line': '                            FROM', 'line_no': 110}, {'indent': 32, 'line': '                                TABLE(V_HOLIDAY_DESCS)', 'line_no': 111}, {'indent': 24, 'line': '                        ) A', 'line_no': 112}, {'indent': 24, 'line': '                        JOIN (', 'line_no': 113}, {'indent': 28, 'line': '                            SELECT', 'line_no': 114}, {'indent': 32, 'line': '                                COLUMN_VALUE,', 'line_no': 115}, {'indent': 32, 'line': '                                ROWNUM       RN', 'line_no': 116}, {'indent': 28, 'line': '                            FROM', 'line_no': 117}, {'indent': 32, 'line': '                                TABLE(V_COUNTRY_CODES)', 'line_no': 118}, {'indent': 24, 'line': '                        ) B', 'line_no': 119}, {'indent': 24, 'line': '                        ON A.RN = B.RN', 'line_no': 120}, {'indent': 16, 'line': '                )', 'line_no': 121}, {'indent': 20, 'line': '                    SELECT', 'line_no': 122}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 123}, {'indent': 24, 'line': "                        DECODE(VALID_IND, 'N', 'N/A', HOLIDAY_DESC) HOLIDAY_DESC,", 'line_no': 124}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 125}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 126}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 127}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 128}, {'indent': 20, 'line': '                    FROM', 'line_no': 129}, {'indent': 24, 'line': '                        (', 'line_no': 130}, {'indent': 28, 'line': '                            SELECT', 'line_no': 131}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 132}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 133}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 134}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 135}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 136}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 137}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 138}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 139}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 140}, {'indent': 28, 'line': '                            FROM', 'line_no': 141}, {'indent': 32, 'line': '                                DUAL', 'line_no': 142}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 143}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 144}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 145}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 146}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 147}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 148}, {'indent': 24, 'line': '                        LEFT JOIN HN', 'line_no': 149}, {'indent': 24, 'line': '                        ON HN.COUNTRY_CODE = COUNTRY_CD', 'line_no': 150}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 151}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 152}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 154, 'when_indent': 16, 'then_line_no': 154, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 155}, {'indent': 24, 'line': '                        RAISE ERR_UPD4;', 'line_no': 156}, {'indent': 20, 'line': '                    ELSE', 'line_no': 157}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 158}, {'indent': 20, 'line': '                    END IF;', 'line_no': 159}]}], 'exception_line_no': 153, 'end_line_no': 160}, {'indent': 8, 'line': '        END IF;', 'line_no': 161}]]}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 93}, {'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}, {'indent': 20, 'line': '                    ELSE', 'line_no': 95}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 96}, {'indent': 20, 'line': '                    END IF;', 'line_no': 97}]}], 'exception_line_no': 91, 'end_line_no': 98}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 20, 'line': '                    SELECT', 'line_no': 61}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 20, 'line': '                    FROM', 'line_no': 68}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': '                        (', 'line_no': 69}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 28, 'line': '                            SELECT', 'line_no': 70}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}
2025-09-03 08:10:57,753 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 28, 'line': '                            FROM', 'line_no': 81}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 32, 'line': '                                DUAL', 'line_no': 82}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 93}
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1222] - if_indent: 93
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1228] - if_i: 93 i: 97
2025-09-03 08:10:57,754 - root - DEBUG - [OracleTriggerAnalyzer.py:1229] - if_elses working_lines lenght: 5
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1365] - if_else_statements: {'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}], 'if_elses': [], 'else_statements': [[{'indent': 24, 'line': '                        RAISE;', 'line_no': 96}, {'indent': 20, 'line': '                    END IF;', 'line_no': 97}]]}
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: [{'indent': 24, 'line': '                        RAISE;', 'line_no': 96}, {'indent': 20, 'line': '                    END IF;', 'line_no': 97}]
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: [{'type': 'begin_end', 'begin_line_no': 100, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( WITH HN AS (', 'line_no': 101}, {'indent': 20, 'line': '                    SELECT', 'line_no': 102}, {'indent': 24, 'line': '                        A.COLUMN_VALUE HOLIDAY_DESC,', 'line_no': 103}, {'indent': 24, 'line': '                        B.COLUMN_VALUE COUNTRY_CODE', 'line_no': 104}, {'indent': 20, 'line': '                    FROM', 'line_no': 105}, {'indent': 24, 'line': '                        (', 'line_no': 106}, {'indent': 28, 'line': '                            SELECT', 'line_no': 107}, {'indent': 32, 'line': '                                COLUMN_VALUE,', 'line_no': 108}, {'indent': 32, 'line': '                                ROWNUM       RN', 'line_no': 109}, {'indent': 28, 'line': '                            FROM', 'line_no': 110}, {'indent': 32, 'line': '                                TABLE(V_HOLIDAY_DESCS)', 'line_no': 111}, {'indent': 24, 'line': '                        ) A', 'line_no': 112}, {'indent': 24, 'line': '                        JOIN (', 'line_no': 113}, {'indent': 28, 'line': '                            SELECT', 'line_no': 114}, {'indent': 32, 'line': '                                COLUMN_VALUE,', 'line_no': 115}, {'indent': 32, 'line': '                                ROWNUM       RN', 'line_no': 116}, {'indent': 28, 'line': '                            FROM', 'line_no': 117}, {'indent': 32, 'line': '                                TABLE(V_COUNTRY_CODES)', 'line_no': 118}, {'indent': 24, 'line': '                        ) B', 'line_no': 119}, {'indent': 24, 'line': '                        ON A.RN = B.RN', 'line_no': 120}, {'indent': 16, 'line': '                )', 'line_no': 121}, {'indent': 20, 'line': '                    SELECT', 'line_no': 122}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 123}, {'indent': 24, 'line': "                        DECODE(VALID_IND, 'N', 'N/A', HOLIDAY_DESC) HOLIDAY_DESC,", 'line_no': 124}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 125}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 126}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 127}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 128}, {'indent': 20, 'line': '                    FROM', 'line_no': 129}, {'indent': 24, 'line': '                        (', 'line_no': 130}, {'indent': 28, 'line': '                            SELECT', 'line_no': 131}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 132}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 133}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 134}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 135}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 136}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 137}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 138}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 139}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 140}, {'indent': 28, 'line': '                            FROM', 'line_no': 141}, {'indent': 32, 'line': '                                DUAL', 'line_no': 142}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 143}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 144}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 145}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 146}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 147}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 148}, {'indent': 24, 'line': '                        LEFT JOIN HN', 'line_no': 149}, {'indent': 24, 'line': '                        ON HN.COUNTRY_CODE = COUNTRY_CD', 'line_no': 150}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 151}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 152}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 154, 'when_indent': 16, 'then_line_no': 154, 'exception_statements': [{'indent': 20, 'line': '                    IF SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 THEN', 'line_no': 155}, {'indent': 24, 'line': '                        RAISE ERR_UPD4;', 'line_no': 156}, {'indent': 20, 'line': '                    ELSE', 'line_no': 157}, {'indent': 24, 'line': '                        RAISE;', 'line_no': 158}, {'indent': 20, 'line': '                    END IF;', 'line_no': 159}]}], 'exception_line_no': 153, 'end_line_no': 160}, {'indent': 8, 'line': '        END IF;', 'line_no': 161}]
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': '        IF (:NEW.GRANTED != :OLD.GRANTED) THEN', 'line_no': 166}
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1222] - if_indent: 166
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1228] - if_i: 166 i: 174
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1229] - if_elses working_lines lenght: 7
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1362] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(', 'line_no': 169}, {'indent': 16, 'line': '                P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE),', 'line_no': 170}, {'indent': 16, 'line': '                P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE),', 'line_no': 171}, {'indent': 16, 'line': '                P_START_EVENT_DATE => :NEW.HOLIDAY_DATE', 'line_no': 172}, {'indent': 12, 'line': '            );', 'line_no': 173}]
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1365] - if_else_statements: {'condition': ' (:NEW.GRANTED != :OLD.GRANTED) ', 'type': 'if_else', 'if_line_no': 166, 'then_line_no': 166, 'if_indent': 8, 'end_if_line_no': 174, 'then_statements': [{'indent': 12, 'line': '            MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(', 'line_no': 169}, {'indent': 16, 'line': '                P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE),', 'line_no': 170}, {'indent': 16, 'line': '                P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE),', 'line_no': 171}, {'indent': 16, 'line': '                P_START_EVENT_DATE => :NEW.HOLIDAY_DATE', 'line_no': 172}, {'indent': 12, 'line': '            );', 'line_no': 173}], 'if_elses': [], 'else_statements': []}
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 12, 'line': '            MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(', 'line_no': 169}
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 16, 'line': '                P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE),', 'line_no': 170}
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 16, 'line': '                P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE),', 'line_no': 171}
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 16, 'line': '                P_START_EVENT_DATE => :NEW.HOLIDAY_DATE', 'line_no': 172}
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 12, 'line': '            );', 'line_no': 173}
2025-09-03 08:10:57,755 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': '        IF :OLD.HOLIDAY_DATE IS NULL THEN', 'line_no': 176}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1222] - if_indent: 176
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1228] - if_i: 176 i: 178
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1229] - if_elses working_lines lenght: 3
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1362] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}]
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1365] - if_else_statements: {'condition': ' :OLD.HOLIDAY_DATE IS NULL ', 'type': 'if_else', 'if_line_no': 176, 'then_line_no': 176, 'if_indent': 8, 'end_if_line_no': 178, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}], 'if_elses': [], 'else_statements': []}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 180}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 189}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 193}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 197}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 201}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 205}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 209}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 213}
2025-09-03 08:10:57,756 - root - DEBUG - [OracleTriggerAnalyzer.py:1218] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 217}
2025-09-03 08:10:58,134 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 19, 'then_line_no': 20, 'if_indent': 4, 'end_if_line_no': 182, 'then_statements': [{'type': 'with_statement', 'with_line_no': 21, 'with_indent': 21, 'with_values': "C AS ( SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL )", 'with_statements': "SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C; SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ; IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN RAISE ERR_UPD2; END IF", 'with_end_line_no': 52}, {'condition': ' V_CHK_DISTINCT > 0 ', 'type': 'if_else', 'if_line_no': 54, 'then_line_no': 54, 'if_indent': 8, 'end_if_line_no': 56, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}], 'if_elses': [], 'else_statements': []}, {'condition': ' V_CHK_IS_MULTIVALUE <= 1 ', 'type': 'if_else', 'if_line_no': 58, 'then_line_no': 58, 'if_indent': 8, 'end_if_line_no': 161, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}], 'if_elses': [], 'else_statements': []}]}], 'exception_line_no': 91, 'end_line_no': 98}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.GRANTED != :OLD.GRANTED) ', 'type': 'if_else', 'if_line_no': 166, 'then_line_no': 166, 'if_indent': 8, 'end_if_line_no': 174, 'then_statements': [{'indent': 12, 'line': '            MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(', 'line_no': 169}, {'indent': 16, 'line': '                P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE),', 'line_no': 170}, {'indent': 16, 'line': '                P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE),', 'line_no': 171}, {'indent': 16, 'line': '                P_START_EVENT_DATE => :NEW.HOLIDAY_DATE', 'line_no': 172}, {'indent': 12, 'line': '            );', 'line_no': 173}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 175, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 175, 'then_statements': [{'condition': ' :OLD.HOLIDAY_DATE IS NULL ', 'type': 'if_else', 'if_line_no': 176, 'then_line_no': 176, 'if_indent': 8, 'end_if_line_no': 178, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}, {'indent': 8, 'line': '        WHERE', 'line_no': 180}, {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}]}], 'else_statements': []}]
2025-09-03 08:10:58,134 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,143 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'type': 'with_statement', 'with_line_no': 21, 'with_indent': 21, 'with_values': "C AS ( SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL )", 'with_statements': "SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C; SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ; IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN RAISE ERR_UPD2; END IF", 'with_end_line_no': 52}, {'condition': ' V_CHK_DISTINCT > 0 ', 'type': 'if_else', 'if_line_no': 54, 'then_line_no': 54, 'if_indent': 8, 'end_if_line_no': 56, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}], 'if_elses': [], 'else_statements': []}, {'condition': ' V_CHK_IS_MULTIVALUE <= 1 ', 'type': 'if_else', 'if_line_no': 58, 'then_line_no': 58, 'if_indent': 8, 'end_if_line_no': 161, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}], 'if_elses': [], 'else_statements': []}]}], 'exception_line_no': 91, 'end_line_no': 98}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.GRANTED != :OLD.GRANTED) ', 'type': 'if_else', 'if_line_no': 166, 'then_line_no': 166, 'if_indent': 8, 'end_if_line_no': 174, 'then_statements': [{'indent': 12, 'line': '            MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(', 'line_no': 169}, {'indent': 16, 'line': '                P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE),', 'line_no': 170}, {'indent': 16, 'line': '                P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE),', 'line_no': 171}, {'indent': 16, 'line': '                P_START_EVENT_DATE => :NEW.HOLIDAY_DATE', 'line_no': 172}, {'indent': 12, 'line': '            );', 'line_no': 173}], 'if_elses': [], 'else_statements': []}]
2025-09-03 08:10:58,143 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,143 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 1
2025-09-03 08:10:58,153 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}]
2025-09-03 08:10:58,153 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,153 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}
2025-09-03 08:10:58,161 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: []
2025-09-03 08:10:58,161 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 2
2025-09-03 08:10:58,173 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}], 'if_elses': [], 'else_statements': []}]}], 'exception_line_no': 91, 'end_line_no': 98}]
2025-09-03 08:10:58,173 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,182 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}]
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 1
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 20, 'line': '                    SELECT', 'line_no': 61}
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 2
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 3
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 4
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 5
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}
2025-09-03 08:10:58,183 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 6
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 7
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 8
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 20, 'line': '                    FROM', 'line_no': 68}
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 9
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': '                        (', 'line_no': 69}
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 10
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 28, 'line': '                            SELECT', 'line_no': 70}
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 11
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 12
2025-09-03 08:10:58,184 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}
2025-09-03 08:10:58,185 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 13
2025-09-03 08:10:58,185 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}
2025-09-03 08:10:58,185 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 14
2025-09-03 08:10:58,185 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}
2025-09-03 08:10:58,185 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 15
2025-09-03 08:10:58,185 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 16
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 17
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 18
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 19
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 20
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 21
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 28, 'line': '                            FROM', 'line_no': 81}
2025-09-03 08:10:58,186 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 22
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 32, 'line': '                                DUAL', 'line_no': 82}
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 23
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 24
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 25
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 26
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 27
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 28
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 29
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}
2025-09-03 08:10:58,187 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 30
2025-09-03 08:10:58,188 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}
2025-09-03 08:10:58,203 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}], 'if_elses': [], 'else_statements': []}]
2025-09-03 08:10:58,204 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,217 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}]
2025-09-03 08:10:58,217 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,217 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}
2025-09-03 08:10:58,238 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: []
2025-09-03 08:10:58,253 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: []
2025-09-03 08:10:58,253 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 3
2025-09-03 08:10:58,265 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 12, 'line': '            MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(', 'line_no': 169}, {'indent': 16, 'line': '                P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE),', 'line_no': 170}, {'indent': 16, 'line': '                P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE),', 'line_no': 171}, {'indent': 16, 'line': '                P_START_EVENT_DATE => :NEW.HOLIDAY_DATE', 'line_no': 172}, {'indent': 12, 'line': '            );', 'line_no': 173}]
2025-09-03 08:10:58,265 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,265 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 12, 'line': '            MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(', 'line_no': 169}
2025-09-03 08:10:58,265 - root - DEBUG - [OracleTriggerAnalyzer.py:842] - function_calling_name: MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH
2025-09-03 08:10:58,265 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - item: MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH(
2025-09-03 08:10:58,265 - root - DEBUG - [OracleTriggerAnalyzer.py:850] - function calling start: 169
2025-09-03 08:10:58,265 - root - DEBUG - [OracleTriggerAnalyzer.py:863] - function calling end: 173
2025-09-03 08:10:58,265 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH( P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE );
2025-09-03 08:10:58,265 - root - DEBUG - [OracleTriggerAnalyzer.py:1800] - combined_line: MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH( P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE );
2025-09-03 08:10:58,266 - root - DEBUG - [OracleTriggerAnalyzer.py:1830] - function_calling: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_YEAR': 'EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE)', 'P_MONTH': 'EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE)', 'P_START_EVENT_DATE': ':NEW.HOLIDAY_DATE'}, 'raw_text': 'P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE'}}
2025-09-03 08:10:58,278 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: []
2025-09-03 08:10:58,293 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'condition': ' :OLD.HOLIDAY_DATE IS NULL ', 'type': 'if_else', 'if_line_no': 176, 'then_line_no': 176, 'if_indent': 8, 'end_if_line_no': 178, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}, {'indent': 8, 'line': '        WHERE', 'line_no': 180}, {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}]
2025-09-03 08:10:58,293 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,307 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}]
2025-09-03 08:10:58,307 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,307 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}
2025-09-03 08:10:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: []
2025-09-03 08:10:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 1
2025-09-03 08:10:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}
2025-09-03 08:10:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 2
2025-09-03 08:10:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 180}
2025-09-03 08:10:58,325 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 3
2025-09-03 08:10:58,326 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}
2025-09-03 08:10:58,346 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: []
2025-09-03 08:10:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 189}]
2025-09-03 08:10:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 189}
2025-09-03 08:10:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:842] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 08:10:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - item: RAISE_APPLICATION_ERROR (-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:850] - function calling start: 189
2025-09-03 08:10:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:852] - function calling end: 189
2025-09-03 08:10:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:1800] - combined_line: RAISE_APPLICATION_ERROR (-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,370 - root - DEBUG - [OracleTriggerAnalyzer.py:1830] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,384 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 193}]
2025-09-03 08:10:58,384 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,384 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 193}
2025-09-03 08:10:58,384 - root - DEBUG - [OracleTriggerAnalyzer.py:842] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 08:10:58,384 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - item: RAISE_APPLICATION_ERROR (-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,384 - root - DEBUG - [OracleTriggerAnalyzer.py:850] - function calling start: 193
2025-09-03 08:10:58,384 - root - DEBUG - [OracleTriggerAnalyzer.py:852] - function calling end: 193
2025-09-03 08:10:58,385 - root - DEBUG - [OracleTriggerAnalyzer.py:1800] - combined_line: RAISE_APPLICATION_ERROR (-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,385 - root - DEBUG - [OracleTriggerAnalyzer.py:1830] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20102', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,400 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 197}]
2025-09-03 08:10:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 197}
2025-09-03 08:10:58,401 - root - DEBUG - [OracleTriggerAnalyzer.py:842] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 08:10:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - item: RAISE_APPLICATION_ERROR (-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:850] - function calling start: 197
2025-09-03 08:10:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:852] - function calling end: 197
2025-09-03 08:10:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1800] - combined_line: RAISE_APPLICATION_ERROR (-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,402 - root - DEBUG - [OracleTriggerAnalyzer.py:1830] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,425 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 201}]
2025-09-03 08:10:58,426 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,426 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 201}
2025-09-03 08:10:58,426 - root - DEBUG - [OracleTriggerAnalyzer.py:842] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 08:10:58,427 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - item: RAISE_APPLICATION_ERROR (-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,427 - root - DEBUG - [OracleTriggerAnalyzer.py:850] - function calling start: 201
2025-09-03 08:10:58,427 - root - DEBUG - [OracleTriggerAnalyzer.py:852] - function calling end: 201
2025-09-03 08:10:58,427 - root - DEBUG - [OracleTriggerAnalyzer.py:1800] - combined_line: RAISE_APPLICATION_ERROR (-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,428 - root - DEBUG - [OracleTriggerAnalyzer.py:1830] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20104', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,458 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 205}]
2025-09-03 08:10:58,458 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,458 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 205}
2025-09-03 08:10:58,458 - root - DEBUG - [OracleTriggerAnalyzer.py:842] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 08:10:58,458 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - item: RAISE_APPLICATION_ERROR (-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:850] - function calling start: 205
2025-09-03 08:10:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:852] - function calling end: 205
2025-09-03 08:10:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:1800] - combined_line: RAISE_APPLICATION_ERROR (-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,459 - root - DEBUG - [OracleTriggerAnalyzer.py:1830] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 209}]
2025-09-03 08:10:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 209}
2025-09-03 08:10:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:842] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 08:10:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - item: RAISE_APPLICATION_ERROR (-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:850] - function calling start: 209
2025-09-03 08:10:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:852] - function calling end: 209
2025-09-03 08:10:58,484 - root - DEBUG - [OracleTriggerAnalyzer.py:1800] - combined_line: RAISE_APPLICATION_ERROR (-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,485 - root - DEBUG - [OracleTriggerAnalyzer.py:1830] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20106', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,508 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 213}]
2025-09-03 08:10:58,508 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,508 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 213}
2025-09-03 08:10:58,508 - root - DEBUG - [OracleTriggerAnalyzer.py:842] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 08:10:58,508 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - item: RAISE_APPLICATION_ERROR (-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,509 - root - DEBUG - [OracleTriggerAnalyzer.py:850] - function calling start: 213
2025-09-03 08:10:58,509 - root - DEBUG - [OracleTriggerAnalyzer.py:852] - function calling end: 213
2025-09-03 08:10:58,510 - root - DEBUG - [OracleTriggerAnalyzer.py:1800] - combined_line: RAISE_APPLICATION_ERROR (-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,511 - root - DEBUG - [OracleTriggerAnalyzer.py:1830] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20107', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,536 - root - DEBUG - [OracleTriggerAnalyzer.py:807] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 217}]
2025-09-03 08:10:58,536 - root - DEBUG - [OracleTriggerAnalyzer.py:813] - i: 0
2025-09-03 08:10:58,536 - root - DEBUG - [OracleTriggerAnalyzer.py:816] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR (-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');", 'line_no': 217}
2025-09-03 08:10:58,536 - root - DEBUG - [OracleTriggerAnalyzer.py:842] - function_calling_name: RAISE_APPLICATION_ERROR
2025-09-03 08:10:58,537 - root - DEBUG - [OracleTriggerAnalyzer.py:849] - item: RAISE_APPLICATION_ERROR (-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,537 - root - DEBUG - [OracleTriggerAnalyzer.py:850] - function calling start: 217
2025-09-03 08:10:58,537 - root - DEBUG - [OracleTriggerAnalyzer.py:852] - function calling end: 217
2025-09-03 08:10:58,537 - root - DEBUG - [OracleTriggerAnalyzer.py:1800] - combined_line: RAISE_APPLICATION_ERROR (-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF');
2025-09-03 08:10:58,537 - root - DEBUG - [OracleTriggerAnalyzer.py:1830] - function_calling: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,537 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 19, 'then_line_no': 20, 'if_indent': 4, 'end_if_line_no': 182, 'then_statements': [{'type': 'with_statement', 'with_line_no': 21, 'with_indent': 21, 'with_values': "C AS ( SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL )", 'with_statements': "SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C; SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ; IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN RAISE ERR_UPD2; END IF", 'with_end_line_no': 52}, {'condition': ' V_CHK_DISTINCT > 0 ', 'type': 'if_else', 'if_line_no': 54, 'then_line_no': 54, 'if_indent': 8, 'end_if_line_no': 56, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}], 'if_elses': [], 'else_statements': []}, {'condition': ' V_CHK_IS_MULTIVALUE <= 1 ', 'type': 'if_else', 'if_line_no': 58, 'then_line_no': 58, 'if_indent': 8, 'end_if_line_no': 161, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}], 'if_elses': [], 'else_statements': []}]}], 'exception_line_no': 91, 'end_line_no': 98}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.GRANTED != :OLD.GRANTED) ', 'type': 'if_else', 'if_line_no': 166, 'then_line_no': 166, 'if_indent': 8, 'end_if_line_no': 174, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_YEAR': 'EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE)', 'P_MONTH': 'EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE)', 'P_START_EVENT_DATE': ':NEW.HOLIDAY_DATE'}, 'raw_text': 'P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE'}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 175, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 175, 'then_statements': [{'condition': ' :OLD.HOLIDAY_DATE IS NULL ', 'type': 'if_else', 'if_line_no': 176, 'then_line_no': 176, 'if_indent': 8, 'end_if_line_no': 178, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}, {'indent': 8, 'line': '        WHERE', 'line_no': 180}, {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}]}], 'else_statements': []}]
2025-09-03 08:10:58,538 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,538 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'with_statement', 'with_line_no': 21, 'with_indent': 21, 'with_values': "C AS ( SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL )", 'with_statements': "SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C; SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ; IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN RAISE ERR_UPD2; END IF", 'with_end_line_no': 52}, {'condition': ' V_CHK_DISTINCT > 0 ', 'type': 'if_else', 'if_line_no': 54, 'then_line_no': 54, 'if_indent': 8, 'end_if_line_no': 56, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}], 'if_elses': [], 'else_statements': []}, {'condition': ' V_CHK_IS_MULTIVALUE <= 1 ', 'type': 'if_else', 'if_line_no': 58, 'then_line_no': 58, 'if_indent': 8, 'end_if_line_no': 161, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}], 'if_elses': [], 'else_statements': []}]}], 'exception_line_no': 91, 'end_line_no': 98}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.GRANTED != :OLD.GRANTED) ', 'type': 'if_else', 'if_line_no': 166, 'then_line_no': 166, 'if_indent': 8, 'end_if_line_no': 174, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_YEAR': 'EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE)', 'P_MONTH': 'EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE)', 'P_START_EVENT_DATE': ':NEW.HOLIDAY_DATE'}, 'raw_text': 'P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE'}}], 'if_elses': [], 'else_statements': []}]
2025-09-03 08:10:58,538 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,538 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 1
2025-09-03 08:10:58,538 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_UPD3;', 'line_no': 55}]
2025-09-03 08:10:58,538 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,539 - root - DEBUG - [OracleTriggerAnalyzer.py:953] - item:             RAISE ERR_UPD3; || 55 || 12
2025-09-03 08:10:58,539 - root - DEBUG - [OracleTriggerAnalyzer.py:963] - stmt start: 55 || raise_statement || RAISE
2025-09-03 08:10:58,539 - root - DEBUG - [OracleTriggerAnalyzer.py:966] - stmt start: 55 || raise_statement
2025-09-03 08:10:58,539 - root - DEBUG - [OracleTriggerAnalyzer.py:969] - stmt start: 55 || raise_statement
2025-09-03 08:10:58,540 - root - DEBUG - [OracleTriggerAnalyzer.py:971] - stmt end: 55 || raise_statement
2025-09-03 08:10:58,540 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: []
2025-09-03 08:10:58,540 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 2
2025-09-03 08:10:58,540 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}], 'if_elses': [], 'else_statements': []}]}], 'exception_line_no': 91, 'end_line_no': 98}]
2025-09-03 08:10:58,541 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,541 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'indent': 16, 'line': '                MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING (', 'line_no': 60}, {'indent': 20, 'line': '                    SELECT', 'line_no': 61}, {'indent': 24, 'line': '                        HOLIDAY_DATE,', 'line_no': 62}, {'indent': 24, 'line': '                        HOLIDAY_DESC,', 'line_no': 63}, {'indent': 24, 'line': '                        GRANTED,', 'line_no': 64}, {'indent': 24, 'line': '                        COUNTRY_CD,', 'line_no': 65}, {'indent': 24, 'line': '                        HOLIDAY_REMARKS,', 'line_no': 66}, {'indent': 24, 'line': '                        VALID_IND', 'line_no': 67}, {'indent': 20, 'line': '                    FROM', 'line_no': 68}, {'indent': 24, 'line': '                        (', 'line_no': 69}, {'indent': 28, 'line': '                            SELECT', 'line_no': 70}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_DATE    HOLIDAY_DATE,', 'line_no': 71}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_NAME    HOLIDAY_DESC,', 'line_no': 72}, {'indent': 32, 'line': '                                :NEW.GRANTED         GRANTED,', 'line_no': 73}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_CH    CH,', 'line_no': 74}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_USA   USA,', 'line_no': 75}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_UK    UK,', 'line_no': 76}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_FR    FR,', 'line_no': 77}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_DE    DE,', 'line_no': 78}, {'indent': 32, 'line': '                                :NEW.VALID_FOR_JP    JP,', 'line_no': 79}, {'indent': 32, 'line': '                                :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS', 'line_no': 80}, {'indent': 28, 'line': '                            FROM', 'line_no': 81}, {'indent': 32, 'line': '                                DUAL', 'line_no': 82}, {'indent': 24, 'line': "                        )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH',", 'line_no': 83}, {'indent': 24, 'line': "                        USA AS 'US',", 'line_no': 84}, {'indent': 24, 'line': "                        UK AS 'GB',", 'line_no': 85}, {'indent': 24, 'line': "                        FR AS 'FR',", 'line_no': 86}, {'indent': 24, 'line': "                        DE AS 'DE',", 'line_no': 87}, {'indent': 24, 'line': "                        JP AS 'JP'))", 'line_no': 88}, {'indent': 16, 'line': '                ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE', 'line_no': 89}, {'indent': 16, 'line': '                AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);', 'line_no': 90}]
2025-09-03 08:10:58,541 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,542 - root - DEBUG - [OracleTriggerAnalyzer.py:953] - item:                 MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( || 60 || 16
2025-09-03 08:10:58,542 - root - DEBUG - [OracleTriggerAnalyzer.py:963] - stmt start: 60 || merge_statement || MERGE
2025-09-03 08:10:58,542 - root - DEBUG - [OracleTriggerAnalyzer.py:966] - stmt start: 60 || merge_statement
2025-09-03 08:10:58,542 - root - DEBUG - [OracleTriggerAnalyzer.py:969] - stmt start: 60 || merge_statement
2025-09-03 08:10:58,542 - root - DEBUG - [OracleTriggerAnalyzer.py:979] - stmt end: 90 || merge_statement
2025-09-03 08:10:58,542 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( SELECT HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND FROM ( SELECT :NEW.HOLIDAY_DATE    HOLIDAY_DATE, :NEW.HOLIDAY_NAME    HOLIDAY_DESC, :NEW.GRANTED         GRANTED, :NEW.VALID_FOR_CH    CH, :NEW.VALID_FOR_USA   USA, :NEW.VALID_FOR_UK    UK, :NEW.VALID_FOR_FR    FR, :NEW.VALID_FOR_DE    DE, :NEW.VALID_FOR_JP    JP, :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS FROM DUAL )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH', USA AS 'US', UK AS 'GB', FR AS 'FR', DE AS 'DE', JP AS 'JP')) ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);
2025-09-03 08:10:58,542 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}], 'if_elses': [], 'else_statements': []}]
2025-09-03 08:10:58,543 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,543 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'indent': 24, 'line': '                        RAISE ERR_INS;', 'line_no': 94}]
2025-09-03 08:10:58,543 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,543 - root - DEBUG - [OracleTriggerAnalyzer.py:953] - item:                         RAISE ERR_INS; || 94 || 24
2025-09-03 08:10:58,543 - root - DEBUG - [OracleTriggerAnalyzer.py:963] - stmt start: 94 || raise_statement || RAISE
2025-09-03 08:10:58,543 - root - DEBUG - [OracleTriggerAnalyzer.py:966] - stmt start: 94 || raise_statement
2025-09-03 08:10:58,543 - root - DEBUG - [OracleTriggerAnalyzer.py:969] - stmt start: 94 || raise_statement
2025-09-03 08:10:58,543 - root - DEBUG - [OracleTriggerAnalyzer.py:971] - stmt end: 94 || raise_statement
2025-09-03 08:10:58,543 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: []
2025-09-03 08:10:58,544 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: []
2025-09-03 08:10:58,544 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 3
2025-09-03 08:10:58,544 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_YEAR': 'EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE)', 'P_MONTH': 'EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE)', 'P_START_EVENT_DATE': ':NEW.HOLIDAY_DATE'}, 'raw_text': 'P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE'}}]
2025-09-03 08:10:58,544 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,544 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: []
2025-09-03 08:10:58,544 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'condition': ' :OLD.HOLIDAY_DATE IS NULL ', 'type': 'if_else', 'if_line_no': 176, 'then_line_no': 176, 'if_indent': 8, 'end_if_line_no': 178, 'then_statements': [{'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        DELETE FROM CFG.CFG_IRTT_HOLIDAYS A', 'line_no': 179}, {'indent': 8, 'line': '        WHERE', 'line_no': 180}, {'indent': 12, 'line': '            A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'line_no': 181}]
2025-09-03 08:10:58,544 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,544 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'indent': 12, 'line': '            RAISE ERR_DEL;', 'line_no': 177}]
2025-09-03 08:10:58,545 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,545 - root - DEBUG - [OracleTriggerAnalyzer.py:953] - item:             RAISE ERR_DEL; || 177 || 12
2025-09-03 08:10:58,545 - root - DEBUG - [OracleTriggerAnalyzer.py:963] - stmt start: 177 || raise_statement || RAISE
2025-09-03 08:10:58,545 - root - DEBUG - [OracleTriggerAnalyzer.py:966] - stmt start: 177 || raise_statement
2025-09-03 08:10:58,545 - root - DEBUG - [OracleTriggerAnalyzer.py:969] - stmt start: 177 || raise_statement
2025-09-03 08:10:58,546 - root - DEBUG - [OracleTriggerAnalyzer.py:971] - stmt end: 177 || raise_statement
2025-09-03 08:10:58,546 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: []
2025-09-03 08:10:58,546 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 1
2025-09-03 08:10:58,546 - root - DEBUG - [OracleTriggerAnalyzer.py:953] - item:         DELETE FROM CFG.CFG_IRTT_HOLIDAYS A || 179 || 8
2025-09-03 08:10:58,546 - root - DEBUG - [OracleTriggerAnalyzer.py:963] - stmt start: 179 || delete_statement || DELETE
2025-09-03 08:10:58,546 - root - DEBUG - [OracleTriggerAnalyzer.py:966] - stmt start: 179 || delete_statement
2025-09-03 08:10:58,547 - root - DEBUG - [OracleTriggerAnalyzer.py:969] - stmt start: 179 || delete_statement
2025-09-03 08:10:58,547 - root - DEBUG - [OracleTriggerAnalyzer.py:979] - stmt end: 181 || delete_statement
2025-09-03 08:10:58,547 - root - DEBUG - [OracleTriggerAnalyzer.py:2119] - DELETE FROM CFG.CFG_IRTT_HOLIDAYS A WHERE A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;
2025-09-03 08:10:58,547 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: []
2025-09-03 08:10:58,547 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]
2025-09-03 08:10:58,548 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,548 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20102', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]
2025-09-03 08:10:58,548 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,548 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]
2025-09-03 08:10:58,548 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,549 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20104', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]
2025-09-03 08:10:58,549 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,550 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]
2025-09-03 08:10:58,550 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,550 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20106', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]
2025-09-03 08:10:58,550 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,550 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20107', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]
2025-09-03 08:10:58,550 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,550 - root - DEBUG - [OracleTriggerAnalyzer.py:948] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]
2025-09-03 08:10:58,550 - root - DEBUG - [OracleTriggerAnalyzer.py:950] - i: 0
2025-09-03 08:10:58,551 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'begin_end', 'begin_line_no': 15, 'begin_indent': 0, 'begin_end_statements': [{'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 19, 'then_line_no': 20, 'if_indent': 4, 'end_if_line_no': 182, 'then_statements': [{'type': 'with_statement', 'with_line_no': 21, 'with_indent': 21, 'with_values': "C AS ( SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL )", 'with_statements': "SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C; SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ; IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN RAISE ERR_UPD2; END IF", 'with_end_line_no': 52}, {'condition': ' V_CHK_DISTINCT > 0 ', 'type': 'if_else', 'if_line_no': 54, 'then_line_no': 54, 'if_indent': 8, 'end_if_line_no': 56, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD3;', 'statement_line_no': 55, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' V_CHK_IS_MULTIVALUE <= 1 ', 'type': 'if_else', 'if_line_no': 58, 'then_line_no': 58, 'if_indent': 8, 'end_if_line_no': 161, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'type': 'merge_statement', 'sql_statement': "MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( SELECT HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND FROM ( SELECT :NEW.HOLIDAY_DATE    HOLIDAY_DATE, :NEW.HOLIDAY_NAME    HOLIDAY_DESC, :NEW.GRANTED         GRANTED, :NEW.VALID_FOR_CH    CH, :NEW.VALID_FOR_USA   USA, :NEW.VALID_FOR_UK    UK, :NEW.VALID_FOR_FR    FR, :NEW.VALID_FOR_DE    DE, :NEW.VALID_FOR_JP    JP, :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS FROM DUAL )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH', USA AS 'US', UK AS 'GB', FR AS 'FR', DE AS 'DE', JP AS 'JP')) ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);", 'statement_line_no': 60, 'statement_indent': 16}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 94, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'exception_line_no': 91, 'end_line_no': 98}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.GRANTED != :OLD.GRANTED) ', 'type': 'if_else', 'if_line_no': 166, 'then_line_no': 166, 'if_indent': 8, 'end_if_line_no': 174, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_YEAR': 'EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE)', 'P_MONTH': 'EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE)', 'P_START_EVENT_DATE': ':NEW.HOLIDAY_DATE'}, 'raw_text': 'P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE'}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 175, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 175, 'then_statements': [{'condition': ' :OLD.HOLIDAY_DATE IS NULL ', 'type': 'if_else', 'if_line_no': 176, 'then_line_no': 176, 'if_indent': 8, 'end_if_line_no': 178, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 177, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'delete_statement', 'sql_statement': 'DELETE FROM CFG.CFG_IRTT_HOLIDAYS A WHERE A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'statement_line_no': 179, 'statement_indent': 8}]}], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'DUP_VAL_ON_INDEX', 'when_line_no': 186, 'when_indent': 4, 'then_line_no': 186, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_INS', 'when_line_no': 190, 'when_indent': 4, 'then_line_no': 190, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20102', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 194, 'when_indent': 4, 'then_line_no': 194, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD2', 'when_line_no': 198, 'when_indent': 4, 'then_line_no': 198, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20104', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD3', 'when_line_no': 202, 'when_indent': 4, 'then_line_no': 202, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_UPD4', 'when_line_no': 206, 'when_indent': 4, 'then_line_no': 206, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20106', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 210, 'when_indent': 4, 'then_line_no': 210, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20107', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}, {'type': 'exception_handler', 'exception_name': 'ERR_LEVEL', 'when_line_no': 214, 'when_indent': 4, 'then_line_no': 214, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}], 'exception_line_no': 183, 'end_line_no': 218}
2025-09-03 08:10:58,552 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'condition': ' (INSERTING OR UPDATING) ', 'type': 'if_else', 'if_line_no': 19, 'then_line_no': 20, 'if_indent': 4, 'end_if_line_no': 182, 'then_statements': [{'type': 'with_statement', 'with_line_no': 21, 'with_indent': 21, 'with_values': "C AS ( SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL )", 'with_statements': "SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C; SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ; IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN RAISE ERR_UPD2; END IF", 'with_end_line_no': 52}, {'condition': ' V_CHK_DISTINCT > 0 ', 'type': 'if_else', 'if_line_no': 54, 'then_line_no': 54, 'if_indent': 8, 'end_if_line_no': 56, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD3;', 'statement_line_no': 55, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' V_CHK_IS_MULTIVALUE <= 1 ', 'type': 'if_else', 'if_line_no': 58, 'then_line_no': 58, 'if_indent': 8, 'end_if_line_no': 161, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'type': 'merge_statement', 'sql_statement': "MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( SELECT HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND FROM ( SELECT :NEW.HOLIDAY_DATE    HOLIDAY_DATE, :NEW.HOLIDAY_NAME    HOLIDAY_DESC, :NEW.GRANTED         GRANTED, :NEW.VALID_FOR_CH    CH, :NEW.VALID_FOR_USA   USA, :NEW.VALID_FOR_UK    UK, :NEW.VALID_FOR_FR    FR, :NEW.VALID_FOR_DE    DE, :NEW.VALID_FOR_JP    JP, :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS FROM DUAL )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH', USA AS 'US', UK AS 'GB', FR AS 'FR', DE AS 'DE', JP AS 'JP')) ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);", 'statement_line_no': 60, 'statement_indent': 16}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 94, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'exception_line_no': 91, 'end_line_no': 98}], 'if_elses': [], 'else_statements': []}, {'condition': ' (:NEW.GRANTED != :OLD.GRANTED) ', 'type': 'if_else', 'if_line_no': 166, 'then_line_no': 166, 'if_indent': 8, 'end_if_line_no': 174, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_YEAR': 'EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE)', 'P_MONTH': 'EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE)', 'P_START_EVENT_DATE': ':NEW.HOLIDAY_DATE'}, 'raw_text': 'P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE'}}], 'if_elses': [], 'else_statements': []}], 'if_elses': [{'type': 'elif_statement', 'elif_line_no': 175, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 175, 'then_statements': [{'condition': ' :OLD.HOLIDAY_DATE IS NULL ', 'type': 'if_else', 'if_line_no': 176, 'then_line_no': 176, 'if_indent': 8, 'end_if_line_no': 178, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 177, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'delete_statement', 'sql_statement': 'DELETE FROM CFG.CFG_IRTT_HOLIDAYS A WHERE A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'statement_line_no': 179, 'statement_indent': 8}]}], 'else_statements': []}
2025-09-03 08:10:58,553 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'with_statement', 'with_line_no': 21, 'with_indent': 21, 'with_values': "C AS ( SELECT TRIM(REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL)) COL FROM DUAL CONNECT BY REGEXP_SUBSTR(:NEW.HOLIDAY_NAME, '[^,]+', 1, LEVEL) IS NOT NULL )", 'with_statements': "SELECT REGEXP_SUBSTR(C.COL, '[^[]+', 1)        HOLIDAY_DESC, REGEXP_SUBSTR(C.COL, '[^[]+[^]]', 1, 2) COUNTRY_CD BULK COLLECT INTO V_HOLIDAY_DESCS, V_COUNTRY_CODES FROM C; SELECT COUNT(COUNTRY_CD), COUNT(COLUMN_VALUE) - COUNT(DISTINCT COLUMN_VALUE) INTO V_CHK_IS_MULTIVALUE , V_CHK_DISTINCT FROM TABLE (V_COUNTRY_CODES) LEFT JOIN COUNTRIES ON COUNTRY_CD = COLUMN_VALUE         ; IF V_CHK_IS_MULTIVALUE >= 1 AND V_CHK_IS_MULTIVALUE != V_HOLIDAY_DESCS.COUNT THEN RAISE ERR_UPD2; END IF", 'with_end_line_no': 52}
2025-09-03 08:10:58,553 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'condition': ' V_CHK_DISTINCT > 0 ', 'type': 'if_else', 'if_line_no': 54, 'then_line_no': 54, 'if_indent': 8, 'end_if_line_no': 56, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD3;', 'statement_line_no': 55, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 08:10:58,553 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_UPD3;', 'statement_line_no': 55, 'statement_indent': 12}
2025-09-03 08:10:58,553 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'condition': ' V_CHK_IS_MULTIVALUE <= 1 ', 'type': 'if_else', 'if_line_no': 58, 'then_line_no': 58, 'if_indent': 8, 'end_if_line_no': 161, 'then_statements': [{'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'type': 'merge_statement', 'sql_statement': "MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( SELECT HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND FROM ( SELECT :NEW.HOLIDAY_DATE    HOLIDAY_DATE, :NEW.HOLIDAY_NAME    HOLIDAY_DESC, :NEW.GRANTED         GRANTED, :NEW.VALID_FOR_CH    CH, :NEW.VALID_FOR_USA   USA, :NEW.VALID_FOR_UK    UK, :NEW.VALID_FOR_FR    FR, :NEW.VALID_FOR_DE    DE, :NEW.VALID_FOR_JP    JP, :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS FROM DUAL )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH', USA AS 'US', UK AS 'GB', FR AS 'FR', DE AS 'DE', JP AS 'JP')) ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);", 'statement_line_no': 60, 'statement_indent': 16}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 94, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'exception_line_no': 91, 'end_line_no': 98}], 'if_elses': [], 'else_statements': []}
2025-09-03 08:10:58,553 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'begin_end', 'begin_line_no': 59, 'begin_indent': 12, 'begin_end_statements': [{'type': 'merge_statement', 'sql_statement': "MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( SELECT HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND FROM ( SELECT :NEW.HOLIDAY_DATE    HOLIDAY_DATE, :NEW.HOLIDAY_NAME    HOLIDAY_DESC, :NEW.GRANTED         GRANTED, :NEW.VALID_FOR_CH    CH, :NEW.VALID_FOR_USA   USA, :NEW.VALID_FOR_UK    UK, :NEW.VALID_FOR_FR    FR, :NEW.VALID_FOR_DE    DE, :NEW.VALID_FOR_JP    JP, :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS FROM DUAL )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH', USA AS 'US', UK AS 'GB', FR AS 'FR', DE AS 'DE', JP AS 'JP')) ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);", 'statement_line_no': 60, 'statement_indent': 16}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 94, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}], 'exception_line_no': 91, 'end_line_no': 98}
2025-09-03 08:10:58,554 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'merge_statement', 'sql_statement': "MERGE INTO CFG.CFG_IRTT_HOLIDAYS A USING ( SELECT HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND FROM ( SELECT :NEW.HOLIDAY_DATE    HOLIDAY_DATE, :NEW.HOLIDAY_NAME    HOLIDAY_DESC, :NEW.GRANTED         GRANTED, :NEW.VALID_FOR_CH    CH, :NEW.VALID_FOR_USA   USA, :NEW.VALID_FOR_UK    UK, :NEW.VALID_FOR_FR    FR, :NEW.VALID_FOR_DE    DE, :NEW.VALID_FOR_JP    JP, :NEW.HOLIDAY_REMARKS HOLIDAY_REMARKS FROM DUAL )  UNPIVOT (VALID_IND FOR COUNTRY_CD IN (CH AS 'CH', USA AS 'US', UK AS 'GB', FR AS 'FR', DE AS 'DE', JP AS 'JP')) ) B ON (A.HOLIDAY_DATE = B.HOLIDAY_DATE AND A.COUNTRY_CD = B.COUNTRY_CD) WHEN MATCHED THEN UPDATE SET A.GRANTED = B.GRANTED, A.VALID_IND = B.VALID_IND, A.HOLIDAY_DESC = B.HOLIDAY_DESC, A.HOLIDAY_REMARKS = B.HOLIDAY_REMARKS WHEN NOT MATCHED THEN INSERT(HOLIDAY_DATE, HOLIDAY_DESC, GRANTED, COUNTRY_CD, HOLIDAY_REMARKS, VALID_IND) VALUES(B.HOLIDAY_DATE, B.HOLIDAY_DESC, B.GRANTED, B.COUNTRY_CD, B.HOLIDAY_REMARKS, B.VALID_IND);", 'statement_line_no': 60, 'statement_indent': 16}
2025-09-03 08:10:58,554 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'exception_handler', 'exception_name': 'OTHERS', 'when_line_no': 92, 'when_indent': 16, 'then_line_no': 92, 'exception_statements': [{'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 94, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}]}
2025-09-03 08:10:58,554 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'condition': ' SQLCODE = -1407 AND INSTR(SQLERRM, \'"CFG_IRTT_HOLIDAYS"."HOLIDAY_DESC"\') > 0 ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 20, 'end_if_line_no': 97, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 94, 'statement_indent': 24}], 'if_elses': [], 'else_statements': []}
2025-09-03 08:10:58,554 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_INS;', 'statement_line_no': 94, 'statement_indent': 24}
2025-09-03 08:10:58,555 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'condition': ' (:NEW.GRANTED != :OLD.GRANTED) ', 'type': 'if_else', 'if_line_no': 166, 'then_line_no': 166, 'if_indent': 8, 'end_if_line_no': 174, 'then_statements': [{'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_YEAR': 'EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE)', 'P_MONTH': 'EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE)', 'P_START_EVENT_DATE': ':NEW.HOLIDAY_DATE'}, 'raw_text': 'P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE'}}], 'if_elses': [], 'else_statements': []}
2025-09-03 08:10:58,555 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'function_calling', 'function_name': 'MDMAPPL.MDM_UTIL_IRTT.REGENERATE_EVENT_DATES_FOR_MONTH', 'parameters': {'parameter_type': 'named', 'positional_params': [], 'named_params': {'P_YEAR': 'EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE)', 'P_MONTH': 'EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE)', 'P_START_EVENT_DATE': ':NEW.HOLIDAY_DATE'}, 'raw_text': 'P_YEAR => EXTRACT(YEAR FROM :NEW.HOLIDAY_DATE), P_MONTH => EXTRACT(MONTH FROM :NEW.HOLIDAY_DATE), P_START_EVENT_DATE => :NEW.HOLIDAY_DATE'}}
2025-09-03 08:10:58,555 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'elif_statement', 'elif_line_no': 175, 'elif_indent': 4, 'condition': '(DELETING)', 'then_line_no': 175, 'then_statements': [{'condition': ' :OLD.HOLIDAY_DATE IS NULL ', 'type': 'if_else', 'if_line_no': 176, 'then_line_no': 176, 'if_indent': 8, 'end_if_line_no': 178, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 177, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'delete_statement', 'sql_statement': 'DELETE FROM CFG.CFG_IRTT_HOLIDAYS A WHERE A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'statement_line_no': 179, 'statement_indent': 8}]}
2025-09-03 08:10:58,555 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'condition': ' :OLD.HOLIDAY_DATE IS NULL ', 'type': 'if_else', 'if_line_no': 176, 'then_line_no': 176, 'if_indent': 8, 'end_if_line_no': 178, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 177, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}
2025-09-03 08:10:58,555 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'raise_statement', 'sql_statement': 'RAISE ERR_DEL;', 'statement_line_no': 177, 'statement_indent': 12}
2025-09-03 08:10:58,555 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'delete_statement', 'sql_statement': 'DELETE FROM CFG.CFG_IRTT_HOLIDAYS A WHERE A.HOLIDAY_DATE = :OLD.HOLIDAY_DATE;', 'statement_line_no': 179, 'statement_indent': 8}
2025-09-03 08:10:58,556 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'exception_handler', 'exception_name': 'DUP_VAL_ON_INDEX', 'when_line_no': 186, 'when_indent': 4, 'then_line_no': 186, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}
2025-09-03 08:10:58,556 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20101, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,556 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'exception_handler', 'exception_name': 'ERR_INS', 'when_line_no': 190, 'when_indent': 4, 'then_line_no': 190, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20102', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}
2025-09-03 08:10:58,556 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20102', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20102, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,556 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'exception_handler', 'exception_name': 'ERR_UPD', 'when_line_no': 194, 'when_indent': 4, 'then_line_no': 194, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}
2025-09-03 08:10:58,556 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20103, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,556 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'exception_handler', 'exception_name': 'ERR_UPD2', 'when_line_no': 198, 'when_indent': 4, 'then_line_no': 198, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20104', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}
2025-09-03 08:10:58,557 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20104', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20104, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,557 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'exception_handler', 'exception_name': 'ERR_UPD3', 'when_line_no': 202, 'when_indent': 4, 'then_line_no': 202, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}
2025-09-03 08:10:58,557 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20105, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,557 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'exception_handler', 'exception_name': 'ERR_UPD4', 'when_line_no': 206, 'when_indent': 4, 'then_line_no': 206, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20106', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}
2025-09-03 08:10:58,557 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20106', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20106, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,558 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'exception_handler', 'exception_name': 'ERR_DEL', 'when_line_no': 210, 'when_indent': 4, 'then_line_no': 210, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20107', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}
2025-09-03 08:10:58,558 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20107', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20107, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,558 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'exception_handler', 'exception_name': 'ERR_LEVEL', 'when_line_no': 214, 'when_indent': 4, 'then_line_no': 214, 'exception_statements': [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}]}
2025-09-03 08:10:58,558 - root - DEBUG - [OracleTriggerAnalyzer.py:2150] - item: {'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', "'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"], 'named_params': {}, 'raw_text': "-20108, 'MDM_V_PUBLIC_HOLIDAYS_MTN_IOF'"}}
2025-09-03 08:10:58,558 - root - DEBUG - [OracleTriggerAnalyzer.py:2163] - rest_strings_list []
2025-09-03 08:10:58,595 - root - DEBUG - [OracleTriggerAnalyzer.py:2170] - dataframe_rest_strings: Empty DataFrame
Columns: [filename, line, line_no, indent]
Index: []
2025-09-03 08:10:58,595 - root - DEBUG - [OracleTriggerAnalyzer.py:111] - SQL section parsing
2025-09-03 08:10:58,595 - root - DEBUG - [OracleTriggerAnalyzer.py:114] - OracleTriggerAnalyzer initialization 0.8514184951782227 seconds
2025-09-03 08:10:58,595 - root - DEBUG - [OracleTriggerAnalyzer.py:2221] - JSON conversion complete: 4 vars, 0 consts, 7 excs, 18 comments
