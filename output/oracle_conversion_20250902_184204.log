2025-09-02 18:42:04,142 - root - DEBUG - [common.py:105] - Starting main conversion workflow
2025-09-02 18:42:04,142 - root - INFO - [common.py:110] - === Starting Oracle Trigger Conversion Process ===
2025-09-02 18:42:04,143 - root - INFO - [common.py:110] - Logging to: output\oracle_conversion_20250902_184204.log
2025-09-02 18:42:04,143 - root - DEBUG - [common.py:105] - Logging system initialized
2025-09-02 18:42:04,143 - root - INFO - [common.py:110] - Step 1: Converting Oracle SQL files to JSON analysis...
2025-09-02 18:42:04,143 - root - DEBUG - [common.py:105] - Starting Step 1: Oracle SQL â†’ JSON conversion
2025-09-02 18:42:04,143 - root - INFO - [common.py:110] - === Starting Oracle triggers to JSON conversion ===
2025-09-02 18:42:04,145 - root - DEBUG - [common.py:105] - Workflow Phase 1: Convert Oracle SQL files to JSON analysis structure
2025-09-02 18:42:04,145 - root - DEBUG - [common.py:105] - Source directory: files/oracle
2025-09-02 18:42:04,145 - root - DEBUG - [common.py:105] - Target directory: files/format_json
2025-09-02 18:42:04,145 - root - DEBUG - [common.py:105] - File details will be included in metadata for each processed file
2025-09-02 18:42:04,145 - root - INFO - [common.py:110] - === Starting file processing ===
2025-09-02 18:42:04,145 - root - INFO - [common.py:110] - Source directory: 'files/oracle'
2025-09-02 18:42:04,146 - root - INFO - [common.py:110] - Target directory: 'files/format_json'
2025-09-02 18:42:04,146 - root - INFO - [common.py:110] - File pattern: '.sql'
2025-09-02 18:42:04,146 - root - INFO - [common.py:110] - Output suffix: '_analysis.json'
2025-09-02 18:42:04,146 - root - DEBUG - [common.py:105] - Ensuring target directory exists...
2025-09-02 18:42:04,146 - root - DEBUG - [common.py:105] - Directory already exists: files/format_json
2025-09-02 18:42:04,146 - root - DEBUG - [common.py:105] - Found 1 files in source directory
2025-09-02 18:42:04,146 - root - DEBUG - [common.py:105] - Files matching pattern '.sql': ['zzz.sql']
2025-09-02 18:42:04,147 - root - DEBUG - [common.py:105] - === Processing file 1/1: zzz.sql ===
2025-09-02 18:42:04,147 - root - DEBUG - [common.py:105] - Source path: files/oracle\zzz.sql
2025-09-02 18:42:04,147 - root - DEBUG - [common.py:105] - Output path: files/format_json\zzz_analysis.json
2025-09-02 18:42:04,147 - root - DEBUG - [common.py:105] - === SQL to JSON processing for trigger zzz.sql ===
2025-09-02 18:42:04,147 - root - DEBUG - [common.py:105] - Creating OracleTriggerAnalyzer instance from file...
2025-09-02 18:42:04,147 - root - DEBUG - [common.py:105] - Initializing OracleTriggerAnalyzer with 20 characters of SQL
2025-09-02 18:42:04,147 - root - DEBUG - [OracleTriggerAnalyzer.py:107] - structured lines conversion 0 lines processed
2025-09-02 18:42:04,147 - root - DEBUG - [OracleTriggerAnalyzer.py:110] - SQL section parsing
2025-09-02 18:42:04,147 - root - DEBUG - [OracleTriggerAnalyzer.py:323] - structured lines conversion
2025-09-02 18:42:04,147 - root - DEBUG - [common.py:105] - Converting SQL content to structured lines
2025-09-02 18:42:04,148 - root - DEBUG - [common.py:105] - Structured lines conversion complete: 251 total, 71 with semicolons, 19 empty lines skipped
2025-09-02 18:42:04,148 - root - DEBUG - [OracleTriggerAnalyzer.py:325] - structured lines conversion
2025-09-02 18:42:04,148 - root - DEBUG - [OracleTriggerAnalyzer.py:262] - Block comment stripping complete: 15 comments extracted, 182 lines cleaned
2025-09-02 18:42:04,148 - root - DEBUG - [OracleTriggerAnalyzer.py:329] - Removed block comments from main section
2025-09-02 18:42:04,148 - root - DEBUG - [OracleTriggerAnalyzer.py:306] - Inline comment stripping complete: 7 comments extracted, 179 lines cleaned
2025-09-02 18:42:04,148 - root - DEBUG - [OracleTriggerAnalyzer.py:333] - Removed inline comments from main section
2025-09-02 18:42:04,148 - root - DEBUG - [OracleTriggerAnalyzer.py:345] - Found DECLARE at line 3
2025-09-02 18:42:04,148 - root - DEBUG - [OracleTriggerAnalyzer.py:349] - Found BEGIN at line 22
2025-09-02 18:42:04,148 - root - DEBUG - [OracleTriggerAnalyzer.py:359] - DECLARE section: lines 3-21
2025-09-02 18:42:04,148 - root - DEBUG - [OracleTriggerAnalyzer.py:387] - Starting declaration parsing
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:465] - Processed exception: E_INSERT_COA
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:465] - Processed exception: E_UPDATE_COA
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:465] - Processed exception: E_DELETE_COA
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:465] - Processed exception: E_MATL
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:465] - Processed exception: E_MATL_CLASS
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:465] - Processed exception: E_MATL_NO
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:465] - Processed exception: E_AUDIT_COMMENT
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:465] - Processed exception: E_DEFINED_USER
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:465] - Processed exception: E_CHANGES_USER
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:465] - Processed exception: E_ALREADY_DELETED
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:431] - Processed variable: V_COUNT
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:431] - Processed variable: V_MATL_COUNT
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:431] - Processed variable: V_RECORD_COUNT
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:431] - Processed variable: P_CLASS
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:431] - Processed variable: P_APPROVAL_USER
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:431] - Processed variable: P_APPROVAL_DATE
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:431] - Processed variable: V_MARKET_AUTH_NO
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:431] - Processed variable: V_TRIGGER_NAME
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1546] - Starting top-level BEGIN blocks parsing
2025-09-02 18:42:04,149 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'E_INSERT_COA', 'when_line_no': 247, 'when_indent': 4, 'then_line_no': 247, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20101, V_TRIGGER_NAME);', 'line_no': 248}]}, {'type': 'exception_handler', 'exception_name': 'E_UPDATE_COA', 'when_line_no': 249, 'when_indent': 4, 'then_line_no': 249, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20102, V_TRIGGER_NAME);', 'line_no': 250}]}, {'type': 'exception_handler', 'exception_name': 'E_MATL_CLASS', 'when_line_no': 251, 'when_indent': 4, 'then_line_no': 251, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20103, V_TRIGGER_NAME);', 'line_no': 252}]}, {'type': 'exception_handler', 'exception_name': 'E_CHANGES_USER', 'when_line_no': 253, 'when_indent': 4, 'then_line_no': 253, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20104, V_TRIGGER_NAME);', 'line_no': 254}]}, {'type': 'exception_handler', 'exception_name': 'E_MATL_NO', 'when_line_no': 255, 'when_indent': 4, 'then_line_no': 255, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);', 'line_no': 256}]}, {'type': 'exception_handler', 'exception_name': 'E_AUDIT_COMMENT', 'when_line_no': 257, 'when_indent': 4, 'then_line_no': 257, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20106, V_TRIGGER_NAME);', 'line_no': 258}]}, {'type': 'exception_handler', 'exception_name': 'E_DEFINED_USER', 'when_line_no': 259, 'when_indent': 4, 'then_line_no': 259, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20107, V_TRIGGER_NAME);', 'line_no': 260}]}, {'type': 'exception_handler', 'exception_name': 'E_DELETE_COA', 'when_line_no': 261, 'when_indent': 4, 'then_line_no': 261, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20108, V_TRIGGER_NAME);', 'line_no': 262}]}, {'type': 'exception_handler', 'exception_name': 'E_MATL', 'when_line_no': 263, 'when_indent': 4, 'then_line_no': 263, 'exception_statements': [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20109, V_TRIGGER_NAME);', 'line_no': 264}]}, {'type': 'exception_handler', 'exception_name': 'E_ALREADY_DELETED', 'when_line_no': 265, 'when_indent': 4, 'then_line_no': 265, 'exception_statements': [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20400, 'This record has already been deleted and cannot be changed anymore');", 'line_no': 266}]}]
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1591] - Begin line: {'indent': 4, 'line': '    BEGIN', 'line_no': 58} 18
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1598] - Exception line: {'indent': 4, 'line': '    EXCEPTION', 'line_no': 68} 28
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1601] - End line: {'indent': 4, 'line': '    END;', 'line_no': 71} 31
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1731] - exception_handler: [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 69, 'when_indent': 8, 'then_line_no': 69, 'exception_statements': [{'indent': 12, 'line': '            RAISE E_MATL;', 'line_no': 70}]}]
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 4, 'line': "    V_MARKET_AUTH_NO := TRIM (REPLACE ( :NEW.MARKET_AUTH_NO, CHR (9), ''));", 'line_no': 23}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 4, 'line': "    IF :OLD.DELETE_FLAG = 'Y' THEN", 'line_no': 29}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 29
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 29 i: 40
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 12
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        SELECT', 'line_no': 30}, {'indent': 12, 'line': '            COUNT (MAU_ID) INTO V_RECORD_COUNT', 'line_no': 31}, {'indent': 8, 'line': '        FROM', 'line_no': 32}, {'indent': 12, 'line': '            COA_MARKET_AUTHS_HIS A', 'line_no': 33}, {'indent': 8, 'line': '        WHERE', 'line_no': 34}, {'indent': 12, 'line': "            A.ACTION = 'D'", 'line_no': 35}, {'indent': 12, 'line': '            AND A.MAU_ID = :OLD.MAU_ID;', 'line_no': 36}, {'indent': 8, 'line': '        IF V_RECORD_COUNT > 0 THEN', 'line_no': 37}, {'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}, {'indent': 8, 'line': '        END IF;', 'line_no': 39}]
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': " :OLD.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 29, 'then_line_no': 29, 'if_indent': 4, 'end_if_line_no': 40, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 30}, {'indent': 12, 'line': '            COUNT (MAU_ID) INTO V_RECORD_COUNT', 'line_no': 31}, {'indent': 8, 'line': '        FROM', 'line_no': 32}, {'indent': 12, 'line': '            COA_MARKET_AUTHS_HIS A', 'line_no': 33}, {'indent': 8, 'line': '        WHERE', 'line_no': 34}, {'indent': 12, 'line': "            A.ACTION = 'D'", 'line_no': 35}, {'indent': 12, 'line': '            AND A.MAU_ID = :OLD.MAU_ID;', 'line_no': 36}, {'indent': 8, 'line': '        IF V_RECORD_COUNT > 0 THEN', 'line_no': 37}, {'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}, {'indent': 8, 'line': '        END IF;', 'line_no': 39}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 30}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            COUNT (MAU_ID) INTO V_RECORD_COUNT', 'line_no': 31}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        FROM', 'line_no': 32}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            COA_MARKET_AUTHS_HIS A', 'line_no': 33}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 34}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': "            A.ACTION = 'D'", 'line_no': 35}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            AND A.MAU_ID = :OLD.MAU_ID;', 'line_no': 36}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        IF V_RECORD_COUNT > 0 THEN', 'line_no': 37}
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 37
2025-09-02 18:42:04,150 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 37 i: 39
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 3
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}]
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': ' V_RECORD_COUNT > 0 ', 'type': 'if_else', 'if_line_no': 37, 'then_line_no': 37, 'if_indent': 8, 'end_if_line_no': 39, 'then_statements': [{'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 4, 'line': "    IF :NEW.DELETE_FLAG = 'Y' THEN", 'line_no': 47}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 47
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 47 i: 51
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 5
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        IF ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) THEN', 'line_no': 48}, {'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}, {'indent': 8, 'line': '        END IF;', 'line_no': 50}]
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 4, 'end_if_line_no': 51, 'then_statements': [{'indent': 8, 'line': '        IF ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) THEN', 'line_no': 48}, {'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}, {'indent': 8, 'line': '        END IF;', 'line_no': 50}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        IF ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) THEN', 'line_no': 48}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 48
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 48 i: 50
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 3
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}]
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 8, 'end_if_line_no': 50, 'then_statements': [{'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'type': 'begin_end', 'begin_line_no': 58, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 59}, {'indent': 12, 'line': '            CLASS_CD INTO P_CLASS', 'line_no': 60}, {'indent': 8, 'line': '        FROM', 'line_no': 61}, {'indent': 12, 'line': '            V_MATERIALS', 'line_no': 62}, {'indent': 8, 'line': '        WHERE', 'line_no': 63}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO;', 'line_no': 64}, {'indent': 8, 'line': "        IF P_CLASS NOT IN ('FIN') THEN", 'line_no': 65}, {'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}, {'indent': 8, 'line': '        END IF;', 'line_no': 67}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 69, 'when_indent': 8, 'then_line_no': 69, 'exception_statements': [{'indent': 12, 'line': '            RAISE E_MATL;', 'line_no': 70}]}], 'exception_line_no': 68, 'end_line_no': 71}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 59}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            CLASS_CD INTO P_CLASS', 'line_no': 60}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        FROM', 'line_no': 61}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            V_MATERIALS', 'line_no': 62}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 63}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO;', 'line_no': 64}
2025-09-02 18:42:04,151 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': "        IF P_CLASS NOT IN ('FIN') THEN", 'line_no': 65}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 65
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 65 i: 67
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 3
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}]
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': " P_CLASS NOT IN ('FIN') ", 'type': 'if_else', 'if_line_no': 65, 'then_line_no': 65, 'if_indent': 8, 'end_if_line_no': 67, 'then_statements': [{'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            RAISE E_MATL;', 'line_no': 70}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 78}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        COUNT (*) INTO V_MATL_COUNT', 'line_no': 79}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 4, 'line': '    FROM', 'line_no': 80}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        V_MATERIALS', 'line_no': 81}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 4, 'line': '    WHERE', 'line_no': 82}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        MATL_NO = :NEW.MATL_NO', 'line_no': 83}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 0, 'line': ';', 'line_no': 85}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 4, 'line': '    IF V_MATL_COUNT = 0 THEN', 'line_no': 86}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 86
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 86 i: 88
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 3
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        RAISE E_MATL_NO;', 'line_no': 87}]
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': ' V_MATL_COUNT = 0 ', 'type': 'if_else', 'if_line_no': 86, 'then_line_no': 86, 'if_indent': 4, 'end_if_line_no': 88, 'then_statements': [{'indent': 8, 'line': '        RAISE E_MATL_NO;', 'line_no': 87}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        RAISE E_MATL_NO;', 'line_no': 87}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 4, 'line': '    IF (UPDATING) THEN', 'line_no': 93}
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 93
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 93 i: 205
2025-09-02 18:42:04,152 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 61
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        IF ( :OLD.MATL_NO <> :NEW.MATL_NO', 'line_no': 99}, {'indent': 8, 'line': '        OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) THEN', 'line_no': 100}, {'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}, {'indent': 8, 'line': '        END IF;', 'line_no': 102}, {'indent': 8, 'line': '        IF :NEW.DEFINED_IND = :OLD.DEFINED_IND THEN', 'line_no': 109}, {'indent': 12, 'line': '            IF :NEW.AUDIT_COMMENT IS NULL THEN', 'line_no': 110}, {'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}, {'indent': 12, 'line': '            END IF;', 'line_no': 112}, {'indent': 8, 'line': '        END IF;', 'line_no': 113}, {'indent': 8, 'line': "        IF ( :NEW.DEFINED_IND = 'Y'", 'line_no': 120}, {'indent': 8, 'line': "        AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) THEN", 'line_no': 121}, {'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}, {'indent': 8, 'line': '        END IF;', 'line_no': 123}, {'indent': 8, 'line': "        IF ( :NEW.DEFINED_IND = 'Y'", 'line_no': 138}, {'indent': 8, 'line': "        AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO", 'line_no': 139}, {'indent': 8, 'line': '        OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO', 'line_no': 140}, {'indent': 8, 'line': '        OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT', 'line_no': 141}, {'indent': 8, 'line': '        OR :OLD.VALID_IND <> :NEW.VALID_IND) THEN', 'line_no': 142}, {'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}, {'indent': 8, 'line': '        END IF;', 'line_no': 144}, {'indent': 8, 'line': "        IF ( :OLD.DEFINED_IND = 'N'", 'line_no': 149}, {'indent': 8, 'line': "        AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO", 'line_no': 150}, {'indent': 8, 'line': '        OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO', 'line_no': 151}, {'indent': 8, 'line': '        OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT', 'line_no': 152}, {'indent': 8, 'line': '        OR :OLD.VALID_IND = :NEW.VALID_IND) THEN', 'line_no': 153}, {'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}, {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}, {'indent': 12, 'line': '            SET', 'line_no': 157}, {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}, {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}, {'indent': 0, 'line': ',', 'line_no': 160}, {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}, {'indent': 12, 'line': '            WHERE', 'line_no': 162}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}, {'indent': 8, 'line': '        ELSE', 'line_no': 164}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}, {'indent': 12, 'line': '            SET', 'line_no': 178}, {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}, {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}, {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}, {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}, {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}, {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}, {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}, {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}, {'indent': 20, 'line': '                    0', 'line_no': 189}, {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}, {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}, {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}, {'indent': 12, 'line': '            WHERE', 'line_no': 193}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}, {'indent': 12, 'line': "            IF :NEW.DELETE_FLAG = 'Y' THEN", 'line_no': 198}, {'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}, {'indent': 12, 'line': '            END IF;', 'line_no': 203}, {'indent': 8, 'line': '        END IF;', 'line_no': 204}]
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 4, 'end_if_line_no': 205, 'then_statements': [{'indent': 8, 'line': '        IF ( :OLD.MATL_NO <> :NEW.MATL_NO', 'line_no': 99}, {'indent': 8, 'line': '        OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) THEN', 'line_no': 100}, {'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}, {'indent': 8, 'line': '        END IF;', 'line_no': 102}, {'indent': 8, 'line': '        IF :NEW.DEFINED_IND = :OLD.DEFINED_IND THEN', 'line_no': 109}, {'indent': 12, 'line': '            IF :NEW.AUDIT_COMMENT IS NULL THEN', 'line_no': 110}, {'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}, {'indent': 12, 'line': '            END IF;', 'line_no': 112}, {'indent': 8, 'line': '        END IF;', 'line_no': 113}, {'indent': 8, 'line': "        IF ( :NEW.DEFINED_IND = 'Y'", 'line_no': 120}, {'indent': 8, 'line': "        AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) THEN", 'line_no': 121}, {'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}, {'indent': 8, 'line': '        END IF;', 'line_no': 123}, {'indent': 8, 'line': "        IF ( :NEW.DEFINED_IND = 'Y'", 'line_no': 138}, {'indent': 8, 'line': "        AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO", 'line_no': 139}, {'indent': 8, 'line': '        OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO', 'line_no': 140}, {'indent': 8, 'line': '        OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT', 'line_no': 141}, {'indent': 8, 'line': '        OR :OLD.VALID_IND <> :NEW.VALID_IND) THEN', 'line_no': 142}, {'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}, {'indent': 8, 'line': '        END IF;', 'line_no': 144}, {'indent': 8, 'line': "        IF ( :OLD.DEFINED_IND = 'N'", 'line_no': 149}, {'indent': 8, 'line': "        AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO", 'line_no': 150}, {'indent': 8, 'line': '        OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO', 'line_no': 151}, {'indent': 8, 'line': '        OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT', 'line_no': 152}, {'indent': 8, 'line': '        OR :OLD.VALID_IND = :NEW.VALID_IND) THEN', 'line_no': 153}, {'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}, {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}, {'indent': 12, 'line': '            SET', 'line_no': 157}, {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}, {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}, {'indent': 0, 'line': ',', 'line_no': 160}, {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}, {'indent': 12, 'line': '            WHERE', 'line_no': 162}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}, {'indent': 8, 'line': '        ELSE', 'line_no': 164}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}, {'indent': 12, 'line': '            SET', 'line_no': 178}, {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}, {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}, {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}, {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}, {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}, {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}, {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}, {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}, {'indent': 20, 'line': '                    0', 'line_no': 189}, {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}, {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}, {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}, {'indent': 12, 'line': '            WHERE', 'line_no': 193}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}, {'indent': 12, 'line': "            IF :NEW.DELETE_FLAG = 'Y' THEN", 'line_no': 198}, {'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}, {'indent': 12, 'line': '            END IF;', 'line_no': 203}, {'indent': 8, 'line': '        END IF;', 'line_no': 204}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        IF ( :OLD.MATL_NO <> :NEW.MATL_NO', 'line_no': 99}
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 99
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 99 i: 102
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 4
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1264] - line_info : {'indent': 8, 'line': '        OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) THEN', 'line_no': 100}
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}]
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 100, 'if_indent': 8, 'end_if_line_no': 102, 'then_statements': [{'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        IF :NEW.DEFINED_IND = :OLD.DEFINED_IND THEN', 'line_no': 109}
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 109
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 109 i: 113
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 5
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            IF :NEW.AUDIT_COMMENT IS NULL THEN', 'line_no': 110}, {'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}, {'indent': 12, 'line': '            END IF;', 'line_no': 112}]
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': ' :NEW.DEFINED_IND = :OLD.DEFINED_IND ', 'type': 'if_else', 'if_line_no': 109, 'then_line_no': 109, 'if_indent': 8, 'end_if_line_no': 113, 'then_statements': [{'indent': 12, 'line': '            IF :NEW.AUDIT_COMMENT IS NULL THEN', 'line_no': 110}, {'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}, {'indent': 12, 'line': '            END IF;', 'line_no': 112}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            IF :NEW.AUDIT_COMMENT IS NULL THEN', 'line_no': 110}
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 110
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 110 i: 112
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 3
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}]
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': ' :NEW.AUDIT_COMMENT IS NULL ', 'type': 'if_else', 'if_line_no': 110, 'then_line_no': 110, 'if_indent': 12, 'end_if_line_no': 112, 'then_statements': [{'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,153 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': "        IF ( :NEW.DEFINED_IND = 'Y'", 'line_no': 120}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 120
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 120 i: 123
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 4
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1264] - line_info : {'indent': 8, 'line': "        AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) THEN", 'line_no': 121}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}]
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) ", 'type': 'if_else', 'if_line_no': 120, 'then_line_no': 121, 'if_indent': 8, 'end_if_line_no': 123, 'then_statements': [{'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': "        IF ( :NEW.DEFINED_IND = 'Y'", 'line_no': 138}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 138
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 138 i: 144
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 7
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1264] - line_info : {'indent': 8, 'line': "        AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO", 'line_no': 139}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1264] - line_info : {'indent': 8, 'line': '        OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO', 'line_no': 140}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1264] - line_info : {'indent': 8, 'line': '        OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT', 'line_no': 141}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1264] - line_info : {'indent': 8, 'line': '        OR :OLD.VALID_IND <> :NEW.VALID_IND) THEN', 'line_no': 142}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}]
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 138, 'then_line_no': 142, 'if_indent': 8, 'end_if_line_no': 144, 'then_statements': [{'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': "        IF ( :OLD.DEFINED_IND = 'N'", 'line_no': 149}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 149
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 149 i: 204
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 39
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1264] - line_info : {'indent': 8, 'line': "        AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO", 'line_no': 150}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1264] - line_info : {'indent': 8, 'line': '        OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO', 'line_no': 151}
2025-09-02 18:42:04,154 - root - DEBUG - [OracleTriggerAnalyzer.py:1264] - line_info : {'indent': 8, 'line': '        OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT', 'line_no': 152}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1264] - line_info : {'indent': 8, 'line': '        OR :OLD.VALID_IND = :NEW.VALID_IND) THEN', 'line_no': 153}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': " ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 149, 'then_line_no': 153, 'if_indent': 8, 'end_if_line_no': 204, 'then_statements': [{'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}, {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}, {'indent': 12, 'line': '            SET', 'line_no': 157}, {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}, {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}, {'indent': 0, 'line': ',', 'line_no': 160}, {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}, {'indent': 12, 'line': '            WHERE', 'line_no': 162}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}], 'if_elses': [], 'else_statements': [{'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}, {'indent': 12, 'line': '            SET', 'line_no': 178}, {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}, {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}, {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}, {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}, {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}, {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}, {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}, {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}, {'indent': 20, 'line': '                    0', 'line_no': 189}, {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}, {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}, {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}, {'indent': 12, 'line': '            WHERE', 'line_no': 193}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}, {'indent': 12, 'line': "            IF :NEW.DELETE_FLAG = 'Y' THEN", 'line_no': 198}, {'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}, {'indent': 12, 'line': '            END IF;', 'line_no': 203}]}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            SET', 'line_no': 157}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 0, 'line': ',', 'line_no': 160}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 162}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            SET', 'line_no': 178}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 20, 'line': '                    0', 'line_no': 189}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}
2025-09-02 18:42:04,155 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 193}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': "            IF :NEW.DELETE_FLAG = 'Y' THEN", 'line_no': 198}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 198
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 198 i: 203
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 6
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}]
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 12, 'end_if_line_no': 203, 'then_statements': [{'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 200}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 4, 'line': '    IF (INSERTING) THEN', 'line_no': 208}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 208
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 208 i: 243
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 30
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 8, 'line': '        V_MATL_COUNT := 0;', 'line_no': 209}, {'indent': 8, 'line': '        SELECT', 'line_no': 210}, {'indent': 12, 'line': '            COUNT (*) INTO V_MATL_COUNT', 'line_no': 211}, {'indent': 8, 'line': '        FROM', 'line_no': 212}, {'indent': 12, 'line': '            COA_MARKET_AUTHS', 'line_no': 213}, {'indent': 8, 'line': '        WHERE', 'line_no': 214}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO', 'line_no': 215}, {'indent': 12, 'line': '            AND COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 216}, {'indent': 8, 'line': '        IF V_MATL_COUNT = 1 THEN', 'line_no': 222}, {'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}, {'indent': 8, 'line': '        END IF;', 'line_no': 224}, {'indent': 8, 'line': '        INSERT INTO COA_MARKET_AUTHS (', 'line_no': 226}, {'indent': 12, 'line': '            MAU_ID,', 'line_no': 227}, {'indent': 12, 'line': '            COUNTRY_ID,', 'line_no': 228}, {'indent': 12, 'line': '            MATL_NO,', 'line_no': 229}, {'indent': 12, 'line': '            MARKET_AUTH_NO,', 'line_no': 230}, {'indent': 12, 'line': '            AUDIT_COMMENT,', 'line_no': 231}, {'indent': 12, 'line': '            DEFINED_IND,', 'line_no': 232}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 233}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 234}, {'indent': 12, 'line': '            :NEW.MAU_ID,', 'line_no': 235}, {'indent': 12, 'line': '            :NEW.COUNTRY_ID,', 'line_no': 236}, {'indent': 12, 'line': '            :NEW.MATL_NO,', 'line_no': 237}, {'indent': 12, 'line': '            V_MARKET_AUTH_NO,', 'line_no': 238}, {'indent': 12, 'line': '            :NEW.AUDIT_COMMENT,', 'line_no': 239}, {'indent': 12, 'line': "            'N',", 'line_no': 240}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 241}, {'indent': 8, 'line': '        );', 'line_no': 242}]
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 208, 'then_line_no': 208, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'indent': 8, 'line': '        V_MATL_COUNT := 0;', 'line_no': 209}, {'indent': 8, 'line': '        SELECT', 'line_no': 210}, {'indent': 12, 'line': '            COUNT (*) INTO V_MATL_COUNT', 'line_no': 211}, {'indent': 8, 'line': '        FROM', 'line_no': 212}, {'indent': 12, 'line': '            COA_MARKET_AUTHS', 'line_no': 213}, {'indent': 8, 'line': '        WHERE', 'line_no': 214}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO', 'line_no': 215}, {'indent': 12, 'line': '            AND COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 216}, {'indent': 8, 'line': '        IF V_MATL_COUNT = 1 THEN', 'line_no': 222}, {'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}, {'indent': 8, 'line': '        END IF;', 'line_no': 224}, {'indent': 8, 'line': '        INSERT INTO COA_MARKET_AUTHS (', 'line_no': 226}, {'indent': 12, 'line': '            MAU_ID,', 'line_no': 227}, {'indent': 12, 'line': '            COUNTRY_ID,', 'line_no': 228}, {'indent': 12, 'line': '            MATL_NO,', 'line_no': 229}, {'indent': 12, 'line': '            MARKET_AUTH_NO,', 'line_no': 230}, {'indent': 12, 'line': '            AUDIT_COMMENT,', 'line_no': 231}, {'indent': 12, 'line': '            DEFINED_IND,', 'line_no': 232}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 233}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 234}, {'indent': 12, 'line': '            :NEW.MAU_ID,', 'line_no': 235}, {'indent': 12, 'line': '            :NEW.COUNTRY_ID,', 'line_no': 236}, {'indent': 12, 'line': '            :NEW.MATL_NO,', 'line_no': 237}, {'indent': 12, 'line': '            V_MARKET_AUTH_NO,', 'line_no': 238}, {'indent': 12, 'line': '            :NEW.AUDIT_COMMENT,', 'line_no': 239}, {'indent': 12, 'line': "            'N',", 'line_no': 240}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 241}, {'indent': 8, 'line': '        );', 'line_no': 242}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        V_MATL_COUNT := 0;', 'line_no': 209}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 210}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            COUNT (*) INTO V_MATL_COUNT', 'line_no': 211}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        FROM', 'line_no': 212}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            COA_MARKET_AUTHS', 'line_no': 213}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 214}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO', 'line_no': 215}
2025-09-02 18:42:04,156 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            AND COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 216}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        IF V_MATL_COUNT = 1 THEN', 'line_no': 222}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1175] - if_indent: 222
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1181] - if_i: 222 i: 224
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1182] - if_elses working_lines lenght: 3
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1312] - else_i: -1 elif_i: -1 then_statements: [{'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}]
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1315] - elif_else_statements: {'condition': ' V_MATL_COUNT = 1 ', 'type': 'if_else', 'if_line_no': 222, 'then_line_no': 222, 'if_indent': 8, 'end_if_line_no': 224, 'then_statements': [{'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}], 'if_elses': [], 'else_statements': []}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        INSERT INTO COA_MARKET_AUTHS (', 'line_no': 226}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            MAU_ID,', 'line_no': 227}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            COUNTRY_ID,', 'line_no': 228}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            MATL_NO,', 'line_no': 229}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            MARKET_AUTH_NO,', 'line_no': 230}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            AUDIT_COMMENT,', 'line_no': 231}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            DEFINED_IND,', 'line_no': 232}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            VALID_IND', 'line_no': 233}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        ) VALUES (', 'line_no': 234}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            :NEW.MAU_ID,', 'line_no': 235}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            :NEW.COUNTRY_ID,', 'line_no': 236}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            :NEW.MATL_NO,', 'line_no': 237}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            V_MARKET_AUTH_NO,', 'line_no': 238}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            :NEW.AUDIT_COMMENT,', 'line_no': 239}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': "            'N',", 'line_no': 240}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 241}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        );', 'line_no': 242}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20101, V_TRIGGER_NAME);', 'line_no': 248}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20102, V_TRIGGER_NAME);', 'line_no': 250}
2025-09-02 18:42:04,157 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20103, V_TRIGGER_NAME);', 'line_no': 252}
2025-09-02 18:42:04,158 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20104, V_TRIGGER_NAME);', 'line_no': 254}
2025-09-02 18:42:04,158 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);', 'line_no': 256}
2025-09-02 18:42:04,158 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20106, V_TRIGGER_NAME);', 'line_no': 258}
2025-09-02 18:42:04,158 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20107, V_TRIGGER_NAME);', 'line_no': 260}
2025-09-02 18:42:04,158 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20108, V_TRIGGER_NAME);', 'line_no': 262}
2025-09-02 18:42:04,158 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20109, V_TRIGGER_NAME);', 'line_no': 264}
2025-09-02 18:42:04,158 - root - DEBUG - [OracleTriggerAnalyzer.py:1171] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20400, 'This record has already been deleted and cannot be changed anymore');", 'line_no': 266}
2025-09-02 18:42:04,400 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 4, 'line': "    V_MARKET_AUTH_NO := TRIM (REPLACE ( :NEW.MARKET_AUTH_NO, CHR (9), ''));", 'line_no': 23}, {'condition': " :OLD.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 29, 'then_line_no': 29, 'if_indent': 4, 'end_if_line_no': 40, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 30}, {'indent': 12, 'line': '            COUNT (MAU_ID) INTO V_RECORD_COUNT', 'line_no': 31}, {'indent': 8, 'line': '        FROM', 'line_no': 32}, {'indent': 12, 'line': '            COA_MARKET_AUTHS_HIS A', 'line_no': 33}, {'indent': 8, 'line': '        WHERE', 'line_no': 34}, {'indent': 12, 'line': "            A.ACTION = 'D'", 'line_no': 35}, {'indent': 12, 'line': '            AND A.MAU_ID = :OLD.MAU_ID;', 'line_no': 36}, {'condition': ' V_RECORD_COUNT > 0 ', 'type': 'if_else', 'if_line_no': 37, 'then_line_no': 37, 'if_indent': 8, 'end_if_line_no': 39, 'then_statements': [{'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 4, 'end_if_line_no': 51, 'then_statements': [{'condition': ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 8, 'end_if_line_no': 50, 'then_statements': [{'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'begin_end', 'begin_line_no': 58, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 59}, {'indent': 12, 'line': '            CLASS_CD INTO P_CLASS', 'line_no': 60}, {'indent': 8, 'line': '        FROM', 'line_no': 61}, {'indent': 12, 'line': '            V_MATERIALS', 'line_no': 62}, {'indent': 8, 'line': '        WHERE', 'line_no': 63}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO;', 'line_no': 64}, {'condition': " P_CLASS NOT IN ('FIN') ", 'type': 'if_else', 'if_line_no': 65, 'then_line_no': 65, 'if_indent': 8, 'end_if_line_no': 67, 'then_statements': [{'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 69, 'when_indent': 8, 'then_line_no': 69, 'exception_statements': [{'indent': 12, 'line': '            RAISE E_MATL;', 'line_no': 70}]}], 'exception_line_no': 68, 'end_line_no': 71}, {'indent': 4, 'line': '    SELECT', 'line_no': 78}, {'indent': 8, 'line': '        COUNT (*) INTO V_MATL_COUNT', 'line_no': 79}, {'indent': 4, 'line': '    FROM', 'line_no': 80}, {'indent': 8, 'line': '        V_MATERIALS', 'line_no': 81}, {'indent': 4, 'line': '    WHERE', 'line_no': 82}, {'indent': 8, 'line': '        MATL_NO = :NEW.MATL_NO', 'line_no': 83}, {'indent': 0, 'line': ';', 'line_no': 85}, {'condition': ' V_MATL_COUNT = 0 ', 'type': 'if_else', 'if_line_no': 86, 'then_line_no': 86, 'if_indent': 4, 'end_if_line_no': 88, 'then_statements': [{'indent': 8, 'line': '        RAISE E_MATL_NO;', 'line_no': 87}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 4, 'end_if_line_no': 205, 'then_statements': [{'condition': ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 100, 'if_indent': 8, 'end_if_line_no': 102, 'then_statements': [{'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.DEFINED_IND = :OLD.DEFINED_IND ', 'type': 'if_else', 'if_line_no': 109, 'then_line_no': 109, 'if_indent': 8, 'end_if_line_no': 113, 'then_statements': [{'condition': ' :NEW.AUDIT_COMMENT IS NULL ', 'type': 'if_else', 'if_line_no': 110, 'then_line_no': 110, 'if_indent': 12, 'end_if_line_no': 112, 'then_statements': [{'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) ", 'type': 'if_else', 'if_line_no': 120, 'then_line_no': 121, 'if_indent': 8, 'end_if_line_no': 123, 'then_statements': [{'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 138, 'then_line_no': 142, 'if_indent': 8, 'end_if_line_no': 144, 'then_statements': [{'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 149, 'then_line_no': 153, 'if_indent': 8, 'end_if_line_no': 204, 'then_statements': [{'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}, {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}, {'indent': 12, 'line': '            SET', 'line_no': 157}, {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}, {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}, {'indent': 0, 'line': ',', 'line_no': 160}, {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}, {'indent': 12, 'line': '            WHERE', 'line_no': 162}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}], 'if_elses': [], 'else_statements': [{'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}, {'indent': 12, 'line': '            SET', 'line_no': 178}, {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}, {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}, {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}, {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}, {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}, {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}, {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}, {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}, {'indent': 20, 'line': '                    0', 'line_no': 189}, {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}, {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}, {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}, {'indent': 12, 'line': '            WHERE', 'line_no': 193}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 12, 'end_if_line_no': 203, 'then_statements': [{'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}], 'if_elses': [], 'else_statements': []}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 208, 'then_line_no': 208, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'indent': 8, 'line': '        V_MATL_COUNT := 0;', 'line_no': 209}, {'indent': 8, 'line': '        SELECT', 'line_no': 210}, {'indent': 12, 'line': '            COUNT (*) INTO V_MATL_COUNT', 'line_no': 211}, {'indent': 8, 'line': '        FROM', 'line_no': 212}, {'indent': 12, 'line': '            COA_MARKET_AUTHS', 'line_no': 213}, {'indent': 8, 'line': '        WHERE', 'line_no': 214}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO', 'line_no': 215}, {'indent': 12, 'line': '            AND COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 216}, {'condition': ' V_MATL_COUNT = 1 ', 'type': 'if_else', 'if_line_no': 222, 'then_line_no': 222, 'if_indent': 8, 'end_if_line_no': 224, 'then_statements': [{'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        INSERT INTO COA_MARKET_AUTHS (', 'line_no': 226}, {'indent': 12, 'line': '            MAU_ID,', 'line_no': 227}, {'indent': 12, 'line': '            COUNTRY_ID,', 'line_no': 228}, {'indent': 12, 'line': '            MATL_NO,', 'line_no': 229}, {'indent': 12, 'line': '            MARKET_AUTH_NO,', 'line_no': 230}, {'indent': 12, 'line': '            AUDIT_COMMENT,', 'line_no': 231}, {'indent': 12, 'line': '            DEFINED_IND,', 'line_no': 232}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 233}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 234}, {'indent': 12, 'line': '            :NEW.MAU_ID,', 'line_no': 235}, {'indent': 12, 'line': '            :NEW.COUNTRY_ID,', 'line_no': 236}, {'indent': 12, 'line': '            :NEW.MATL_NO,', 'line_no': 237}, {'indent': 12, 'line': '            V_MARKET_AUTH_NO,', 'line_no': 238}, {'indent': 12, 'line': '            :NEW.AUDIT_COMMENT,', 'line_no': 239}, {'indent': 12, 'line': "            'N',", 'line_no': 240}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 241}, {'indent': 8, 'line': '        );', 'line_no': 242}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,400 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,400 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 4, 'line': "    V_MARKET_AUTH_NO := TRIM (REPLACE ( :NEW.MARKET_AUTH_NO, CHR (9), ''));", 'line_no': 23}
2025-09-02 18:42:04,400 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 1
2025-09-02 18:42:04,432 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        SELECT', 'line_no': 30}, {'indent': 12, 'line': '            COUNT (MAU_ID) INTO V_RECORD_COUNT', 'line_no': 31}, {'indent': 8, 'line': '        FROM', 'line_no': 32}, {'indent': 12, 'line': '            COA_MARKET_AUTHS_HIS A', 'line_no': 33}, {'indent': 8, 'line': '        WHERE', 'line_no': 34}, {'indent': 12, 'line': "            A.ACTION = 'D'", 'line_no': 35}, {'indent': 12, 'line': '            AND A.MAU_ID = :OLD.MAU_ID;', 'line_no': 36}, {'condition': ' V_RECORD_COUNT > 0 ', 'type': 'if_else', 'if_line_no': 37, 'then_line_no': 37, 'if_indent': 8, 'end_if_line_no': 39, 'then_statements': [{'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,432 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,433 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 30}
2025-09-02 18:42:04,433 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 1
2025-09-02 18:42:04,433 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            COUNT (MAU_ID) INTO V_RECORD_COUNT', 'line_no': 31}
2025-09-02 18:42:04,433 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 2
2025-09-02 18:42:04,433 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        FROM', 'line_no': 32}
2025-09-02 18:42:04,433 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 3
2025-09-02 18:42:04,433 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            COA_MARKET_AUTHS_HIS A', 'line_no': 33}
2025-09-02 18:42:04,433 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 4
2025-09-02 18:42:04,433 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 34}
2025-09-02 18:42:04,433 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 5
2025-09-02 18:42:04,434 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': "            A.ACTION = 'D'", 'line_no': 35}
2025-09-02 18:42:04,434 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 6
2025-09-02 18:42:04,434 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            AND A.MAU_ID = :OLD.MAU_ID;', 'line_no': 36}
2025-09-02 18:42:04,434 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 7
2025-09-02 18:42:04,471 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}]
2025-09-02 18:42:04,471 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,471 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}
2025-09-02 18:42:04,486 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,498 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,498 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 2
2025-09-02 18:42:04,506 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'condition': ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 8, 'end_if_line_no': 50, 'then_statements': [{'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,506 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,520 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}]
2025-09-02 18:42:04,520 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,520 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}
2025-09-02 18:42:04,531 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,538 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,538 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 3
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        SELECT', 'line_no': 59}, {'indent': 12, 'line': '            CLASS_CD INTO P_CLASS', 'line_no': 60}, {'indent': 8, 'line': '        FROM', 'line_no': 61}, {'indent': 12, 'line': '            V_MATERIALS', 'line_no': 62}, {'indent': 8, 'line': '        WHERE', 'line_no': 63}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO;', 'line_no': 64}, {'condition': " P_CLASS NOT IN ('FIN') ", 'type': 'if_else', 'if_line_no': 65, 'then_line_no': 65, 'if_indent': 8, 'end_if_line_no': 67, 'then_statements': [{'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 59}
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 1
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            CLASS_CD INTO P_CLASS', 'line_no': 60}
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 2
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        FROM', 'line_no': 61}
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 3
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            V_MATERIALS', 'line_no': 62}
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 4
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 63}
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 5
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO;', 'line_no': 64}
2025-09-02 18:42:04,545 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 6
2025-09-02 18:42:04,553 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}]
2025-09-02 18:42:04,553 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,553 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}
2025-09-02 18:42:04,561 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,568 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 12, 'line': '            RAISE E_MATL;', 'line_no': 70}]
2025-09-02 18:42:04,568 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,568 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            RAISE E_MATL;', 'line_no': 70}
2025-09-02 18:42:04,568 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 4
2025-09-02 18:42:04,568 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 4, 'line': '    SELECT', 'line_no': 78}
2025-09-02 18:42:04,568 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 5
2025-09-02 18:42:04,568 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        COUNT (*) INTO V_MATL_COUNT', 'line_no': 79}
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 6
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 4, 'line': '    FROM', 'line_no': 80}
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 7
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        V_MATERIALS', 'line_no': 81}
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 8
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 4, 'line': '    WHERE', 'line_no': 82}
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 9
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        MATL_NO = :NEW.MATL_NO', 'line_no': 83}
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 10
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 0, 'line': ';', 'line_no': 85}
2025-09-02 18:42:04,569 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 11
2025-09-02 18:42:04,578 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        RAISE E_MATL_NO;', 'line_no': 87}]
2025-09-02 18:42:04,578 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,578 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        RAISE E_MATL_NO;', 'line_no': 87}
2025-09-02 18:42:04,586 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,586 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 12
2025-09-02 18:42:04,593 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'condition': ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 100, 'if_indent': 8, 'end_if_line_no': 102, 'then_statements': [{'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.DEFINED_IND = :OLD.DEFINED_IND ', 'type': 'if_else', 'if_line_no': 109, 'then_line_no': 109, 'if_indent': 8, 'end_if_line_no': 113, 'then_statements': [{'condition': ' :NEW.AUDIT_COMMENT IS NULL ', 'type': 'if_else', 'if_line_no': 110, 'then_line_no': 110, 'if_indent': 12, 'end_if_line_no': 112, 'then_statements': [{'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) ", 'type': 'if_else', 'if_line_no': 120, 'then_line_no': 121, 'if_indent': 8, 'end_if_line_no': 123, 'then_statements': [{'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 138, 'then_line_no': 142, 'if_indent': 8, 'end_if_line_no': 144, 'then_statements': [{'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 149, 'then_line_no': 153, 'if_indent': 8, 'end_if_line_no': 204, 'then_statements': [{'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}, {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}, {'indent': 12, 'line': '            SET', 'line_no': 157}, {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}, {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}, {'indent': 0, 'line': ',', 'line_no': 160}, {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}, {'indent': 12, 'line': '            WHERE', 'line_no': 162}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}], 'if_elses': [], 'else_statements': [{'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}, {'indent': 12, 'line': '            SET', 'line_no': 178}, {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}, {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}, {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}, {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}, {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}, {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}, {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}, {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}, {'indent': 20, 'line': '                    0', 'line_no': 189}, {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}, {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}, {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}, {'indent': 12, 'line': '            WHERE', 'line_no': 193}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 12, 'end_if_line_no': 203, 'then_statements': [{'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}], 'if_elses': [], 'else_statements': []}]}]
2025-09-02 18:42:04,593 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,600 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}]
2025-09-02 18:42:04,601 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,601 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}
2025-09-02 18:42:04,608 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,608 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 1
2025-09-02 18:42:04,616 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'condition': ' :NEW.AUDIT_COMMENT IS NULL ', 'type': 'if_else', 'if_line_no': 110, 'then_line_no': 110, 'if_indent': 12, 'end_if_line_no': 112, 'then_statements': [{'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,616 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,623 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}]
2025-09-02 18:42:04,623 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,623 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}
2025-09-02 18:42:04,631 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,638 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,638 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 2
2025-09-02 18:42:04,646 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}]
2025-09-02 18:42:04,646 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,646 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}
2025-09-02 18:42:04,653 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,653 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 3
2025-09-02 18:42:04,661 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}]
2025-09-02 18:42:04,661 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,661 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}
2025-09-02 18:42:04,671 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,671 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 4
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}, {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}, {'indent': 12, 'line': '            SET', 'line_no': 157}, {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}, {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}, {'indent': 0, 'line': ',', 'line_no': 160}, {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}, {'indent': 12, 'line': '            WHERE', 'line_no': 162}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}]
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 1
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 2
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 3
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            SET', 'line_no': 157}
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 4
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 5
2025-09-02 18:42:04,678 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}
2025-09-02 18:42:04,679 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 6
2025-09-02 18:42:04,679 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 0, 'line': ',', 'line_no': 160}
2025-09-02 18:42:04,679 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 7
2025-09-02 18:42:04,679 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}
2025-09-02 18:42:04,679 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 8
2025-09-02 18:42:04,679 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 162}
2025-09-02 18:42:04,679 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 9
2025-09-02 18:42:04,679 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}, {'indent': 12, 'line': '            SET', 'line_no': 178}, {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}, {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}, {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}, {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}, {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}, {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}, {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}, {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}, {'indent': 20, 'line': '                    0', 'line_no': 189}, {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}, {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}, {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}, {'indent': 12, 'line': '            WHERE', 'line_no': 193}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 12, 'end_if_line_no': 203, 'then_statements': [{'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 1
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            SET', 'line_no': 178}
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 2
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 3
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 4
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 5
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 6
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 7
2025-09-02 18:42:04,687 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 8
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 9
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 10
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 20, 'line': '                    0', 'line_no': 189}
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 11
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 12
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 13
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 14
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            WHERE', 'line_no': 193}
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 15
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}
2025-09-02 18:42:04,688 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 16
2025-09-02 18:42:04,696 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}]
2025-09-02 18:42:04,696 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,696 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}
2025-09-02 18:42:04,696 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 1
2025-09-02 18:42:04,696 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 16, 'line': '                WHERE', 'line_no': 200}
2025-09-02 18:42:04,696 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 2
2025-09-02 18:42:04,696 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}
2025-09-02 18:42:04,696 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 3
2025-09-02 18:42:04,696 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}
2025-09-02 18:42:04,703 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,711 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,712 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 13
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        V_MATL_COUNT := 0;', 'line_no': 209}, {'indent': 8, 'line': '        SELECT', 'line_no': 210}, {'indent': 12, 'line': '            COUNT (*) INTO V_MATL_COUNT', 'line_no': 211}, {'indent': 8, 'line': '        FROM', 'line_no': 212}, {'indent': 12, 'line': '            COA_MARKET_AUTHS', 'line_no': 213}, {'indent': 8, 'line': '        WHERE', 'line_no': 214}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO', 'line_no': 215}, {'indent': 12, 'line': '            AND COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 216}, {'condition': ' V_MATL_COUNT = 1 ', 'type': 'if_else', 'if_line_no': 222, 'then_line_no': 222, 'if_indent': 8, 'end_if_line_no': 224, 'then_statements': [{'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        INSERT INTO COA_MARKET_AUTHS (', 'line_no': 226}, {'indent': 12, 'line': '            MAU_ID,', 'line_no': 227}, {'indent': 12, 'line': '            COUNTRY_ID,', 'line_no': 228}, {'indent': 12, 'line': '            MATL_NO,', 'line_no': 229}, {'indent': 12, 'line': '            MARKET_AUTH_NO,', 'line_no': 230}, {'indent': 12, 'line': '            AUDIT_COMMENT,', 'line_no': 231}, {'indent': 12, 'line': '            DEFINED_IND,', 'line_no': 232}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 233}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 234}, {'indent': 12, 'line': '            :NEW.MAU_ID,', 'line_no': 235}, {'indent': 12, 'line': '            :NEW.COUNTRY_ID,', 'line_no': 236}, {'indent': 12, 'line': '            :NEW.MATL_NO,', 'line_no': 237}, {'indent': 12, 'line': '            V_MARKET_AUTH_NO,', 'line_no': 238}, {'indent': 12, 'line': '            :NEW.AUDIT_COMMENT,', 'line_no': 239}, {'indent': 12, 'line': "            'N',", 'line_no': 240}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 241}, {'indent': 8, 'line': '        );', 'line_no': 242}]
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        V_MATL_COUNT := 0;', 'line_no': 209}
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 1
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        SELECT', 'line_no': 210}
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 2
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            COUNT (*) INTO V_MATL_COUNT', 'line_no': 211}
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 3
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        FROM', 'line_no': 212}
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 4
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            COA_MARKET_AUTHS', 'line_no': 213}
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 5
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        WHERE', 'line_no': 214}
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 6
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO', 'line_no': 215}
2025-09-02 18:42:04,720 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 7
2025-09-02 18:42:04,721 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            AND COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 216}
2025-09-02 18:42:04,721 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 8
2025-09-02 18:42:04,728 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}]
2025-09-02 18:42:04,728 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,728 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}
2025-09-02 18:42:04,736 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,736 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 9
2025-09-02 18:42:04,736 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        INSERT INTO COA_MARKET_AUTHS (', 'line_no': 226}
2025-09-02 18:42:04,736 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 10
2025-09-02 18:42:04,736 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            MAU_ID,', 'line_no': 227}
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 11
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            COUNTRY_ID,', 'line_no': 228}
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 12
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            MATL_NO,', 'line_no': 229}
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 13
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            MARKET_AUTH_NO,', 'line_no': 230}
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 14
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            AUDIT_COMMENT,', 'line_no': 231}
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 15
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            DEFINED_IND,', 'line_no': 232}
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 16
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            VALID_IND', 'line_no': 233}
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 17
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        ) VALUES (', 'line_no': 234}
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 18
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            :NEW.MAU_ID,', 'line_no': 235}
2025-09-02 18:42:04,737 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 19
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            :NEW.COUNTRY_ID,', 'line_no': 236}
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 20
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            :NEW.MATL_NO,', 'line_no': 237}
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 21
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            V_MARKET_AUTH_NO,', 'line_no': 238}
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 22
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            :NEW.AUDIT_COMMENT,', 'line_no': 239}
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 23
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': "            'N',", 'line_no': 240}
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 24
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 241}
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 25
2025-09-02 18:42:04,738 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        );', 'line_no': 242}
2025-09-02 18:42:04,748 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: []
2025-09-02 18:42:04,756 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20101, V_TRIGGER_NAME);', 'line_no': 248}]
2025-09-02 18:42:04,756 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,757 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20101, V_TRIGGER_NAME);', 'line_no': 248}
2025-09-02 18:42:04,757 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - item: RAISE_APPLICATION_ERROR (-20101, V_TRIGGER_NAME);
2025-09-02 18:42:04,757 - root - DEBUG - [OracleTriggerAnalyzer.py:803] - function calling start: 248
2025-09-02 18:42:04,757 - root - DEBUG - [OracleTriggerAnalyzer.py:805] - function calling end: 248
2025-09-02 18:42:04,757 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20101, V_TRIGGER_NAME);
2025-09-02 18:42:04,765 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20102, V_TRIGGER_NAME);', 'line_no': 250}]
2025-09-02 18:42:04,766 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,766 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20102, V_TRIGGER_NAME);', 'line_no': 250}
2025-09-02 18:42:04,766 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - item: RAISE_APPLICATION_ERROR (-20102, V_TRIGGER_NAME);
2025-09-02 18:42:04,766 - root - DEBUG - [OracleTriggerAnalyzer.py:803] - function calling start: 250
2025-09-02 18:42:04,766 - root - DEBUG - [OracleTriggerAnalyzer.py:805] - function calling end: 250
2025-09-02 18:42:04,766 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20102, V_TRIGGER_NAME);
2025-09-02 18:42:04,776 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20103, V_TRIGGER_NAME);', 'line_no': 252}]
2025-09-02 18:42:04,777 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,777 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20103, V_TRIGGER_NAME);', 'line_no': 252}
2025-09-02 18:42:04,777 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - item: RAISE_APPLICATION_ERROR (-20103, V_TRIGGER_NAME);
2025-09-02 18:42:04,777 - root - DEBUG - [OracleTriggerAnalyzer.py:803] - function calling start: 252
2025-09-02 18:42:04,777 - root - DEBUG - [OracleTriggerAnalyzer.py:805] - function calling end: 252
2025-09-02 18:42:04,777 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20103, V_TRIGGER_NAME);
2025-09-02 18:42:04,784 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20104, V_TRIGGER_NAME);', 'line_no': 254}]
2025-09-02 18:42:04,784 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,784 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20104, V_TRIGGER_NAME);', 'line_no': 254}
2025-09-02 18:42:04,784 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - item: RAISE_APPLICATION_ERROR (-20104, V_TRIGGER_NAME);
2025-09-02 18:42:04,784 - root - DEBUG - [OracleTriggerAnalyzer.py:803] - function calling start: 254
2025-09-02 18:42:04,784 - root - DEBUG - [OracleTriggerAnalyzer.py:805] - function calling end: 254
2025-09-02 18:42:04,784 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20104, V_TRIGGER_NAME);
2025-09-02 18:42:04,791 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);', 'line_no': 256}]
2025-09-02 18:42:04,791 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,792 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);', 'line_no': 256}
2025-09-02 18:42:04,792 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - item: RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);
2025-09-02 18:42:04,792 - root - DEBUG - [OracleTriggerAnalyzer.py:803] - function calling start: 256
2025-09-02 18:42:04,792 - root - DEBUG - [OracleTriggerAnalyzer.py:805] - function calling end: 256
2025-09-02 18:42:04,792 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20105, V_TRIGGER_NAME);
2025-09-02 18:42:04,799 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20106, V_TRIGGER_NAME);', 'line_no': 258}]
2025-09-02 18:42:04,799 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,799 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20106, V_TRIGGER_NAME);', 'line_no': 258}
2025-09-02 18:42:04,799 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - item: RAISE_APPLICATION_ERROR (-20106, V_TRIGGER_NAME);
2025-09-02 18:42:04,799 - root - DEBUG - [OracleTriggerAnalyzer.py:803] - function calling start: 258
2025-09-02 18:42:04,799 - root - DEBUG - [OracleTriggerAnalyzer.py:805] - function calling end: 258
2025-09-02 18:42:04,799 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20106, V_TRIGGER_NAME);
2025-09-02 18:42:04,806 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20107, V_TRIGGER_NAME);', 'line_no': 260}]
2025-09-02 18:42:04,806 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,806 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20107, V_TRIGGER_NAME);', 'line_no': 260}
2025-09-02 18:42:04,806 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - item: RAISE_APPLICATION_ERROR (-20107, V_TRIGGER_NAME);
2025-09-02 18:42:04,807 - root - DEBUG - [OracleTriggerAnalyzer.py:803] - function calling start: 260
2025-09-02 18:42:04,807 - root - DEBUG - [OracleTriggerAnalyzer.py:805] - function calling end: 260
2025-09-02 18:42:04,807 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20107, V_TRIGGER_NAME);
2025-09-02 18:42:04,814 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20108, V_TRIGGER_NAME);', 'line_no': 262}]
2025-09-02 18:42:04,814 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,814 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20108, V_TRIGGER_NAME);', 'line_no': 262}
2025-09-02 18:42:04,814 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - item: RAISE_APPLICATION_ERROR (-20108, V_TRIGGER_NAME);
2025-09-02 18:42:04,814 - root - DEBUG - [OracleTriggerAnalyzer.py:803] - function calling start: 262
2025-09-02 18:42:04,814 - root - DEBUG - [OracleTriggerAnalyzer.py:805] - function calling end: 262
2025-09-02 18:42:04,814 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20108, V_TRIGGER_NAME);
2025-09-02 18:42:04,821 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20109, V_TRIGGER_NAME);', 'line_no': 264}]
2025-09-02 18:42:04,822 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,822 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': '        RAISE_APPLICATION_ERROR (-20109, V_TRIGGER_NAME);', 'line_no': 264}
2025-09-02 18:42:04,822 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - item: RAISE_APPLICATION_ERROR (-20109, V_TRIGGER_NAME);
2025-09-02 18:42:04,822 - root - DEBUG - [OracleTriggerAnalyzer.py:803] - function calling start: 264
2025-09-02 18:42:04,822 - root - DEBUG - [OracleTriggerAnalyzer.py:805] - function calling end: 264
2025-09-02 18:42:04,822 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR (-20109, V_TRIGGER_NAME);
2025-09-02 18:42:04,829 - root - DEBUG - [OracleTriggerAnalyzer.py:760] - working_lines: [{'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20400, 'This record has already been deleted and cannot be changed anymore');", 'line_no': 266}]
2025-09-02 18:42:04,829 - root - DEBUG - [OracleTriggerAnalyzer.py:766] - i: 0
2025-09-02 18:42:04,829 - root - DEBUG - [OracleTriggerAnalyzer.py:769] - item: {'indent': 8, 'line': "        RAISE_APPLICATION_ERROR ( -20400, 'This record has already been deleted and cannot be changed anymore');", 'line_no': 266}
2025-09-02 18:42:04,829 - root - DEBUG - [OracleTriggerAnalyzer.py:802] - item: RAISE_APPLICATION_ERROR ( -20400, 'THIS RECORD HAS ALREADY BEEN DELETED AND CANNOT BE CHANGED ANYMORE');
2025-09-02 18:42:04,829 - root - DEBUG - [OracleTriggerAnalyzer.py:803] - function calling start: 266
2025-09-02 18:42:04,829 - root - DEBUG - [OracleTriggerAnalyzer.py:805] - function calling end: 266
2025-09-02 18:42:04,829 - root - DEBUG - [OracleTriggerAnalyzer.py:1749] - combined_line: RAISE_APPLICATION_ERROR ( -20400, 'This record has already been deleted and cannot be changed anymore');
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 4, 'line': "    V_MARKET_AUTH_NO := TRIM (REPLACE ( :NEW.MARKET_AUTH_NO, CHR (9), ''));", 'line_no': 23}, {'condition': " :OLD.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 29, 'then_line_no': 29, 'if_indent': 4, 'end_if_line_no': 40, 'then_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 30}, {'indent': 12, 'line': '            COUNT (MAU_ID) INTO V_RECORD_COUNT', 'line_no': 31}, {'indent': 8, 'line': '        FROM', 'line_no': 32}, {'indent': 12, 'line': '            COA_MARKET_AUTHS_HIS A', 'line_no': 33}, {'indent': 8, 'line': '        WHERE', 'line_no': 34}, {'indent': 12, 'line': "            A.ACTION = 'D'", 'line_no': 35}, {'indent': 12, 'line': '            AND A.MAU_ID = :OLD.MAU_ID;', 'line_no': 36}, {'condition': ' V_RECORD_COUNT > 0 ', 'type': 'if_else', 'if_line_no': 37, 'then_line_no': 37, 'if_indent': 8, 'end_if_line_no': 39, 'then_statements': [{'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 4, 'end_if_line_no': 51, 'then_statements': [{'condition': ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 8, 'end_if_line_no': 50, 'then_statements': [{'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'begin_end', 'begin_line_no': 58, 'begin_indent': 4, 'begin_end_statements': [{'indent': 8, 'line': '        SELECT', 'line_no': 59}, {'indent': 12, 'line': '            CLASS_CD INTO P_CLASS', 'line_no': 60}, {'indent': 8, 'line': '        FROM', 'line_no': 61}, {'indent': 12, 'line': '            V_MATERIALS', 'line_no': 62}, {'indent': 8, 'line': '        WHERE', 'line_no': 63}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO;', 'line_no': 64}, {'condition': " P_CLASS NOT IN ('FIN') ", 'type': 'if_else', 'if_line_no': 65, 'then_line_no': 65, 'if_indent': 8, 'end_if_line_no': 67, 'then_statements': [{'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 69, 'when_indent': 8, 'then_line_no': 69, 'exception_statements': [{'indent': 12, 'line': '            RAISE E_MATL;', 'line_no': 70}]}], 'exception_line_no': 68, 'end_line_no': 71}, {'indent': 4, 'line': '    SELECT', 'line_no': 78}, {'indent': 8, 'line': '        COUNT (*) INTO V_MATL_COUNT', 'line_no': 79}, {'indent': 4, 'line': '    FROM', 'line_no': 80}, {'indent': 8, 'line': '        V_MATERIALS', 'line_no': 81}, {'indent': 4, 'line': '    WHERE', 'line_no': 82}, {'indent': 8, 'line': '        MATL_NO = :NEW.MATL_NO', 'line_no': 83}, {'indent': 0, 'line': ';', 'line_no': 85}, {'condition': ' V_MATL_COUNT = 0 ', 'type': 'if_else', 'if_line_no': 86, 'then_line_no': 86, 'if_indent': 4, 'end_if_line_no': 88, 'then_statements': [{'indent': 8, 'line': '        RAISE E_MATL_NO;', 'line_no': 87}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 4, 'end_if_line_no': 205, 'then_statements': [{'condition': ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 100, 'if_indent': 8, 'end_if_line_no': 102, 'then_statements': [{'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.DEFINED_IND = :OLD.DEFINED_IND ', 'type': 'if_else', 'if_line_no': 109, 'then_line_no': 109, 'if_indent': 8, 'end_if_line_no': 113, 'then_statements': [{'condition': ' :NEW.AUDIT_COMMENT IS NULL ', 'type': 'if_else', 'if_line_no': 110, 'then_line_no': 110, 'if_indent': 12, 'end_if_line_no': 112, 'then_statements': [{'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) ", 'type': 'if_else', 'if_line_no': 120, 'then_line_no': 121, 'if_indent': 8, 'end_if_line_no': 123, 'then_statements': [{'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 138, 'then_line_no': 142, 'if_indent': 8, 'end_if_line_no': 144, 'then_statements': [{'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 149, 'then_line_no': 153, 'if_indent': 8, 'end_if_line_no': 204, 'then_statements': [{'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}, {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}, {'indent': 12, 'line': '            SET', 'line_no': 157}, {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}, {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}, {'indent': 0, 'line': ',', 'line_no': 160}, {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}, {'indent': 12, 'line': '            WHERE', 'line_no': 162}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}], 'if_elses': [], 'else_statements': [{'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}, {'indent': 12, 'line': '            SET', 'line_no': 178}, {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}, {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}, {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}, {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}, {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}, {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}, {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}, {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}, {'indent': 20, 'line': '                    0', 'line_no': 189}, {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}, {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}, {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}, {'indent': 12, 'line': '            WHERE', 'line_no': 193}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 12, 'end_if_line_no': 203, 'then_statements': [{'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}], 'if_elses': [], 'else_statements': []}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 208, 'then_line_no': 208, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'indent': 8, 'line': '        V_MATL_COUNT := 0;', 'line_no': 209}, {'indent': 8, 'line': '        SELECT', 'line_no': 210}, {'indent': 12, 'line': '            COUNT (*) INTO V_MATL_COUNT', 'line_no': 211}, {'indent': 8, 'line': '        FROM', 'line_no': 212}, {'indent': 12, 'line': '            COA_MARKET_AUTHS', 'line_no': 213}, {'indent': 8, 'line': '        WHERE', 'line_no': 214}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO', 'line_no': 215}, {'indent': 12, 'line': '            AND COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 216}, {'condition': ' V_MATL_COUNT = 1 ', 'type': 'if_else', 'if_line_no': 222, 'then_line_no': 222, 'if_indent': 8, 'end_if_line_no': 224, 'then_statements': [{'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        INSERT INTO COA_MARKET_AUTHS (', 'line_no': 226}, {'indent': 12, 'line': '            MAU_ID,', 'line_no': 227}, {'indent': 12, 'line': '            COUNTRY_ID,', 'line_no': 228}, {'indent': 12, 'line': '            MATL_NO,', 'line_no': 229}, {'indent': 12, 'line': '            MARKET_AUTH_NO,', 'line_no': 230}, {'indent': 12, 'line': '            AUDIT_COMMENT,', 'line_no': 231}, {'indent': 12, 'line': '            DEFINED_IND,', 'line_no': 232}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 233}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 234}, {'indent': 12, 'line': '            :NEW.MAU_ID,', 'line_no': 235}, {'indent': 12, 'line': '            :NEW.COUNTRY_ID,', 'line_no': 236}, {'indent': 12, 'line': '            :NEW.MATL_NO,', 'line_no': 237}, {'indent': 12, 'line': '            V_MARKET_AUTH_NO,', 'line_no': 238}, {'indent': 12, 'line': '            :NEW.AUDIT_COMMENT,', 'line_no': 239}, {'indent': 12, 'line': "            'N',", 'line_no': 240}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 241}, {'indent': 8, 'line': '        );', 'line_no': 242}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:     V_MARKET_AUTH_NO := TRIM (REPLACE ( :NEW.MARKET_AUTH_NO, CHR (9), '')); || 23 || 4
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:939] - stmt start: 23 || assignment
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:941] - stmt end: 23 || assignment
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:1030] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_MARKET_AUTH_NO', 'assignment_operator': ':=', 'expression': "TRIM (REPLACE ( :NEW.MARKET_AUTH_NO, CHR (9), ''));", 'assignment_line_no': 23, 'assignment_indent': 4}
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 1
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 8, 'line': '        SELECT', 'line_no': 30}, {'indent': 12, 'line': '            COUNT (MAU_ID) INTO V_RECORD_COUNT', 'line_no': 31}, {'indent': 8, 'line': '        FROM', 'line_no': 32}, {'indent': 12, 'line': '            COA_MARKET_AUTHS_HIS A', 'line_no': 33}, {'indent': 8, 'line': '        WHERE', 'line_no': 34}, {'indent': 12, 'line': "            A.ACTION = 'D'", 'line_no': 35}, {'indent': 12, 'line': '            AND A.MAU_ID = :OLD.MAU_ID;', 'line_no': 36}, {'condition': ' V_RECORD_COUNT > 0 ', 'type': 'if_else', 'if_line_no': 37, 'then_line_no': 37, 'if_indent': 8, 'end_if_line_no': 39, 'then_statements': [{'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:         SELECT || 30 || 8
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 30 || select_statement || SELECT
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 30 || select_statement
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 30 || select_statement
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - stmt end: 36 || select_statement
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (MAU_ID) INTO V_RECORD_COUNT FROM COA_MARKET_AUTHS_HIS A WHERE A.ACTION = 'D' AND A.MAU_ID = :OLD.MAU_ID;
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 7
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 12, 'line': '            RAISE E_ALREADY_DELETED;', 'line_no': 38}]
2025-09-02 18:42:04,830 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             RAISE E_ALREADY_DELETED; || 38 || 12
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 38 || raise_statement || RAISE
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 38 || raise_statement
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 38 || raise_statement
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:924] - stmt end: 38 || raise_statement
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 2
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'condition': ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 8, 'end_if_line_no': 50, 'then_statements': [{'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 12, 'line': '            RAISE E_DELETE_COA;', 'line_no': 49}]
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             RAISE E_DELETE_COA; || 49 || 12
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 49 || raise_statement || RAISE
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 49 || raise_statement
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 49 || raise_statement
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:924] - stmt end: 49 || raise_statement
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 3
2025-09-02 18:42:04,831 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 8, 'line': '        SELECT', 'line_no': 59}, {'indent': 12, 'line': '            CLASS_CD INTO P_CLASS', 'line_no': 60}, {'indent': 8, 'line': '        FROM', 'line_no': 61}, {'indent': 12, 'line': '            V_MATERIALS', 'line_no': 62}, {'indent': 8, 'line': '        WHERE', 'line_no': 63}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO;', 'line_no': 64}, {'condition': " P_CLASS NOT IN ('FIN') ", 'type': 'if_else', 'if_line_no': 65, 'then_line_no': 65, 'if_indent': 8, 'end_if_line_no': 67, 'then_statements': [{'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:         SELECT || 59 || 8
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 59 || select_statement || SELECT
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 59 || select_statement
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 59 || select_statement
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - stmt end: 64 || select_statement
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT CLASS_CD INTO P_CLASS FROM V_MATERIALS WHERE MATL_NO = :NEW.MATL_NO;
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 6
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 12, 'line': '            RAISE E_MATL_CLASS;', 'line_no': 66}]
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             RAISE E_MATL_CLASS; || 66 || 12
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 66 || raise_statement || RAISE
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 66 || raise_statement
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 66 || raise_statement
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:924] - stmt end: 66 || raise_statement
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 12, 'line': '            RAISE E_MATL;', 'line_no': 70}]
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             RAISE E_MATL; || 70 || 12
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 70 || raise_statement || RAISE
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 70 || raise_statement
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 70 || raise_statement
2025-09-02 18:42:04,832 - root - DEBUG - [OracleTriggerAnalyzer.py:924] - stmt end: 70 || raise_statement
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 4
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:     SELECT || 78 || 4
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 78 || select_statement || SELECT
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 78 || select_statement
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 78 || select_statement
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - stmt end: 85 || select_statement
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO V_MATL_COUNT FROM V_MATERIALS WHERE MATL_NO = :NEW.MATL_NO ;
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 11
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 8, 'line': '        RAISE E_MATL_NO;', 'line_no': 87}]
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:         RAISE E_MATL_NO; || 87 || 8
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 87 || raise_statement || RAISE
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 87 || raise_statement
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 87 || raise_statement
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:924] - stmt end: 87 || raise_statement
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 12
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'condition': ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 100, 'if_indent': 8, 'end_if_line_no': 102, 'then_statements': [{'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.DEFINED_IND = :OLD.DEFINED_IND ', 'type': 'if_else', 'if_line_no': 109, 'then_line_no': 109, 'if_indent': 8, 'end_if_line_no': 113, 'then_statements': [{'condition': ' :NEW.AUDIT_COMMENT IS NULL ', 'type': 'if_else', 'if_line_no': 110, 'then_line_no': 110, 'if_indent': 12, 'end_if_line_no': 112, 'then_statements': [{'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) ", 'type': 'if_else', 'if_line_no': 120, 'then_line_no': 121, 'if_indent': 8, 'end_if_line_no': 123, 'then_statements': [{'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 138, 'then_line_no': 142, 'if_indent': 8, 'end_if_line_no': 144, 'then_statements': [{'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 149, 'then_line_no': 153, 'if_indent': 8, 'end_if_line_no': 204, 'then_statements': [{'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}, {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}, {'indent': 12, 'line': '            SET', 'line_no': 157}, {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}, {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}, {'indent': 0, 'line': ',', 'line_no': 160}, {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}, {'indent': 12, 'line': '            WHERE', 'line_no': 162}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}], 'if_elses': [], 'else_statements': [{'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}, {'indent': 12, 'line': '            SET', 'line_no': 178}, {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}, {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}, {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}, {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}, {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}, {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}, {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}, {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}, {'indent': 20, 'line': '                    0', 'line_no': 189}, {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}, {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}, {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}, {'indent': 12, 'line': '            WHERE', 'line_no': 193}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 12, 'end_if_line_no': 203, 'then_statements': [{'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}], 'if_elses': [], 'else_statements': []}]}]
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 12, 'line': '            RAISE E_UPDATE_COA;', 'line_no': 101}]
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,833 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             RAISE E_UPDATE_COA; || 101 || 12
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 101 || raise_statement || RAISE
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 101 || raise_statement
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 101 || raise_statement
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:924] - stmt end: 101 || raise_statement
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 1
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'condition': ' :NEW.AUDIT_COMMENT IS NULL ', 'type': 'if_else', 'if_line_no': 110, 'then_line_no': 110, 'if_indent': 12, 'end_if_line_no': 112, 'then_statements': [{'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 16, 'line': '                RAISE E_AUDIT_COMMENT;', 'line_no': 111}]
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:                 RAISE E_AUDIT_COMMENT; || 111 || 16
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 111 || raise_statement || RAISE
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 111 || raise_statement
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 111 || raise_statement
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:924] - stmt end: 111 || raise_statement
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 2
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 12, 'line': '            RAISE E_DEFINED_USER;', 'line_no': 122}]
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             RAISE E_DEFINED_USER; || 122 || 12
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 122 || raise_statement || RAISE
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 122 || raise_statement
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 122 || raise_statement
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:924] - stmt end: 122 || raise_statement
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,834 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 3
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 12, 'line': '            RAISE E_CHANGES_USER;', 'line_no': 143}]
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             RAISE E_CHANGES_USER; || 143 || 12
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 143 || raise_statement || RAISE
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 143 || raise_statement
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 143 || raise_statement
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:924] - stmt end: 143 || raise_statement
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 4
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 12, 'line': '            P_APPROVAL_USER := COA_SECURITY.GET_USERID;', 'line_no': 154}, {'indent': 12, 'line': '            P_APPROVAL_DATE := SYSDATE;', 'line_no': 155}, {'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 156}, {'indent': 12, 'line': '            SET', 'line_no': 157}, {'indent': 16, 'line': "                DEFINED_IND = 'Y',", 'line_no': 158}, {'indent': 16, 'line': '                DEF_DATE = SYSDATE', 'line_no': 159}, {'indent': 0, 'line': ',', 'line_no': 160}, {'indent': 16, 'line': '                DEF_USER = COA_UTIL.GET_CHANGING_USER', 'line_no': 161}, {'indent': 12, 'line': '            WHERE', 'line_no': 162}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 163}]
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             P_APPROVAL_USER := COA_SECURITY.GET_USERID; || 154 || 12
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:939] - stmt start: 154 || assignment
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:941] - stmt end: 154 || assignment
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:1030] - assignment_statement: {'type': 'assignment', 'variable_name': 'P_APPROVAL_USER', 'assignment_operator': ':=', 'expression': 'COA_SECURITY.GET_USERID;', 'assignment_line_no': 154, 'assignment_indent': 12}
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 1
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             P_APPROVAL_DATE := SYSDATE; || 155 || 12
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:939] - stmt start: 155 || assignment
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:941] - stmt end: 155 || assignment
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:1030] - assignment_statement: {'type': 'assignment', 'variable_name': 'P_APPROVAL_DATE', 'assignment_operator': ':=', 'expression': 'SYSDATE;', 'assignment_line_no': 155, 'assignment_indent': 12}
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 2
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             UPDATE COA_MARKET_AUTHS || 156 || 12
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 156 || update_statement || UPDATE
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 156 || update_statement
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 156 || update_statement
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - stmt end: 163 || update_statement
2025-09-02 18:42:04,835 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE COA_MARKET_AUTHS SET DEFINED_IND = 'Y', DEF_DATE = SYSDATE , DEF_USER = COA_UTIL.GET_CHANGING_USER WHERE MAU_ID = :NEW.MAU_ID;
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 12, 'line': '            UPDATE COA_MARKET_AUTHS', 'line_no': 177}, {'indent': 12, 'line': '            SET', 'line_no': 178}, {'indent': 16, 'line': '                COUNTRY_ID = :NEW.COUNTRY_ID,', 'line_no': 179}, {'indent': 16, 'line': '                MATL_NO = :NEW.MATL_NO,', 'line_no': 180}, {'indent': 16, 'line': '                MARKET_AUTH_NO = V_MARKET_AUTH_NO,', 'line_no': 181}, {'indent': 16, 'line': '                AUDIT_COMMENT = :NEW.AUDIT_COMMENT,', 'line_no': 182}, {'indent': 16, 'line': "                DEFINED_IND = 'N',", 'line_no': 183}, {'indent': 16, 'line': '                VALID_IND = :NEW.VALID_IND,', 'line_no': 186}, {'indent': 16, 'line': '                UPD_NO = NVL (', 'line_no': 187}, {'indent': 20, 'line': '                    UPD_NO,', 'line_no': 188}, {'indent': 20, 'line': '                    0', 'line_no': 189}, {'indent': 16, 'line': '                ) + 1,', 'line_no': 190}, {'indent': 16, 'line': '                DEF_DATE = NULL,', 'line_no': 191}, {'indent': 16, 'line': '                DEF_USER = NULL', 'line_no': 192}, {'indent': 12, 'line': '            WHERE', 'line_no': 193}, {'indent': 16, 'line': '                MAU_ID = :NEW.MAU_ID;', 'line_no': 194}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 12, 'end_if_line_no': 203, 'then_statements': [{'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             UPDATE COA_MARKET_AUTHS || 177 || 12
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 177 || update_statement || UPDATE
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 177 || update_statement
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 177 || update_statement
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - stmt end: 194 || update_statement
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - UPDATE COA_MARKET_AUTHS SET COUNTRY_ID = :NEW.COUNTRY_ID, MATL_NO = :NEW.MATL_NO, MARKET_AUTH_NO = V_MARKET_AUTH_NO, AUDIT_COMMENT = :NEW.AUDIT_COMMENT, DEFINED_IND = 'N', VALID_IND = :NEW.VALID_IND, UPD_NO = NVL ( UPD_NO, 0 ) + 1, DEF_DATE = NULL, DEF_USER = NULL WHERE MAU_ID = :NEW.MAU_ID;
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 16
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 16, 'line': '                DELETE FROM COA_MARKET_AUTHS', 'line_no': 199}, {'indent': 16, 'line': '                WHERE', 'line_no': 200}, {'indent': 20, 'line': '                    COUNTRY_ID = :NEW.COUNTRY_ID', 'line_no': 201}, {'indent': 20, 'line': '                    AND MATL_NO = :NEW.MATL_NO;', 'line_no': 202}]
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:                 DELETE FROM COA_MARKET_AUTHS || 199 || 16
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 199 || delete_statement || DELETE
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 199 || delete_statement
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 199 || delete_statement
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - stmt end: 202 || delete_statement
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - DELETE FROM COA_MARKET_AUTHS WHERE COUNTRY_ID = :NEW.COUNTRY_ID AND MATL_NO = :NEW.MATL_NO;
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 13
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 8, 'line': '        V_MATL_COUNT := 0;', 'line_no': 209}, {'indent': 8, 'line': '        SELECT', 'line_no': 210}, {'indent': 12, 'line': '            COUNT (*) INTO V_MATL_COUNT', 'line_no': 211}, {'indent': 8, 'line': '        FROM', 'line_no': 212}, {'indent': 12, 'line': '            COA_MARKET_AUTHS', 'line_no': 213}, {'indent': 8, 'line': '        WHERE', 'line_no': 214}, {'indent': 12, 'line': '            MATL_NO = :NEW.MATL_NO', 'line_no': 215}, {'indent': 12, 'line': '            AND COUNTRY_ID = :NEW.COUNTRY_ID;', 'line_no': 216}, {'condition': ' V_MATL_COUNT = 1 ', 'type': 'if_else', 'if_line_no': 222, 'then_line_no': 222, 'if_indent': 8, 'end_if_line_no': 224, 'then_statements': [{'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}], 'if_elses': [], 'else_statements': []}, {'indent': 8, 'line': '        INSERT INTO COA_MARKET_AUTHS (', 'line_no': 226}, {'indent': 12, 'line': '            MAU_ID,', 'line_no': 227}, {'indent': 12, 'line': '            COUNTRY_ID,', 'line_no': 228}, {'indent': 12, 'line': '            MATL_NO,', 'line_no': 229}, {'indent': 12, 'line': '            MARKET_AUTH_NO,', 'line_no': 230}, {'indent': 12, 'line': '            AUDIT_COMMENT,', 'line_no': 231}, {'indent': 12, 'line': '            DEFINED_IND,', 'line_no': 232}, {'indent': 12, 'line': '            VALID_IND', 'line_no': 233}, {'indent': 8, 'line': '        ) VALUES (', 'line_no': 234}, {'indent': 12, 'line': '            :NEW.MAU_ID,', 'line_no': 235}, {'indent': 12, 'line': '            :NEW.COUNTRY_ID,', 'line_no': 236}, {'indent': 12, 'line': '            :NEW.MATL_NO,', 'line_no': 237}, {'indent': 12, 'line': '            V_MARKET_AUTH_NO,', 'line_no': 238}, {'indent': 12, 'line': '            :NEW.AUDIT_COMMENT,', 'line_no': 239}, {'indent': 12, 'line': "            'N',", 'line_no': 240}, {'indent': 12, 'line': '            :NEW.VALID_IND', 'line_no': 241}, {'indent': 8, 'line': '        );', 'line_no': 242}]
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:         V_MATL_COUNT := 0; || 209 || 8
2025-09-02 18:42:04,836 - root - DEBUG - [OracleTriggerAnalyzer.py:939] - stmt start: 209 || assignment
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:941] - stmt end: 209 || assignment
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:1030] - assignment_statement: {'type': 'assignment', 'variable_name': 'V_MATL_COUNT', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 209, 'assignment_indent': 8}
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 1
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:         SELECT || 210 || 8
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 210 || select_statement || SELECT
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 210 || select_statement
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 210 || select_statement
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - stmt end: 216 || select_statement
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - SELECT COUNT (*) INTO V_MATL_COUNT FROM COA_MARKET_AUTHS WHERE MATL_NO = :NEW.MATL_NO AND COUNTRY_ID = :NEW.COUNTRY_ID;
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 8
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'indent': 12, 'line': '            RAISE E_INSERT_COA;', 'line_no': 223}]
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:             RAISE E_INSERT_COA; || 223 || 12
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 223 || raise_statement || RAISE
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 223 || raise_statement
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 223 || raise_statement
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:924] - stmt end: 223 || raise_statement
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 9
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:906] - item:         INSERT INTO COA_MARKET_AUTHS ( || 226 || 8
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:916] - stmt start: 226 || insert_statement || INSERT
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:919] - stmt start: 226 || insert_statement
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:922] - stmt start: 226 || insert_statement
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:932] - stmt end: 242 || insert_statement
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:2068] - INSERT INTO COA_MARKET_AUTHS ( MAU_ID, COUNTRY_ID, MATL_NO, MARKET_AUTH_NO, AUDIT_COMMENT, DEFINED_IND, VALID_IND ) VALUES ( :NEW.MAU_ID, :NEW.COUNTRY_ID, :NEW.MATL_NO, V_MARKET_AUTH_NO, :NEW.AUDIT_COMMENT, 'N', :NEW.VALID_IND );
2025-09-02 18:42:04,837 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: []
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20101', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20101, V_TRIGGER_NAME'}}]
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20102', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20102, V_TRIGGER_NAME'}}]
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20103', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20103, V_TRIGGER_NAME'}}]
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20104', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20104, V_TRIGGER_NAME'}}]
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20105', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20105, V_TRIGGER_NAME'}}]
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20106', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20106, V_TRIGGER_NAME'}}]
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20107', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20107, V_TRIGGER_NAME'}}]
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20108', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20108, V_TRIGGER_NAME'}}]
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20109', 'V_TRIGGER_NAME'], 'named_params': {}, 'raw_text': '-20109, V_TRIGGER_NAME'}}]
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:901] - working_lines: [{'type': 'function_calling', 'function_name': 'RAISE_APPLICATION_ERROR', 'parameters': {'parameter_type': 'positional', 'positional_params': ['-20400', "'This record has already been deleted and cannot be changed anymore'"], 'named_params': {}, 'raw_text': "-20400, 'This record has already been deleted and cannot be changed anymore'"}}]
2025-09-02 18:42:04,838 - root - DEBUG - [OracleTriggerAnalyzer.py:903] - i: 0
2025-09-02 18:42:04,839 - root - DEBUG - [OracleTriggerAnalyzer.py:112] - SQL section parsing
2025-09-02 18:42:04,839 - root - DEBUG - [OracleTriggerAnalyzer.py:115] - OracleTriggerAnalyzer initialization 0.6917204856872559 seconds
2025-09-02 18:42:04,839 - root - DEBUG - [common.py:105] - OracleTriggerAnalyzer created successfully with file details
2025-09-02 18:42:04,839 - root - DEBUG - [common.py:105] - File details: zzz.sql
2025-09-02 18:42:04,839 - root - DEBUG - [common.py:105] - Generating JSON analysis...
2025-09-02 18:42:04,839 - root - DEBUG - [OracleTriggerAnalyzer.py:2169] - JSON conversion complete: 8 vars, 0 consts, 10 excs, 22 comments
2025-09-02 18:42:04,839 - root - DEBUG - [common.py:105] - JSON analysis generated successfully
2025-09-02 18:42:04,839 - root - DEBUG - [common.py:105] - Generated JSON with keys: ['declarations', 'main', 'sql_comments', 'rest_string_list', 'conversion_stats', 'metadata']
2025-09-02 18:42:04,839 - root - DEBUG - [common.py:105] - File details in metadata: zzz.sql (9022 bytes)
2025-09-02 18:42:04,839 - root - DEBUG - [common.py:105] - Analysis statistics: 8 vars, 0 consts, 10 excs, 22 comments
2025-09-02 18:42:04,839 - root - DEBUG - [common.py:105] - Writing analysis JSON to: files/format_json\zzz_analysis.json
2025-09-02 18:42:04,842 - root - DEBUG - [common.py:105] - Successfully wrote analysis JSON to files/format_json\zzz_analysis.json
2025-09-02 18:42:04,842 - root - DEBUG - [common.py:105] - === SQL to JSON processing complete for trigger zzz.sql ===
2025-09-02 18:42:04,842 - root - DEBUG - [common.py:105] - âœ“ Created zzz_analysis.json
2025-09-02 18:42:04,842 - root - INFO - [common.py:110] - === File processing complete ===
2025-09-02 18:42:04,842 - root - INFO - [common.py:110] - Successfully processed: 1 files
2025-09-02 18:42:04,842 - root - INFO - [common.py:110] - === Oracle triggers to JSON conversion complete ===
2025-09-02 18:42:04,843 - root - DEBUG - [common.py:105] - Phase 1 complete: Oracle SQL files converted to JSON analysis structure with file metadata
2025-09-02 18:42:04,843 - root - INFO - [common.py:110] - âœ“ JSON conversion complete! (Duration: 0.70 seconds)
2025-09-02 18:42:04,843 - root - DEBUG - [common.py:105] - Step 1 completed in 0.70 seconds
2025-09-02 18:42:04,843 - root - INFO - [common.py:110] - Step 5: Converting JSON to PL/JSON...
2025-09-02 18:42:04,843 - root - DEBUG - [common.py:105] - Starting Step 5: JSON â†’ PostgreSQL-compatible PL/JSON
2025-09-02 18:42:04,844 - root - DEBUG - [common.py:105] - processing zzz_analysis.json
2025-09-02 18:42:04,844 - root - DEBUG - [common.py:105] - === Starting to_sql() conversion process ===
2025-09-02 18:42:04,844 - root - DEBUG - [common.py:105] - Creating deep copies of JSON data for each operation type
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] - JSON data structure:
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] -   - Main blocks: 7 items
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] -   - Declarations: 8 variables, 0 constants, 10 exceptions
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] - === Processing INSERT operations ===
2025-09-02 18:42:04,845 - root - DEBUG - [JSONTOPLJSON.py:334] - after_parse_on_insert: [{'type': 'assignment', 'variable_name': 'V_MARKET_AUTH_NO', 'assignment_operator': ':=', 'expression': "TRIM (REPLACE ( :NEW.MARKET_AUTH_NO, CHR (9), ''));", 'assignment_line_no': 23, 'assignment_indent': 4}, {'condition': " :OLD.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 29, 'then_line_no': 29, 'if_indent': 4, 'end_if_line_no': 40, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT (MAU_ID) INTO V_RECORD_COUNT FROM COA_MARKET_AUTHS_HIS A WHERE A.ACTION = 'D' AND A.MAU_ID = :OLD.MAU_ID;", 'statement_line_no': 30, 'statement_indent': 8}, {'condition': ' V_RECORD_COUNT > 0 ', 'type': 'if_else', 'if_line_no': 37, 'then_line_no': 37, 'if_indent': 8, 'end_if_line_no': 39, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_ALREADY_DELETED;', 'statement_line_no': 38, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 4, 'end_if_line_no': 51, 'then_statements': [{'condition': ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 8, 'end_if_line_no': 50, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_DELETE_COA;', 'statement_line_no': 49, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'begin_end', 'begin_line_no': 58, 'begin_indent': 4, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT CLASS_CD INTO P_CLASS FROM V_MATERIALS WHERE MATL_NO = :NEW.MATL_NO;', 'statement_line_no': 59, 'statement_indent': 8}, {'condition': " P_CLASS NOT IN ('FIN') ", 'type': 'if_else', 'if_line_no': 65, 'then_line_no': 65, 'if_indent': 8, 'end_if_line_no': 67, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_MATL_CLASS;', 'statement_line_no': 66, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 69, 'when_indent': 8, 'then_line_no': 69, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_MATL;', 'statement_line_no': 70, 'statement_indent': 12}]}], 'exception_line_no': 68, 'end_line_no': 71}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO V_MATL_COUNT FROM V_MATERIALS WHERE MATL_NO = :NEW.MATL_NO ;', 'statement_line_no': 78, 'statement_indent': 4}, {'condition': ' V_MATL_COUNT = 0 ', 'type': 'if_else', 'if_line_no': 86, 'then_line_no': 86, 'if_indent': 4, 'end_if_line_no': 88, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_MATL_NO;', 'statement_line_no': 87, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 4, 'end_if_line_no': 205, 'then_statements': [{'condition': ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 100, 'if_indent': 8, 'end_if_line_no': 102, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_UPDATE_COA;', 'statement_line_no': 101, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.DEFINED_IND = :OLD.DEFINED_IND ', 'type': 'if_else', 'if_line_no': 109, 'then_line_no': 109, 'if_indent': 8, 'end_if_line_no': 113, 'then_statements': [{'condition': ' :NEW.AUDIT_COMMENT IS NULL ', 'type': 'if_else', 'if_line_no': 110, 'then_line_no': 110, 'if_indent': 12, 'end_if_line_no': 112, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_AUDIT_COMMENT;', 'statement_line_no': 111, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) ", 'type': 'if_else', 'if_line_no': 120, 'then_line_no': 121, 'if_indent': 8, 'end_if_line_no': 123, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_DEFINED_USER;', 'statement_line_no': 122, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 138, 'then_line_no': 142, 'if_indent': 8, 'end_if_line_no': 144, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_CHANGES_USER;', 'statement_line_no': 143, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 149, 'then_line_no': 153, 'if_indent': 8, 'end_if_line_no': 204, 'then_statements': [{'type': 'assignment', 'variable_name': 'P_APPROVAL_USER', 'assignment_operator': ':=', 'expression': 'COA_SECURITY.GET_USERID;', 'assignment_line_no': 154, 'assignment_indent': 12}, {'type': 'assignment', 'variable_name': 'P_APPROVAL_DATE', 'assignment_operator': ':=', 'expression': 'SYSDATE;', 'assignment_line_no': 155, 'assignment_indent': 12}, {'type': 'update_statement', 'sql_statement': "UPDATE COA_MARKET_AUTHS SET DEFINED_IND = 'Y', DEF_DATE = SYSDATE , DEF_USER = COA_UTIL.GET_CHANGING_USER WHERE MAU_ID = :NEW.MAU_ID;", 'statement_line_no': 156, 'statement_indent': 12}], 'if_elses': [], 'else_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE COA_MARKET_AUTHS SET COUNTRY_ID = :NEW.COUNTRY_ID, MATL_NO = :NEW.MATL_NO, MARKET_AUTH_NO = V_MARKET_AUTH_NO, AUDIT_COMMENT = :NEW.AUDIT_COMMENT, DEFINED_IND = 'N', VALID_IND = :NEW.VALID_IND, UPD_NO = NVL ( UPD_NO, 0 ) + 1, DEF_DATE = NULL, DEF_USER = NULL WHERE MAU_ID = :NEW.MAU_ID;", 'statement_line_no': 177, 'statement_indent': 12}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 12, 'end_if_line_no': 203, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM COA_MARKET_AUTHS WHERE COUNTRY_ID = :NEW.COUNTRY_ID AND MATL_NO = :NEW.MATL_NO;', 'statement_line_no': 199, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 208, 'then_line_no': 208, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_MATL_COUNT', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 209, 'assignment_indent': 8}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO V_MATL_COUNT FROM COA_MARKET_AUTHS WHERE MATL_NO = :NEW.MATL_NO AND COUNTRY_ID = :NEW.COUNTRY_ID;', 'statement_line_no': 210, 'statement_indent': 8}, {'condition': ' V_MATL_COUNT = 1 ', 'type': 'if_else', 'if_line_no': 222, 'then_line_no': 222, 'if_indent': 8, 'end_if_line_no': 224, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_INSERT_COA;', 'statement_line_no': 223, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'insert_statement', 'sql_statement': "INSERT INTO COA_MARKET_AUTHS ( MAU_ID, COUNTRY_ID, MATL_NO, MARKET_AUTH_NO, AUDIT_COMMENT, DEFINED_IND, VALID_IND ) VALUES ( :NEW.MAU_ID, :NEW.COUNTRY_ID, :NEW.MATL_NO, V_MARKET_AUTH_NO, :NEW.AUDIT_COMMENT, 'N', :NEW.VALID_IND );", 'statement_line_no': 226, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] - Processing condition for on_insert: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] - Starting condition modification: ' :OLD.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,845 - root - DEBUG - [common.py:105] - Stripped condition: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,846 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':OLD.DELETE_FLAG = 'Y'' â†’ ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,846 - root - DEBUG - [common.py:105] - Final modified condition: ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,846 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,846 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,846 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,846 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_RECORD_COUNT > 0 '
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Stripped condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Final modified condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Processing condition for on_insert: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT'
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) '
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,847 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Starting condition modification: ' P_CLASS NOT IN ('FIN') '
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Stripped condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Final modified condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 0 '
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '(UPDATING)'
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'UPDATING'
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Starting condition modification: ' (UPDATING) '
2025-09-02 18:42:04,848 - root - DEBUG - [common.py:105] - Stripped condition: '(UPDATING)'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': '(UPDATING)' â†’ '()'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) '
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Processing condition for on_insert: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DEFINED_IND = :OLD.DEFINED_IND '
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Processing condition for on_insert: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,849 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.AUDIT_COMMENT IS NULL '
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)'
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) '
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,850 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND'
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) '
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND'
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,851 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) '
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Processing condition for on_insert: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '(INSERTING)'
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'INSERTING'
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_insert keywords
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Starting condition modification: ' (INSERTING) '
2025-09-02 18:42:04,852 - root - DEBUG - [common.py:105] - Stripped condition: '(INSERTING)'
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': '(INSERTING)' â†’ '()'
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 1 '
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - === Processing UPDATE operations ===
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Starting condition modification: ' :OLD.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Stripped condition: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':OLD.DELETE_FLAG = 'Y'' â†’ ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,853 - root - DEBUG - [common.py:105] - Final modified condition: ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_RECORD_COUNT > 0 '
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Stripped condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Final modified condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Processing condition for on_update: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT'
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,854 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) '
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Starting condition modification: ' P_CLASS NOT IN ('FIN') '
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Stripped condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Final modified condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 0 '
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Processing condition for on_update: '(UPDATING)'
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'UPDATING'
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,855 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_update keywords
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Starting condition modification: ' (UPDATING) '
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Stripped condition: '(UPDATING)'
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': '(UPDATING)' â†’ '()'
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Processing condition for on_update: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID'
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) '
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,856 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DEFINED_IND = :OLD.DEFINED_IND '
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.AUDIT_COMMENT IS NULL '
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Processing condition for on_update: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)'
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) '
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Processing condition for on_update: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,857 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND'
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) '
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Processing condition for on_update: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND'
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) '
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,858 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Processing condition for on_update: '(INSERTING)'
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'INSERTING'
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Starting condition modification: ' (INSERTING) '
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Stripped condition: '(INSERTING)'
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': '(INSERTING)' â†’ '()'
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 1 '
2025-09-02 18:42:04,859 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - === Processing DELETE operations ===
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Processing condition for on_delete: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_delete keywords
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Starting condition modification: ' :OLD.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Stripped condition: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':OLD.DELETE_FLAG = 'Y'' â†’ ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Final modified condition: ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_RECORD_COUNT > 0 '
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Stripped condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Final modified condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Processing condition for on_delete: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,860 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_delete keywords
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT'
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) '
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Starting condition modification: ' P_CLASS NOT IN ('FIN') '
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Stripped condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,861 - root - DEBUG - [common.py:105] - Final modified condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 0 '
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '(UPDATING)'
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'UPDATING'
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_delete
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - Starting condition modification: ' (UPDATING) '
2025-09-02 18:42:04,862 - root - DEBUG - [common.py:105] - Stripped condition: '(UPDATING)'
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': '(UPDATING)' â†’ '()'
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID'
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) '
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Processing condition for on_delete: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DEFINED_IND = :OLD.DEFINED_IND '
2025-09-02 18:42:04,863 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Processing condition for on_delete: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.AUDIT_COMMENT IS NULL '
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) '
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND'
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,864 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) '
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND'
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) '
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Processing condition for on_delete: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_delete keywords
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,865 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '(INSERTING)'
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'INSERTING'
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_delete
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Starting condition modification: ' (INSERTING) '
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Stripped condition: '(INSERTING)'
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': '(INSERTING)' â†’ '()'
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,866 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,867 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,867 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,867 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,867 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,867 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 1 '
2025-09-02 18:42:04,867 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,867 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,867 - root - DEBUG - [common.py:105] - Building final converted structure
2025-09-02 18:42:04,868 - root - DEBUG - [common.py:105] - Converting to JSON string
2025-09-02 18:42:04,868 - root - DEBUG - [common.py:105] - Generated JSON string with 47168 characters
2025-09-02 18:42:04,868 - root - DEBUG - [common.py:105] - === to_sql() conversion complete ===
2025-09-02 18:42:04,868 - root - DEBUG - [common.py:105] - === Starting to_sql() conversion process ===
2025-09-02 18:42:04,868 - root - DEBUG - [common.py:105] - Creating deep copies of JSON data for each operation type
2025-09-02 18:42:04,869 - root - DEBUG - [common.py:105] - JSON data structure:
2025-09-02 18:42:04,869 - root - DEBUG - [common.py:105] -   - Main blocks: 7 items
2025-09-02 18:42:04,869 - root - DEBUG - [common.py:105] -   - Declarations: 8 variables, 0 constants, 10 exceptions
2025-09-02 18:42:04,869 - root - DEBUG - [common.py:105] - === Processing INSERT operations ===
2025-09-02 18:42:04,870 - root - DEBUG - [JSONTOPLJSON.py:334] - after_parse_on_insert: [{'type': 'assignment', 'variable_name': 'V_MARKET_AUTH_NO', 'assignment_operator': ':=', 'expression': "TRIM (REPLACE ( :NEW.MARKET_AUTH_NO, CHR (9), ''));", 'assignment_line_no': 23, 'assignment_indent': 4}, {'condition': " :OLD.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 29, 'then_line_no': 29, 'if_indent': 4, 'end_if_line_no': 40, 'then_statements': [{'type': 'select_statement', 'sql_statement': "SELECT COUNT (MAU_ID) INTO V_RECORD_COUNT FROM COA_MARKET_AUTHS_HIS A WHERE A.ACTION = 'D' AND A.MAU_ID = :OLD.MAU_ID;", 'statement_line_no': 30, 'statement_indent': 8}, {'condition': ' V_RECORD_COUNT > 0 ', 'type': 'if_else', 'if_line_no': 37, 'then_line_no': 37, 'if_indent': 8, 'end_if_line_no': 39, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_ALREADY_DELETED;', 'statement_line_no': 38, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 47, 'then_line_no': 47, 'if_indent': 4, 'end_if_line_no': 51, 'then_statements': [{'condition': ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) ', 'type': 'if_else', 'if_line_no': 48, 'then_line_no': 48, 'if_indent': 8, 'end_if_line_no': 50, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_DELETE_COA;', 'statement_line_no': 49, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'type': 'begin_end', 'begin_line_no': 58, 'begin_indent': 4, 'begin_end_statements': [{'type': 'select_statement', 'sql_statement': 'SELECT CLASS_CD INTO P_CLASS FROM V_MATERIALS WHERE MATL_NO = :NEW.MATL_NO;', 'statement_line_no': 59, 'statement_indent': 8}, {'condition': " P_CLASS NOT IN ('FIN') ", 'type': 'if_else', 'if_line_no': 65, 'then_line_no': 65, 'if_indent': 8, 'end_if_line_no': 67, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_MATL_CLASS;', 'statement_line_no': 66, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}], 'exception_handlers': [{'type': 'exception_handler', 'exception_name': 'NO_DATA_FOUND', 'when_line_no': 69, 'when_indent': 8, 'then_line_no': 69, 'exception_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_MATL;', 'statement_line_no': 70, 'statement_indent': 12}]}], 'exception_line_no': 68, 'end_line_no': 71}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO V_MATL_COUNT FROM V_MATERIALS WHERE MATL_NO = :NEW.MATL_NO ;', 'statement_line_no': 78, 'statement_indent': 4}, {'condition': ' V_MATL_COUNT = 0 ', 'type': 'if_else', 'if_line_no': 86, 'then_line_no': 86, 'if_indent': 4, 'end_if_line_no': 88, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_MATL_NO;', 'statement_line_no': 87, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}, {'condition': ' (UPDATING) ', 'type': 'if_else', 'if_line_no': 93, 'then_line_no': 93, 'if_indent': 4, 'end_if_line_no': 205, 'then_statements': [{'condition': ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) ', 'type': 'if_else', 'if_line_no': 99, 'then_line_no': 100, 'if_indent': 8, 'end_if_line_no': 102, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_UPDATE_COA;', 'statement_line_no': 101, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': ' :NEW.DEFINED_IND = :OLD.DEFINED_IND ', 'type': 'if_else', 'if_line_no': 109, 'then_line_no': 109, 'if_indent': 8, 'end_if_line_no': 113, 'then_statements': [{'condition': ' :NEW.AUDIT_COMMENT IS NULL ', 'type': 'if_else', 'if_line_no': 110, 'then_line_no': 110, 'if_indent': 12, 'end_if_line_no': 112, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_AUDIT_COMMENT;', 'statement_line_no': 111, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) ", 'type': 'if_else', 'if_line_no': 120, 'then_line_no': 121, 'if_indent': 8, 'end_if_line_no': 123, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_DEFINED_USER;', 'statement_line_no': 122, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 138, 'then_line_no': 142, 'if_indent': 8, 'end_if_line_no': 144, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_CHANGES_USER;', 'statement_line_no': 143, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'condition': " ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) ", 'type': 'if_else', 'if_line_no': 149, 'then_line_no': 153, 'if_indent': 8, 'end_if_line_no': 204, 'then_statements': [{'type': 'assignment', 'variable_name': 'P_APPROVAL_USER', 'assignment_operator': ':=', 'expression': 'COA_SECURITY.GET_USERID;', 'assignment_line_no': 154, 'assignment_indent': 12}, {'type': 'assignment', 'variable_name': 'P_APPROVAL_DATE', 'assignment_operator': ':=', 'expression': 'SYSDATE;', 'assignment_line_no': 155, 'assignment_indent': 12}, {'type': 'update_statement', 'sql_statement': "UPDATE COA_MARKET_AUTHS SET DEFINED_IND = 'Y', DEF_DATE = SYSDATE , DEF_USER = COA_UTIL.GET_CHANGING_USER WHERE MAU_ID = :NEW.MAU_ID;", 'statement_line_no': 156, 'statement_indent': 12}], 'if_elses': [], 'else_statements': [{'type': 'update_statement', 'sql_statement': "UPDATE COA_MARKET_AUTHS SET COUNTRY_ID = :NEW.COUNTRY_ID, MATL_NO = :NEW.MATL_NO, MARKET_AUTH_NO = V_MARKET_AUTH_NO, AUDIT_COMMENT = :NEW.AUDIT_COMMENT, DEFINED_IND = 'N', VALID_IND = :NEW.VALID_IND, UPD_NO = NVL ( UPD_NO, 0 ) + 1, DEF_DATE = NULL, DEF_USER = NULL WHERE MAU_ID = :NEW.MAU_ID;", 'statement_line_no': 177, 'statement_indent': 12}, {'condition': " :NEW.DELETE_FLAG = 'Y' ", 'type': 'if_else', 'if_line_no': 198, 'then_line_no': 198, 'if_indent': 12, 'end_if_line_no': 203, 'then_statements': [{'type': 'delete_statement', 'sql_statement': 'DELETE FROM COA_MARKET_AUTHS WHERE COUNTRY_ID = :NEW.COUNTRY_ID AND MATL_NO = :NEW.MATL_NO;', 'statement_line_no': 199, 'statement_indent': 16}], 'if_elses': [], 'else_statements': []}]}], 'if_elses': [], 'else_statements': []}, {'condition': ' (INSERTING) ', 'type': 'if_else', 'if_line_no': 208, 'then_line_no': 208, 'if_indent': 4, 'end_if_line_no': 243, 'then_statements': [{'type': 'assignment', 'variable_name': 'V_MATL_COUNT', 'assignment_operator': ':=', 'expression': '0;', 'assignment_line_no': 209, 'assignment_indent': 8}, {'type': 'select_statement', 'sql_statement': 'SELECT COUNT (*) INTO V_MATL_COUNT FROM COA_MARKET_AUTHS WHERE MATL_NO = :NEW.MATL_NO AND COUNTRY_ID = :NEW.COUNTRY_ID;', 'statement_line_no': 210, 'statement_indent': 8}, {'condition': ' V_MATL_COUNT = 1 ', 'type': 'if_else', 'if_line_no': 222, 'then_line_no': 222, 'if_indent': 8, 'end_if_line_no': 224, 'then_statements': [{'type': 'raise_statement', 'sql_statement': 'RAISE E_INSERT_COA;', 'statement_line_no': 223, 'statement_indent': 12}], 'if_elses': [], 'else_statements': []}, {'type': 'insert_statement', 'sql_statement': "INSERT INTO COA_MARKET_AUTHS ( MAU_ID, COUNTRY_ID, MATL_NO, MARKET_AUTH_NO, AUDIT_COMMENT, DEFINED_IND, VALID_IND ) VALUES ( :NEW.MAU_ID, :NEW.COUNTRY_ID, :NEW.MATL_NO, V_MARKET_AUTH_NO, :NEW.AUDIT_COMMENT, 'N', :NEW.VALID_IND );", 'statement_line_no': 226, 'statement_indent': 8}], 'if_elses': [], 'else_statements': []}]
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Processing condition for on_insert: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Starting condition modification: ' :OLD.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Stripped condition: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':OLD.DELETE_FLAG = 'Y'' â†’ ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Final modified condition: ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_RECORD_COUNT > 0 '
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Stripped condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Final modified condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Processing condition for on_insert: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,870 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT'
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) '
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Starting condition modification: ' P_CLASS NOT IN ('FIN') '
2025-09-02 18:42:04,871 - root - DEBUG - [common.py:105] - Stripped condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Final modified condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 0 '
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '(UPDATING)'
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'UPDATING'
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Starting condition modification: ' (UPDATING) '
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Stripped condition: '(UPDATING)'
2025-09-02 18:42:04,872 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': '(UPDATING)' â†’ '()'
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID'
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) '
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Processing condition for on_insert: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DEFINED_IND = :OLD.DEFINED_IND '
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Processing condition for on_insert: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,873 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.AUDIT_COMMENT IS NULL '
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)'
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) '
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND'
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,874 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) '
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND'
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) '
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Processing condition for on_insert: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_insert
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,875 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Processing condition for on_insert: '(INSERTING)'
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'INSERTING'
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_insert keywords
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Starting condition modification: ' (INSERTING) '
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Stripped condition: '(INSERTING)'
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': '(INSERTING)' â†’ '()'
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Processing condition for on_insert: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 1 '
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - === Processing UPDATE operations ===
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,876 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Starting condition modification: ' :OLD.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Stripped condition: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':OLD.DELETE_FLAG = 'Y'' â†’ ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Final modified condition: ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_RECORD_COUNT > 0 '
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Stripped condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Final modified condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,877 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Processing condition for on_update: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT'
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) '
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Starting condition modification: ' P_CLASS NOT IN ('FIN') '
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Stripped condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Final modified condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,878 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 0 '
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Processing condition for on_update: '(UPDATING)'
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'UPDATING'
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_update keywords
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Starting condition modification: ' (UPDATING) '
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Stripped condition: '(UPDATING)'
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': '(UPDATING)' â†’ '()'
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Processing condition for on_update: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID'
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) '
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,879 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DEFINED_IND = :OLD.DEFINED_IND '
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.AUDIT_COMMENT IS NULL '
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Processing condition for on_update: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)'
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) '
2025-09-02 18:42:04,880 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Processing condition for on_update: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND'
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) '
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Processing condition for on_update: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND'
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) '
2025-09-02 18:42:04,881 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Processing condition for on_update: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Processing condition for on_update: '(INSERTING)'
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'INSERTING'
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_update
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Starting condition modification: ' (INSERTING) '
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Stripped condition: '(INSERTING)'
2025-09-02 18:42:04,882 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': '(INSERTING)' â†’ '()'
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Processing condition for on_update: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 1 '
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - === Processing DELETE operations ===
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Processing condition for on_delete: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_delete keywords
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Starting condition modification: ' :OLD.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Stripped condition: ':OLD.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':OLD.DELETE_FLAG = 'Y'' â†’ ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Final modified condition: ':OLD._FLAG = 'Y''
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,883 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_RECORD_COUNT > 0 '
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Stripped condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Final modified condition: 'V_RECORD_COUNT > 0'
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Processing condition for on_delete: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_delete keywords
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT'
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT) '
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.AUDIT_COMMENT = :OLD.AUDIT_COMMENT)'
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,884 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Starting condition modification: ' P_CLASS NOT IN ('FIN') '
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Stripped condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Final modified condition: 'P_CLASS NOT IN ('FIN')'
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 0 '
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 0'
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '(UPDATING)'
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'UPDATING'
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] -   - UPDATE keywords: True
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_delete
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Starting condition modification: ' (UPDATING) '
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Stripped condition: '(UPDATING)'
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Removed keyword 'UPDATING': '(UPDATING)' â†’ '()'
2025-09-02 18:42:04,885 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID'
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID) '
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.MATL_NO <> :NEW.MATL_NO OR :NEW.COUNTRY_ID <> :OLD.COUNTRY_ID)'
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Processing condition for on_delete: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DEFINED_IND = :OLD.DEFINED_IND '
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.DEFINED_IND = :OLD.DEFINED_IND'
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Processing condition for on_delete: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,886 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.AUDIT_COMMENT IS NULL '
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW.AUDIT_COMMENT IS NULL'
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)'
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER)) '
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND (COA_SECURITY.GET_USERID = NVL ( :OLD.UPD_USER, :OLD.INS_USER))'
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND'
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND) '
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Stripped condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Final modified condition: '( :NEW.DEFINED_IND = 'Y' AND :OLD.DEFINED_IND = 'N') AND ( :OLD.MATL_NO <> :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO <> V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT <> :NEW.AUDIT_COMMENT OR :OLD.VALID_IND <> :NEW.VALID_IND)'
2025-09-02 18:42:04,887 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Removed outer parentheses: ' :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND'
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Starting condition modification: ' ( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND) '
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Stripped condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Final modified condition: '( :OLD.DEFINED_IND = 'N' AND :NEW.DEFINED_IND = 'Y') AND (COA_SECURITY.GET_USERID <> NVL ( :OLD.UPD_USER, :OLD.INS_USER)) AND ( :OLD.MATL_NO = :NEW.MATL_NO OR :OLD.MARKET_AUTH_NO = V_MARKET_AUTH_NO OR :OLD.AUDIT_COMMENT = :NEW.AUDIT_COMMENT OR :OLD.VALID_IND = :NEW.VALID_IND)'
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Processing condition for on_delete: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] -   - DELETE keywords: True
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - REMOVE: Condition contains on_delete keywords
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Starting condition modification: ' :NEW.DELETE_FLAG = 'Y' '
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Stripped condition: ':NEW.DELETE_FLAG = 'Y''
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Removed keyword 'DELETE': ':NEW.DELETE_FLAG = 'Y'' â†’ ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Final modified condition: ':NEW._FLAG = 'Y''
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Processing condition for on_delete: '(INSERTING)'
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Removed outer parentheses: 'INSERTING'
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] -   - INSERT keywords: True
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,888 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - KEEP: Condition mentions other operations but not on_delete
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Starting condition modification: ' (INSERTING) '
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Stripped condition: '(INSERTING)'
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Removed keyword 'INSERTING': '(INSERTING)' â†’ '()'
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Cleaned up parentheses: '()' â†’ ''
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Condition is empty after processing, returning 'TRUE'
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Processing condition for on_delete: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Operation keywords found in condition:
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] -   - INSERT keywords: False
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] -   - UPDATE keywords: False
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] -   - DELETE keywords: False
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - KEEP: Condition doesn't contain any operation keywords
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Starting condition modification: ' V_MATL_COUNT = 1 '
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Stripped condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Final modified condition: 'V_MATL_COUNT = 1'
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Building final converted structure
2025-09-02 18:42:04,889 - root - DEBUG - [common.py:105] - Converting to JSON string
2025-09-02 18:42:04,890 - root - DEBUG - [common.py:105] - Generated JSON string with 47168 characters
2025-09-02 18:42:04,890 - root - DEBUG - [common.py:105] - === to_sql() conversion complete ===
2025-09-02 18:42:04,890 - root - DEBUG - [common.py:105] - Created zzz.json
2025-09-02 18:42:04,890 - root - INFO - [common.py:110] - âœ“ PL/JSON conversion complete! (Duration: 0.05 seconds)
2025-09-02 18:42:04,891 - root - DEBUG - [common.py:105] - Step 5 completed in 0.05 seconds
2025-09-02 18:42:04,891 - root - INFO - [common.py:110] - Step 6: Converting PL/JSON to PostgreSQL format...
2025-09-02 18:42:04,891 - root - DEBUG - [common.py:105] - Starting Step 6: PL/JSON â†’ PostgreSQL format JSON
2025-09-02 18:42:04,891 - root - INFO - [common.py:110] - === Starting PL/JSON to PostgreSQL format conversion ===
2025-09-02 18:42:04,891 - root - INFO - [common.py:110] - === Starting file processing ===
2025-09-02 18:42:04,891 - root - INFO - [common.py:110] - Source directory: 'files/format_pl_json'
2025-09-02 18:42:04,892 - root - INFO - [common.py:110] - Target directory: 'files/format_plsql'
2025-09-02 18:42:04,892 - root - INFO - [common.py:110] - File pattern: '.json'
2025-09-02 18:42:04,892 - root - INFO - [common.py:110] - Output suffix: '_postgresql.json'
2025-09-02 18:42:04,892 - root - DEBUG - [common.py:105] - Ensuring target directory exists...
2025-09-02 18:42:04,892 - root - DEBUG - [common.py:105] - Directory already exists: files/format_plsql
2025-09-02 18:42:04,892 - root - DEBUG - [common.py:105] - Found 1 files in source directory
2025-09-02 18:42:04,892 - root - DEBUG - [common.py:105] - Files matching pattern '.json': ['zzz.json']
2025-09-02 18:42:04,893 - root - DEBUG - [common.py:105] - === Processing file 1/1: zzz.json ===
2025-09-02 18:42:04,893 - root - DEBUG - [common.py:105] - Source path: files/format_pl_json\zzz.json
2025-09-02 18:42:04,893 - root - DEBUG - [common.py:105] - Output path: files/format_plsql\zzz_postgresql.json
2025-09-02 18:42:04,893 - root - DEBUG - [common.py:105] - === Converting PL/JSON to PostgreSQL format for trigger zzz.json ===
2025-09-02 18:42:04,893 - root - DEBUG - [common.py:105] - Reading PL/JSON file: files/format_pl_json\zzz.json
2025-09-02 18:42:04,893 - root - DEBUG - [common.py:105] - Successfully loaded PL/JSON data with keys: ['on_insert', 'on_update', 'on_delete', 'metadata']
2025-09-02 18:42:04,893 - root - DEBUG - [common.py:105] - Converting to PostgreSQL format...
2025-09-02 18:42:04,893 - root - DEBUG - [common.py:105] - Converting complex structure to PostgreSQL SQL
2025-09-02 18:42:04,893 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-02 18:42:04,906 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-02 18:42:04,907 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-02 18:42:04,916 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-02 18:42:04,916 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-02 18:42:04,916 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted PostgreSQL SQL
2025-09-02 18:42:04,916 - root - DEBUG - [common.py:105] - Analysis contains 8 variables, 0 constants, 10 exceptions
2025-09-02 18:42:04,916 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for PostgreSQL
2025-09-02 18:42:04,917 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-02 18:42:04,917 - utilities.FormatSQL - DEBUG - [FormatSQL.py:335] - === Rendering PostgreSQL declarations ===
2025-09-02 18:42:04,917 - utilities.FormatSQL - DEBUG - [FormatSQL.py:385] - === PostgreSQL declarations complete ===
2025-09-02 18:42:04,917 - root - DEBUG - [common.py:105] - Generated 0 lines of declarations
2025-09-02 18:42:04,917 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-02 18:42:04,917 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-02 18:42:04,917 - utilities.FormatSQL - DEBUG - [FormatSQL.py:404] - === Rendering main block for PostgreSQL ===
2025-09-02 18:42:04,917 - utilities.FormatSQL - DEBUG - [FormatSQL.py:414] - Rendering 8 variables for PostgreSQL
2025-09-02 18:42:04,917 - utilities.FormatSQL - DEBUG - [FormatSQL.py:445] - Processing 8 statements in main block
2025-09-02 18:42:04,917 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: assignment
2025-09-02 18:42:04,923 - root - ERROR - [common.py:120] - Failed to convert complex structure to PostgreSQL SQL: 'NoneType' object is not subscriptable
2025-09-02 18:42:04,923 - root - DEBUG - [common.py:105] - Converting complex structure to PostgreSQL SQL
2025-09-02 18:42:04,923 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-02 18:42:04,939 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-02 18:42:04,939 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-02 18:42:04,948 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-02 18:42:04,948 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-02 18:42:04,948 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted PostgreSQL SQL
2025-09-02 18:42:04,948 - root - DEBUG - [common.py:105] - Analysis contains 8 variables, 0 constants, 10 exceptions
2025-09-02 18:42:04,948 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for PostgreSQL
2025-09-02 18:42:04,948 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-02 18:42:04,948 - utilities.FormatSQL - DEBUG - [FormatSQL.py:335] - === Rendering PostgreSQL declarations ===
2025-09-02 18:42:04,948 - utilities.FormatSQL - DEBUG - [FormatSQL.py:385] - === PostgreSQL declarations complete ===
2025-09-02 18:42:04,948 - root - DEBUG - [common.py:105] - Generated 0 lines of declarations
2025-09-02 18:42:04,949 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-02 18:42:04,949 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-02 18:42:04,949 - utilities.FormatSQL - DEBUG - [FormatSQL.py:404] - === Rendering main block for PostgreSQL ===
2025-09-02 18:42:04,949 - utilities.FormatSQL - DEBUG - [FormatSQL.py:414] - Rendering 8 variables for PostgreSQL
2025-09-02 18:42:04,949 - utilities.FormatSQL - DEBUG - [FormatSQL.py:445] - Processing 8 statements in main block
2025-09-02 18:42:04,949 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: assignment
2025-09-02 18:42:04,950 - root - ERROR - [common.py:120] - Failed to convert complex structure to PostgreSQL SQL: 'NoneType' object is not subscriptable
2025-09-02 18:42:04,950 - root - DEBUG - [common.py:105] - Converting complex structure to PostgreSQL SQL
2025-09-02 18:42:04,950 - root - DEBUG - [common.py:105] - Loading function_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-02 18:42:04,963 - root - DEBUG - [common.py:105] - Loaded 116 function_mappings mappings from Excel
2025-09-02 18:42:04,963 - root - DEBUG - [common.py:105] - Loading data_type_mappings from Excel file: utilities/oracle_postgresql_mappings.xlsx
2025-09-02 18:42:04,973 - root - DEBUG - [common.py:105] - Loaded 42 data_type_mappings mappings from Excel
2025-09-02 18:42:04,973 - utilities.FormatSQL - DEBUG - [FormatSQL.py:116] - FORMATOracleTriggerAnalyzer initialized successfully
2025-09-02 18:42:04,973 - utilities.FormatSQL - DEBUG - [FormatSQL.py:274] - SQL generation: Converting JSON analysis to formatted PostgreSQL SQL
2025-09-02 18:42:04,973 - root - DEBUG - [common.py:105] - Analysis contains 8 variables, 0 constants, 10 exceptions
2025-09-02 18:42:04,973 - root - DEBUG - [common.py:105] - Adding header comments with timestamp for PostgreSQL
2025-09-02 18:42:04,973 - root - DEBUG - [common.py:105] - Starting declarations section rendering
2025-09-02 18:42:04,974 - utilities.FormatSQL - DEBUG - [FormatSQL.py:335] - === Rendering PostgreSQL declarations ===
2025-09-02 18:42:04,974 - utilities.FormatSQL - DEBUG - [FormatSQL.py:385] - === PostgreSQL declarations complete ===
2025-09-02 18:42:04,974 - root - DEBUG - [common.py:105] - Generated 0 lines of declarations
2025-09-02 18:42:04,974 - root - DEBUG - [common.py:105] - Declarations rendering took 0.000s
2025-09-02 18:42:04,974 - root - DEBUG - [common.py:105] - Starting main execution block rendering
2025-09-02 18:42:04,974 - utilities.FormatSQL - DEBUG - [FormatSQL.py:404] - === Rendering main block for PostgreSQL ===
2025-09-02 18:42:04,974 - utilities.FormatSQL - DEBUG - [FormatSQL.py:414] - Rendering 8 variables for PostgreSQL
2025-09-02 18:42:04,974 - utilities.FormatSQL - DEBUG - [FormatSQL.py:445] - Processing 8 statements in main block
2025-09-02 18:42:04,974 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: assignment
2025-09-02 18:42:04,976 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: if_else
2025-09-02 18:42:04,976 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: select_statement
2025-09-02 18:42:04,977 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: if_else
2025-09-02 18:42:04,977 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: raise_statement
2025-09-02 18:42:04,977 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: if_else
2025-09-02 18:42:04,978 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: if_else
2025-09-02 18:42:04,978 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: raise_statement
2025-09-02 18:42:04,979 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: begin_end
2025-09-02 18:42:04,979 - utilities.FormatSQL - DEBUG - [FormatSQL.py:404] - === Rendering main block for PostgreSQL ===
2025-09-02 18:42:04,979 - utilities.FormatSQL - DEBUG - [FormatSQL.py:414] - Rendering 8 variables for PostgreSQL
2025-09-02 18:42:04,979 - utilities.FormatSQL - DEBUG - [FormatSQL.py:445] - Processing 2 statements in main block
2025-09-02 18:42:04,979 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: select_statement
2025-09-02 18:42:04,980 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: if_else
2025-09-02 18:42:04,981 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: raise_statement
2025-09-02 18:42:04,982 - utilities.FormatSQL - DEBUG - [FormatSQL.py:453] - Processing 1 exception handlers
2025-09-02 18:42:04,983 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: raise_statement
2025-09-02 18:42:04,984 - utilities.FormatSQL - DEBUG - [FormatSQL.py:466] - === Main block complete for PostgreSQL ===
2025-09-02 18:42:04,984 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: select_statement
2025-09-02 18:42:04,985 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: if_else
2025-09-02 18:42:04,985 - utilities.FormatSQL - DEBUG - [FormatSQL.py:497] - Rendering statement type: raise_statement
2025-09-02 18:42:04,985 - root - ERROR - [common.py:120] - Failed to convert complex structure to PostgreSQL SQL: 'NoneType' object is not subscriptable
2025-09-02 18:42:04,986 - root - DEBUG - [common.py:105] - PostgreSQL format conversion completed
2025-09-02 18:42:04,986 - root - DEBUG - [common.py:105] - Writing PostgreSQL format to: files/format_plsql\zzz_postgresql.json
2025-09-02 18:42:04,987 - root - DEBUG - [common.py:105] - Successfully wrote PostgreSQL format to files/format_plsql\zzz_postgresql.json
2025-09-02 18:42:04,987 - root - DEBUG - [common.py:105] - === PL/JSON to PostgreSQL format conversion complete for trigger zzz.json ===
2025-09-02 18:42:04,987 - root - DEBUG - [common.py:105] - âœ“ Created zzz_postgresql.json
2025-09-02 18:42:04,987 - root - INFO - [common.py:110] - === File processing complete ===
2025-09-02 18:42:04,987 - root - INFO - [common.py:110] - Successfully processed: 1 files
2025-09-02 18:42:04,987 - root - INFO - [common.py:110] - === PL/JSON to PostgreSQL format conversion complete ===
2025-09-02 18:42:04,988 - root - INFO - [common.py:110] - âœ“ PostgreSQL format conversion complete! (Duration: 0.10 seconds)
2025-09-02 18:42:04,988 - root - DEBUG - [common.py:105] - Step 6 completed in 0.10 seconds
2025-09-02 18:42:04,988 - root - INFO - [common.py:110] - === Batch conversion finished successfully ===
2025-09-02 18:42:04,988 - root - INFO - [common.py:110] - Total execution time: 0.85 seconds
2025-09-02 18:42:04,988 - root - INFO - [common.py:110] - Performance breakdown by step:
2025-09-02 18:42:04,988 - root - INFO - [common.py:110] -   - Step 1 (SQL â†’ JSON):              0.70 seconds (82.7%)
2025-09-02 18:42:04,989 - root - INFO - [common.py:110] -   - Step 5 (JSON â†’ PL/JSON):          0.05 seconds (5.6%)
2025-09-02 18:42:04,989 - root - INFO - [common.py:110] -   - Step 6 (PL/JSON â†’ PostgreSQL):    0.10 seconds (11.4%)
2025-09-02 18:42:04,989 - root - DEBUG - [common.py:105] - Main conversion workflow completed successfully
