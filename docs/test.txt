I'll analyze the SQL files and the OracleTriggerAnalyzer.py code to understand the different SQL statement types and rest statement types being processed. Let me examine the code structure and the analysis results.


[9 tools called]

Based on my deep analysis of the OracleTriggerAnalyzer.py code and the SQL files, I can provide you with a comprehensive breakdown of the SQL statement types and rest statement types that the analyzer recognizes and processes.

## SQL Statement Types Analysis

The OracleTriggerAnalyzer.py recognizes and processes **14 main SQL statement types**:

### 1. **Basic SQL Statements (5 types)**
1. **`select_statement`** - SELECT queries
2. **`insert_statement`** - INSERT operations  
3. **`update_statement`** - UPDATE operations
4. **`delete_statement`** - DELETE operations
5. **`raise_statement`** - RAISE statements (PL/SQL specific)

### 2. **Assignment Statements (1 type)**
6. **`assignment`** - Variable assignments using `:=` operator

### 3. **Control Flow Structures (6 types)**
7. **`for_loop`** - FOR loop statements
8. **`if_else`** - IF-ELSIF-ELSE conditional blocks
9. **`case_when`** - CASE-WHEN-ELSE statements
10. **`begin_end`** - BEGIN-END blocks
11. **`exception_handler`** - Exception handling blocks
12. **`function_calling`** - Function/procedure calls

### 4. **Nested Control Flow (2 types)**
13. **`when_statement`** - Individual WHEN clauses within CASE statements
14. **`elif_statement`** - ELSIF clauses within IF-ELSE blocks

## Rest Statement Types Analysis

The **"rest_strings"** are lines that couldn't be categorized into the above 14 structured types. These include:

### **Rest String Categories:**
1. **Function/Procedure Calls** - Lines containing function calls that aren't categorized as `function_calling`
2. **Variable Declarations** - Lines with variable assignments that aren't captured as `assignment`
3. **Control Flow Keywords** - Lines with keywords like `LOOP`, `END LOOP`, `OPEN`, `CLOSE`, `FETCH`, `EXIT`
4. **Database Operations** - Lines with database-specific operations like `PERFORM`, `CALL`
5. **Comments and Documentation** - Lines that contain comments or documentation
6. **Miscellaneous Statements** - Any other SQL/PL/SQL statements that don't fit the structured categories

## Examples from the Analysis Files:

### **Structured SQL Types (from trigger1_analysis.json):**
```json
"sql_convert_count": {
  "select_statement": 16,
  "insert_statement": 6,
  "update_statement": 10,
  "delete_statement": 0,
  "raise_statement": 22,
  "assignment": 36,
  "for_loop": 0,
  "if_else": 46,
  "case_when": 2,
  "begin_end": 3,
  "exception_handler": 20,
  "function_calling": 18,
  "when_statement": 5,
  "elif_statement": 1
}
```

### **Rest Strings Examples:**
- Function calls: `PERFORM MDMTOOL."mdmt_util_history$write_history"`
- Control flow: `LOOP`, `END LOOP`, `OPEN C_COMPANY_MAPPINGS`
- Variable operations: `FETCH C_THEME_MOLECULES INTO...`
- Database operations: `CALL GMD.GMD_UTIL_THEMES$UPD_THEME_DESC_JOB_PROC`

## Summary:
- **Total Structured SQL Types: 14**
- **Rest Statement Types: Multiple categories** (function calls, control flow, database operations, etc.)
- **Rest Strings Count**: Varies by file (e.g., trigger1: 5, zzz: 101, trigger5: 30)

The analyzer provides comprehensive coverage of Oracle PL/SQL trigger structures while capturing uncategorized statements as "rest_strings" for complete analysis.