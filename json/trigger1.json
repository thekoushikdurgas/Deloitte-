{
    "on_insert": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_counter integer; v_code varchar(2); v_odg_no varchar(2); v_resgrp_cd varchar(2); v_reslin_cd varchar(2); v_status_cd varchar(1); v_dba_cd integer; v_portf_proj_cd varchar(1); v_description varchar(500); v_reslin_desc varchar(60); v_theme_desc_length integer; v_d_registrat_date date; v_d_ins_date date; v_future_registrat date; v_valid_to date; v_userid varchar(30); v_is_admin_cnt integer:=0; v_sec_mol_cnt integer:=0; v_molecule_id varchar(5):=null; v_molecule_rg_no varchar(20):=null; v_molec_in_lic_prtnr varchar(15):=null; v_new_rg_no VARCHAR(20); v_comparator_ind VARCHAR(1); v_theme_desc_proposal VARCHAR(500); v_short_name varchar(30); constant INTEGER; v_trademark_no NUMERIC; v_molecule_type_id INTEGER; v_pharmacological_type_id INTEGER; \nBEGIN \nIF (CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC) is not null \nAND :old_proposal_id is null) \nTHEN \nSELECT COUNT(*) INTO v_evolved_nmp_cnt \nFROM mdmappl.mdm_v_new_medicine_proposals_mtn \nWHERE proposal_id = CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC) \nAND proposal_status_cd = 'E' ;\nIF (v_evolved_nmp_cnt = 0) \nTHEN \nUPDATE mdmappl.mdm_v_new_medicine_proposals_mtn set proposal_status_cd = 'E', evolved_theme_no = :new_theme_no, proposal_name = v_short_name, reason_for_change = '** Automatic \nUPDATE of proposal_name after short_name change in evolved theme **' \nWHERE proposal_id = CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC); \nEND \nIF; \nELSE \nIF (CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC) is null \nAND :old_proposal_id is not null) \nTHEN \nUPDATE mdmappl.mdm_v_new_medicine_proposals_mtn SET proposal_status_cd = 'A', evolved_theme_no = null, upd_user = :upd_user, upd_date = :upd_date \nWHERE proposal_id = :old_proposal_id; \nELSE \nIF (CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC) is not null \nAND :old_proposal_id is not null \nAND CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC) <> :old_proposal_id) \nTHEN \nUPDATE mdmappl.mdm_v_new_medicine_proposals_mtn SET proposal_status_cd = 'A', evolved_theme_no = null, upd_user = :upd_user, upd_date = :upd_date \nWHERE proposal_id = :old_proposal_id;\nUPDATE mdmappl.mdm_v_new_medicine_proposals_mtn set proposal_status_cd = 'E', evolved_theme_no = :new_theme_no, proposal_name = v_short_name, reason_for_change = '** Automatic \nUPDATE of proposal_name after short_name change in evolved theme **' \nWHERE proposal_id = CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC); \nEND \nIF; \nEND \nIF; \nEND \nIF;\nIF (COALESCE(CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC), 0) = COALESCE(:old_proposal_id, 0) \nAND COALESCE(:old_short_name, '-') <> COALESCE(v_short_name, '-')) \nTHEN \nSELECT COUNT(*) INTO v_evolved_nmp_cnt \nFROM mdmappl.mdm_v_new_medicine_proposals_mtn nmp \nWHERE nmp.evolved_theme_no = :new_theme_no \nAND nmp.proposal_status_cd = 'E' ;\nIF v_evolved_nmp_cnt > 0 \nTHEN \nUPDATE mdmappl.mdm_v_new_medicine_proposals_mtn nmp SET nmp.proposal_name = v_short_name, nmp.reason_for_change = '** Automatic \nUPDATE of proposal_name after short_name change in evolved theme **' \nWHERE nmp.evolved_theme_no = :new_theme_no \nAND nmp.proposal_status_cd = 'E' ; \nEND \nIF; \nEND \nIF; \nEND $$;"
        }
    ],
    "on_update": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_counter integer; v_code varchar(2); v_odg_no varchar(2); v_resgrp_cd varchar(2); v_reslin_cd varchar(2); v_status_cd varchar(1); v_dba_cd integer; v_portf_proj_cd varchar(1); v_description varchar(500); v_reslin_desc varchar(60); v_theme_desc_length integer; v_d_registrat_date date; v_d_ins_date date; v_future_registrat date; v_valid_to date; v_userid varchar(30); v_is_admin_cnt integer:=0; v_sec_mol_cnt integer:=0; v_molecule_id varchar(5):=null; v_molecule_rg_no varchar(20):=null; v_molec_in_lic_prtnr varchar(15):=null; v_new_rg_no VARCHAR(20); v_comparator_ind VARCHAR(1); v_theme_desc_proposal VARCHAR(500); v_short_name varchar(30); constant INTEGER; v_trademark_no NUMERIC; v_molecule_type_id INTEGER; v_pharmacological_type_id INTEGER; \nBEGIN \nIF (CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC) is not null \nAND :old_proposal_id is null) \nTHEN \nSELECT COUNT(*) INTO v_evolved_nmp_cnt \nFROM mdmappl.mdm_v_new_medicine_proposals_mtn \nWHERE proposal_id = CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC) \nAND proposal_status_cd = 'E' ;\nIF (v_evolved_nmp_cnt = 0) \nTHEN \nUPDATE mdmappl.mdm_v_new_medicine_proposals_mtn set proposal_status_cd = 'E', evolved_theme_no = :new_theme_no, proposal_name = v_short_name, reason_for_change = '** Automatic \nUPDATE of proposal_name after short_name change in evolved theme **' \nWHERE proposal_id = CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC); \nEND \nIF; \nELSE \nIF (CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC) is null \nAND :old_proposal_id is not null) \nTHEN \nUPDATE mdmappl.mdm_v_new_medicine_proposals_mtn SET proposal_status_cd = 'A', evolved_theme_no = null, upd_user = :upd_user, upd_date = :upd_date \nWHERE proposal_id = :old_proposal_id; \nELSE \nIF (CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC) is not null \nAND :old_proposal_id is not null \nAND CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC) <> :old_proposal_id) \nTHEN \nUPDATE mdmappl.mdm_v_new_medicine_proposals_mtn SET proposal_status_cd = 'A', evolved_theme_no = null, upd_user = :upd_user, upd_date = :upd_date \nWHERE proposal_id = :old_proposal_id;\nUPDATE mdmappl.mdm_v_new_medicine_proposals_mtn set proposal_status_cd = 'E', evolved_theme_no = :new_theme_no, proposal_name = v_short_name, reason_for_change = '** Automatic \nUPDATE of proposal_name after short_name change in evolved theme **' \nWHERE proposal_id = CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC); \nEND \nIF; \nEND \nIF; \nEND \nIF;\nIF (COALESCE(CAST(NULLIF(CAST(:new_proposal_id AS TEXT), ''') AS NUMERIC), 0) = COALESCE(:old_proposal_id, 0) \nAND COALESCE(:old_short_name, '-') <> COALESCE(v_short_name, '-')) \nTHEN \nSELECT COUNT(*) INTO v_evolved_nmp_cnt \nFROM mdmappl.mdm_v_new_medicine_proposals_mtn nmp \nWHERE nmp.evolved_theme_no = :new_theme_no \nAND nmp.proposal_status_cd = 'E' ;\nIF v_evolved_nmp_cnt > 0 \nTHEN \nUPDATE mdmappl.mdm_v_new_medicine_proposals_mtn nmp SET nmp.proposal_name = v_short_name, nmp.reason_for_change = '** Automatic \nUPDATE of proposal_name after short_name change in evolved theme **' \nWHERE nmp.evolved_theme_no = :new_theme_no \nAND nmp.proposal_status_cd = 'E' ; \nEND \nIF; \nEND \nIF; \nEND $$;"
        }
    ],
    "on_delete": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_counter integer; v_code varchar(2); v_odg_no varchar(2); v_resgrp_cd varchar(2); v_reslin_cd varchar(2); v_status_cd varchar(1); v_dba_cd integer; v_portf_proj_cd varchar(1); v_description varchar(500); v_reslin_desc varchar(60); v_theme_desc_length integer; v_d_registrat_date date; v_d_ins_date date; v_future_registrat date; v_valid_to date; v_userid varchar(30); v_is_admin_cnt integer:=0; v_sec_mol_cnt integer:=0; v_molecule_id varchar(5):=null; v_molecule_rg_no varchar(20):=null; v_molec_in_lic_prtnr varchar(15):=null; v_new_rg_no VARCHAR(20); v_comparator_ind VARCHAR(1); v_theme_desc_proposal VARCHAR(500); v_short_name varchar(30); constant INTEGER; v_trademark_no NUMERIC; v_molecule_type_id INTEGER; v_pharmacological_type_id INTEGER; \nBEGIN \nIF ((:old_in_prep_ind = 'N') \nAND v_is_admin_cnt = 0) \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: MDM_V_THEMES_IOF: Admin access required for this operation'; \nEND \nIF;\nIF (DATE(TO_TIMESTAMP(:old_registrat_date, 'DD-MM-YYYY')) = DATE(CURRENT_TIMESTAMP)) \nTHEN \nDELETE \nFROM gmd.themes a \nWHERE a.theme_no = :old_theme_no \nAND DATE(a.registrat_date) = DATE(CURRENT_TIMESTAMP); \nELSE RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: Theme cannot be deleted \nWHEN the deletion is not on the same day, on which the Theme has been inserted'; \nEND \nIF; \nEND $$;"
        }
    ]
}