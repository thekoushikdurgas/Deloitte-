{
    "on_insert": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_count_t_mappings integer; -- how many for one theme v_count_t_mol_map integer; -- how many for one theme/molecule combination (zero/one expected) v_molecule_seq_no integer; v_seq_no_duplicate_cnt integer; invalid_mapping_exists BOOLEAN:=FALSE; v_manual_short_desc VARCHAR(30); \nBEGIN \nSELECT COUNT (*) INTO v_count_t_mappings \nFROM v_theme_molecule_map tmm \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.valid_ind = 'Y';\nIF CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC) IS NULL \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: MDM_THEME_MOLECULE_MAP_IOF: Molecule ID is missing'; \nEND \nIF;\nIF CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC) <> COALESCE(:old_molecule_id, '-1') \nTHEN \nSELECT COUNT (*) INTO v_count_t_mol_map \nFROM v_theme_molecule_map tmm \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC) \nAND tmm.valid_ind = 'Y';\nIF v_count_t_mol_map > 0 \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: MDM_THEME_MOLECULE_MAP_IOF: Mapping already exists'; \nEND \nIF;\nSELECT COUNT (*) INTO v_count_t_mol_map \nFROM v_theme_molecule_map tmm \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC) \nAND tmm.valid_ind = 'N';\nIF v_count_t_mol_map > 0 \nTHEN invalid_mapping_exists:=TRUE; \nEND \nIF; \nEND \nIF; mdmappl.mdm_util_themes$refresh_theme_desc( p_theme_no = > :new_theme_no, p_molecule_id = > 0, p_date = > CURRENT_TIMESTAMP, p_manual_short_desc = > v_manual_short_desc); \nCASE \nWHEN :new_molecule_seq_no = v_count_t_mappings + 1 \nTHEN \nIF invalid_mapping_exists \nTHEN \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new_molecule_seq_no \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC); \nELSE \nINSERT INTO gmd.theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES ( :new_theme_no, CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC), :new_molecule_seq_no, :new_molecule_map_char, 'Y'); \nEND \nIF; \nWHEN :new_molecule_seq_no < v_count_t_mappings + 1 \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no + 1 \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_seq_no > = :new_molecule_seq_no \nAND tmm.valid_ind = 'Y';\nIF invalid_mapping_exists \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new_molecule_seq_no \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC); \nELSE \nINSERT INTO gmd.theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new_theme_no, CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC), :new_molecule_seq_no, :new_molecule_map_char, 'Y'); \nEND \nIF; \nELSE RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: MDM_THEME_MOLECULE_MAP_IOF: Invalid mapping \nINSERT'; \nEND \nCASE; \nEND $$;"
        }
    ],
    "on_update": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_count_t_mappings integer; -- how many for one theme v_count_t_mol_map integer; -- how many for one theme/molecule combination (zero/one expected) v_molecule_seq_no integer; v_seq_no_duplicate_cnt integer; invalid_mapping_exists BOOLEAN:=FALSE; v_manual_short_desc VARCHAR(30); \nBEGIN \nSELECT COUNT (*) INTO v_count_t_mappings \nFROM v_theme_molecule_map tmm \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.valid_ind = 'Y';\nIF CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC) IS NULL \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: MDM_THEME_MOLECULE_MAP_IOF: Molecule ID is missing'; \nEND \nIF;\nIF CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC) <> COALESCE(:old_molecule_id, '-1') \nTHEN \nSELECT COUNT (*) INTO v_count_t_mol_map \nFROM v_theme_molecule_map tmm \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC) \nAND tmm.valid_ind = 'Y';\nIF v_count_t_mol_map > 0 \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: MDM_THEME_MOLECULE_MAP_IOF: Mapping already exists'; \nEND \nIF;\nSELECT COUNT (*) INTO v_count_t_mol_map \nFROM v_theme_molecule_map tmm \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC) \nAND tmm.valid_ind = 'N';\nIF v_count_t_mol_map > 0 \nTHEN invalid_mapping_exists:=TRUE; \nEND \nIF; \nEND \nIF; mdmappl.mdm_util_themes$refresh_theme_desc( p_theme_no = > :new_theme_no, p_molecule_id = > 0, p_date = > CURRENT_TIMESTAMP, p_manual_short_desc = > v_manual_short_desc);\nIF :new_molecule_seq_no > v_count_t_mappings \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: MDM_THEME_MOLECULE_MAP_IOF: Invalid mapping \nTHEN \nUPDATE'; \nEND \nIF;\nIF CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC) IS NOT NULL \nIF CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC) = :old_molecule_id \nAND :new_molecule_seq_no = :old_molecule_seq_no \nAND :new_molecule_map_char <> :old_molecule_map_char \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.molecule_map_char = :new_molecule_map_char \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC); \nEND \nIF;\nIF CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC) = :old_molecule_id \nAND :new_molecule_seq_no <> :old_molecule_seq_no \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.valid_ind = 'N' \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = :old_molecule_id;\nIF :old_molecule_seq_no < :new_molecule_seq_no \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no - 1 \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_seq_no > :old_molecule_seq_no \nAND tmm.valid_ind = 'Y' \nAND tmm.molecule_seq_no < = :new_molecule_seq_no; \nELSE \nUPDATE gmd.theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no + 1 \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.valid_ind = 'Y' \nAND tmm.molecule_seq_no > = :new_molecule_seq_no \nAND tmm.molecule_seq_no < :old_molecule_seq_no; \nEND \nIF;\nIF invalid_mapping_exists \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new_molecule_seq_no, tmm.molecule_map_char = : new.molecule_map_char \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC); \nELSE \nINSERT INTO gmd.theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new_theme_no, CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC), :new_molecule_seq_no, :new_molecule_map_char, 'Y'); \nEND \nIF; \nEND \nIF; \nEND \nIF;\nIF CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC) <> :old_molecule_id \nAND :new_molecule_seq_no <> :old_molecule_seq_no \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.valid_ind = 'N' \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = :old_molecule_id;\nUPDATE gmd.theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no - 1 \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_seq_no > :old_molecule_seq_no \nAND tmm.molecule_seq_no < = :new_molecule_seq_no \nAND tmm.valid_ind = 'Y';\nIF invalid_mapping_exists \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new_molecule_seq_no, tmm.molecule_map_char = :new_molecule_map_char \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC); \nELSE \nINSERT INTO gmd.theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char, tmm.valid_ind) VALUES (:new_theme_no, CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC), :new_molecule_seq_no, :new_molecule_map_char, 'Y'); \nEND \nIF; \nEND \nIF;\nIF CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC) <> :old_molecule_id \nAND :new_molecule_seq_no = :old_molecule_seq_no \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.valid_ind = 'N' \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = :old_molecule_id \nAND molecule_seq_no = :old_molecule_seq_no;\nIF invalid_mapping_exists \nTHEN \nUPDATE gmd.theme_molecule_map tmm SET tmm.valid_ind = 'Y', tmm.molecule_seq_no = :new_molecule_seq_no, tmm.molecule_map_char = :new_molecule_map_char \nWHERE tmm.theme_no = :new_theme_no \nAND tmm.molecule_id = CAST(NULLIF(CAST(:new_molecule_id AS TEXT), '') AS NUMERIC); \nELSE \nINSERT INTO gmd.theme_molecule_map tmm (tmm.theme_no, tmm.molecule_id, tmm.molecule_seq_no, tmm.molecule_map_char) VALUES ( :new_theme_no, CAST(NULLIF(CAST(:new_molecule_id AS TEXT), ''') AS NUMERIC), :new_molecule_seq_no, :new_molecule_map_char); \nEND \nIF; \nEND \nIF; \nEND $$;"
        }
    ],
    "on_delete": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_count_t_mappings integer; -- how many for one theme v_count_t_mol_map integer; -- how many for one theme/molecule combination (zero/one expected) v_molecule_seq_no integer; v_seq_no_duplicate_cnt integer; invalid_mapping_exists BOOLEAN:=FALSE; v_manual_short_desc VARCHAR(30); \nBEGIN \nUPDATE gmd.theme_molecule_map tmm SET tmm.valid_ind = 'N' \nWHERE tmm.theme_no = :old_theme_no \nAND tmm.molecule_id = :old_molecule_id;\nUPDATE gmd.theme_molecule_map tmm SET tmm.molecule_seq_no = tmm.molecule_seq_no - 1 \nWHERE tmm.theme_no = :old_theme_no \nAND tmm.molecule_seq_no > :old_molecule_seq_no \nAND tmm.valid_ind = 'Y'; mdmappl.mdm_util_themes$refresh_theme_desc( p_theme_no = > :old_theme_no, p_molecule_id = > :old_molecule_id, p_date = > CURRENT_TIMESTAMP, p_manual_short_desc = > v_manual_short_desc); \nEND $$;"
        }
    ]
}