{
    "on_insert": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_trigger_name varchar (100):='COMPANY_ADDRESSES_IOF'; cntr integer; v_userid varchar (100); v_country_cd core.countries.country_cd%type; v_company_type_cd CFG.CFG_COMPANIES.COMPANY_TYPE_CD%type; v_valid_from CFG.CFG_COMPANY_ADDRESSES.VALID_FROM%type; \nBEGIN \nIF cntr > 0 \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: An address already exists for this Company \nAND Address type. To modify the existing address, please use the \nTHEN \nUPDATE button'; \nEND \nIF;\nSELECT company_type_cd INTO v_company_type_cd \nFROM cfg_v_companies \nWHERE company_cd = COALESCE(:new_company_cd, :old_company_cd);\nIF v_company_type_cd not in ('L', 'A') \nAND COALESCE(:new_address_type_cd, :old_address_type_cd) IN ('L') \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: The legal address cannot be inserted for this type of company'; \nEND \nIF;\nIF COALESCE(:new_address_type_cd, :old_address_type_cd) in ( 'P', 'L') \nIF COALESCE(:old_valid_from, DATE(CURRENT_TIMESTAMP)) = COALESCE(:new_valid_from, DATE(CURRENT_TIMESTAMP)) \nAND :old_country_id <> CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC) \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: The company country modified but not the Valid \nFROM Date. Please \nTHEN \nUPDATE also the Valid \nFROM Date'; \nEND \nIF;\nIF cntr = 0 \nTHEN MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > :new_company_cd, p_address_type_cd = > :new_address_type_cd, p_additional_name = > :new_additional_name, p_street = > :new_street, p_house_no = > :new_house_no, p_building = > :new_building, p_additional_info = > :new_additional_info, p_zip_code = > :new_zip_code, p_city = > :new_city, p_district_name = > :new_district_name, p_country_id = > CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC), p_latitude = > :new_latitude, p_longitude = > :new_longitude, p_address_remark = > :new_address_remark, p_valid_from = > :new_valid_from, p_action_type = > '\nINSERT'); \nELSE \nIF COALESCE(:old_valid_from, DATE(CURRENT_TIMESTAMP)) <> COALESCE(:new_valid_from, DATE(CURRENT_TIMESTAMP)) \nAND :old_country_id <> CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC) \nTHEN MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > :new_company_cd, p_address_type_cd = > :new_address_type_cd, p_additional_name = > :new_additional_name, p_street = > :new_street, p_house_no = > :new_house_no, p_building = > :new_building, p_additional_info = > :new_additional_info, p_zip_code = > :new_zip_code, p_city = > :new_city, p_district_name = > :new_district_name, p_country_id = > CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC), p_latitude = > :new_latitude, p_longitude = > :new_longitude, p_address_remark = > :new_address_remark, p_valid_from = > :new_valid_from, p_action_type = > 'CTRY_CHANGE'); cntr:=0;\nSELECT COUNT(*) INTO cntr \nFROM cfg_v_companies \nWHERE company_cd = :new_company_cd \nAND valid_ind = 'Y' \nAND cbc_gbe_scope = 'Y' \nAND company_type_cd in ('B', 'L');\nIF :new_address_type_cd = 'P' \nAND cntr > 0 \nTHEN \nSELECT country_cd INTO v_country_cd \nFROM mdm_v_countries \nWHERE country_id = CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC);\nIF TO_CHAR(:new_valid_from, 'dd.mm') = '01.01' \nTHEN v_valid_from:=TO_TIMESTAMP(ADD_MONTHS(DATE(:new_valid_from, 'yyyy'), 10), 'dd.mm.yyyy'); \nELSE v_valid_from:=TO_TIMESTAMP(ADD_MONTHS(DATE(:new_valid_from, 'yyyy'), 22), 'dd.mm.yyyy'); \nEND \nIF; mdm_util_companies$modifycompanymapping_ce_ju( i_company_cd = > :new_company_cd, i_reporting_entity_cd = > 'J-' || v_country_cd, i_valid_from_date = > v_valid_from, i_valid_to_date = > NULL, i_change_user = > v_userid, i_mapping_type = > 'JU', i_action_type = > '\nINSERT');\nIF v_company_type_cd = 'L' \nTHEN FOR V_REC in (\nSELECT company_cd \nFROM cfg_v_companies \nWHERE legal_company_cd = :new_company_cd \nAND valid_ind = 'Y' \nAND cbc_gbe_scope = 'Y' \nAND company_type_cd in ('O', 'V')) LOOP mdm_util_companies$modifycompanymapping_ce_ju( i_company_cd = > v_rec.company_cd, i_reporting_entity_cd = > 'J-' || v_country_cd, i_valid_from_date = > v_valid_from, i_valid_to_date = > NULL, i_change_user = > v_userid, i_mapping_type = > 'JU', i_action_type = > '\nINSERT'); \nEND LOOP; \nEND \nIF; \nEND \nIF; \nELSE MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > :new_company_cd, p_address_type_cd = > :new_address_type_cd, p_additional_name = > :new_additional_name, p_street = > :new_street, p_house_no = > :new_house_no, p_building = > :new_building, p_additional_info = > :new_additional_info, p_zip_code = > :new_zip_code, p_city = > :new_city, p_district_name = > :new_district_name, p_country_id = > CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC), p_latitude = > :new_latitude, p_longitude = > :new_longitude, p_address_remark = > :new_address_remark, p_valid_from = > :new_valid_from, p_action_type = > '\nUPDATE'); \nEND \nIF; \nEND \nIF; \nEND \nIF;\nIF COALESCE(:new_address_type_cd, :old_address_type_cd) not in ( 'P', 'L') \nIF cntr = 0 \nTHEN MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > :new_company_cd, p_address_type_cd = > :new_address_type_cd, p_additional_name = > :new_additional_name, p_street = > :new_street, p_house_no = > :new_house_no, p_building = > :new_building, p_additional_info = > :new_additional_info, p_zip_code = > :new_zip_code, p_city = > :new_city, p_district_name = > :new_district_name, p_country_id = > CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC), p_latitude = > :new_latitude, p_longitude = > :new_longitude, p_address_remark = > :new_address_remark, p_valid_from = > :new_valid_from, p_action_type = > '\nINSERT'); \nELSE MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > :new_company_cd, p_address_type_cd = > :new_address_type_cd, p_additional_name = > :new_additional_name, p_street = > :new_street, p_house_no = > :new_house_no, p_building = > :new_building, p_additional_info = > :new_additional_info, p_zip_code = > :new_zip_code, p_city = > :new_city, p_district_name = > :new_district_name, p_country_id = > CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC), p_latitude = > :new_latitude, p_longitude = > :new_longitude, p_address_remark = > :new_address_remark, p_valid_from = > :new_valid_from, p_action_type = > '\nUPDATE'); \nEND \nIF; \nEND \nIF; \nEND $$;"
        }
    ],
    "on_update": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_trigger_name varchar (100):='COMPANY_ADDRESSES_IOF'; cntr integer; v_userid varchar (100); v_country_cd core.countries.country_cd%type; v_company_type_cd CFG.CFG_COMPANIES.COMPANY_TYPE_CD%type; v_valid_from CFG.CFG_COMPANY_ADDRESSES.VALID_FROM%type; \nBEGIN \nSELECT company_type_cd INTO v_company_type_cd \nFROM cfg_v_companies \nWHERE company_cd = COALESCE(:new_company_cd, :old_company_cd);\nIF v_company_type_cd not in ('L', 'A') \nAND COALESCE(:new_address_type_cd, :old_address_type_cd) IN ('L') \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: The legal address cannot be inserted for this type of company'; \nEND \nIF;\nIF COALESCE(:new_address_type_cd, :old_address_type_cd) in ( 'P', 'L') \nIF COALESCE(:old_valid_from, DATE(CURRENT_TIMESTAMP)) = COALESCE(:new_valid_from, DATE(CURRENT_TIMESTAMP)) \nAND :old_country_id <> CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC) \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: The company country modified but not the Valid \nFROM Date. Please \nTHEN \nUPDATE also the Valid \nFROM Date'; \nEND \nIF;\nIF cntr = 0 \nTHEN MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > :new_company_cd, p_address_type_cd = > :new_address_type_cd, p_additional_name = > :new_additional_name, p_street = > :new_street, p_house_no = > :new_house_no, p_building = > :new_building, p_additional_info = > :new_additional_info, p_zip_code = > :new_zip_code, p_city = > :new_city, p_district_name = > :new_district_name, p_country_id = > CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC), p_latitude = > :new_latitude, p_longitude = > :new_longitude, p_address_remark = > :new_address_remark, p_valid_from = > :new_valid_from, p_action_type = > '\nINSERT'); \nELSE \nIF COALESCE(:old_valid_from, DATE(CURRENT_TIMESTAMP)) <> COALESCE(:new_valid_from, DATE(CURRENT_TIMESTAMP)) \nAND :old_country_id <> CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC) \nTHEN MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > :new_company_cd, p_address_type_cd = > :new_address_type_cd, p_additional_name = > :new_additional_name, p_street = > :new_street, p_house_no = > :new_house_no, p_building = > :new_building, p_additional_info = > :new_additional_info, p_zip_code = > :new_zip_code, p_city = > :new_city, p_district_name = > :new_district_name, p_country_id = > CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC), p_latitude = > :new_latitude, p_longitude = > :new_longitude, p_address_remark = > :new_address_remark, p_valid_from = > :new_valid_from, p_action_type = > 'CTRY_CHANGE'); cntr:=0;\nSELECT COUNT(*) INTO cntr \nFROM cfg_v_companies \nWHERE company_cd = :new_company_cd \nAND valid_ind = 'Y' \nAND cbc_gbe_scope = 'Y' \nAND company_type_cd in ('B', 'L');\nIF :new_address_type_cd = 'P' \nAND cntr > 0 \nTHEN \nSELECT country_cd INTO v_country_cd \nFROM mdm_v_countries \nWHERE country_id = CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC);\nIF TO_CHAR(:new_valid_from, 'dd.mm') = '01.01' \nTHEN v_valid_from:=TO_TIMESTAMP(ADD_MONTHS(DATE(:new_valid_from, 'yyyy'), 10), 'dd.mm.yyyy'); \nELSE v_valid_from:=TO_TIMESTAMP(ADD_MONTHS(DATE(:new_valid_from, 'yyyy'), 22), 'dd.mm.yyyy'); \nEND \nIF; mdm_util_companies$modifycompanymapping_ce_ju( i_company_cd = > :new_company_cd, i_reporting_entity_cd = > 'J-' || v_country_cd, i_valid_from_date = > v_valid_from, i_valid_to_date = > NULL, i_change_user = > v_userid, i_mapping_type = > 'JU', i_action_type = > '\nINSERT');\nIF v_company_type_cd = 'L' \nTHEN FOR V_REC in (\nSELECT company_cd \nFROM cfg_v_companies \nWHERE legal_company_cd = :new_company_cd \nAND valid_ind = 'Y' \nAND cbc_gbe_scope = 'Y' \nAND company_type_cd in ('O', 'V')) LOOP mdm_util_companies$modifycompanymapping_ce_ju( i_company_cd = > v_rec.company_cd, i_reporting_entity_cd = > 'J-' || v_country_cd, i_valid_from_date = > v_valid_from, i_valid_to_date = > NULL, i_change_user = > v_userid, i_mapping_type = > 'JU', i_action_type = > '\nINSERT'); \nEND LOOP; \nEND \nIF; \nEND \nIF; \nELSE MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > :new_company_cd, p_address_type_cd = > :new_address_type_cd, p_additional_name = > :new_additional_name, p_street = > :new_street, p_house_no = > :new_house_no, p_building = > :new_building, p_additional_info = > :new_additional_info, p_zip_code = > :new_zip_code, p_city = > :new_city, p_district_name = > :new_district_name, p_country_id = > CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC), p_latitude = > :new_latitude, p_longitude = > :new_longitude, p_address_remark = > :new_address_remark, p_valid_from = > :new_valid_from, p_action_type = > '\nUPDATE'); \nEND \nIF; \nEND \nIF; \nEND \nIF;\nIF COALESCE(:new_address_type_cd, :old_address_type_cd) not in ( 'P', 'L') \nIF cntr = 0 \nTHEN MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > :new_company_cd, p_address_type_cd = > :new_address_type_cd, p_additional_name = > :new_additional_name, p_street = > :new_street, p_house_no = > :new_house_no, p_building = > :new_building, p_additional_info = > :new_additional_info, p_zip_code = > :new_zip_code, p_city = > :new_city, p_district_name = > :new_district_name, p_country_id = > CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC), p_latitude = > :new_latitude, p_longitude = > :new_longitude, p_address_remark = > :new_address_remark, p_valid_from = > :new_valid_from, p_action_type = > '\nINSERT'); \nELSE MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > :new_company_cd, p_address_type_cd = > :new_address_type_cd, p_additional_name = > :new_additional_name, p_street = > :new_street, p_house_no = > :new_house_no, p_building = > :new_building, p_additional_info = > :new_additional_info, p_zip_code = > :new_zip_code, p_city = > :new_city, p_district_name = > :new_district_name, p_country_id = > CAST(NULLIF(CAST(:new_country_id AS TEXT), ''') AS NUMERIC), p_latitude = > :new_latitude, p_longitude = > :new_longitude, p_address_remark = > :new_address_remark, p_valid_from = > :new_valid_from, p_action_type = > '\nUPDATE'); \nEND \nIF; \nEND \nIF; \nEND $$;"
        }
    ],
    "on_delete": [
        {
            "type": "sql",
            "sql": "DO $$ DECLARE v_trigger_name varchar (100):='COMPANY_ADDRESSES_IOF'; cntr integer; v_userid varchar (100); v_country_cd core.countries.country_cd%type; v_company_type_cd CFG.CFG_COMPANIES.COMPANY_TYPE_CD%type; v_valid_from CFG.CFG_COMPANY_ADDRESSES.VALID_FROM%type; \nBEGIN \nIF COALESCE(:new_address_type_cd, :old_address_type_cd) in ('L', 'P') \nTHEN RAISE \nEXCEPTION 'MDM_V_THEMES_IOF: It is not allowed to invalidate/\nDELETE this type of address'; \nEND \nIF; MDM_UTIL_ADDRESSES$modify_company_address(p_company_cd = > COALESCE(:new_company_cd, :old_company_cd), p_address_type_cd = > COALESCE(:new_address_type_cd, :old_address_type_cd), p_action_type = > '\nDELETE'); \nEND $$;"
        }
    ]
}